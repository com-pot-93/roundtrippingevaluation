{
    "logistics_signavio_2.txt": {
        "0": {
            "text": "The process starts with receiving a customer order.  Stock items are then picked and packed into parcels. Subsequently, the parcels are weighed, and shipping labels are printed.  The process then splits into three parallel paths: moving parcels to the loading dock, checking the parcel count, and inspecting the packing quality. Once all three parallel tasks are complete, the process synchronizes.  Following this synchronization point, the process splits again into two parallel paths. In the first path, the parcels are loaded on the truck, and delivery instructions are sent to the transporter.  Concurrently, in the second path, the order status and stock levels are updated.  After both parallel paths are complete, the process synchronizes again, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "inspect packing quality",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_join",
                        "name": "Parallel Gateway 1 Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2_join",
                        "name": "Parallel Gateway 2 Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_a2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_a2_to_a3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_a3_to_a4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a4_to_a5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_a5_to_PG1",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_to_a7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_PG1_to_a8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_PG1_to_a10",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_a7_to_PG1_join",
                        "sourceRef": "a7",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_a8_to_PG1_join",
                        "sourceRef": "a8",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_a10_to_PG1_join",
                        "sourceRef": "a10",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_PG1_join_to_PG2",
                        "sourceRef": "PG1_join",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_PG2_to_a12",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_a12_to_a13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_a13_to_PG2_join",
                        "sourceRef": "a13",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "flow_PG2_to_a14",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_a14_to_a15",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_a15_to_PG2_join",
                        "sourceRef": "a15",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "flow_PG2_join_to_end",
                        "sourceRef": "PG2_join",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a customer order. Then, stock items are picked and packed into parcels. Next, the parcels are weighed, and shipping labels are printed.  After that, three tasks happen in parallel: moving parcels to the loading dock, checking the parcel count, and inspecting the packing quality. Once all three parallel tasks are complete, two more tasks happen in parallel: loading parcels on a truck and updating the order status. The order status update is followed by updating stock levels. After the parcels are loaded and the stock levels are updated, delivery instructions are sent to the transporter. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "inspect packing quality",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG1_join",
                        "name": "PG1_join",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG2_join",
                        "name": "PG2_join",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a7",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "a8",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "a10",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "PG1_join",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "a13",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "a15",
                        "targetRef": "PG2_join"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "PG2_join",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a customer order.  Stock items are then picked and packed into parcels. Subsequently, the parcels are weighed and shipping labels are printed.  Next, the process splits into three parallel paths: moving parcels to the loading dock, checking the parcel count, and inspecting the packing quality. These three paths converge when all activities are completed.  Following this synchronization point, the process splits again into two parallel paths: loading parcels on a truck and updating the order status. The order status update is followed by updating stock levels.  After the parcels are loaded on the truck, delivery instructions are sent to the transporter. Finally, the process ends after the loaded truck and stock levels updates are completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "inspect packing quality",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "joingateway1",
                        "name": "joingateway1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "joingateway2",
                        "name": "joingateway2",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "joingateway1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a8",
                        "targetRef": "joingateway1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "joingateway1"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "joingateway1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "a13",
                        "targetRef": "joingateway2"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a15",
                        "targetRef": "joingateway2"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "joingateway2",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_aris_3.txt": {
        "0": {
            "text": "The process starts with receiving a production order. Then, materials are prepared, and the door is assembled. Next, two parallel paths begin: one involves sending an inquiry for quality check, receiving the inquiry, checking the quality, and sending a quality report back. The other path waits to receive the quality report.  After the quality report is received, a decision is made: if the door needs fixing, it is fixed, and then the parallel paths converge. If the door doesn't need fixing, it is released. Finally, after both paths have completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materrials",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "loop_start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a10",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a8",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "loop_end",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a production order.  Then, materials are prepared, and the door is assembled. Next, two parallel paths begin. In one path, an inquiry for quality check is sent, received, the quality is checked, and a quality report is sent. In the other parallel path, nothing happens until the quality report is received. Based on the quality report, the process either goes to fix the door or to release the door. If the door is fixed, it then joins the other path. Finally, both paths converge, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materrials",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "loop_start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a8",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "loop_end",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a production order.  Then, materials are prepared, and the door is assembled. Next, two parallel paths begin. In one path, an inquiry for quality check is sent, which is then received, after which the quality is checked. Subsequently, a quality report is sent and received. Based on the quality report, the process either proceeds to fix the door or directly to release the door.  After either fixing or releasing the door, both parallel paths converge. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materrials",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loop_start",
                        "type": "Parallel"
                    },
                    {
                        "id": "loop_end",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "loop_start"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "loop_start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a10",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a8",
                        "targetRef": "loop_end"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "loop_end",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "loop_start",
                        "targetRef": "loop_end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_cimino_3.txt": {
        "0": {
            "text": "The process starts with a request for shipment. The goods are then packaged and in parallel the kind of shipment is selected.  If quotes from carriers are required they are requested and a carrier is assigned, followed by the preparation of paperwork. If filling in a post label is required, this is done, followed by checking the insurance. If extra insurance is required it is taken out, otherwise, the insurance check is completed. Once the paperwork is prepared, the packaged goods, and the insurance (with or without extra insurance) are ready, the paperwork is added, the package moved to the pickup area, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "PG1_join",
                        "name": "PG1_join",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a8",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a14",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a0",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a11",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "PG1_join",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a17",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a request for shipment. The goods are then packaged and, concurrently, the kind of shipment is selected.  Based on the kind of shipment, either a quote is requested from carriers, then a carrier is assigned, and paperwork is prepared or a post label is filled in, it is checked for insurance, and, depending on the insurance check, either extra insurance is taken out or not.  After the paperwork is prepared, or the post label is filled and insurance is checked, and potentially extra insurance is taken out, the paperwork is added to the package. Finally, the package is moved to the pickup area, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "PG1end",
                        "name": "PG1end",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a8",
                        "targetRef": "PG1end"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D2",
                        "targetRef": "PG1end"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a0",
                        "targetRef": "PG1end"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a14",
                        "targetRef": "PG1end"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "PG1end",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "a17",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a request for shipment. The goods are then packaged and in parallel, the kind of shipment is selected.  If quotes from carriers are required, they are requested, a carrier is assigned, and the paperwork is prepared. Alternatively, if a post label is needed, it is filled in, the insurance is checked. If extra insurance is required, it is taken out.  Once the goods are packaged, the paperwork is added, the package is moved to the pickup area, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "PG1_join",
                        "name": "PG1_join",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a8",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "D2",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "a0",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_17",
                        "sourceRef": "a14",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow_18",
                        "sourceRef": "PG1_join",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow_19",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow_20",
                        "sourceRef": "a17",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_fouad_3.txt": {
        "0": {
            "text": "The process starts with a travel request.  A tour plan is prepared and sent. A response is received and evaluated. If the response is positive, the tour is booked. The customer is charged. If the customer has not yet paid, the customer is contacted, and the customer is charged again. If the customer has paid, the bill is sent, and a booking confirmation is sent. The process ends. If the response is negative, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour  plan",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Charge  customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-F34053C5-7830-4874-A863-68DA07468059",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-659459AD-7356-4E16-8700-691F5687A908",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-B2AD2C67-685A-454F-BA30-74570EE1DF3E",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-329651B4-A58C-4F71-A22C-7136C8B092EA",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-4E9B9023-35BC-4044-8F47-0F77D8E08817",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-36936C3B-144A-40A4-8B78-471290E13F90",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-6126964E-2400-4E7C-AD19-F87263327360",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-7D1428EC-8D4D-4C73-A9E8-93F11F489948",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-310B51D5-BA2E-404C-8D15-655900B3E140",
                        "sourceRef": "D2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sid-2C2D19CF-24F7-412D-A52E-7167DF38ED0B",
                        "sourceRef": "a9",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-94D5B653-509A-472B-B3A1-F31054374A5B",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-76EF32AB-6714-46BB-827E-A6B3E3614786",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-75854B07-6DC0-4B10-837A-A0C424225609",
                        "sourceRef": "a11",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-BA42D6A7-9A32-4014-9D8A-13164C384739",
                        "sourceRef": "D1",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a travel request. The tour plan is prepared and sent.  A response is received and a decision is made. If approved, the tour is booked, the customer is charged, and another decision follows.  If the payment is successful, the bill is sent. If the payment fails, the customer is contacted, and a booking confirmation is sent. Regardless of the payment outcome, the booking confirmation is sent, and the process ends.  If the initial response is negative, the process ends immediately.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour  plan",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Charge  customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a11",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a travel request.  The tour plan is then prepared and sent. After receiving a response, a decision is made. If the response is positive, the tour is booked, and the customer is charged. Another decision follows. If the customer has paid, the bill is sent, and a booking confirmation follows, leading to another check for payment. If the customer has not paid, they are contacted, and the process loops back to charging the customer. If the initial response was negative, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour  plan",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Charge  customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a9",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_web_5.txt": {
        "0": {
            "text": "The process starts with a booking request. The booking request is retrieved and the availability is checked. If the requested time is not available, an alternative time is proposed and a notification is sent. If the requested time is available, a notification is sent directly.  A response to the notification is retrieved. If the response is positive, the booking is confirmed. If the response is negative, the bill is sent and the booking is confirmed. After confirming the booking, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s0",
                        "sourceRef": "start_event",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s1",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a10",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a booking request. The booking request is retrieved, and availability is checked. If the requested time is not available, an alternative time is proposed, and a notification is sent. If the requested time is available, a notification is sent.  The response to the notification is then retrieved. If the response is positive, the booking is confirmed. If the response is negative, the bill is sent, and then the booking is confirmed.  The process ends with the booking confirmation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-79B89F79-865D-4A3B-A75C-A4A6E0B30D88",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sid-5C20D213-622C-42FE-8A79-A939836F736C",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sid-4F7E2385-5734-431E-8251-25A4A45E1756",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-119889BF-9815-43A7-A535-12A4B328A2E7",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-37932D73-25D9-4EDD-BE75-E7B637D6BFA1",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-6955C17A-A91C-4A30-8578-4454B19802B9",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "Flow_0s36v9f",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sid-A685C729-849F-4486-B612-D0775A1D7758",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-4D229E67-52AD-42F9-AD02-A51F295475EA",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-F9115E4C-6903-46AF-8E22-0811A5C40B2B",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-2A6B6112-603A-4261-8B56-C8539070C726",
                        "sourceRef": "D2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sid-83E82B75-A5BD-4E0D-A877-819E6457B288",
                        "sourceRef": "a10",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-5A151185-3A9F-4100-A3A8-72E466B99704",
                        "sourceRef": "a8",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a request booking.  Then, the booking request is retrieved and availability is checked.  If the time slot is not available, an alternative time is proposed and a notification is sent. If the time slot is available, a notification is sent directly.  The response to the notification is then obtained. If the response is positive, the booking is confirmed. If the response is negative, the bill is sent and then the booking is confirmed. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a10",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_2_consent_to_use_the_data.txt": {
        "0": {
            "text": "The process starts.  Several parallel paths are executed.  The first path checks if it is possible to determine the period for which personal data will be stored. If so, the criteria used to determine the period, and the period itself are retrieved.  The second parallel path checks if data has been obtained from the Data Subject. If so, the source from which personal data are originated is retrieved. The third parallel path checks if personal data can be transferred internationally. If so, \"personal data will be transferred internationally\" is added. The fourth parallel path checks if recipients are present. If so, the recipients are retrieved. The fifth parallel path checks if legitimate interests are present. If so, the legitimate interests are retrieved. After these parallel paths complete, the processing legal basis and processing purposes are retrieved.  Then, the identity and contact details are retrieved.  Next, several more parallel paths are executed. The first path adds \"profiling about logic involved, significance and envisaged consequences of processing\". The second path adds \"existence of the right to rectify of personal data\", \"existence of the right to access personal data\", \"existence of the right to erase personal data\", \"existence of the right to data portability\", \"existence of the right to withdraw\", and \"existence of the right to lodge a complaint to a supervisory authority\". The third path asks the DPO for details and receives them. The fourth path asks for consent. If consent is received, consent information is collected. If consent is not received (negation), the process continues without collecting consent information. After these parallel paths complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are presents",
                        "type": "Task"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "Task"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "Task"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposses",
                        "type": "Task"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "Task"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "Task"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "Task"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "Task"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "Task"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "Task"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts.  The first step is to add \"profiling about logic involved, significance and envisaged consequences of processing\". In parallel, the process checks if it is possible to determine the period for which personal data will be stored. If it is possible, the criteria used to determine the period, and the period itself are retrieved.  Concurrently, the process adds  \"existence of the right to rectify of personal data\", \"existence of the right to access personal data\", \"existence of the right to erase personal data\", \"existence of the right to data portability\", \"existence of the right to withdraw\", and \"existence of the right to lodge a complaint to a supervisory authority\".  These parallel paths converge. Next, the process checks if data has been obtained from the data subject. If so, the source from which personal data are originated is retrieved.  The process proceeds to check if personal data can be transferred internationally. If the data can be transferred internationally, the fact that \"personal data will be transferred internationally\" is added.  Next, the process checks if recipients are present. If recipients are present, they are retrieved.  At the same time, the process checks if legitimate interests are present. If legitimate interests are present, they are retrieved. These parallel paths converge.  The processing legal basis and processing purposes are then retrieved.  In parallel, the identity and contact details are retrieved, and the DPO is asked for details, which are subsequently received from the DPO. These parallel paths converge.  Finally, consent information is collected, and consent is asked. If consent is received, the process ends. If consent is not received (negation), the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are presents",
                        "type": "Task"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "Task"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "Task"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposses",
                        "type": "Task"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "Task"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "Task"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "Task"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "Task"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "Task"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "Task"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts.  Several parallel actions are performed:  \"Add \"profiling about logic involved, significance and envisaged consequences of processing\"\", \"Check if it is possible to determine the period for which personal data will be stored\", \"Add \"existence of the right to rectify of personal data\"\", \"Add \"existence of the right to access personal data\"\", \"Add \"existence of the right to erase personal data\"\", \"Add \"existence of the right to data portability\"\", \"Add \"existence of the right to withdraw\"\", \"Add \"existence of the right to lodge a complaint to a supervisory authority\"\", \"Check if data has been obtained from Data Subject\", \"Check if personal data can be transferred internationally\", \"Check if recipients are present\", \"Check if legitimate interests are presents\", \"Retrieve processing legal basis\", \"Retrieve processing purposses\", and two other parallel actions: \"Retrieve identity and contact details\", and \"Ask DPO details\". If it is possible to determine the period for which personal data will be stored, then \"Retrieve the criteria used to determine the period\" is performed. Otherwise, \"Retrieve the period\" is performed. If data has been obtained from Data Subject, then \"Retrieve the source from which personal data are originated\" is performed. If personal data can be transferred internationally, then \"Add \"personal data will be transferred internationally\"\" is performed.  If recipients are present, then \"Retrieve recipients\" is performed. If legitimate interests are present, then \"Retrieve legitimate interests\" is performed. Once \"Retrieve identity and contact details\" and \"Ask DPO details\" and the DPO details are received, these parallel actions end. After all of the parallel actions have completed, \"Collect consent information\" is performed, followed by \"Ask consent\". If consent is received, the process ends. If consent is not received, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are presents",
                        "type": "Task"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "Task"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "Task"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposses",
                        "type": "Task"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "Task"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "Task"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "Task"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "Task"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "Task"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "Task"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_node",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_node",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf_0",
                        "sourceRef": "start_node",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_1",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "a6",
                        "targetRef": "end_d1"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a7",
                        "targetRef": "end_d1"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "PG1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "PG1",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "a15",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "D2",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "a17",
                        "targetRef": "end_d2"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "a19",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "D3",
                        "targetRef": "a21"
                    },
                    {
                        "id": "sf_21",
                        "sourceRef": "a21",
                        "targetRef": "end_d3"
                    },
                    {
                        "id": "sf_22",
                        "sourceRef": "PG1",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf_23",
                        "sourceRef": "a23",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf_24",
                        "sourceRef": "D4",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf_25",
                        "sourceRef": "a25",
                        "targetRef": "end_d4"
                    },
                    {
                        "id": "sf_26",
                        "sourceRef": "PG1",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf_27",
                        "sourceRef": "a27",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf_28",
                        "sourceRef": "D5",
                        "targetRef": "a29"
                    },
                    {
                        "id": "sf_29",
                        "sourceRef": "a29",
                        "targetRef": "end_d5"
                    },
                    {
                        "id": "sf_30",
                        "sourceRef": "PG1",
                        "targetRef": "a31"
                    },
                    {
                        "id": "sf_31",
                        "sourceRef": "PG1",
                        "targetRef": "a32"
                    },
                    {
                        "id": "sf_32",
                        "sourceRef": "PG1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_33",
                        "sourceRef": "PG2",
                        "targetRef": "a33"
                    },
                    {
                        "id": "sf_34",
                        "sourceRef": "PG2",
                        "targetRef": "a35"
                    },
                    {
                        "id": "sf_35",
                        "sourceRef": "a35",
                        "targetRef": "a38"
                    },
                    {
                        "id": "sf_36",
                        "sourceRef": "a38",
                        "targetRef": "end_pg2"
                    },
                    {
                        "id": "sf_37",
                        "sourceRef": "a33",
                        "targetRef": "end_pg2"
                    },
                    {
                        "id": "sf_38",
                        "sourceRef": "a2",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_39",
                        "sourceRef": "end_d1",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_40",
                        "sourceRef": "a9",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_41",
                        "sourceRef": "a10",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_42",
                        "sourceRef": "a11",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_43",
                        "sourceRef": "a12",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_44",
                        "sourceRef": "a13",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_45",
                        "sourceRef": "a14",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_46",
                        "sourceRef": "end_d2",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_47",
                        "sourceRef": "end_d3",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_48",
                        "sourceRef": "a19",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_49",
                        "sourceRef": "end_d4",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_50",
                        "sourceRef": "end_d5",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_51",
                        "sourceRef": "a31",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_52",
                        "sourceRef": "a32",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_53",
                        "sourceRef": "end_pg2",
                        "targetRef": "end_pg1"
                    },
                    {
                        "id": "sf_54",
                        "sourceRef": "end_pg1",
                        "targetRef": "a39"
                    },
                    {
                        "id": "sf_55",
                        "sourceRef": "a39",
                        "targetRef": "a37"
                    },
                    {
                        "id": "sf_56",
                        "sourceRef": "a37",
                        "targetRef": "D6"
                    },
                    {
                        "id": "sf_57",
                        "sourceRef": "D6",
                        "targetRef": "a41"
                    },
                    {
                        "id": "sf_58",
                        "sourceRef": "D6",
                        "targetRef": "a40"
                    },
                    {
                        "id": "sf_59",
                        "sourceRef": "a41",
                        "targetRef": "end_node"
                    },
                    {
                        "id": "sf_60",
                        "sourceRef": "a40",
                        "targetRef": "end_node"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "healthcare_klessascheck_1.txt": {
        "0": {
            "text": "The process starts with diagnosing Non-Specific Low Back Pain.  Then, a decision is made (D1). One option is to apply Superficial Heat or other Nonpharmacological Treatments, followed by another decision (D2). If the decision (D2) outcome dictates it, NSAID or SMR is prescribed, after which the process ends.  Alternatively, if the first decision (D1) leads to a different path, Exercise or other Nonpharmacological Treatments are applied. This is followed by another decision (D3).  If the decision (D3) outcome dictates it, NSAID is prescribed, leading to a final decision point (D4). If the decision (D4) outcome dictates it, an Opioid is prescribed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non,\nSpecific Low\nBack Pain",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Apply\nSuperficial\nHeat or other\nNonpharmocol.\nTreatments",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe\nNSAID or SMR",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise\nor other\nNonpharmacol.\nTreatments",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe\nNSAID",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe\nOpioid",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a14",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with diagnosing Non-Specific Low Back Pain.  Then, a decision is made (D1). One option is to apply Superficial Heat or other Nonpharmacological Treatments, followed by another decision (D2). If the decision (D2) outcome dictates, NSAID or SMR is prescribed, after which the process ends.  Alternatively, if the first decision (D1) leads to applying Exercise or other Nonpharmacological Treatments, a further decision (D3) follows.  Based on decision (D3), NSAID is prescribed, leading to a final decision point (D4). Depending on the outcome of decision (D4), an Opioid may be prescribed.  Finally, regardless of the path taken, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non,\nSpecific Low\nBack Pain",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Apply\nSuperficial\nHeat or other\nNonpharmocol.\nTreatments",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe\nNSAID or SMR",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise\nor other\nNonpharmacol.\nTreatments",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe\nNSAID",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe\nOpioid",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a14",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with diagnosing non-specific low back pain.  Based on the diagnosis (D1), the process either applies superficial heat or other nonpharmacological treatments or applies exercise or other nonpharmacological treatments. If superficial heat is applied, a decision (D2) leads to prescribing NSAID or SMR, after which the process ends. If exercise is applied, a decision (D3) leads to prescribing NSAID.  Following this, a further decision (D4) is made whether to prescribe opioid.  In either case, prescribing opioid or not prescribing opioid, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non,\nSpecific Low\nBack Pain",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Apply\nSuperficial\nHeat or other\nNonpharmocol.\nTreatments",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe\nNSAID or SMR",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise\nor other\nNonpharmacol.\nTreatments",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe\nNSAID",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe\nOpioid",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-7611DA19-C41A-4E6F-B368-16B053858B8F",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-154A7A3A-D65E-455B-B682-495C9A26093A",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-5C9D3AF5-0512-4E87-A1D3-F4D3751CE986",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-82798539-2E59-4B8C-B013-7B788233223C",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-40950D6B-C909-4F88-91B1-4F97A1034B0A",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-56675E58-F728-4070-A27E-0EC79A41D122",
                        "sourceRef": "a7",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-E700E74C-604F-41AC-8562-A81360C28D7E",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-ED0C804B-1918-440E-9720-4D0950E19A84",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sid-B01F2354-E73F-45A8-B930-8A6003CE93A6",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sid-022C8650-609D-485E-AA8B-1D9BB3A13457",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "D4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a14",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_7_right_to_be_forgotten.txt": {
        "0": {
            "text": "The process starts with a request from a data subject. The data is then retrieved. Next, a check is performed to see if the received data is still relevant. If the data is still relevant, an explanation is provided as to why, and the process ends. If the data is not relevant, the data is eliminated. Finally, a notification about the elimination is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about  elimination",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "sid-62B7B196-A404-451F-998A-E6F37B110F91",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "sid-54472776-7212-47E7-889B-1C98E5292D32",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check if received data is still relevant?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-90B7115D-C235-431A-88E4-91A134E4C1D5",
                        "sourceRef": "sid-62B7B196-A404-451F-998A-E6F37B110F91",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sid-63F3C160-534C-4912-A40A-F6898AB8A75A",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sid-86A49EFA-06E0-402B-BC63-F93E435F14B9",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-36CB07E8-1396-4250-983E-2D06BF28903E",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-CF629F5A-EFA2-416E-8909-EA5BC5C16525",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "yes"
                    },
                    {
                        "id": "sid-5689781A-F19C-4D10-90BF-E95B53E4A7CD",
                        "sourceRef": "a3",
                        "targetRef": "sid-54472776-7212-47E7-889B-1C98E5292D32"
                    },
                    {
                        "id": "sid-9F31A2D2-2CB7-4486-A703-F182335D2081",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "no"
                    },
                    {
                        "id": "sid-8B5E8536-A4ED-44DD-9B43-9532E63B1371",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-D09179D0-A3B5-4F24-A03E-8A116F15A144",
                        "sourceRef": "a7",
                        "targetRef": "sid-54472776-7212-47E7-889B-1C98E5292D32"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a data subject request. The received request triggers the retrieval of data. Next, a check is performed to determine if the retrieved data is still relevant. If the data is still relevant, an explanation is provided, and the process moves forward. If the data is no longer relevant, the data is eliminated, and a notification about the elimination is sent. Finally, regardless of whether the data was deemed relevant or not, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about  elimination",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Is data still relevant",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "e1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "yes"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "no"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a7",
                        "targetRef": "g2"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "g2",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a data subject request. Then, the data is retrieved and checked if it is still relevant. If the data is still relevant, an explanation is provided, and the process ends. If the data is not relevant, the data is eliminated, a notification about the elimination is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about  elimination",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Data still relevant?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start_event",
                        "targetRef": "a9"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "yes"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "no"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_klessascheck_5.txt": {
        "0": {
            "text": "The process starts with packaging the product.  The product is then shipped.  The process then branches based on the delivery method. If the delivery is to the door, the next step is to deliver to the door. After delivery, a decision is made. If a pick-up receipt is required, the pick-up receipt is printed and then posted. Following this, the product is rerouted to the closest station.  If a pick-up receipt is not required, the process continues. If the delivery is to a station, the product is delivered to the station.  Regardless of whether the product was delivered to a door or station, or rerouted, the process converges. Finally, the product is received back, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "a1_a2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "a2_D1",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "D1_a4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "a4_D2",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "D2_a7",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "a7_a8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "a8_a12",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "D1_a5",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "D2_merge",
                        "sourceRef": "a12",
                        "targetRef": "merge_D2"
                    },
                    {
                        "id": "merge_D2_D3",
                        "sourceRef": "merge_D2",
                        "targetRef": "D3"
                    },
                    {
                        "id": "merge_D1_D3",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "a12_end",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "a13_end",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with packaging the product.  Next, the product is shipped. An exclusive decision is made (D1) to determine the delivery method. If the decision is to deliver to the door, the product is delivered to the door. Subsequently, another exclusive decision (D2) is made. If the decision path from D2 involves printing a pick-up receipt, the receipt is printed and then posted.  The product is then rerouted to the closest station.  Alternatively, if the initial decision (D1) is to deliver to a station, the product is delivered to the station.  Following either rerouting or delivery to a station, a third exclusive decision (D3) is made.  After D3, the product is received back, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-2652A224-4070-45E8-A445-71A8591A600A",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-5A71E79F-5283-4ACB-B4B4-1877C1145B23",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-AE020BA4-1013-4E72-8A12-80E5A3DA1825",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-0D4F524F-01E4-469F-A23C-28752053814A",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-96216F5B-E517-4439-B287-658F172B1094",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-629998C7-99F9-4216-A3D0-8E77735EE8E8",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-8993499C-2F7A-4D26-86D7-5B07428A64C6",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-526E364B-49B4-461B-9759-75759A145C84",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sid-D2C00E44-9669-4EA8-887D-322AF097B2C8",
                        "sourceRef": "a12",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a13",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with packaging the product.  Next, the product is shipped.  Then, a decision is made: deliver to door or deliver to station. If the decision is to deliver to door, then another decision is evaluated. If the delivery is successful, a pick-up receipt is printed and then posted.  The product is then rerouted to the closest station.  If the initial decision was to deliver to station, then a final decision is made. Regardless of whether the product was delivered to the door or station, if the delivery was unsuccessful, the product is received back. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "D1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a12",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_4_right_of_portability.txt": {
        "0": {
            "text": "The process starts with receiving a data subject request. Then, a request is sent to the third party, and their request is received. Subsequently, two parallel paths are initiated. One path involves retrieving elaborations, while the other focuses on retrieving available data of the data subject. Once both these retrieval tasks are completed, the retrieved data and elaborations are communicated to the third party. Finally, the data and elaborations are communicated to the data subject, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "join_gateway",
                        "name": "Join",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start_event",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a3",
                        "targetRef": "join_gateway"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a4",
                        "targetRef": "join_gateway"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "join_gateway",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a data subject request. Then, a request is sent to the third party, and their request is received.  Following this, two parallel paths begin. In one, elaborations are retrieved. In the other, available data of the data subject is retrieved. Once both of these tasks are complete, the data and elaborations are communicated to the third party. Finally, the data and elaborations are communicated to the data subject, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "PG2",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a data subject request. Then, a request is sent to the third party, and subsequently, the third party request is received.  Next, two parallel paths are initiated: one retrieves elaborations and the other retrieves available data of the data subject. Once both these retrieval tasks are completed, the data and elaborations are communicated to the third party. Finally, the data and elaborations are communicated to the data subject, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "pg2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start_event",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a8",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "pg1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "pg1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a3",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a4",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "pg2",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_5_right_to_withdraw.txt": {
        "0": {
            "text": "The process starts with the receipt of a data subject request.  Next, a check is performed to determine if the withdrawn data are relevant. If the data are relevant, the use of the withdrawn data is stopped, and the withdrawal is communicated. If the data are not relevant, the user is informed that the withdrawal will stop all running business processes. Subsequently, a notification about the continuation is received. If the user decides to continue, running business processes using the withdrawn data are stopped, and the use of the withdrawn data is stopped.  The withdrawal is then communicated, after which the process ends. If the user decides to stop, the withdrawal is communicated, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-B5ED59C1-A493-46D4-9072-93328DC9F106",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-2BCC9B5B-491B-4B37-B42C-DA4D2418A090",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-439DC257-5315-423A-806B-3538AD5D7A5D",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-8358DF50-0684-468B-89A6-838D2D2980D3",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "Relevant"
                    },
                    {
                        "id": "sid-70AB4069-3B13-4526-9872-27E4F56A60B1",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sid-A647539D-17C9-4016-B544-4775A1C525AC",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "Not Relevant"
                    },
                    {
                        "id": "sid-4329C955-9327-42FA-B185-11A4175B7B58",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-BF8332A1-15F5-4D92-8E92-D960C9273033",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-72975225-94EC-4886-959C-0D2063B490AC",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "Continue"
                    },
                    {
                        "id": "sid-08C34B94-3267-469C-A63E-E56B53AE9286",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sid-0B347882-8CEC-4B09-A047-45924C37F047",
                        "sourceRef": "a5",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-6167F297-E2E7-4E9E-8F48-8E56A0939FB7",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "Stop"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a data subject request. Then, a check is performed to determine if the withdrawn data are relevant. If the withdrawn data are relevant, the process proceeds to stop using the withdrawn data. Subsequently, the withdrawal is communicated, and the process ends. If the withdrawn data are not relevant, the user is informed that the withdrawal will stop all running business processes. Afterward, a notification about the continuation is received. If the notification confirms continuation, the process stops running business processes that use the withdrawn data, and then stops using the withdrawn data. Subsequently, the withdrawal is communicated, and the process ends. If the notification does not confirm continuation, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Receive the notification about continuation",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "no"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "end",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a data subject request. Next, a check is performed to determine if the withdrawn data is relevant. If the data is relevant, the use of the withdrawn data is stopped, and the withdrawal is communicated. If the data is not relevant, the user is informed that the withdrawal will stop all running business processes.  A notification about continuation is then received. If the user chooses to continue, running business processes using the withdrawn data are stopped, and the use of the withdrawn data is stopped before communicating the withdrawal. If the user chooses not to continue, the withdrawal is communicated directly. The process ends after the communication of the withdrawal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "relevant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "continue?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "yes"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "no"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "yes"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "no"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a5",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_bpmai_2.txt": {
        "0": {
            "text": "The process starts with the patient coming to the hospital.  Next, the patient stays at the front and visits the nurse. The nurse then checks the patient's insurance.  If the insurance is not valid, the patient's state is checked. Based on this check, the patient is either sent home, ending the process, or the patient is examined. If the insurance is valid, it is checked if the patient is registered in the hospital. If not registered, the patient is registered and pays a fee before being booked for a doctor.  After being booked, the patient is examined. Following the examination, one of three paths is taken: the patient is hospitalized, sent to the pharmacy, or sent home. If hospitalized, the process ends. If sent to the pharmacy, the patient visits the pharmacy, orders medicine, pays for the medicine, receives the medicine, and is examined again. This loop of examination, pharmacy visit, and medicine ordering can repeat. If the patient is sent home after the examination, they are examined again. This loop of examination and being sent home can also repeat.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "Task"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": null,
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a19"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D3",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s21",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s22",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s23",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s24",
                        "sourceRef": "D4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s25",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "s26",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s27",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s28",
                        "sourceRef": "a18",
                        "targetRef": "D5"
                    },
                    {
                        "id": "s29",
                        "sourceRef": "D5",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s30",
                        "sourceRef": "D5",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s31",
                        "sourceRef": "D5",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s32",
                        "sourceRef": "a15",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s33",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s34",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s35",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "s36",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s37",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s38",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the patient coming to the hospital.  Next, the patient stays at the front and visits the nurse. The nurse then checks the patient's insurance.  If the insurance is not valid, the patient is checked if they are registered in the hospital. If the patient is not registered, they are registered and pay a fee. If the patient is already registered or after registering and paying the fee, the patient is booked for a doctor. If the insurance is valid, the patient's state is checked. If the patient's state is good, the patient is sent home and the process ends. If the patient's state is not good, the patient is examined. After examining the patient, there are three possible paths: hospitalize the patient, send the patient to the pharmacy, or send the patient home. If the patient is hospitalized, they are booked for a doctor and examined again. If the patient is sent to the pharmacy, they visit the pharmacy, order medicine, pay for the medicine, receive the medicine, and are examined again. If the patient is sent home, they are examined again. After being examined again, the same three paths are possible: hospitalize, send to pharmacy, or send home. This loop of examination and subsequent actions continues until the patient's state is deemed good enough to be sent home, at which point the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "Task"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": null,
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": null,
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "D1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "D2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "D3",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_21",
                        "sourceRef": "a3",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sf_22",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_23",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf_24",
                        "sourceRef": "D4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_25",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "sf_26",
                        "sourceRef": "D4",
                        "targetRef": "a21"
                    },
                    {
                        "id": "sf_27",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_28",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_29",
                        "sourceRef": "a18",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf_30",
                        "sourceRef": "D5",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_31",
                        "sourceRef": "D5",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_32",
                        "sourceRef": "D5",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_33",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf_34",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "sf_35",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf_36",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf_37",
                        "sourceRef": "a25",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_38",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_39",
                        "sourceRef": "a13",
                        "targetRef": "a18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the patient coming to the hospital.  Next, the patient stays at the front desk and then visits the nurse. The nurse checks the patient's insurance. If the insurance is not valid, the patient is sent home and the process loops back to checking the insurance. If the insurance is valid, the nurse checks the patient's state. If the patient's state is good, the patient is sent home. If the patient's state is not good, the patient is examined. After examination, the patient might be hospitalized. If hospitalized, the patient is booked for a doctor visit. After the doctor visit, the patient is examined again. This loop of examination, possible hospitalization, and doctor visit continues until the patient's state is deemed good enough for discharge. Alternatively, after examination, if the patient is not hospitalized, they are sent to the pharmacy. At the pharmacy, the patient visits the pharmacy, orders medicine, pays for the medicine, and receives the medicine. After receiving the medicine, the patient is examined again, and the loop continues until hospitalization is required or the patient's state improves enough for discharge. If the patient is sent home after receiving medicine, the process ends. If the patient is sent home after the initial state check or after insurance validation, the process loops back to the insurance check.  Before booking a doctor's appointment, it is checked if the patient is registered in the hospital. If not registered, the patient is registered and pays a fee before the appointment is booked. If the patient is already registered, they proceed directly to paying the fee and booking the appointment.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "Task"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check insurance",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Check patients state",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "loop_D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "Check if patient is registered in hospital",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "loop_D5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a19"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D3",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a25",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "D3",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s21",
                        "sourceRef": "a3",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s22",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s23",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s24",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s25",
                        "sourceRef": "D4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s26",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "s27",
                        "sourceRef": "D4",
                        "targetRef": "a21"
                    },
                    {
                        "id": "s28",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s29",
                        "sourceRef": "a10",
                        "targetRef": "D5"
                    },
                    {
                        "id": "s30",
                        "sourceRef": "D5",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s31",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s32",
                        "sourceRef": "D5",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s33",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s34",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s35",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "s36",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s37",
                        "sourceRef": "a25",
                        "targetRef": "D5"
                    },
                    {
                        "id": "s38",
                        "sourceRef": "D5",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s39",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_corradini_2.txt": {
        "0": {
            "text": "The process starts with a search for a customer.  Next, the customer receives an offer.  The process can then take one of two paths.  If there is an additional request from the customer, the process continues by providing details to the customer.  If not, the process ends.  After providing details, the process can also end or it can proceed to receive a booking request.  If a booking request is received, the next steps are to send the bill and receive payment.  After receiving the payment, the process can either involve contacting the customer, after which the process loops back to receiving the payment, or it can proceed to booking the travel.  If the travel is booked, a booking confirmation is sent to the customer.  After sending the booking confirmation, the process can either end or loop back to receiving a booking request.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-941522D9-D557-4D8A-81EC-C89113A62B15",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-4BA68643-8221-4C56-B682-B2375E947122",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-2F238510-2255-4409-95A6-6524B7A56B8C",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-39759571-A177-4B2D-8F1E-67A878124788",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-5F21451F-F692-4408-B1C6-3C268E8D20A1",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-C4A39017-B888-43F9-A292-D15527638228",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-6C9E6F8A-8C4B-48B7-B686-7035F0324CE8",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-B313D3C7-26D0-40FD-9726-A2D6CF4C2727",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-2CF0454F-4B1D-479A-80B2-1187C86F9257",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-09351353-CE28-4647-BC55-AD68951C8769",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sid-D24E8174-BAA4-42BC-8765-D55D53B3918D",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sid-9810A7D1-79ED-466C-B15C-703F26CC14E5",
                        "sourceRef": "a17",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-E9478222-720F-453F-B74C-2A4EA0845E66",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sid-62D3253D-AD55-478A-9C7E-337182292749",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sid-34272975-B985-4417-A560-E33D48232845",
                        "sourceRef": "a14",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-D600A0A6-C301-42FA-AB5F-988E4989912C",
                        "sourceRef": "D1",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-0D53190D-C698-469E-BA2E-1947B3600835",
                        "sourceRef": "D2",
                        "targetRef": "EndEvent_1"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with a search for a customer.  Next, the customer receives an offer.  Based on the customer's response, the process branches. If the customer has an additional request, the request is received, and details are provided.  The customer can then submit a booking request. If the customer does not have an additional request, the process ends. If the customer submits a booking request, the next step is to send the bill.  After the bill is sent, the payment is received. Depending on whether the payment is received, the process branches again. If the payment is not received, the customer is contacted, and the bill is sent again. If the payment is received, the travel is booked, and a booking confirmation is sent. After the booking confirmation is sent, the process checks if there are any further requests. If there are further requests, the process loops back to receiving the booking request. If there are no further requests, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-7A5994C3-A982-4263-A28A-C92A94069621",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-7F75C471-B709-435D-A25C-425A2930E001",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-C299823B-3A32-4A18-9A66-2E9D575DC3D6",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-83BC2D7B-2E5A-4B2C-AEF2-69B888802379",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-9E187554-619A-4288-A1E3-C144353B3423",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-41DC422D-9377-4B88-92BF-47C123170936",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-9E380544-285F-46C8-BF84-9173B37A0EB5",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-0F30B217-1606-441A-A9C4-5F825E194639",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-6AA5C501-F4EE-4C77-A826-05A93B03B964",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-766C6C01-57DD-413C-8028-470424B32A0E",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sid-9622D1E2-406F-4637-AE8E-A9C7A5B30449",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sid-574235DC-564B-4634-A27D-A3123244697E",
                        "sourceRef": "a17",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-590E5923-2B09-4E3D-B06E-9201B23B2D07",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sid-72216CA0-B5F5-435C-A38F-0477952458E7",
                        "sourceRef": "a14",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-7B5A1A03-599D-47E8-A28D-3055590F8C58",
                        "sourceRef": "D2",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-BFB74149-5375-4886-B0A0-60383300677E",
                        "sourceRef": "D1",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a search for a customer.  Next, the customer receives an offer.  Based on the customer's response, the process branches. If the customer has an additional request, the request is received, and details are provided.  The customer might then submit a booking request. If they do, the travel is booked, a booking confirmation is sent, and the process loops back to check if there are any further requests. If not, the process ends. Alternatively, if the customer does not have an additional request after receiving the offer, the process ends. If the customer makes a booking request, a bill is sent, and payment is received.  After payment, the process branches again. If there are issues with the payment, the customer is contacted, and the process loops back to await payment. If the payment is successful, travel is booked, a booking confirmation is sent, and the process loops back to check for additional requests. If there are no further requests, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-764C1AAE-8634-429B-A082-FE6A4DC2B496",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-A8402940-951B-426C-80DF-555D6E4B9D4A",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-93845101-0C8B-4011-BC05-F1A2F35A661C",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-18D1E175-8F6D-4B78-A73F-6B627F860B88",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-857A96C7-5797-4EFA-A124-79F7C4171275",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-8629379F-4308-4F8C-A492-26859620791A",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-B2345D87-963E-4F63-A65B-765082406895",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-9652CFC8-2AC9-4346-AA6A-1598F9B53236",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-57579219-8A07-4692-8C13-E667399A8435",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-2C91EF7F-C6E1-420C-8078-06E481578A1C",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sid-2B655346-D68C-450F-B56B-095047883001",
                        "sourceRef": "a17",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-54C9869E-A241-4365-94F9-6464B37039AD",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sid-7B8B06D5-5402-49B8-9A4A-903710F5D484",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sid-00A7108B-9A57-495B-A1DF-831C5853C9B9",
                        "sourceRef": "a14",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-151F8A12-A2E8-42C0-A596-F698A7853C17",
                        "sourceRef": "D2",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-10177953-0F7B-4E88-A120-99ED2C738E2B",
                        "sourceRef": "D1",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_bpmai_1.txt": {
        "0": {
            "text": "The process starts with the creation of a production plan and process order.  Next, MRP is executed, followed by capacity evaluation.  A schedule and release proposal is then created.  The process order is confirmed, and a transfer order or good issue is created.  The good issue is confirmed, and the good receipt is recorded. Finally, order settlement takes place, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts and the first step is to create a production plan and process order.  Next, MRP is executed, followed by capacity evaluation.  A schedule and release proposal is then created.  The process order is confirmed, and a transfer order or good issue is created.  The good issue is confirmed, and the goods are received. Finally, order settlement takes place, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_a2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_a2_to_a3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_a3_to_a4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a4_to_a5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_a5_to_a6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_a6_to_a7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_a7_to_a8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow_a8_to_a9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_a9_to_end",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the creation of a production plan and process order.  Next, MRP is executed, followed by capacity evaluation.  A schedule and release proposal is then created.  The process order is confirmed, and a transfer order or good issue is created.  The good issue is confirmed, and the good receipt is recorded. Finally, order settlement takes place, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_redeker_5.txt": {
        "0": {
            "text": "The process starts with the patient arriving at the hospital. Next, the room for surgery is prepared.  The surgery is then performed.  After the surgery, two parallel paths begin: discharging the patient and sanitizing the room for surgery. Once the patient is discharged, a report is filled.  Once the room is sanitized, the same report is filled. After the report is filled, the patient pays the bill, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-F596016C-4A5A-4698-B275-D1921D3F2E41",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-158DAF4C-A31C-4251-B1B5-A0A88054D2B8",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-B12BC12D-8293-4A28-A58A-4C96837A6D96",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-E21B0E37-A350-4AA7-A67B-958320E38879",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sid-190ECC32-A58D-493F-833B-766456F90A41",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sid-D7944EB7-1D9E-4479-BE41-C38A7D1E0C59",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sid-A7558427-5367-4B3C-A404-2A3E6B452090",
                        "sourceRef": "a9",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-E681408E-637A-4A63-896E-F0A700F661D5",
                        "sourceRef": "a12",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-911C712B-2B5C-4C4A-AD55-34A8322619D8",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-31729C20-742F-442B-B24F-166940374265",
                        "sourceRef": "D1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a2",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the patient arriving at the hospital. Next, the room for the surgery is prepared, and the surgery is performed. After the surgery, the process splits into two parallel paths. In one path, the patient is discharged. In the other path, the room for the surgery is sanitized. Both paths converge, and the process ends.  There is also a detached task to fill a report, after which, based on some criteria, the patient may pay the bill, and then the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "a9",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a12",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "D1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "a2",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the patient arriving at the hospital. Next, the room for the surgery is prepared, and the surgery is performed. After the surgery, two parallel paths begin: discharging the patient and sanitizing the room for surgery. Once both tasks are completed, they converge, and the report is filled. Finally, based on some condition, the patient may pay the bill, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "d1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "e1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a8",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "pg1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "pg1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a9",
                        "targetRef": "j1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a12",
                        "targetRef": "j1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "j1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a7",
                        "targetRef": "d1"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "d1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a2",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_tomaskova_4.txt": {
        "0": {
            "text": "The process starts with production planning.  Then workers are assigned, followed by production design. Next, the product is delivered and production logout is performed.  Quality control is then carried out. If quality control passes, the product is registered to the finished stock and then moved to the finished goods stock, after which the process ends. If quality control does not pass, the product is registered to the semi-finished stock, loaded to the semi-finished stock, and then the process ends.  If the quality control fails, the process loops back to production planning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Quality control passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "yes"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "no"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a12",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with production planning.  Next, workers are assigned, followed by production design.  The product is then delivered and production logout is performed.  Quality control follows. If quality control is not approved, the product is registered to the semi-finished stock and then loaded to the semi-finished stock, after which the process ends. If quality control is approved, the product is registered to the finished stock and then moved to the finished goods stock, after which the process ends.  There is also a loop from quality control back to production planning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Quality control approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "no"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "yes"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a12",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "loop",
                        "sourceRef": "a6",
                        "targetRef": "a1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with production planning.  Next, workers are assigned, followed by production design.  The product is then delivered, and a production logout is performed.  Quality control is then carried out. If quality control passes, the product is registered to the finished stock and then moved to the finished goods stock, after which the process ends. If quality control fails, the product is registered to the semi-finished stock and then loaded to the semi-finished stock, after which the process ends.  If the quality control doesn't pass, it loops back to production planning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Quality control passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "yes"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "no"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a13",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a12",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "loop",
                        "sourceRef": "a6",
                        "targetRef": "a1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_bpmai_1.txt": {
        "0": {
            "text": "The process starts with a request for shipment.  The product availability is checked. If the product is available, the shipment address is checked. If the product is not available, the products are prepared for shipment to a particular service station. If the shipment address is valid, the inbound shipment is assembled and sent. If the shipment address is not valid, the products are prepared for regional shipment. After the inbound shipment is sent, it is received and checked.  The products are then prepared for shipment to a particular service station. Regardless of whether the products were initially available, the shipment address was valid, or the products were prepared for regional shipment, the process converges and ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-64D7459E-A61D-4953-B820-7C747E49015C",
                        "name": "Converging Gateway",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-3FA12805-8E59-49C3-B300-64D048A9E9FA",
                        "name": "Converging Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-110505E3-602A-4259-844A-0A5B72C8F4C8",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-4B9EAF07-4F6F-456E-A674-3962F1C15B5D",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sid-1F807D3E-20DD-4A06-98B6-26463482B354",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-73602576-B8FD-4F44-8A0B-C372205F3328",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sid-C9322586-B893-4294-89E0-147100438C91",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-2059485A-1C99-4C64-B460-E2E360587231",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-9A672992-0E27-4361-9992-3D2884B0D178",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-F73869C6-EC9D-4635-B23A-0B065360F76A",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-79E92697-8D07-4F53-8688-D36801F4709D",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-013366CC-3181-42E4-957D-2A87289A98F2",
                        "sourceRef": "a3",
                        "targetRef": "sid-64D7459E-A61D-4953-B820-7C747E49015C"
                    },
                    {
                        "id": "sid-7228354E-828E-4E38-9A0C-8F2984FB0B30",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-3C87429E-4759-4098-84B3-5B258008E4B5",
                        "sourceRef": "a13",
                        "targetRef": "sid-3FA12805-8E59-49C3-B300-64D048A9E9FA"
                    },
                    {
                        "id": "sid-51E65F19-8E89-459F-8370-B5F1E952E4C5",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-6A5D7E7C-7AB9-4D9D-B3C8-B0087C11272C",
                        "sourceRef": "sid-64D7459E-A61D-4953-B820-7C747E49015C",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-96C002AB-1F17-4F9E-A7A4-9054B7E25B7A",
                        "sourceRef": "sid-3FA12805-8E59-49C3-B300-64D048A9E9FA",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a shipment request. Product availability is checked. If the products are available, the shipment address is checked. If the shipment address is suitable for an inbound shipment, the inbound shipment is assembled and sent. The inbound shipment is then received and checked. Finally, the products are prepared for shipment to a particular service station, after which the process ends.  If the shipment address is not suitable for an inbound shipment, the products are prepared for regional shipment, after which the process ends. If the products are not available, they are prepared for shipment to a particular service station, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a shipment request. Product availability is checked. If the product is available, the shipment address is checked. If the shipment address is suitable for an inbound shipment, the inbound shipment is assembled and sent. The inbound shipment is then received and checked, and the products are prepared for shipment to a particular service station. If the shipment address is not suitable for an inbound shipment, the products are prepared for regional shipment. If the product is not available, the products are prepared for shipment to a particular service station. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a13",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_bpmai_1.txt": {
        "0": {
            "text": "The process starts with receiving a customer request. The request is then checked.  If the check is negative, a notification is sent to the customer and the process ends. Otherwise, the process proceeds with either manual or automatic registration. Following registration, a search for an attraction provider is conducted. If no provider is found, the process ends. If a provider is found, the attraction is booked. After booking, either a rejection or a booking confirmation is received. If a rejection is received, the process loops back to search for another attraction provider. If a booking confirmation is received, a confirmation is sent to the customer, and the process loops back to search for an attraction provider again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "D2",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D4",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D4",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a16",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "D3",
                        "targetRef": "end"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a customer request. The request is then checked.  Based on the check, the process follows one of three paths. If the check leads to a notification, the customer is notified, and the process ends. If the check requires registration, a decision is made between manual and automatic registration. If manual registration is chosen, the manual registration is performed, and the process ends. If automatic registration is chosen, the process continues by searching for an attraction provider. If an attraction provider is found, the attraction is booked. The booking process leads to either a rejection or a booking confirmation. If a rejection is received, the process ends. If a booking confirmation is received, a confirmation is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_event_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_a2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_a2_to_D1",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_D1_to_D2",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_D2_to_a5",
                        "sourceRef": "D2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_D2_to_a4",
                        "sourceRef": "D2",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a5_to_end_event",
                        "sourceRef": "a5",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_a4_to_a14",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_a14_to_D3",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_D3_to_a10",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_a10_to_D4",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_D4_to_a13",
                        "sourceRef": "D4",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_D4_to_a12",
                        "sourceRef": "D4",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_a12_to_a16",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow_a16_to_end_event",
                        "sourceRef": "a16",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow_D1_to_a9",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_a9_to_end_event",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a customer request. The request is then checked. Based on the check, the process proceeds with either automatic or manual registration. Following registration, a search for an attraction provider is conducted. If no provider is found, a notification is sent to the customer, and the process ends. If a provider is found, the attraction is booked. After booking, either a rejection or a booking confirmation is received. If a rejection is received, the search for an attraction provider is conducted again. If a booking confirmation is received, a confirmation is sent to the customer, and then the search for an attraction provider is conducted again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D2",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D4",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D4",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a16",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "D3",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_ferreira_4.txt": {
        "0": {
            "text": "The process starts with getting temperature values. Based on these values, the process proceeds in one of two ways. One way leads to generating a standard notification, the other way leads to a parallel gateway, splitting the flow into three paths. The first path involves getting the container status, then estimating the container status. Based on this estimation, a container change request may be generated. The second path involves getting the client location, estimating the distance, then estimating the delivery time. Based on the delivery time estimation, a route change request may be generated. The third path involves getting the goods status, then estimating the goods status. Based on this estimation, damages may be evaluated, which can lead to either generating a removal request or generating a price change request. The parallel gateway synchronizes after the potentially generated requests, joining the initially split flows. Finally, all generated messages are sent, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Task"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_a1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_a1_to_D1",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_D1_to_a4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_D1_to_PG1",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_to_a5",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_a5_to_a9",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_a9_to_D2",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_D2_to_a7",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_a7_to_end1",
                        "sourceRef": "a7",
                        "targetRef": "end1"
                    },
                    {
                        "id": "flow_PG1_to_a11",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_a11_to_a16",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow_a16_to_D3",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_D3_to_a12",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_a12_to_D4",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_D4_to_a15",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_a15_to_end2",
                        "sourceRef": "a15",
                        "targetRef": "end2"
                    },
                    {
                        "id": "flow_PG1_to_a19",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "flow_a19_to_a20",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "flow_a20_to_D5",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "flow_D5_to_a23",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow_a23_to_D6",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "flow_D6_to_a25",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow_D6_to_a26",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "flow_a25_to_end3",
                        "sourceRef": "a25",
                        "targetRef": "end3"
                    },
                    {
                        "id": "flow_a26_to_end4",
                        "sourceRef": "a26",
                        "targetRef": "end4"
                    },
                    {
                        "id": "flow_end1_to_endPG",
                        "sourceRef": "end1",
                        "targetRef": "endPG"
                    },
                    {
                        "id": "flow_end2_to_endPG",
                        "sourceRef": "end2",
                        "targetRef": "endPG"
                    },
                    {
                        "id": "flow_end3_to_endPG",
                        "sourceRef": "end3",
                        "targetRef": "endPG"
                    },
                    {
                        "id": "flow_end4_to_endPG",
                        "sourceRef": "end4",
                        "targetRef": "endPG"
                    },
                    {
                        "id": "flow_a4_to_endD1",
                        "sourceRef": "a4",
                        "targetRef": "endD1"
                    },
                    {
                        "id": "flow_endPG_to_endD1",
                        "sourceRef": "endPG",
                        "targetRef": "endD1"
                    },
                    {
                        "id": "flow_endD1_to_a28",
                        "sourceRef": "endD1",
                        "targetRef": "a28"
                    },
                    {
                        "id": "flow_a28_to_end",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with getting temperature values. Based on these values, the process either generates a standard notification which is then sent or continues. In the second case, the container status is obtained and an estimation of the container status is made. Depending on this estimation, the process either loops back, or a container change request is generated, which is then followed by a loop back. Subsequently, the client location is obtained, and the distance is estimated. Based on the distance estimation, the delivery time is estimated. Depending on the delivery time estimation, the process either loops back or a route change request is generated, which is then followed by a loop back. Next, the goods status is obtained, and an estimation of the goods status is made. Depending on this estimation, the process either loops back or damages are evaluated. Based on the damage evaluation, either a removal request is generated, which is then followed by a loop back, or a price change request is generated, which is then followed by a loop back. Finally, all generated messages are sent, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Task"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "a4",
                        "targetRef": "a28"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "D2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "D4",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "a15",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "D3",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_21",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf_22",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "sf_23",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf_24",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf_25",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "sf_26",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf_27",
                        "sourceRef": "a25",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_28",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "sf_29",
                        "sourceRef": "a26",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_30",
                        "sourceRef": "D5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_31",
                        "sourceRef": "PG1",
                        "targetRef": "a28"
                    },
                    {
                        "id": "sf_32",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with getting temperature values. Based on these values, the process either generates a standard notification and ends or continues in a parallel path.  In the parallel path, container status is retrieved and then estimated. Based on the estimation, the process either ends or generates a container change request and ends. Concurrently, the client location is retrieved, and the distance is estimated. Depending on this distance, the delivery time is estimated. Based on the delivery time estimation, the process either ends or generates a route change request and ends. Alternatively, if the distance estimation does not require further actions, the process ends.  At the same time, goods status is retrieved and estimated. Based on the goods status estimation, the process either ends or damages are evaluated.  If damages are evaluated, the process either generates a removal request and ends or generates a price change request and ends. After all parallel paths complete, generated messages are sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Task"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "name": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a4",
                        "targetRef": "end1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "D2",
                        "targetRef": "end2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a7",
                        "targetRef": "end3"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "s17",
                        "sourceRef": "D4",
                        "targetRef": "end4"
                    },
                    {
                        "id": "s18",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s19",
                        "sourceRef": "a15",
                        "targetRef": "end5"
                    },
                    {
                        "id": "s20",
                        "sourceRef": "D3",
                        "targetRef": "end6"
                    },
                    {
                        "id": "s21",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "s22",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "s23",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "s24",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "s25",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "s26",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "s27",
                        "sourceRef": "a25",
                        "targetRef": "end7"
                    },
                    {
                        "id": "s28",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "s29",
                        "sourceRef": "a26",
                        "targetRef": "end8"
                    },
                    {
                        "id": "s30",
                        "sourceRef": "D5",
                        "targetRef": "end9"
                    },
                    {
                        "id": "s31",
                        "sourceRef": "end2",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s32",
                        "sourceRef": "end4",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s33",
                        "sourceRef": "end6",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s34",
                        "sourceRef": "end9",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s35",
                        "sourceRef": "PG1_join",
                        "targetRef": "end10"
                    },
                    {
                        "id": "s36",
                        "sourceRef": "end1",
                        "targetRef": "end11"
                    },
                    {
                        "id": "s37",
                        "sourceRef": "end10",
                        "targetRef": "end11"
                    },
                    {
                        "id": "s38",
                        "sourceRef": "end3",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s39",
                        "sourceRef": "end5",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s40",
                        "sourceRef": "end7",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s41",
                        "sourceRef": "end8",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s42",
                        "sourceRef": "end11",
                        "targetRef": "a28"
                    },
                    {
                        "id": "s43",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_lodhi_5.txt": {
        "0": {
            "text": "The process starts with receiving a production order. Then, the production order is prepared.  Raw materials are then collected, followed by the cutting stage. Next, the process splits into two parallel paths: stitching and printing.  After both stitching and printing are completed, the production is finalized.  Quality is then checked and a quality report is created. Based on the quality report, an exclusive decision is made. If adjustments are needed, the settings are adjusted. Alternatively, if no adjustments are needed, the data is sent to the warehouse. If the data is sent to the warehouse, it loops back to collecting raw materials.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust  settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive decision 1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a9",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "loop",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a production order. Then, the production order is prepared.  Next, raw materials are collected, followed by the cutting stage. After cutting, the process splits into two parallel paths: stitching and printing. Once both stitching and printing are complete, they converge, and production is completed.  Next, the quality is checked, and a quality report is created. Based on the quality report, the process branches: If adjustments are needed, settings are adjusted. If no adjustments are needed, data is sent to the warehouse.  Regardless of whether adjustments were made, the process converges again. Finally, the process loops back to the raw material collection step, indicating a repetition of the production cycle.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust  settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "a11",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "a14",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "a17",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "a18",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "a19",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "a20",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "a21",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "a22",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "a23",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "a24",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "a25",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "a26",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "a2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "a4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "a8",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "a15",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "a27",
                        "sourceRef": "a3",
                        "targetRef": "a14"
                    },
                    {
                        "id": "a28",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "a29",
                        "sourceRef": "a14",
                        "targetRef": "a6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a production order. Then, the production order is prepared.  Raw materials are then collected, followed by the cutting stage. Next, the process splits into two parallel paths: stitching and printing.  Once both stitching and printing are complete, they converge, and production is completed.  The quality is then checked, and a quality report is created. Based on the quality report, the process either goes to adjusting settings, after which raw materials are collected again, or it proceeds to sending data to the warehouse.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust  settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "a11",
                        "name": "Join PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a3",
                        "targetRef": "a6"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_bpmai_3.txt": {
        "0": {
            "text": "The process starts with a call to the hospital.  A decision about patient acceptance is then made.  If the patient is accepted, they are added to the list of patients, and patient control follows. Patient control can be repeated as needed. If the patient is not accepted, the patient is called to the hospital. Patient hospitalization then takes place, followed by childbirth. After childbirth, a decision is made. If no special treatment is needed, patient post-hospitalization occurs, and the process ends. If special treatment is needed, it is performed before the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a13",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a4",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a16",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a call to the hospital.  Next, a decision about patient acceptance is made.  If the patient is accepted, they are added to the list of patients, and patient control follows. After patient control, if the patient is not accepted, the patient is called to the hospital, followed by patient hospitalization. Child birth then occurs.  After child birth, a decision is made (D2). One path leads to patient post-hospitalization, which then ends the process. The other path after child birth leads to special treatment, which also ends the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-9984CD50-54A6-441E-924E-77D298ED626B",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-8D9B2E5F-8F94-4125-90A5-A04F8616246B",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-5748C712-090B-43C6-BE18-13347457B1F0",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-EAB1593D-7AA9-45C5-8C51-B03BC272840E",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sid-3FA7B311-0C49-458E-A321-81E475C200A4",
                        "sourceRef": "a13",
                        "targetRef": "a4"
                    },
                    {
                        "id": "Flow_0y0k69t",
                        "sourceRef": "a4",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-2569462D-71BF-4801-96D9-2A1C529E128B",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sid-0F7E8D4F-03B8-4674-9E01-5F25984EC58F",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sid-8C6267EA-7E51-4168-85A6-468E23481750",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-6883587A-0327-47FA-845F-23A3B40B993C",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-D0688064-0162-42E0-A157-73775F328B33",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sid-50E7F3AA-844F-465D-9F66-7963525E644C",
                        "sourceRef": "a16",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "sid-40A43C91-AE1C-434B-AB05-D76803409110",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sid-D322945C-7455-4410-A0D6-CE41F28E2970",
                        "sourceRef": "a8",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a call to the hospital.  A decision about patient acceptance is then made. If the patient is accepted, they are added to the list of patients, and patient control follows. After patient control, the patient is called to the hospital, followed by patient hospitalization and then child birth. After child birth, a decision is made. If the patient requires post-hospitalization, they undergo patient post-hospitalization, after which the process ends. Alternatively, if the patient requires special treatment after child birth, they undergo special treatment, after which the process ends.  If the patient is not accepted after the initial decision, the patient is called to the hospital and the process continues as described above.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_start_to_a1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_a1_to_a2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_a2_to_D1",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_D1_to_a13",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_a13_to_a4",
                        "sourceRef": "a13",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_a4_to_a4",
                        "sourceRef": "a4",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_D1_to_a14",
                        "sourceRef": "a14",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_a14_to_a15",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_a15_to_a6",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_a6_to_D2",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_D2_to_a16",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf_D2_to_a8",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_a16_to_end",
                        "sourceRef": "a16",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "sf_a8_to_end",
                        "sourceRef": "a8",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_pufahl_4.txt": {
        "0": {
            "text": "The process starts with assessing patient conditions. Then, two parallel paths begin: performing a physical examination and drawing blood samples.  The blood samples are sent to the lab for analysis, and the results are received. Once both the physical examination and lab analysis are complete, a diagnosis is made. Based on the diagnosis, the process branches: either a surgical intervention is performed or surgery is planned.  Finally, regardless of the chosen path, the patient is discharged, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf_17",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_18",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_19",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_20",
                        "sourceRef": "a13",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "a3",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "PG2",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_21",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "a7",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_22",
                        "sourceRef": "a14",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "a9",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with assessing the patient's condition. Then, two parallel paths begin. The first involves performing a physical examination. The second involves drawing blood samples, sending the analysis to the lab, and receiving the analysis from the lab. Once both the physical examination and lab analysis are complete, a diagnosis is made. Based on the diagnosis, the process branches. One branch involves surgical intervention, while the other involves planning surgery.  After either surgical intervention or surgery planning, the patient is discharged, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a3",
                        "targetRef": "j1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a13",
                        "targetRef": "j1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "j1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a7",
                        "targetRef": "j2"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a14",
                        "targetRef": "j2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "j2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with assessing patient conditions.  Then, two parallel paths begin. One path involves performing a physical examination, while the other involves drawing blood samples, sending the analysis to the lab, and receiving the analysis from the lab. Once both parallel paths are complete, the process continues with making a diagnosis. Based on the diagnosis, the process branches. One branch involves surgical intervention, after which the process ends. The other branch involves planning surgery and discharging the patient, after which the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "StartEvent_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "JoinGateway_1",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "Flow_0i9j99t",
                        "sourceRef": "StartEvent_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "Flow_12k1g2t",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "Flow_0h19m4w",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "Flow_05yms4h",
                        "sourceRef": "a3",
                        "targetRef": "JoinGateway_1"
                    },
                    {
                        "id": "Flow_1v4plcr",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "Flow_189l41o",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "Flow_121qaz1",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "Flow_1gyim0a",
                        "sourceRef": "a13",
                        "targetRef": "JoinGateway_1"
                    },
                    {
                        "id": "Flow_09k4807",
                        "sourceRef": "JoinGateway_1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "Flow_0g73e9g",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "Flow_19t84dg",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "Flow_0mqnpg4",
                        "sourceRef": "a7",
                        "targetRef": "EndEvent_1"
                    },
                    {
                        "id": "Flow_03jt861",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "Flow_1x8uys4",
                        "sourceRef": "a14",
                        "targetRef": "a9"
                    },
                    {
                        "id": "Flow_0qt3x98",
                        "sourceRef": "a9",
                        "targetRef": "EndEvent_1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_1_data_breach.txt": {
        "0": {
            "text": "The process starts with retrieving breached data, followed by retrieving breached subjects. Then, the process forks into two parallel paths. One path involves data loss limitation, while the other involves notifying the national authority. Both paths converge to evaluate stolen data.  Next, an exclusive gateway (D1) determines whether to evaluate the security standard.  If the security standard is evaluated, another exclusive gateway (D2) decides whether to request if breached data has to be communicated to the data subject. If the request is made, a notification for the request is received, and an exclusive gateway (D3) is reached. Regardless of the decision at gateways D1, D2, and D3, or if the request is not made, a notification is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s0",
                        "sourceRef": "start_event",
                        "targetRef": "a0"
                    },
                    {
                        "id": "s1",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a18",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with retrieving breached data, followed by retrieving breached subjects. Then, the process forks into two parallel paths. One path involves data loss limitation, while the other involves notifying the national authority. Both paths converge and lead to evaluating stolen data.  Next, a decision is made based on the evaluation.  If a certain condition is met, the security standard is evaluated. Based on this evaluation, another decision leads to either requesting if breached data has to be communicated to the data subject or directly to sending a notification. If the request is made, a notification for the request is received, and a final decision determines whether to send a notification.  If the first decision's condition is not met, a notification is sent directly.  Finally, after the notification is sent, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_0",
                        "sourceRef": "start_event",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf_1",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf_2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_3",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_4",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf_5",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_6",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf_7",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_8",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_9",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_10",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_11",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf_12",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_13",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_14",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_15",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf_16",
                        "sourceRef": "a18",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with retrieving breached data, followed by retrieving breached subjects. Then, the process forks into two parallel paths. In the first path, data loss is limited, and in the second path, the national authority is notified. Both paths converge to evaluate the stolen data. Next, a decision gateway checks a condition. If the condition is met, the security standard is evaluated, leading to another decision gateway. This gateway determines whether to request if breached data has to be communicated to the data subject or to send a notification. If the request is made, a notification for the request is received, followed by a decision, and finally, a notification is sent. If the first condition after evaluating stolen data is not met, a notification is sent directly.  The process ends after the notification is sent.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "D3",
                        "name": "D3",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f0",
                        "sourceRef": "start_event",
                        "targetRef": "a0"
                    },
                    {
                        "id": "f1",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "a18",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_bpmai_2.txt": {
        "0": {
            "text": "The process starts with receiving a customer order.  Next, the customer demand is processed, and the demanded components are determined according to planning.  Based on this determination, the process branches: if missing parts need to be purchased, they are purchased and put on stock before production is performed. Otherwise, production is performed directly. Following production, quality checks are performed.  Depending on the outcome of the quality checks, the process branches again: if follow-up production is needed, it is performed before filling the product into packaging. Otherwise, the product is filled into packaging directly.  After filling the product, it is packed and labeled, then transported to the warehouse. Finally, the product is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Perfor, quality checks",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a2"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "D2",
                        "targetRef": "a15"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with receiving a customer order.  Next, the customer demand is processed, and then the demanded components are determined according to planning.  Based on this determination, the process branches: if missing parts need to be purchased, they are purchased and put on stock before production is performed. Otherwise, production is performed directly. Following production, quality checks are performed.  Depending on the outcome of the quality checks, the process branches again: if follow-up production is needed, it is performed before filling the product into packaging. Otherwise, the product is filled into packaging directly.  After filling the product into packaging, the product is packed and labeled, then transported to the warehouse, and finally sent to the customer, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Perfor quality checks",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with receiving a customer order.  Next, the customer demand is processed, and the demanded components are determined according to planning.  Based on this determination, the process diverges. If missing parts need to be purchased, they are purchased and put on stock before production is performed. Otherwise, production is performed directly. Following production, quality checks are performed.  Again, the process diverges. If follow-up production is needed, it is performed, and then the product is filled into packaging. Otherwise, the product is filled into packaging directly after the quality checks.  Finally, the product is packed and labeled, transported to the warehouse, sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Perfor quality checks",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_milanovic_4.txt": {
        "0": {
            "text": "The process starts with a trip request being received. Then, two parallel branches are initiated. In the first branch, a price request is sent to the airlines, responses are collected, and an airline is selected. In the second branch, a price request is sent to the hotels, responses are collected, and a hotel is selected. Once both the airline and hotel are selected, the tour plan is prepared and sent to the customer, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "pg2",
                        "name": "pg2",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a4",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "pg2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "pg2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a trip request. Then, price requests are sent to airlines and hotels in parallel.  Once the airline responses are collected, an airline is selected.  Similarly, hotel responses are collected, and a hotel is selected.  After both the airline and hotel are selected, the tour plan is prepared and sent to the customer, thus concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event_1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event_1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "start_event_1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "PG2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "a11",
                        "targetRef": "end_event_1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a trip request. Then, two parallel branches are initiated. In the first branch, a price request is sent to the airlines, responses are collected, and an airline is selected. In the second branch, a price request is sent to the hotels, responses are collected, and a hotel is selected. Once both the airline and hotel are selected, the tour plan is prepared and sent to the customer, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "PG1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "PG2",
                        "name": "PG2",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a4",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "PG2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a11",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}