{
    "3_7.json": {
        "0": {
            "text": "The process begins with searching the police report.  Next, the claim documentation and police report are put together.  Then, an initial claim estimate is calculated, followed by the creation of an action plan.  A settlement is then negotiated on the claim estimate. Finally, the claimant is informed of the outcome, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Put together claim documentation and police report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create action plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate settlement on claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform claimant of the outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with an employee searching the police report.  Next, the employee puts together the claim documentation and police report.  A claims handler then calculates an initial claim estimate and creates an action plan.  Following this, a claims manager negotiates a settlement on the claim estimate and informs the claimant of the outcome, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Put Together Claim Documentation and Police Report",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Negotiate Settlement on Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Inform Claimant of the Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "endEvent1"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with searching the police report.  Next, the claim documentation and police report are put together.  Then, an initial claim estimate is calculated, followed by the creation of an action plan.  A settlement is then negotiated on the claim estimate.  Finally, the claimant is informed of the outcome, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Put together claim documentation and police report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create action plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate settlement on claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform claimant of the outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_3.json": {
        "0": {
            "text": "The process begins with registering a claim.  A claims officer then examines the claim.  Based on the examination, the claims officer may write a settlement recommendation. The recommendation is then checked by a senior claims officer. The senior claims officer marks the claim and may either proceed with the claim handling process, ultimately ending the process, or send the claim back to the claims officer for re-examination. If the claim is sent back, the claims officer examines the claim again and the process continues as described from the point of examination.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Proceed with Claim Handling",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Examine Claim Again",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Settlement Recommendation Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Claim Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with registering a claim.  A claims officer examines the claim and decides whether to write a settlement recommendation. If a settlement recommendation is written, it is then checked by a senior claims officer. The senior claims officer marks the claim and decides whether it is \"ok\" or \"nok\". If the claim is \"ok\", the claim handling process proceeds and the process ends. If the claim is \"nok\", the claim is sent back to the claims officer who examines the claim again, potentially leading to a new settlement recommendation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Mark Claim",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Examine Claim Again",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Write Settlement Recommendation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Claim OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with registering a claim.  A claims officer then examines the claim.  Based on the examination, the claims officer may write a settlement recommendation.  This recommendation is then checked by a senior claims officer.  The senior claims officer marks the claim and, depending on the outcome of the check, either proceeds with the claim handling process, which concludes the process, or sends the claim back to the claims officer for re-examination.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Mark Claim",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Proceed with Claim Handling",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Re-examine Claim",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Settlement Recommendation Written?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Claim Check Outcome?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "8_2.json": {
        "0": {
            "text": "The process begins when a Department reports a vacancy. The HR clerk then creates a job description and checks if there is any confusion in the description. If yes, the clerk asks the Department for clarification and, based on the Department\u2019s input, may create a new job description and repeat the confusion check or, if there\u2019s no confusion, can submit the job description for consideration. Then, the HR clerk waits for approval. If the job description is approved, the clerk proceeds to the next step. If rejected, the clerk requests a correction from the Department. The Department corrects the description and it goes back to the approval stage via the HR clerk. After the correction, if the job description is not approved, it will be corrected again by the Department and sent back for approval. Once the job description is approved, the HR clerk confirms if it's ready to be posted. If it is ready to be posted, the HR clerk posts the job, which ends the process. If not, the process returns to where the HR clerk will ask the department about the job description.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Department reports a vacancy",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check for confusion",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Ask department for clarification",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create new job description",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Submit job description",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for approval",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request correction",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Correct description",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm ready to post",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Post job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Ready to post?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a Department reports a vacancy. An HR clerk then creates a job description.  If there is any confusion in the description, the clerk asks the Department for clarification. Based on the Department's input, the clerk may need to revise the job description. This clarification loop continues until the description is clear. The clerk then submits the job description for consideration.  The clerk waits for approval. If the description is approved, the clerk proceeds to check if it's really approved. If confirmed approved, the clerk posts the job and the process ends. If not confirmed approved, or if the initial approval was rejected, the clerk requests a correction from the Department. After the Department corrects the description, the clerk continues the process by checking for approval again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report Vacancy",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask Department for Clarification",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Revise Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for Approval",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if Approved",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Post Job",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request Correction",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Correct Description",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Need Clarification?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Description Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Confirmed Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when a Department reports a vacancy.  An HR clerk then creates a job description. Next, they check if there is any confusion in the description. If so, they ask the Department for clarification and, based on the Department's response, might need to create the job description again. If there's no confusion, or once any confusion is resolved and the Department has given input, the HR clerk submits the job description for consideration. Following submission, the HR clerk waits for approval. If the job description is rejected, they request a correction from the Department, which leads to the HR clerk correcting the description. This correction process may loop back to asking the Department again for clarification, if necessary. Once the job description is approved, the HR clerk might need to ask the Department if the job description has been approved again. If not approved again, the HR clerk needs to create a job description again. If approved again, the HR clerk posts the job, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report Vacancy",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check for Confusion",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Ask Department for Clarification",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Submit Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for Approval",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Correction",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Correct Description",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask Department for Clarification",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Ask Department if Job Description has been approved",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create Job Description",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Post Job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Approved Again?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id17",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id17",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "2_2.json": {
        "0": {
            "text": "The process begins when a customer transmits data to the customer service department. The company receives the customer data and enters it into the CRM system.  The entered data is compared with the internal customer data. The customer data is checked for completeness and plausibility. If there is an error, the customer data is corrected and checked again. If the data is correct, it is checked if the customer exists.  If the customer doesn't exist, a new customer object is created.  If the customer does exist or a new customer object was successfully created, the contract documents for the power supplier switch are prepared.  This may result in issues requiring analysis and resolution.  Once resolved, the contract documents are generated, and a CIS contract is created.  This contract is sent to the customer, who then checks the contract details. The customer can then choose to confirm or withdraw from the switch contract.  If the customer confirms, the process continues, and the customer's response is received. If they withdraw, the process ends.\n\nIf the customer confirms, the meter data is received and imported into systems.  The customer's response may trigger a process flow deviation and if they withdraw the process will end. If the customer confirms, it is checked if the contract documents were generated. If not, analysis and resolution of causing issues may need to be handled, generating the contract documents.  If the contract documents have been generated a confirmation document is sent out to the customer. Meanwhile, if the customer confirms the contract, a grid operator request is sent out.  The request for supplier concurrence is checked. If concurrence exists, all suppliers are informed, and the power meter data is transmitted and the final billing is computed.  If concurrence does not exist, all suppliers are informed, demanding the resolution of the conflict. The old supplier is contacted to communicate and terminate the sales agreement. Once the sales agreement is terminated, there may be objections which will prevent the customer information system from continuing the supplier switch. Otherwise the CIS system will continue, compute the final billing, and send it to the customer and the old supplier.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Compare data with internal data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check data for completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Correct customer data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check if customer exists",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Generate contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send contract to customer",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Check contract details",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Receive customer response",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Receive and import meter data",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send confirmation document",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Send grid operator request",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Check for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Inform all suppliers",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Transmit power meter data",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Demand resolution of conflict",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Contact old supplier to terminate sales agreement",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Handle sales agreement termination objections",
                        "type": "User"
                    },
                    {
                        "id": "id25",
                        "name": "Continue supplier switch in CIS",
                        "type": "User"
                    },
                    {
                        "id": "id26",
                        "name": "Send final billing to customer and old supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id27",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "Customer withdraws",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id29",
                        "name": "Customer withdraws",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id30",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id31",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id32",
                        "name": "Customer Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id33",
                        "name": "Confirm or Withdraw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id34",
                        "name": "Contract Generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id35",
                        "name": "Concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id36",
                        "name": "Objections?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id27",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id31",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id31",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id32"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id32",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id32",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id33"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id33",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id33",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id34",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id34",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id14",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id18",
                        "targetRef": "id35"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id35",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id21",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id35",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id23",
                        "targetRef": "id36"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id36",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id24",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id36",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "id25",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf40",
                        "sourceRef": "id21",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf41",
                        "sourceRef": "id26",
                        "targetRef": "id30"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a customer transmits data to the customer service department. The company receives the customer data and enters it into the CRM system.  The entered data is compared with the internal customer data. The company checks the customer data for completeness and plausibility. If there is an error, the customer data is corrected, and the check is performed again. If the data is correct, the process checks if the customer exists. If not, a new customer object is created. If the customer exists, or once a new customer object has been created, the company prepares the contract documents for the power supplier switch.  In parallel, the company creates a CIS contract and receives the meter data, which they subsequently import into the systems. Once the contract documents are prepared, the CIS contract is created, and the meter data is imported, the process generates contract documents. If the generated contract documents are not ready, the process analyzes and resolves the causing issues.  Once generated, the contract documents are checked by the Customer Information System (CIS), and a confirmation document is sent out to the customer. After receiving the confirmation document, the customer checks the contract details. The customer can then confirm or withdraw from the switch contract. If the customer withdraws, a customer response is received by the company, and the process ends. If the customer confirms, the company receives this confirmation. If the customer confirms the contract, the company sends out a grid operator request and checks for supplier concurrence. If there is concurrence, the grid operator informs all suppliers. If there is no concurrence, the grid operator demands conflict resolution.  Regardless of the outcome, the company communicates with the old supplier, terminates the sales agreement, transmits power meter data, computes the final billing, sends the billing to the old supplier, creates the final billing, and sends it to the customer.  Once the old supplier receives the billing, the meter data is received by the company, and the final billing is sent to the customer, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Compare data with internal data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check data for completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Correct customer data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare contract documents for switch",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive and import meter data",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Generate contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Analyze and resolve document issues",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check contract documents (CIS)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send confirmation to customer",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Check contract details",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Receive customer withdrawal response",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive customer confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Send grid operator request",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Check supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Grid operator informs suppliers",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Grid operator demands conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Communicate with old supplier",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Terminate sales agreement",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Transmit power meter data",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id25",
                        "name": "Send billing to old supplier",
                        "type": "User"
                    },
                    {
                        "id": "id26",
                        "name": "Create and send final billing to customer",
                        "type": "User"
                    },
                    {
                        "id": "id27",
                        "name": "Receive billing (old supplier)",
                        "type": "User"
                    },
                    {
                        "id": "id28",
                        "name": "Receive meter data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id29",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Customer Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg3",
                        "name": "Documents Ready?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg4",
                        "name": "Confirm or Withdraw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg5",
                        "name": "Concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg6",
                        "type": "Parallel"
                    },
                    {
                        "id": "idg7",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Actions",
                                "elemRefs": [
                                    "id1",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id21",
                                    "id22",
                                    "id23",
                                    "id24",
                                    "id25",
                                    "id26",
                                    "id28"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "CIS",
                                "elemRefs": [
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Grid Operator Actions",
                                "elemRefs": [
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Old Supplier",
                        "lanes": [
                            {
                                "id": "lane5",
                                "name": "Old Supplier Actions",
                                "elemRefs": [
                                    "id27"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "idg1",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "idg2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "idg6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "idg2",
                        "targetRef": "idg6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "idg6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "idg6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "idg6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "idg7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "idg7"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "idg7"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "idg7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id10",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "idg3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "idg3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id14",
                        "targetRef": "idg4"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "idg4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id15",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "idg4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id18",
                        "targetRef": "idg5"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "idg5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "idg5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id19",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "id24",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf40",
                        "sourceRef": "id25",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf41",
                        "sourceRef": "id24",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf42",
                        "sourceRef": "id26",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf43",
                        "sourceRef": "id27",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf44",
                        "sourceRef": "id28",
                        "targetRef": "id29"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer transmits data to the customer service department. The company receives the customer data and enters it into the CRM system.  The entered data is compared with the internal customer data. Subsequently, the customer data is checked for completeness and plausibility. If there is an error, the customer data is corrected, after which it is checked again for completeness and plausibility. If the customer data is complete and plausible, the process checks if the customer already exists. If the customer does not yet exist, a new customer object is created. If the customer already exists or a new customer object has been successfully created, the company prepares the contract documents for the power supplier switch.  The company then generates the contract documents, creates a CIS contract and sends it to the customer. The customer checks the contract details. The customer can either confirm or withdraw from the switch contract. If the customer withdraws from the contract, the customer's response is received by the company. If the customer confirms the switch contract, their response is also received by the company. If the customer confirms the switch contract, the contract documents are checked, which, if successfully generated, are sent to the customer and a grid operator request is also sent out. This request is then checked for supplier concurrence. If concurrence is achieved, the relevant suppliers are informed and the power meter data is transmitted, the final billing is computed, and the final billing is both sent to the old supplier and the customer. The meter data is then received and imported into the systems, after which the process ends. If there are objections, the process ends. If the contract documents were not successfully generated after customer confirmation, the causing issues are analyzed and resolved after which the contract documents are generated again. If there is no concurrence, all suppliers are informed and a demand is made to resolve the conflict. The company communicates with the old supplier, terminates the sales agreement and then the objections process proceeds as before, starting with checking for customer objections.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Compare data with internal customer data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check customer data for completeness and plausibility",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Correct customer data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Generate contract documents, create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send contract to customer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check contract details",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Receive customer response (withdrawal)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive customer response (confirmation)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Check contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send contract documents to customer",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send grid operator request",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Check for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Inform relevant suppliers and transmit power meter data",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Send final billing to old supplier and customer",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Receive and import meter data",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Generate contract documents again",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Inform all suppliers and demand conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Communicate with old supplier, terminate sales agreement",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id25",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "End (Successful)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id27",
                        "name": "End (Objections)",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id28",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Customer Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Confirm or Withdraw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id31",
                        "name": "Contract Generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id32",
                        "name": "Concurrence?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id25",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id28",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id28",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id29",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id29",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id30",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id30",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id31",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id16",
                        "targetRef": "id32"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id32",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id20",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id32",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id24",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id31",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "10_11.json": {
        "0": {
            "text": "The process begins when the GO requests the measurements to the MSP. The MSP then checks the received request.  If the request is invalid, the MSP denies the request of the GO and the process ends. If the request is valid, the MSP performs the measurement.  Following the measurement, a decision is made based on the measurement results. If the measurement fails, the MSP informs the GO about the failure, and then a decision is made. Following this decision, or if the measurement was successful, the MSP transmits the measured values to the GO.  The GO then processes the measured values and sends the changed values to the MSP.  The MSP transmits the readings to the SP.  A final decision is made, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSP checks the received request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP denies the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP performs the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP informs the GO about the failure",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP transmits the measured values to the GO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO processes the measured values",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO sends the changed values to the MSP",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "MSP transmits the readings to the SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Request Valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Measurement Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id16",
                        "name": "MSP",
                        "lanes": []
                    },
                    {
                        "id": "id17",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the GO requests the measurements to the MSP. The MSP then checks the received request.  If the request is invalid, the MSP denies the request of the GO and the process ends. If the request is valid, the MSP performs the measurement. Next, the MSP checks if the measurement was successful. If not, the MSP informs the GO about the failure, after which the process ends. If the measurement was successful, the MSP transmits the measured values to the GO. The GO processes the measured values and sends the changed values back to the MSP.  The MSP transmits the readings to the SP. Subsequently, if the readings fail, the process ends. If the readings are successful, the process ends as well.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSP checks the received request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP denies the request of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP performs the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP checks if the measurement was successful",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs the GO about the failure",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits the measured values to the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes the measured values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends the changed values back to the MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "MSP transmits the readings to the SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "GO requests the measurements to the MSP",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end1",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end2",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Readings fail",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Readings successful",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Request Valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Measurement successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Readings successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id16",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id16",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the GO requesting the measurements to the MSP. The MSP then checks the received request.  If the request is invalid, it is denied and the process ends. If valid, the MSP performs the measurement. Next, a decision is made based on the measurement results. If the measurement fails, the MSP informs the GO about the failure, and then they decide whether to end the process or request the measurements again from the MSP. If the measurement is successful, the MSP transmits the measured values to the GO. The GO then processes the measured values, and sends the changed values to the MSP.  The MSP then transmits the readings to the SP, after which another decision is made. Regardless of this final decision, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSP checks the received request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSP performs the measurement",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSP informs the GO about the failure",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "GO decides whether to end or request again",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MSP transmits the measured values to the GO",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "GO processes the measured values",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO sends the changed values to the MSP",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "MSP transmits the readings to the SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "11",
                        "name": "Request Valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "name": "Measurement Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "14",
                        "name": "Request Again?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "GO",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "GO Lane",
                                "elemRefs": [
                                    "0",
                                    "4",
                                    "6",
                                    "7",
                                    "9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MSP",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MSP Lane",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "5",
                                    "8",
                                    "10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "SP",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "SP Lane",
                                "elemRefs": [
                                    "12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "11",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "11",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "13",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "13",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "4",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "14",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "14",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "8",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "15",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "8",
                        "targetRef": "15"
                    }
                ]
            }
        }
    },
    "9_2.json": {
        "0": {
            "text": "The process begins with sending a mortgage offer. Then, the Customer Service Representative waits for a customer reply.  Next, the question is asked: decline? If yes, the case details are updated, after which the work is archived leading to performing cancellation. After cancellation the process ends. If, however, the customer did not decline, the case is moved to administration. Subsequently, it is checked if all documents are present. If all documents are available, the next step is to determine whether an answer was received within 2 weeks. If an answer has been received, the process ends. If not, the case details are updated, and the work is archived, leading to performing cancellation and ending the process.  If not all documents are available, a request for outstanding documents is generated, leading back to the check if all documents are available.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send mortgage offer",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Wait for customer reply",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Perform cancellation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Generate request for outstanding documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Decline?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "All documents available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Answer received within 2 weeks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with sending a mortgage offer. Then, the Customer Service Representative waits for a customer reply. Based on the customer's reply, the process branches: if the customer declines, the process goes to an exclusive gateway where the flow continues and the case details are updated. If the customer does not decline, the case is moved to administration.  After updating the case details, the work is archived, leading to performing cancellation. After performing the cancellation, the process ends.  Returning to the other branch, if the case is moved to administration, the Customer Service Representative checks for all documents. If all documents are present, the Customer Service Representative checks for an answer within two weeks. If there is an answer, the process ends. If there is no answer, the case details are updated. If not all documents are present, a request for outstanding documents is generated.  After generating the request, the Customer Service Representative checks again if all documents are present, looping back to the previous check. If all documents are subsequently received, the two-week answer check is performed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send mortgage offer",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Wait for customer reply",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Perform cancellation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check for all documents",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check for answer within two weeks",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Generate request for outstanding documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Customer declines",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Answer received",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id13",
                        "name": "No answer",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id14",
                        "name": "All documents present",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Not all documents present",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Customer reply received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "All documents received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Answer received within two weeks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id17",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id18",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id17",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with sending a mortgage offer. Then, the Customer Service Representative waits for a customer reply. Next, the question is asked: \"decline?\". If yes, the next step is to update the case details. Afterward, the case is moved to administration, and subsequently, the work is archived. Then, the process performs cancellation and ends. If, however, the customer did not decline, the case is moved to administration. The following question is posed: \"all documents?\". If no, a request for outstanding documents is generated, leading back to the \"all documents?\" question. If yes, the next question is: \"answer (2 weeks)?\". If no, the process ends. If yes, the case details are updated. Then, the work is archived, followed by cancellation. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send mortgage offer",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Wait for customer reply",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Perform cancellation",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Request outstanding documents",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Perform cancellation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "decline?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "all documents?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "answer (2 weeks)?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_5.json": {
        "0": {
            "text": "The process begins with the reception of an expense report. Next, a check is performed to see if the employee has an existing account. If not, a new employee account is created.  Following account creation or if an account already existed, the report is reviewed for automatic approval. Based on the review, the amount on the report is checked. If the amount is less than 200, the report is automatically approved. If the amount is greater than or equal to 200, the report is sent for approval. If approved, reimbursement is sent to the employee's bank account.  A check then occurs to see if the reimbursement is complete. If complete and it took less than or equal to 7 days to complete, the process ends. If the reimbursement took more than 7 days but fewer than 30 days, an approval in progress email is sent to the employee and the process ends. If the reimbursement took 30 days or more, the process stops, and an email cancellation notice is sent to the employee, after which the employee re-submits the expense report, restarting a portion of the process. Back on the approval step, if the report was not approved, the employee receives a rejection notice. The employee then decides whether to stop the process or re-submit the expense report.  If the employee chooses to re-submit the report, the process loops back to the report reception stage. If the employee stops the process or the automatic approval check fails after the first review, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Existing Account",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create New Employee Account",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Report for Automatic Approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Amount on Report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Auto-Approve Report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Report for Approval",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Reimbursement",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Reimbursement Status",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Approval in Progress Email",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Cancellation Notice",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Resubmit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Rejection Notice",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Decide Whether to Stop or Resubmit",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Existing Account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Automatic Approval?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Report Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Reimbursement Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Reimbursement Time <= 7 Days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Reimbursement Time < 30 Days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Resubmit?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id17",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id22",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id22",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id14",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id23",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with receiving an expense report.  The system then checks if the employee has an existing account. If not, a new employee account is created.  Next, the system reviews the report for automatic approval.  Based on the amount, the report is either automatically approved or it goes to the supervisor for approval. If the amount is less than 200, it is automatically approved. If the amount is greater than or equal to 200, the supervisor must approve the report. If the supervisor approves the report, the reimbursement is sent to the employee's bank account.  The system then checks if the reimbursement is complete. If it is complete and it took less than or equal to 7 days, the process ends. If it took more than 7 days but less than 30 days, an approval in progress email is sent to the employee and the process ends. If it took 30 or more days, the process is stopped, a cancellation email is sent to the employee, and the process ends.  If the supervisor rejects the report, a rejection notice is sent to the employee. The employee can then choose to either re-submit the expense report or do nothing.  If the report is re-submitted, the process starts over from the beginning with the system receiving the expense report.  If the employee does nothing, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive expense report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for existing account",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Create new employee account",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Review report for automatic approval",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Supervisor approves report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send reimbursement to employee's bank account",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Check reimbursement status",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send rejection notice to employee",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Resubmit expense report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Reimbursement complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Time <= 7 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Resubmit?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with receiving an expense report.  The system then checks if the employee has an existing account. If not, a new employee account is created. Next, the system reviews the report for automatic approval. Based on the amount, the report is either automatically approved or it is sent to a supervisor for approval. If the amount is less than 200, the report is automatically approved. If the amount is greater than or equal to 200, the supervisor must approve the report.  If the supervisor approves the report, the reimbursement is sent to the employee's bank account. If the supervisor rejects the report, the employee receives a rejection notice. The employee can then choose to re-submit the expense report or cancel the request. If the report is re-submitted, the process loops back to receiving the expense report. If cancelled, the employee receives an email cancellation notice.  After the reimbursement is sent, a check occurs to see if it has been completed. Depending on the time taken for completion (less than or equal to 7 days, between 7 and 30 days, or greater than or equal to 30 days), the process either ends, sends an approval in progress email to the employee, or stops the process and sends a cancellation notice to the employee. If an \"approval in progress\" email is sent, the process then ends. If a cancellation notice is sent because the process took too long, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Existing Account",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Create New Account",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Review Report",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Auto Approve",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Supervisor Approval",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Reimbursement",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send Rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Resubmit Report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Cancel Request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Email Cancellation",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Check Reimbursement Status",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send Approval in Progress Email",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Send Cancellation Notice (Long Delay)",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Account Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Supervisor Approve?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Resubmit or Cancel?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Reimbursement Time?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id18",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id20",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "1_1.json": {
        "0": {
            "text": "The process begins with receiving an order. Next, the bicycle company decides whether to accept or reject the bike order. If the order is rejected, the process ends. If the order is accepted, the sales department informs the engineering department and the storehouse simultaneously. The engineering department then prepares for assembling and the storehouse processes the part list.  After the storehouse processes the part list, they check the quantity of parts and determine if the part is in house. If the part is in house, they reserve the part. If the part is not in house, they back-order the part. Once the part is either reserved or back-ordered, the storehouse checks if the order is ok.  Regardless of the part being in house or not, after the \"ok?\" check, the storehouse informs the engineering department about the parts status.  Concurrently with the storehouse activities, the engineering department prepares for assembly. Once the engineering department receives the parts status and finishes preparing, they assemble the bicycle, ship the bicycle, and the process ends.\n",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "Order Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "name": "Part in House?",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "4",
                        "targetRef": "12"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Inform Engineering and Storehouse",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Prepare for Assembly",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Back-order Part",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Check if Order is OK",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Inform Engineering about Parts Status",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Reject Order",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with receiving an order.  The bicycle company then decides whether to accept or reject the bike order. If the order is rejected, the process ends. If the order is accepted, the sales department informs the engineering department and the storehouse.  The engineering department starts preparing for assembly and, concurrently, the storehouse processes the part list and checks the quantity of parts. Based on whether the part is in-house, the storehouse either reserves the part or creates a back-order for it. After the back-order or reservation is complete the storehouse checks if everything is ok.  If not ok, the required parts are processed and checked again, starting with processing the part list. Once everything is ok, the process continues. Once the preparation for assembly is finished, and the parts are ready, the engineering department assembles the bicycle. Finally, the sales department ships the bicycle, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Decide on bike order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Inform engineering department",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Inform storehouse",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Prepare for assembly",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Process part list and check quantity",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Reserve the part",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Create back-order",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Check if everything is ok",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Assemble bicycle",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Ship bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Receive order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "2",
                        "name": "Order rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Accept or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Part in-house?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Everything ok?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "type": "Parallel"
                    },
                    {
                        "id": "g5",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g4",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g4",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "g2",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g2",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g3",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "5",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving an order.  The bicycle company then decides whether to accept or reject the bike order. If the order is accepted, the sales department informs the engineering department and the storehouse.  The engineering department then prepares for assembling and simultaneously, the storehouse processes the part list.  After the part list is processed, the storehouse checks the quantity of parts and determines if the part is in house.  If the part is in house, the storehouse reserves the part. If the part is not in house, the storehouse back-orders the part.  Regardless of whether the part was in house or not, the storehouse checks if everything is ok. If everything is ok, the storehouse then goes back to check the part list and processes it, beginning the cycle anew until everything is ok, as checked by the storehouse. Once everything is ok and the parts list has been processed, the engineering department assembles the bicycle and ships it.  If the bike order was initially rejected, or once the bicycle is shipped, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Inform Engineering Department",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Check Quantity of Parts",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Back-Order Part",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Check if Everything is Ok",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Ship Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Prepare for Assembling",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Inform Storehouse",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Receive Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "Order Rejected or Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "12",
                        "name": "Accept or Reject Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "name": "Part in House?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "14",
                        "name": "Everything Ok?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "12",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "12",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "1",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "1",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "10",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "9",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "13",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "13",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "6",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "14",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "14",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "8",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_4.json": {
        "0": {
            "text": "The process begins with finalizing the dates.  Next, the group calendars are updated and meeting folders are created.  After creating the meeting folders, all appropriate documents are ensured to be uploaded to the system.  Committee members are then advised to read all documents.  Concurrently, the produced minutes are subjected to a QA check. This QA check is then sent to all Committee Members. Once the committee members are advised to read the documents, the meeting is held. Following the meeting, the minutes are produced.  After the minutes are produced, the QA check on the minutes is conducted.  After the QA check is sent to all committee members, departmental records are updated, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Finalize Dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Group Calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Meeting Folders",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload Documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Advise Committee Members to Read Documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hold Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Produce Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "QA Check on Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send QA Check to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Update Departmental Records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with finalizing the dates.  Then, the Support Officer updates all group calendars. Next, meeting folders are created, followed by ensuring all appropriate documents are uploaded to the system. The Support Officer then advises Committee Members to read all documents.  Concurrently, the Coordination Unit conducts a QA check on the minutes and sends the QA check to all Committee Members. Once the Committee Members are advised to read the documents, the meeting is held.  The Support Officer then produces the minutes.  Following this, the Coordination Unit conducts a QA check on the minutes and sends this QA check to all Committee Members.  After the QA check is sent, the Support Officer updates departmental records, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Finalize Dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Group Calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Meeting Folders",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload Documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Advise Committee Members to Read Documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct QA Check on Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send QA Check to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Hold Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Produce Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct QA Check on Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send QA Check to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update Departmental Records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with finalizing the dates.  Then, update all group calendars. Next, create meeting folders, followed by ensuring all appropriate documents are uploaded to the system.  Committee Members are then advised to read all documents. Subsequently, the meeting is held.  Minutes are then produced, followed by a QA check on the minutes. The QA check is then sent to all Committee Members. Finally, departmental records are updated, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Finalize Dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Group Calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Meeting Folders",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload Documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Advise Committee Members to Read Documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hold Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Produce Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "QA Check on Minutes",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send QA Check to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Update Department Records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "7_1.json": {
        "0": {
            "text": "The process begins with checking the open leads. Then, the top five leads are selected, and the sales assistant is told to contact them. The sales assistant calls a customer. If the customer is interested, a note is sent to the manager, who then processes the lead. Regardless of whether the customer is interested or not, an evaluation takes place if there is another customer. If there is no next customer, the process ends. If there is a next customer, the sales assistant calls the next customer and the process loops back to the customer interest check. If the customer is not interested, after processing the lead, an evaluation is again done whether there is another customer or not with the same process ending or looping.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top 5 leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Instruct sales assistant to contact leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Sales assistant calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Manager processes lead",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Evaluate next customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Customer interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Next customer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with checking the open leads.  Then, the top five leads are selected, and the sales assistant is told to contact them. The sales assistant calls the customer. If the customer is interested, a note is sent to the manager.  The manager then processes the lead, after which there is a decision point: is there another customer?  If yes, the sales assistant calls the next customer. If no, the process ends.  If the customer is not interested, the process also proceeds to the decision point regarding the next customer.  After sending the note to the manager and processing the lead, the process again checks if there's another customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top 5 leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Instruct sales assistant to contact leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Sales assistant calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Manager processes lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Customer Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Another Customer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with checking the open leads. Then, the top five leads are selected, and the sales assistant is told to contact them. The sales assistant calls the customer.  If the customer is interested, the sales assistant sends a note to the manager. The manager then processes the lead and decides whether there is another customer to contact. If there is, the flow loops back to the sales assistant calling the customer. If not, the process ends. If the customer is not interested, the manager processes the lead and then decides if there is another customer to contact. If there is, the flow loops back to the sales assistant calling the customer. If not, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Open Leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Top 5 Leads",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Process Lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Customer Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Another Customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Another Customer?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "9_3.json": {
        "0": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  Next, the Coordination Unit adds the draft dates to all calendars and then sends the dates to the Support Officer to be checked. The Support Officer then suggests modifications to the dates and sends the modified schedule back to the Coordination Unit to recheck all dates. The Coordination Unit then looks for potential conflicts.  If no conflicts are found, the Coordination Unit sends the final schedule to the Committee Members.  The Committee Members check their diaries and advise the Coordination Unit of any conflicts. Once any conflicts have been addressed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Coordination Unit adds the draft dates to all calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer checks the dates",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Support Officer suggests modifications to the dates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Coordination Unit rechecks all dates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Coordination Unit looks for potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit sends the final schedule to the Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Committee Members check their diaries and advise the Coordination Unit of any conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Any Conflicts?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  Next, the draft dates are added to all calendars. Subsequently, the Support Officer checks the dates and may suggest modifications.  If modifications are suggested, all dates are rechecked and potential conflicts are identified.  Once the final schedule is ready, it is sent to the Committee Members. The Committee Members then check their diaries and advise the Coordination Unit of any conflicts.  Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Add draft dates to all calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer checks the dates",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Suggest modifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Recheck all dates and identify potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send final schedule to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Committee Members check their diaries",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Committee Members advise Coordination Unit of any conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Modifications suggested?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings.  Next, the Coordination Unit adds draft dates to all calendars and then the Support Officer checks the dates. The Support Officer then suggests modifications, after which the Coordination Unit rechecks all dates. The Coordination Unit then looks for potential conflicts and sends the final schedule to the Committee Members.  Finally, the Committee Members check diaries and advise the Coordination Unit of any conflicts, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Coordination Unit adds draft dates to all calendars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer checks the dates",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Support Officer suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Coordination Unit rechecks all dates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Coordination Unit looks for potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit sends the final schedule to the Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Committee Members check diaries and advise the Coordination Unit of any conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_6.json": {
        "0": {
            "text": "The process begins with sending a dismissal.  The dismissal is then reviewed.  Following the review, the process branches: the dismissal of the MSPN can be rejected or confirmed.  If the dismissal is rejected, the process proceeds to a decision point where it either ends or loops back to the review the dismissal task. If the dismissal is confirmed, the process also proceeds to the same decision point where it either ends or goes back to the review step. Ultimately, the process ends after the decision point.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "send dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "review dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Dismissal Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Review Again?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with sending a dismissal.  It is then reviewed.  The review can result in either rejecting the dismissal of the MSPN or confirming the dismissal of the MSPN. Following either rejection or confirmation, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Review Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with sending a dismissal.  It is then reviewed.  The review can result in two possible outcomes. If the dismissal of the MSPN is rejected, the process continues to a decision point. If the dismissal of the MSPN is confirmed, the process also continues to the same decision point. Finally, after the decision point, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Dismissal Rejected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Decision Point",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id5",
                        "name": "Yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5",
                        "name": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_1.json": {
        "0": {
            "text": "The process begins by backing up the database.  Next, the database is checked. If there are no new records, the CRM system is checked.  If there are new records in the database, the process checks if there are new returns. If there are new returns, all defaulting accounts and customers are registered.  The process then determines if the provided codes have been advised. If not, a new table of defaulting accounts is produced and sent to account management.  Following this, there is a check for filled returns. If returns are filled, a reconciliation with the existing account defaulters table occurs, followed by a time check after 16:00. If there are new returns and the codes *have* been advised, or if there are no new returns at all, or if there are new records in the database, a time check occurs to see if it's after 14:30.  Following the 14:30 time check, if the time is later than 14:30, an alert is sent to the supervisor. Then, another time check is performed to see if it is after 14:30. If the time isn't after 14:30, the check occurs again after the alert is sent. If the CRM system has been checked and no new returns found, there is a check to see if the returns are filled. If there are filled returns, reconciliation with the existing account defaulters table is performed, followed by a time check after 16:00. If returns are not filled after CRM system check, the time is checked (after 16:00). If it's after 16:00 a message is sent to the supervisor and the process ends. If not, it completes reconciliation and the process ends. If the table has been sent to the account management and codes have been advised, the same time check (after 14:30) is performed. If the time check after the database check shows that the time is later than 14:30, the same time check (after 14:30) is performed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup Database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Database for New Records",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check CRM System",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check for New Returns",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Register Defaulting Accounts and Customers",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check if Codes Have Been Advised",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Produce and Send Table of Defaulting Accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Check for Filled Returns",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Reconcile with Existing Account Defaulters Table",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Time Check (After 16:00)",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Time Check (After 14:30)",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send Alert to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send Message to Supervisor",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "New Records in Database?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "New Returns?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Codes Advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Returns Filled?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Time After 14:30?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Time After 16:00?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "New Returns After CRM Check?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Returns Filled After CRM Check?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id21",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id19",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id19",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id21",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id22",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins by backing up the database. Next, the database is checked.  If there are no new records, the CRM system is checked. If there are new records in the database, it is checked if there are any new returns. If there are new returns, all defaulting accounts and customers are registered. Then, whether codes have been advised is checked. If codes have not been advised, a new table of defaulting accounts is produced and sent to account management. After sending the table, it is checked whether it is past 2:30 pm. If it is past 2:30 pm, an alert is sent to the supervisor, after which it is checked whether returns have been filled.  If returns have been filled, the CRM system is checked again. If they haven't been filled, the accounts are reconciled with the existing account defaulters table and another check is made if the time is past 4:00 pm. If it is past 4:00 pm, a message is sent to the supervisor and the process ends. If it is not past 4:00 pm, the reconciliation is completed, and the process ends. Back to the first check of the CRM system where there were no new records in the database - if there are new returns in the CRM, the defaulting accounts and customers are registered and checked against existing codes again. If there are no new returns at all, the accounts are reconciled with the existing account defaulters table. The same check about 4:00 pm is made here too, and the same actions follow, either a message to the supervisor or complete reconciliation. If after sending an alert, the supervisor has filled the returns, then the reconciliation is done with the existing defaulter's table. If the time is not past 2:30pm, it is also checked to see if the supervisor has filled the returns. If so the CRM system is checked, otherwise it is checked if codes have been advised.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup Database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Database for New Records",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check CRM System",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check for New Returns",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Register Defaulting Accounts and Customers",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check if Codes Have Been Advised",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Produce and Send Table of Defaulting Accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Check if Time is Past 2:30 PM",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send Alert to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check if Returns Have Been Filled",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Reconcile Accounts with Existing Defaulters Table",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Check if Time is Past 4:00 PM",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send Message to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Complete Reconciliation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "New Records in Database?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "New Returns?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Codes Advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Past 2:30 PM?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Returns Filled?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Past 4:00 PM?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "New Returns in CRM?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id20",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id22",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id22",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id20",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with backing up the database. Next, the database is checked.  If there are no new records, the CRM system is checked. If there are new records, the process goes to check time. If the CRM system has new returns, the defaulting accounts and customers are registered. The registered accounts are then checked for advised codes. If no codes are advised, a new table of defaulting accounts is produced and sent to account management. The process then checks time, and after that, completes. If codes are advised, or if there were no new returns in the CRM system, the time is checked. If it is after 2:30 pm, an alert is sent to the supervisor, who checks the CRM system. The supervisor's check results in a decision point based on whether returns are filled. If so, the system reconciles with the existing account defaulters table. Regardless of the reconciliation outcome or filled returns the process checks if the time is after 4:00 pm. If it is, a message is sent to the supervisor and the process is completed. If not, the reconciliation is manually completed, and after that, the process is completed. If the time was not after 2:30 pm, the process checks time again after the CRM System is checked.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup Database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Database for New Records",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check CRM System for New Returns",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Register Defaulting Accounts and Customers",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check Registered Accounts for Advised Codes",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Produce and Send New Table of Defaulting Accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check Time",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send Alert to Supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Supervisor Checks CRM System",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Reconcile with Existing Account Defaulters Table",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Manually Complete Reconciliation",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "New Records?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "New Returns?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Codes Advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "After 2:30 pm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Returns Filled?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "After 4:00 pm?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "3_8.json": {
        "0": {
            "text": "The process begins when a customer submits a claim. The claim is then sent to the Car Insurance company's Notification department, where the documents are checked and the claim is registered. Subsequently, the Car Insurance company's Handling department picks up the claim and checks the insurance.  An assessment is then performed. Based on the assessment results, either the garage is phoned to authorize the repairs or the claim is rejected.  If the claim is approved, the payment is scheduled.  Regardless of whether the claim is approved or rejected, a letter is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer submits claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department checks insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Phone garage to authorize repairs",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Car Insurance Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer submits a claim. The customer submits a claim, which is then sent to the Car Insurance company's Notification department where the documents are checked.  After checking the documents, the claim is registered. Next, the Handling department picks up the claim and checks the insurance.  Following this, an assessment is performed. Based on the assessment results, the process follows one of two paths. If the assessment is positive, the garage is phoned to authorize the repairs, after which the payment is scheduled. If the assessment is negative, the claim is rejected. Regardless of whether the claim is approved or rejected, a letter is sent to the customer and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register the claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Handling department picks up the claim",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Perform assessment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Phone garage to authorize repairs",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Car Insurance Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Garage",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "idg1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "idg1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer submits a claim. The submitted claim is then checked by the notification department of Car Insurance.  After checking the documents, the claim is registered. Following registration, the handling department picks up the claim and checks the insurance. Next, an assessment is performed. Based on the assessment, the process follows one of two paths. If the assessment is positive, the handling department phones the garage to authorize the repairs and then schedules the payment. If the assessment is negative, the claim is rejected. Regardless of whether the payment is scheduled or the claim is rejected, a letter is sent to the customer by the handling department, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Perform Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Phone Garage to Authorize Repairs",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Schedule Payment",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Reject Claim",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Letter to Customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Car Insurance",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Garage",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "5_2.json": {
        "0": {
            "text": "The process begins when an employee submits a vacation request. The request is then registered in the system, after which the immediate supervisor receives the request.  The supervisor reviews the request and decides whether to approve it. If the request is not approved, the application is returned to the employee. If the request is approved, the system generates a notification for the HR representative, who then completes the required procedures. The process ends here.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register request",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Supervisor receives request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor reviews request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Return application to employee",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate notification for HR",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "HR completes procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Request Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when an employee submits a vacation request. The request is then registered by the system, after which the immediate supervisor receives the request. The supervisor reviews the request and decides whether to approve it. If the request is not approved, the application is returned to the employee. If the request is approved, the system generates a notification for the HR representative, who then completes the procedure. The process ends here.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register request",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Receive request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Return application",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Generate notification",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Complete procedure",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Request Approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when an employee submits a vacation request. The request is then registered in the system, after which the immediate supervisor receives the request and reviews it. Based on the review, the supervisor either approves or rejects the request. If the request is rejected, the application is returned to the employee. If the request is approved, the system generates a notification for the HR representative, who then completes the required procedures, thus concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register request",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Supervisor receives request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor reviews request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Return application to employee",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate notification for HR",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "HR completes procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Process start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_1.json": {
        "0": {
            "text": "The process begins when a customer perceives service degradation, which triggers a message to the Customer Service Department. The Customer Service Department receives the problem parameters list and enters a problem report into the system.  Next, the problem report is compared to the customer SLA, and necessary countermeasures are determined. The process then diverges based on the significance level. If the significance is \"certain\", the existing problem report is sent back for further evaluation of customer significance.  If it is \"other,\" the process determines the customer significance. If the significance is \"premium,\" an extra problem fix process is linked. Otherwise, a detailed problem report is created and sent to Service Management.  Simultaneously, the actual service performance is received by customer service and, alongside the received problem resolution report, triggers a check on whether or not it meets the conditions of the SLA. If not, a report for the customer is created and, in parallel, an SLA violation rebate is reported to billing & collections. The report for the customer is sent to the customer and the billing is adjusted, both of these processes converging to complete the interaction on the customer's end. Service Management receives the problem report and deals with violations of quality, then investigates the problem. Next, a decision is made: if it's a service management problem, the problem is analyzed and a trouble report is created.  If it's not a service management problem, the problem report is sent to Resource Provisioning. Resource Provisioning checks for potential issues, and if any are detected, the problem is analyzed and a trouble report created.  If no problems are detected, a service execution notification is created. In either case (trouble report or notification), a status report is sent to Service Management. Once Service Management receives either the status report or trouble report, they prepare the final status report and determine which actions are required. Three possible paths emerge from this point: if minor corrective actions are required, they are undertaken, and this flow rejoins the main process. If automatic resource restoration is needed, a request is created and sent to Resource Provisioning, and if no problem requires fixing, the actual service performance is sent to Customer Service. If a restoration request is sent, Resource Provisioning receives the request, tracks all possible errors, undertakes all necessary corrective actions, and creates a trouble-shooting report, which is sent to Service Management. After receiving the trouble-shooting report, Service Management sends a trouble-shooting report to customer service, which then creates the problem resolution report and sends it to customer service. The customer service receives the report and sends it to the customer, ultimately concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive problem parameters list and enter problem report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA and determine countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Customer Significance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine Customer Significance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Extra Problem Fix Process",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if meets SLA conditions",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Report SLA violation rebate to billing & collections",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send report to customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Adjust billing",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Deal with violations of quality",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Analyze problem and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Check for potential issues",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Analyze problem and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Create service execution notification",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Prepare final status report and determine actions",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Undertake minor corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Track all possible errors",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Undertake all necessary corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Create problem resolution report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id24",
                        "name": "Customer perceives service degradation",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id25",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Significance Level",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Customer Significance",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Meets SLA?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Service Management Problem?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Potential Issues?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id31",
                        "name": "Required Actions",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id26",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id26",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id27",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id27",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id28",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id28",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id11",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id13",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id29",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id29",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id15",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id30",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id30",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id18",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id31",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id31",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id31",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id23",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a customer perceives service degradation, sending a message that triggers the Customer Service Department to receive a problem parameters list.  The Customer Service Department then enters a problem report into the system and compares it to the customer SLA. Next, they determine the necessary counter-measures and decide whether to link to an extra problem fix process. If the significance level of the customer is \"certain significance\", the process loops back to determine the customer significance. If the significance level is \"other\", the process proceeds to creating a detailed problem report.  Concurrently, if the customer is deemed \"premium\", the process links to an extra problem fix process and then proceeds to create a detailed problem report.  After creating the detailed problem report, the Customer Service Department sends it to Service Management.  Service Management then deals with violations of quality and investigates the problem, subsequently checking if it's a service management problem. If yes, the Service Management analyses the problem, creates a trouble report, and sends a status report to Service Management. This report is then evaluated for problem detection. If a problem is detected, the analysis of the problem continues. If not, a service execution notification is created and the result sent to check if a problem is detected. If no service management problem exists, the Customer Service Department sends a problem report to Resource Provisioning, triggering Resource Provisioning to check for potential issues and subsequently check if a problem is detected (as described before). When a final status report is received by Service Management from either path, the final status report is prepared and Service Management decides \"which actions are required?\".  Depending on the decision, Service Management either performs \"minor corrective actions\", requests \"automatic resource restoration\", or sends the problem resolution report to the customer service. If the actions are automatic resource restoration, Resource Provisioning receives the restoration request, tracks all possible errors, undertakes all necessary corrective actions, creates a trouble-shooting report, and sends the report to Service Management. This report is then sent by Service Management to customer service (as a trouble-shooting report), who sends it to the customer to receive the problem resolution report.  If minor corrective actions are required, Service Management undertakes the corrective actions, merging back into the creation of a problem resolution report.  The report is used to create a report for the customer and, at the same time, to report an SLA violation rebate to billing & collections. Billing & collections then adjust the billing. Finally, the report for the customer is sent to the customer, and the process ends after the customer receives the report.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive problem parameters list",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter problem report into system",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Compare to customer SLA",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine necessary counter-measures",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Determine customer significance",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send detailed problem report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Deal with violations of quality",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if service management problem",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Analyse problem",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send status report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Evaluate for problem detection",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Create service execution notification",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send problem report to Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Check for potential issues",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Decide \"which actions are required?\"",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Perform \"minor corrective actions\"",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Request \"automatic resource restoration\"",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Receive restoration request",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Track all possible errors",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Undertake all necessary corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id25",
                        "name": "Create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "id26",
                        "name": "Send report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "id27",
                        "name": "Send report to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id28",
                        "name": "Send report to customer",
                        "type": "User"
                    },
                    {
                        "id": "id29",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id30",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id31",
                        "name": "Report SLA violation rebate to billing & collections",
                        "type": "User"
                    },
                    {
                        "id": "id32",
                        "name": "Adjust billing",
                        "type": "User"
                    },
                    {
                        "id": "id33",
                        "name": "Send report to customer",
                        "type": "User"
                    },
                    {
                        "id": "extra_problem_fix_process",
                        "name": "Extra Problem Fix Process",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer perceives service degradation",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id41",
                        "name": "Customer receives report",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id34",
                        "name": "Customer Significance?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id35",
                        "name": "Premium Customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id36",
                        "name": "Service Management Problem?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id37",
                        "name": "Problem Detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id38",
                        "name": "Problem Detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id39",
                        "name": "Which actions are required?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Customer Service Department",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Service Management",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "Resource Provisioning",
                        "lanes": []
                    },
                    {
                        "id": "pool5",
                        "name": "Billing & Collections",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id34",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id34",
                        "targetRef": "id35"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id35",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id35",
                        "targetRef": "extra_problem_fix_process"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "extra_problem_fix_process",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id36"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id36",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id14",
                        "targetRef": "id37"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id37",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id37",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id15",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id36",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id17",
                        "targetRef": "id38"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id38",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id38",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id19",
                        "targetRef": "id39"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id39",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id39",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id39",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "id24",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf40",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf41",
                        "sourceRef": "id26",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf42",
                        "sourceRef": "id27",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf43",
                        "sourceRef": "id28",
                        "targetRef": "id41"
                    },
                    {
                        "id": "sf44",
                        "sourceRef": "id20",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf45",
                        "sourceRef": "id29",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf46",
                        "sourceRef": "id30",
                        "targetRef": "id33"
                    },
                    {
                        "id": "sf47",
                        "sourceRef": "id33",
                        "targetRef": "id41"
                    },
                    {
                        "id": "sf48",
                        "sourceRef": "id29",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf49",
                        "sourceRef": "id31",
                        "targetRef": "id32"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer perceives service degradation, which triggers a message to the Customer Service Department. The Customer Service Department receives the problem parameters and enters a problem report into the system. This problem report is compared to the customer SLA, and the necessary countermeasures are determined. Based on the determined countermeasures, either the customer significance is determined, or the process is linked to an extra problem fix process. If customer significance is being assessed, then based on the significance level either a detailed problem report is created or other actions are required or the process is linked to an extra problem fix process. If a detailed problem report is created it is sent to Service Management who deal with violations of quality and investigate the problem. After the investigation Service Management checks if it is a service management problem. If so, the analysis is performed and a trouble report is created which is then sent to Resource Provisioning.  If not, a problem report is sent to Resource Provisioning, who check for potential issues.  If any issues are detected, they are analyzed and a trouble report is created. If not, a service execution notification is created. In both cases a status report is sent from Resource Provisioning to Service Management. Based on the final status report Service Management determine which actions are required and either send the actual service performance to customer service, create a request for automatic resource restoration and send it to resource provisioning, undertake minor corrective actions or create the problem resolution report. If Resource Provisioning receive a restoration request, they track all possible errors and undertake all necessary corrective actions, after which a trouble-shooting report is created which is sent to Service Management. Service Management send the trouble-shooting report to customer service and this triggers the creation of a problem resolution report.  When the customer service receives the problem resolution report, it triggers the resolution report to be sent to customer service from Service Management if one hasn't already been received. The customer service receives the problem resolution report and the actual service performance, and then checks for closure. If closed then in parallel a report is created for the customer, reported to billing & collections and the billing is adjusted. Once the report is created for the customer, the customer receives the report and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive problem parameters and enter problem report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA and determine countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine customer significance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check for service management problem",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Perform analysis and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check for potential issues",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Analyze issues and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create service execution notification",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Create status report",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Determine actions required",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send actual service performance",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Undertake minor corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Track errors and undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Send troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Check for closure",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Report to billing & collections",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Adjust billing",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Customer receives report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id25",
                        "name": "Customer perceives service degradation",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id26",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id27",
                        "name": "Based on countermeasures",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Based on significance level",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Service management problem?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Potential issues detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id31",
                        "name": "Actions required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id32",
                        "name": "Resolution report received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id33",
                        "name": "Closed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id34",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Customer Service Department",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Service Management",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "Resource Provisioning",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id25",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id27",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id28",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id29",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id30",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id30",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id31",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id31",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id31",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id31",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id20",
                        "targetRef": "id33"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id33",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id34",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id34",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id34",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id21",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id24",
                        "targetRef": "id26"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_3.json": {
        "0": {
            "text": "The process begins when a guest calls room service. The room service manager takes down the order and then submits an order ticket to the kitchen and gives an order to the sommelier.  After submitting the orders, the manager assigns the order to a waiter. At this point, the kitchen prepares the food, the sommelier prepares the beverages, and the waiter readies a cart. Once the food, beverages, and cart are ready, the waiter delivers the cart to the guest.  The waiter then returns to the room-service station.  If the waiter has another order, they will wait to do the billing for this order. Otherwise, if there are no other orders, the waiter debits the guest's account, thus concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Order Ticket to Kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Order to Sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign Order to Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver Cart to Guest",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Return to Room-Service Station",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit Guest's Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest Calls Room Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Another Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a guest calls room service. The room service manager takes down the order and then submits an order ticket to the kitchen and gives the order to the sommelier.  The kitchen prepares the food while the sommelier prepares the beverages. The room service manager also assigns the order to a waiter.  After the kitchen finishes preparing the food and the waiter readies a cart, the food and beverages are put on the cart which the waiter uses to deliver to the guest. The waiter returns to the room-service station. If the waiter has another order they wait to do the billing otherwise they debit the guest's account and the process ends.  If after waiting to do the billing, the waiter has no other orders then the guest's account is debited, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Order Ticket to Kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Order to Sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Assign Order to Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Put Food and Beverages on Cart",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver to Guest",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Return to Room-Service Station",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Wait to do Billing",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Debit Guest's Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest Calls Room Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Another Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Another Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id15",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a guest calls room service. The room service manager takes down the order and then submits an order ticket to the kitchen and gives an order to the sommelier.  After submitting the orders, the manager assigns the order to a waiter.  At this point, the kitchen prepares the food, the sommelier prepares the beverages, and the waiter readies a cart. Once the food, beverages, and cart are ready, the waiter delivers the cart.  After delivery, the waiter returns to the room-service station.  The waiter then waits to do the billing.  If the guest has another order, the process loops back to the room service manager taking the order.  If there are no other orders, the waiter debits the guest\u2019s account and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Order Ticket to Kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give Order to Sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign Order to Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready Cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver Cart",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Return to Room-Service Station",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit Guest Account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest Calls Room Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Another Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_2.json": {
        "0": {
            "text": "The process begins when Assembler AG places an order with the supplier.  Next, Assembler AG sends the order to the supplier. The supplier then processes the order and sends an invoice to Assembler AG.  Finally, Assembler AG receives the invoice, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with Assembler AG placing an order with the supplier.  Next, Assembler AG sends the order to the supplier. The supplier then processes the order and sends an invoice to Assembler AG. Finally, Assembler AG receives the invoice, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id9",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with Assembler AG placing an order with the supplier.  Next, Assembler AG sends the order to the supplier. The supplier then processes the order and sends an invoice to Assembler AG.  Finally, Assembler AG receives the invoice, which ends the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        }
    },
    "10_5.json": {
        "0": {
            "text": "The process begins with the MPON requesting a device takeover bid of the MPOO.  Next, the MPON places an order at the MPOO. The MPOO then sends a tender for the equipment takeover to the MPON.  The MPON confirms the order of the MPON. Finally, the MPOO sends the master data, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON places order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPON confirms order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id3",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with MPON requesting a device takeover bid of the MPOO. Next, MPON places an order at the MPOO.  Then, MPOO sends a tender for the equipment takeover to the MPON. Subsequently, MPOO confirms the order of the MPON. Finally, MPOO sends the master data, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "MPON",
                        "lanes": []
                    },
                    {
                        "id": "id8",
                        "name": "MPOO",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with MPON requesting a device takeover bid of the MPOO. Next, MPON places an order at the MPOO.  Then, MPOO sends a tender for the equipment takeover to the MPON. Subsequently, MPOO confirms the order of the MPON. Finally, MPOO sends the master data, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        }
    },
    "6_4.json": {
        "0": {
            "text": "The process begins with determining the contact details of potential customers.  This is followed by a decision on whether to buy details for cold calls or participate in exhibitions, or to know a person interested in the product. If details are bought, it leads to a decision point. If participating in exhibitions, this also leads to the same decision point. Knowing an interested person also leads to this same decision point. This decision point involves calling the call center staff, who then call the customer. The call center staff determines the contact person, then determines the budget, and assesses customer interest.  Based on customer interest, a decision is made. If there is interest, it leads to another decision point regarding the budget. If there is no interest, the Head of Development acquires the customer. If the budget is not low, the Head of Development acquires the customer. If the budget is low, the process ends. If a customer is acquired, another decision is made whether or not a technical presentation is required.  If yes, there is a choice between making an online presentation by a sales representative or a pre-sales employee. After either presentation, the sales staff waits for the customer. If no technical presentation is required, the sales staff waits for the customer directly.  Following this waiting period, there's a decision point related to customer contact. If there is customer contact, the sales staff creates a quotation and a subsequent decision leads to the end of the process or back to calling the customer.  If there is no customer contact after the waiting period, the sales staff call the customer, and this is followed by creating a quotation and a subsequent decision that either ends the process or loops back to calling the customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine contact details of potential customers",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Buy details for cold calls",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Participate in exhibitions",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Know a person interested in the product",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Call customer (Call Center Staff)",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Determine contact person",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Determine budget",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Assess customer interest",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Head of Development acquires customer",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Make online presentation (Sales Representative)",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Make online presentation (Pre-sales employee)",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Sales staff waits for customer",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Sales staff creates quotation",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Sales staff calls customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Choose method of contact",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Customer contact method",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Customer Interest?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Budget low?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Technical presentation required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Customer contact?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Deal closed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id19",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id21",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id21",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id23",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id20",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id24",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id24",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with determining contact details of potential customers.  This is followed by a decision on whether to buy details for cold calls or participate in exhibitions or to know a person interested in the product. If details are to be bought, that is done and the process converges with those who participated in exhibitions and those who know interested persons. The call center staff then calls the customer, determines the contact person, determines the budget, and assesses customer interest.  If the customer shows no interest, the process ends. If interest is shown but the customer has a low budget the process also ends. If the customer shows interest and does not have a low budget, the customer is acquired.  After customer acquisition, there is a decision on a technical  presentation. If there is no presentation,  an online presentation is made by the sales representative and the process ends. If there is a presentation, it can be either an online presentation made by a pre-sales employee or it might be necessary to wait for the customer.  If the customer needs to be waited for, after waiting, a decision is made whether the customer can be contacted.  If no, the sales representative calls the customer and create a quote, after which the process ends. If yes, a quotation is created and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine contact details of potential customers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy details for cold calls",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Participate in exhibitions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Know a person interested in the product",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call center staff calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Determine contact person",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Determine budget",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Assess customer interest",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Acquire customer",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Make online presentation",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Make online presentation",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Wait for customer",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Sales representative calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Create quote",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Create quote",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Method of finding leads",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Technical presentation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Can contact customer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id18",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with determining contact details of potential customers.  This is followed by a decision on whether to buy details for cold calls or participate in exhibitions or know a person interested in the product. If details are bought, this information is used to make cold calls. If participating in exhibitions or knowing an interested person, then a call center staff member calls the customer and determines the contact person. Subsequently, the call center staff determines the customer's budget and assesses their interest. Based on the interest assessment, there is a decision gateway: if interested, a decision based on the customer's budget follows. If there is a low budget the process ends, otherwise it proceeds with acquiring the customer and then making a decision whether a technical presentation needed. If a technical presentation is not needed, a make online presentation, otherwise, a decision whether pre-sales or sales presentation needs to be done follows. In both cases online presentations are done and then wait for customer.  If the customer waits, the question arises: customer contact? If yes, then create a quotation. From there, independent of whether a quotation is created or not, a decision is made whether the process should end. After quotation a new decision must be made. If not interested, there are two options, depending on customer budget: end the process, or proceed with acquiring the customer. Acquiring the customer leads to a decision regarding technical presentation. If waiting for customer and no customer contact, there are two options: call the customer or the process ends. If the customer is called, there is another gateway with the question: customer contact?  If yes, create a quotation. If no contact, call the customer or the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine contact details of potential customers",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Buy details for cold calls",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Make cold calls",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Participate in exhibitions or know a person interested in the product",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Call center staff calls customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Determine contact person",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Determine customer's budget",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Assess customer interest",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Acquire customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Make technical presentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Make online presentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Create quotation",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Make pre-sales presentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Make sales presentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id16",
                        "name": "Call customer",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Decision: Buy details or exhibition/referral",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Decision: Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Decision: Budget?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Decision: Technical presentation needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Decision: Pre-sales or sales presentation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Decision: Customer contact?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Decision: End process?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Decision: Customer contact? (2)",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id18",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id18",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id20",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id21",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id22",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id22",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id21",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id12",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id13",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id23",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id16",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id25",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id25",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id24",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_3.json": {
        "0": {
            "text": "The process begins with getting a new order from the sales department.  Next, the necessary parts, quantities, and delivery date are determined. This information is then entered into the Production Planning System (PPS).  The data from PPS is transferred to the Enterprise Resource Planning system.  Then, it is checked if there are any missing parts. If there are missing parts, they are procured.  After procuring the missing parts or if there are no missing parts, a notice is received from the system.  Subsequently, an employee takes care of the implementation. Finally, the order is checked for quality, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter data into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Take care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check order for quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Get new order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Check for missing parts",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Missing parts procured or no missing parts",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with getting a new order from the sales department.  Next, the necessary parts, quantities, and delivery date are determined. This information is then entered into the PPS.  The data from PPS is transferred to the Enterprise Resource Planning system.  The system then checks if there are any missing parts. If there are missing parts, they are procured.  Whether parts were missing or not, the next step is to receive a notice from the system.  This notice triggers taking care of the implementation.  After the implementation is taken care of, the order is checked for its quality. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Transfer data from PPS to ERP",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check for missing parts",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Take care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Get new order from sales department",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Missing parts?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with getting a new order from the sales department.  Next, the necessary parts, quantities, and delivery date are determined. This information is then entered into the PPS.  The data from PPS is transferred to the Enterprise Resource Planning system.  Then a check is performed to see if any parts are missing.  If parts are missing, they are procured.  After procuring the missing parts, or if no parts were missing, the PPS creates a list of the procured parts which is then used to transfer data from PPS to the enterprise resource planning system. From there, a notice is received from the system.  This notice prompts an employee to take care of implementation.  Finally, the order is checked for quality, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Transfer data from PPS to ERP",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check for missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "PPS creates list of procured parts",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Transfer data from PPS to ERP",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Take care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check order for quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Get new order from sales department",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Are parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_2.json": {
        "0": {
            "text": "The process begins with checking the files.  Then, a decision is made whether there are any missing files. If there are no missing files, the process continues with physically tracking the files. Otherwise, the process involves initiating a search for the missing files.  Both paths converge, and the process proceeds with two parallel actions: handing the files to the Associate and distributing Judgeis Lawlist to the relevant people.  Once both of these tasks are complete, the process concludes with conducting the directions hearings.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Physically Track Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate Search for Missing Files",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hand Files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Distribute Judgeis Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct Directions Hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Missing Files?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with checking the files.  Then, a decision is made whether there are any missing files. If there are no missing files, the process continues to physically track the files. If there are missing files, the process involves initiating a search for the missing files.  After either physically tracking the files or searching for missing files, the process converges and continues. At this point the process splits into two parallel paths. In the first path the files are handed to the Associate. In the second path, Judgeis Lawlist is distributed to the relevant people.  Once the files are handed to the Associate and the Lawlist is distributed, both paths converge again. Finally, directions hearings are conducted, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Physically Track Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Search for Missing Files",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hand Files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct Directions Hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Missing Files?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with checking the files.  Then, a decision is made regarding whether files are missing. If files are not missing, the process proceeds to physically track the files. If files are missing, the process involves initiating a search for the missing files.  Both the \"physically track the files\" and \"initiate the search of missing files\" paths converge, and the process continues with two parallel paths: handing files to the Associate and distributing Judgeis Lawlist to the relevant people.  After both of these tasks are completed, the process concludes with conducting the directions hearings.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Physically Track Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate Search of Missing Files",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hand Files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Distribute Judgeis Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct Directions Hearing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Files Missing?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_6.json": {
        "0": {
            "text": "The process begins with receiving a claim. Next, the claimant's insurance status is checked.  Based on the insurance status, the process branches: if the claimant has insurance, the claim severity is evaluated. Otherwise, the claimant is informed about claim rejection and the process ends. If the claim severity is evaluated, the claimant is sent relevant forms. The claimant then returns the forms, and the forms are checked for completeness.  If the forms are complete, the claim is registered in the Claims Management system. If the forms are incomplete, the claimant is informed to update the forms, and the claimant is again sent the relevant forms. After the forms are resubmitted and checked again, if found complete this time, the claim is then registered in the Claims Management system. Finally, regardless of whether the forms were initially complete or required updating, the process ends after the claim is registered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Insurance Status",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Return Forms",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Forms Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Register Claim in Claims Management System",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Resubmit Forms",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check Resubmitted Forms",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Inform Claimant about Claim Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Insurance Status Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Forms Completeness Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Resubmitted Forms Completeness Check",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with receiving a claim.  Next, the claimant's insurance status is checked. Based on the insurance status, the process proceeds. If the insurance status is not valid, the claimant is informed about claim rejection, after which the process ends. If the insurance status is valid, the claim severity is evaluated. Then, relevant forms are sent to the claimant. The claimant returns the forms, and the forms are checked for completeness. If the forms are incomplete, the claimant is informed to update the forms and the claimant resubmits them. This loop continues until the forms are complete. Once the forms are complete, the claim is registered in the Claims Management system. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Insurance Status",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Inform Claim Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Claimant Returns Forms",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Forms Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Claimant Resubmits Forms",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Register Claim in Claims Management System",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Insurance Status Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Forms Completeness Check",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with receiving a claim. Next, the claimant's insurance status is checked.  If the claimant is insured, the claim severity is evaluated. Based on the evaluation, relevant forms are sent to the claimant. The claimant then returns the forms, which are subsequently checked for completeness. If the forms are incomplete, the claimant is informed to update them and resubmit. This loop continues until the forms are complete. Once complete, the claim is registered in the Claims Management system. Regardless of whether the claimant is insured or not, or if the forms were initially incomplete, the process ultimately ends. If the claimant is not insured, the claimant is informed about the claim rejection.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Insurance Status",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Claimant Returns Forms",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Forms for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Register Claim in Claims Management System",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform Claimant about Claim Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Insurance Status Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Forms Completeness Check",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "10_12.json": {
        "0": {
            "text": "The process begins with EC telling INQ about the data change.  Next, INQ notifies the IP of the change. The IP then checks whether the data can be changed.  If the data can be changed, the IP confirms the changes. If the data cannot be changed, the IP rejects the changes.  Following either confirming or rejecting the changes, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells INQ about the data change",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks whether data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms the changes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects the changes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with EC telling INQ about the data change.  INQ then notifies the IP of the change.  The IP then checks whether the data can be changed.  If the data can be changed, the IP confirms the changes. If the data cannot be changed, the IP rejects the changes.  After either confirming or rejecting the changes, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "EC tells INQ about the data change",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "INQ notifies the IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "IP confirms the changes",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "IP rejects the changes",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP checks whether the data can be changed",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with telling INQ about the data change. Then, INQ notifies the IP of the change.  The IP then checks whether the data can be changed. If the data can be changed, the IP confirms the changes. Otherwise, the IP rejects the changes.  Following either confirming or rejecting the changes, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Tell INQ about data change",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies IP",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks if data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects changes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Can data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_8.json": {
        "0": {
            "text": "The process begins with the MSPO deregistering at the GO.  The GO then verifies the deregistration.  The GO can then either reject the deregistration or confirm it.  If the deregistration is rejected, the process continues and it is evaluated again with GO verifying if the deregistration should be confirmed or rejected.  If the deregistration is confirmed, the GO assigns himself as MSP.  The GO then informs the MSPO about the state of the assignment. Next, the GO informs the MPO about the assignment, and finally informs the SP about the assignment. The process ends with the assignment completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters at GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO assigns self as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs MSPO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs MPO",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Assignment Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Deregistration outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Confirmation outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a deregistration at the GO.  Next, the deregistration is verified.  The process then branches based on the verification outcome. If the deregistration is rejected, the rejection is communicated. Then, based on whether the deregistration was rejected or confirmed, the next step is to assign user as MSP. Subsequently, the MSPO is informed about the state of the assignment.  After informing the MSPO, the MPO is informed about the assignment. Finally, the SP is informed about the assignment, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Deregistration at GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign User as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform MSPO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform MPO",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Verification Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a deregistration at the GO.  Then, the deregistration is verified.  The process then branches: the deregistration is either rejected or confirmed. If rejected, the decision branches again, this time on confirming the deregistration or rejecting it, converging afterwards.  If confirmed, it proceeds in the same way, converging on the rejection or confirmation point. Subsequently, the actor assigns himself as MSP.  Following this, the MSPO is informed about the state of the assignment. Then, the MPO is informed about the assignment. Finally, the SP is informed about the assignment, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Deregistration at GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform MSPO of Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform MPO of Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Inform SP of Assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Deregistration Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Confirmation Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Rejection/Confirmation Convergence",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Rejection/Confirmation Convergence",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_7.json": {
        "0": {
            "text": "The process begins with the registration of the measurement at the GO.  Next, the application of the MSPN is examined.  This examination leads to a decision: the application is either rejected or confirmed.  If the application is rejected, the process continues and eventually ends after assigning the MSPN, informing the MSPO about the assignment, informing the MPO about the assignment and informing the SP about the assignment. If the application is confirmed, the process continues, with the assigning the MSPN, informing the MSPO about the assignment, informing the MPO about the assignment and informing the SP about the assignment as well. After this step, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register measurement at GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine application of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform MSPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform SP about assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application Rejected or Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with registering the measurement at the GO.  Next, the application of the MSPN is examined.  Based on the examination outcome, the application is either rejected or confirmed. If rejected, the process continues, and if confirmed, it also proceeds to the next step.  The following action is to assign the MSPN.  After the assignment, the MSPO is informed about the assignment.  Subsequently, the MPO is informed about the assignment. Finally, the SP is informed about the assignment, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register measurement at GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine application of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform MSPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform SP about assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the registration of the measurement at the GO. Subsequently, the application of the MSPN is examined.  Based on the examination outcome, the application is either rejected or confirmed. If the application is rejected, the process continues, and if the application is confirmed, it proceeds further. In either case (rejection or confirmation), the MSPN is then assigned. After the assignment, the MSPO is informed about the assignment. Following this, the MPO is informed about the assignment. Finally, the SP is informed about the assignment, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Measurement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine MSPN Application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform MSPO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform MPO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_14.json": {
        "0": {
            "text": "The process begins with the Meter Point Operator Organization (MPOO) deciding whether to send a bill for the equipment acquisition to the Grid Operator (GO) or to the Meter Point Operator Network (MPON). If the bill is sent to the MPON, it is examined by the MPON, who then decides whether to confirm the invoice with payment advice or reject the invoice.  If the invoice is confirmed, the MPON sends confirmation to the MPOO who mark the process as complete. If the invoice is rejected, the MPON sends rejection notification to the MPOO, who also mark the process as complete. If the MPOO initially decides to send the bill to the GO, then the MPOO can choose to send any of the following bills: metering point operations bill, measurement bill, bill for additional readings, or bill for the equipment acquisition. Regardless of which bill is sent, it is then examined by the GO.  After examination, the GO decides whether to confirm the invoice with payment advice or reject the invoice.  If the invoice is confirmed, the GO notifies the MPOO, and the process is complete. If the invoice is rejected, the GO sends notification to the MPOO who then mark the process as complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Examine Invoice",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Mark Process Complete",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Examine Bill",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Mark Process Complete",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "Confirm or Reject Invoice?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Bill to GO or MPON?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "name": "Confirm or Reject Invoice?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Meter Point Operator Organization (MPOO)",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Meter Point Operator Network (MPON)",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator (GO)",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "5",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "10",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "5",
                        "targetRef": "1"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "mf6",
                        "sourceRef": "8",
                        "targetRef": "10"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the Meter Point Operator Organization (MPOO) making a decision on how to proceed. The MPOO can choose to send the metering point operations bill to the Grid Operator (GO), send the bill for the equipment acquisition to the Meter Point Operator Network (MPON), send the bill for the equipment acquisition to the GO, send the measurement bill to the GO, or send the bill for additional readings to the GO. Following any of these actions, the decision converges to a single point where the GO examines the bill. Subsequently, the GO decides whether to confirm the invoice with payment advice or reject the invoice. If the invoice is confirmed, the process proceeds to the concluding gateway. If the invoice is rejected, the process again goes to a gateway where the MPOO makes a decision on whether to send it to the MPON. If the bill goes to the MPON, it's examined. After examination, the MPON decides to either confirm the invoice with payment advice or reject it. Both confirming and rejecting lead to a point where the process proceeds based on an unspecified criteria. If the MPOO sent the bill for the equipment acquisition to the MPON, the process concludes. If the MPOO sends any other type of bill to the GO initially, the process also concludes once the GO's final decision is made.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Examine Bill",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Examine Bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "name": "Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "3",
                        "name": "Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "name": "Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "Converging Gateway",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "name": "Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Meter Point Operator Organization (MPOO)",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Grid Operator (GO)",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Meter Point Operator Network (MPON)",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the Meter Point Operator Organization (MPOO) making a decision on where to send the bill. The MPOO can send the metering point operations bill to the Grid Operator (GO).  After which, another decision is made.  Either the MPOO sends the bill for additional readings to the GO, the measurement bill to the GO, or the bill for equipment acquisition to the GO. Following any of these actions, the GO examines the bill and makes a decision to either confirm the invoice with payment advice or reject the invoice. After either action, the process ends. Alternatively, at the beginning the MPOO may decide to send the bill for equipment acquisition to the Meter Point Operator Network (MPON). Then the MPON examines the bill and makes a decision to either confirm the invoice with payment advice or reject the invoice. Regardless of this decision the MPON makes a final decision after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO examines bill",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPON examines bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Bill Destination Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Bill Type Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "GO Invoice Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "MPON Invoice Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "MPON Final Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "id11",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id12",
                        "name": "MPON",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    }
                ]
            }
        }
    },
    "8_3.json": {
        "0": {
            "text": "The process begins with detecting a number of personnel requirements.  The next step is to report the vacancy to the Personnel Department. Subsequently, the process splits based on whether the job description needs review or not. If a review is needed, the job description is retrieved from the Personnel Department for review and then checked for approval. If approved, the vacancy is advertised. If not approved, corrections are requested, and the process loops back to reporting the vacancy to the Personnel Department. This cycle continues until the job description is approved. If no review is needed after reporting the vacancy, the job description is then checked for approval.  After the vacancy is advertised, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Detect personnel requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Retrieve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request corrections",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Advertise vacancy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Job description review needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process starts with detecting a number of personnel requirements.  Then, the vacancy is reported to the Personnel Department.  Next, the job description is retrieved from the Personnel Department for review.  The job description is then either approved or not. If approved, the vacancy is advertised, after which the process ends.  If the job description is not approved, corrections are requested, and the process loops back to reporting the vacancy to the Personnel Department.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Detect personnel requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve job description",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Advertise vacancy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request corrections",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with detecting a number of personnel requirements. Subsequently, the vacancy is reported to the Personnel Department. This is followed by an exclusive choice: either get the job description for review from the Personnel Department and check if is approved.  If the job description is approved, it proceeds to advertise the vacancy. If it's not approved, a request for corrections is made, after which the process loops back to reporting the vacancy to the Personnel Department.  After advertising the vacancy, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Get job description for review",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check job description approval",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Advertise vacancy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request corrections",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_4.json": {
        "0": {
            "text": "The process begins with the decision to go public.  The organization then selects the underwriters and, at the same time, sends them a message to prepare a registration statement for SEC approval.  The underwriters then proceed to check the issue's compliance.  Once the compliance check is complete, two parallel paths are followed: awaiting approval of the registration statement, and beginning to firm up the issue price.  While awaiting the registration statement's approval, a road show is arranged. Once both the registration statement is approved and the road show is complete, the process continues with receiving clearance from the SEC.  After the SEC clearance is received, the issue price is fixed, and the underwriters enter into a firm commitment to buy the stock. Finally, the stock is offered to the public, marking the end of the underwriters' part of the process.  The organization's process ends when the underwriters have selected and the offering is prepared or if the decision to go public is rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Issue's Compliance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Arrange Road Show",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Firm Up Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Clearance from SEC",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Fix Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter Firm Commitment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer Stock to Public",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare Offering",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Decision to Go Public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Underwriters Selected and Offering Prepared",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Decision Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Go Public?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Registration Statement Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id15",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the decision to go public.  The organization then selects the underwriters, which triggers the underwriters to prepare a registration statement for SEC approval.  After the registration statement is prepared, the underwriters check the issue's compliance.  Concurrently, the organization and underwriters begin to firm up the issue price and await the approval of the registration statement.  Once the issue\u2019s compliance is checked, these concurrent paths converge, and the underwriters arrange a road show.  At the same time, as the registration statement is being awaited, the underwriters also carry out the road show. Once both the road show is arranged and the registration statement is awaited, the SEC grants clearance.  Upon receiving clearance from the SEC, the underwriters fix the issue price and enter into a firm commitment to buy the stock.  Finally, the stock is offered to the public, concluding the underwriters' part of the process.  Separately, once the underwriters have been selected, the organization may choose to abandon the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Issue's Compliance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Firm Up Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange Road Show",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Fix Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter Firm Commitment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer Stock to Public",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Await Approval of Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Carry Out Road Show",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Decision to Go Public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Underwriters' Process Complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process Abandoned",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Compliance Checked & Price Firmed?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Road Show Done & SEC Cleared?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with deciding to go public.  Next, the organization selects the underwriters and sends them a message to prepare a registration statement for the approval of SEC.  Concurrently, the underwriters check the issue's compliance and await approval of the registration statement. Once both tasks are completed they proceed to begin to firm up the issue price and arrange a road show. After the road show, they await clearance from the SEC. When SEC clearance is received, the issue price is fixed.  Simultaneously, after the issue's compliance has been checked and the registration statement has been approved, the underwriters can begin to firm up the issue price and await approval for the registration statement. Once these are completed, and the road show is finished and the clearance from the SEC has been received, the underwriters then enter into a firm commitment to buy the stock and offer the stock to the public, thus concluding the process.  Separately, if the organization chooses not to select underwriters, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Registration Statement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Issue's Compliance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Begin to Firm Up Issue Price and Arrange Road Show",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Await Clearance from SEC",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Fix Issue Price",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter into Firm Commitment and Offer Stock to Public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Decide to Go Public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Do Not Select Underwriters",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Registration Statement Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "SEC Clearance Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id0",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_1.json": {
        "0": {
            "text": "The process begins when a party sends a warrant possession request.  This request is received by the Client Service Back Office of the Small Claims Registry Operations. The Client Service Back Office then retrieves the SCT file and forwards the SCT Warrant Possession to Queensland Police.  Next, the SCT physical file is stored and the process awaits a Police report. Once the report is received, the respective SCT file is retrieved and a new SCT document is attached. This expanded SCT physical file is then stored and received by MC internal staff, after which the process ends.  Simultaneously, after sending the initial request the process ends for the party.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Store SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Store expanded SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Police report",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a party sends a warrant possession request.  This request is received by the Client Service Back Office of the Small Claims Registry Operations. The Back Office then retrieves the SCT file and forwards the SCT Warrant Possession to Queensland Police. Subsequently, the SCT physical file is stored and the process awaits a Police report.  Once the report is received, the respective SCT file is retrieved and the new SCT document is attached. The expanded SCT physical file is then stored and sent to MC internal staff, who receive the physical SCT file. After this, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Store SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Await Police report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive Police report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Store expanded SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send to MC internal staff",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive physical SCT file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a party sends a warrant possession request. This request is received by the Client Service Back Office of the Small Claims Registry Operations. The Client Service Back Office then retrieves the SCT file and forwards the SCT Warrant Possession to Queensland Police. Subsequently, the SCT physical file is stored, and the process awaits a Police report.  Upon receiving the report, the respective SCT file is retrieved, and the new SCT document is attached. The expanded SCT physical file is then stored and sent to MC internal staff where it is received and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward SCT Warrant Possession",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Store SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Store expanded SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send to MC internal staff",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Receive by MC internal staff",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Police report received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_1.json": {
        "0": {
            "text": "The process begins with sending the dismissal.  It is then reviewed.  At this point, a decision must be made whether to oppose the dismissal, or to confirm it. If the dismissal is opposed, a further decision is required. If the dismissal is confirmed, a further decision is also required.  Once the final decision has been made, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Oppose or Confirm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Decision?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Decision?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with sending the dismissal.  It is then reviewed.  At this point, a decision must be made: either oppose the dismissal or confirm it. If the dismissal is opposed, a further decision is required.  If the dismissal is confirmed, a further decision is also required. After either of these decisions, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Oppose or Confirm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Decision if Opposed",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Decision if Confirmed",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with sending the dismissal.  It is then reviewed.  The review can result in either opposing the dismissal or confirming it.  If opposed, the process continues to an exclusive decision point.  If the dismissal is confirmed, the process also proceeds to this same decision point, potentially from a different path. After this decision point, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Review Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Decision Point",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_2.json": {
        "0": {
            "text": "The process begins when a customer brings a defective computer.  The CRS then checks the defect and hands out a repair cost calculation. The customer then decides if the costs are acceptable. If the costs are not acceptable, the customer takes the computer home, ending the process. If the costs are acceptable, the CRS checks the hardware and, in parallel, checks the software. Once the hardware check is complete, the CRS repairs the hardware.  When the software check is complete, the CRS configures the software. After both hardware repair and software configuration are finished, the CRS tests the system functionality.  The CRS then determines if there are any errors.  If errors are found, the CRS checks the hardware and software again. If no errors are found, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Check Defect",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Calculate Repair Costs",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Check Hardware",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Check Software",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Repair Hardware",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Configure Software",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Test System Functionality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Customer Brings Defective Computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "3",
                        "name": "Costs Acceptable?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "9",
                        "name": "Errors Found?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "10",
                        "name": "Computer Repaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "Costs Not Acceptable",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Cost Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Parallel Check",
                        "type": "Parallel"
                    },
                    {
                        "id": "g3",
                        "name": "Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "g4",
                        "name": "Error Check",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "8",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g4",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "9",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g1",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g4",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer brings a defective computer.  The CRS then checks the defect and hands out a repair cost calculation. The customer then decides if the costs are acceptable. If the costs are not acceptable, the customer takes the computer home and the process ends. If the costs are acceptable, the CRS checks the hardware and the software in parallel.  After checking the hardware, the CRS repairs the hardware. After checking the software, the CRS configures the software. Once both the hardware repair and software configuration are complete, the CRS tests the system functionality.  The CRS then checks for errors. If errors are found, the CRS checks the hardware and software again in parallel, and the process loops back to system testing. If no errors are found, the customer takes the computer home, and the process ends. \n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "CRS hands out repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "CRS checks hardware",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "CRS checks software",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "CRS repairs hardware",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "CRS configures software",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "CRS tests system functionality",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "CRS checks for errors",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "Customer brings defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "3",
                        "name": "Customer decides if costs are acceptable",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "10",
                        "name": "Customer takes computer home",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "Customer takes computer home",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Are costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "g3",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "g4",
                        "name": "Are errors found?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g1",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "g2",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "9",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g4",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g4",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer brings a defective computer.  A CRS checks the defect and hands out a repair cost calculation. The customer then decides whether the costs are acceptable. If not, the customer takes the computer home and the process ends. If the costs are acceptable, the CRS checks the hardware and, in parallel, checks the software. Once the hardware check is complete, the CRS repairs the hardware.  When the software check is complete, the CRS configures the software. After both hardware repair and software configuration are finished, the CRS tests the system functionality.  The CRS then determines if there are any errors. If errors are found, the CRS repeats the hardware and software checks, repairs, and configuration, followed by another system functionality test. This loop continues until no errors are found. If no errors are found, the customer takes the computer home and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Calculate repair costs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check hardware",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check software",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Configure software",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Test system functionality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer brings defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Costs unacceptable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer takes computer home",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "idg3",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "idg4",
                        "name": "Errors found?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "idg3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "idg4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "idg4",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "idg4",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_10.json": {
        "0": {
            "text": "The process begins with a decision: either report a failure to the MPO or suspect a fault. If a failure is reported to the MPO, a further decision is made. If a fault is suspected, the failure is examined. After examining the failure, yet another decision is made.  If the failure of the fault detector is confirmed, the GO is informed. Subsequently, the MSP is informed and then tasked to fix the fault at the measuring device.  Once the fault is fixed, the results of the repairs are shared.  Then, the GO is informed about the resolution of the interference, followed by the MSP being informed about the resolution of the interference. Finally, a last decision is made and the process ends. If the failure of the fault detector is rejected in the third decision, the process also moves to the final decision and ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id3",
                        "name": "Examine Failure",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform MSP",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Task MSP to fix fault",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Share Results of Repairs",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform GO of Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Inform MSP of Resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id1",
                        "name": "Report Failure or Suspect Fault?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id2",
                        "name": "Further Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm or Reject Fault Detector Failure?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Last Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a choice: either report a failure to the MPO or suspect a fault. If a failure is reported to the MPO, the MPO then has another choice: examine the failure or suspect a fault.  Both paths converge to examining the failure. After examining the failure, there is a decision to be made: reject the failure of the fault detector, or confirm the failure of the fault detector.  If the failure is rejected, the process ends. If the failure is confirmed, the GO is informed. In parallel to this, if the initial choice was to suspect a fault, this also leads to examining the failure.  After informing the GO, the MSP is informed, which leads to fixing the fault at the measuring device.  Once the fault is fixed, the results of the repairs are shared. This is followed by informing the GO about the resolution of the interference. Finally, the MSP is informed about the resolution of the interference, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id3",
                        "name": "Examine Failure",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform GO",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Inform MSP",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Fix Fault at Measuring Device",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Share Results of Repairs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Inform GO about Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Inform MSP about Resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Initial Choice",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "MPO Choice",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Failure Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id17",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a decision: either report a failure to the MPO or suspect a fault. If a failure is reported to the MPO, the next step is to decide whether to suspect a fault or examine the failure.  If a fault is suspected, then the failure is examined.  After examining the failure, there is another decision: either reject the failure of the fault detector or confirm the failure of the fault detector.  If the failure of the fault detector is rejected, the process ends.  If the failure of the fault detector is confirmed, the GO is informed. Subsequently, the MSP is informed, and the fault at the measuring device is fixed. After fixing the fault, the results of the repairs are shared, and the GO is informed about the resolution of the interference.  Finally, the MSP is informed about the resolution of the interference, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id3",
                        "name": "Examine Failure",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform GO",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform MSP",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Fix Fault at Measuring Device",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Share Results of Repairs",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform GO of Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Inform MSP of Resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id1",
                        "name": "Report Failure or Suspect Fault?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id2",
                        "name": "Suspect Fault or Examine Failure?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id4",
                        "name": "Reject or Confirm Failure of Fault Detector?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_1.json": {
        "0": {
            "text": "The process begins with the receipt of invoices.  After a visual inspection of the invoice, it is forwarded to an accounting employee. The accounting employee identifies the charging suppliers and creates a new invoice in the system. The invoice items are checked, and the cost center and its managers are noted on a docket. The docket and a copy of the invoice are then sent via internal mail to the cost center manager. The cost center manager reviews the invoice content for accuracy and, if everything is correct, notes their code on the docket. If not correct, the invoice copy is returned and the process goes back to where the cost center and cost center managers were originally noted on the docket (before being sent to the cost center manager). Once the cost center manager has approved the invoice, the invoice copy is passed to the next cost center manager for review if necessary, and steps are repeated until the last cost center manager receives and reviews the invoice. This may include several cycles of review, approval or sending back to the original accounting employee to proceed with clarifications with the vendor should questions arise during the review of the invoice copy by the cost center managers. Once all cost center managers have reviewed and noted their approval, the invoice copy is returned to the accounting employee. At this stage, the accounting employee forwards the invoice copy to the commercial manager, who then performs a commercial audit. If there are any complaints during the audit, they are resolved. If no complaints arise (or once they've been resolved), the commercial manager issues approval for payment. Following this approval, the invoice amount is checked. If the amount is greater than 20, the invoice is checked by the board. Regardless of the amount, or after the board has checked it (if necessary) , the invoice together with the docket are returned to the accounting employee who gives payment instructions, closes the invoice, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Visual inspection of the invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Identify charging suppliers and create new invoice in the system",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check invoice items, note cost center and managers on docket",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review invoice content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Pass invoice copy to next cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Clarify with vendor",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Forward invoice copy to commercial manager",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Perform commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Resolve complaints",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Issue approval for payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Check invoice amount",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Check invoice by board",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Give payment instructions and close invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receipt of invoices",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Invoice correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Last cost center manager?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Amount > 20?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id17",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id17",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of invoices.  Next, a visual inspection of the invoice is performed, after which the invoice is forwarded to an accounting employee. The accounting employee identifies the charging suppliers and creates a new invoice. Subsequently, the invoice items are checked, and the cost center and cost center managers are noted on the docket. The docket and a copy of the invoice are then sent via internal mail.  The cost center manager reviews the content for accuracy. If the content is accurate, the cost center manager notes their code on the docket. If not, the invoice copy is returned, and the process of sending the docket and invoice copy to the cost center manager is repeated until the content is deemed accurate. Once accurate, the invoice copy is returned and checked against the original. If all items are correct, there's a check if additional questions exist for the cost center managers. If so, the accounting employee consults the cost center managers and based on their input may send the invoice copy back for further review and approval or forward it to the next cost center manager, looping back to the content review step. If there are no further questions, or after all cost center managers have reviewed and approved, the invoice copy is sent to the commercial manager. The commercial manager performs a commercial audit. If there is a complaint during the audit, it is resolved, after which payment instructions are given. If no complaint arises, payment instructions are given directly. Finally, the invoice is closed, concluding the process.  If the amount on the approved invoice is greater than 20, it is checked by the board, after which the accounting employee makes the decision and based on it might return it to the commercial manager for review.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Visual inspection of the invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "task2",
                        "name": "Identify charging suppliers and create new invoice",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Check invoice items, note cost center and managers",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Send docket and invoice copy via internal mail",
                        "type": "Manual"
                    },
                    {
                        "id": "task5",
                        "name": "Review content for accuracy",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Return invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Check invoice copy against original",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Perform commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Resolve complaint",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Give payment instructions",
                        "type": "User"
                    },
                    {
                        "id": "task13",
                        "name": "Close invoice",
                        "type": "User"
                    },
                    {
                        "id": "task14",
                        "name": "Check invoice (amount > 20)",
                        "type": "User"
                    },
                    {
                        "id": "task15",
                        "name": "Make decision",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Receipt of invoices",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Invoice closed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Content accurate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "All items correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Additional questions?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway5",
                        "name": "Amount > 20?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "task5",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gateway1",
                        "targetRef": "task6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gateway1",
                        "targetRef": "task7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "task7",
                        "targetRef": "task4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "task6",
                        "targetRef": "task8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "task8",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gateway2",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gateway3",
                        "targetRef": "task9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "task9",
                        "targetRef": "task4"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gateway3",
                        "targetRef": "gateway5"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "gateway5",
                        "targetRef": "task10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "task10",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "gateway4",
                        "targetRef": "task11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "task11",
                        "targetRef": "task12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "gateway4",
                        "targetRef": "task12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "task12",
                        "targetRef": "task13"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "task13",
                        "targetRef": "event2"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "gateway5",
                        "targetRef": "task14"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "task14",
                        "targetRef": "task15"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "task15",
                        "targetRef": "task10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with the reception of invoices. Subsequently, a visual inspection of the invoices is performed.  The invoice is then forwarded to an accounting employee who identifies the charging suppliers and creates a new invoice. The items on the new invoice are checked, and the cost center and its managers are noted on a docket. The docket and a copy of the invoice are then sent via internal mail to the cost center manager. The cost center manager reviews the invoice for accuracy and, if everything is correct, notes their code on the docket. If there are any questions, the accounting employee consults the cost center managers. If there are no questions, or after the consultation, the copy of the invoice is sent to the cost center managers.  Each cost center manager checks the invoice. If it's in order, they note their code on the docket and return the invoice copy.  If not, they may reject it outright, which leads to a reevaluation by the other cost center manager or send the invoice back to accounting, restarting the process with cost center manager verification. If the invoice is rejected by a cost center manager, and this is reevaluated by other cost center manager,  then the cost center manager sends the invoice and docket to another cost center manager and passes the copy to the next cost center manager until all have reviewed it. Once all cost center managers have approved, the invoice copy is forwarded to the commercial manager. The commercial manager then performs a commercial audit. If there's a complaint during the audit, it is resolved. Regardless of a complaint, the commercial manager issues approval for payment. After issuing the approval, the commercial manager checks the amount. If the amount is greater than 20, the invoice is checked by the board and passed on to the next step. If the amount is less than or equal to 20, or after the board's check, the invoice copy and docket are moved to the accounting employee, who then gives payment instructions and closes the invoice, finalizing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Reception of invoices",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Visual inspection of invoices",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Identify charging suppliers and create new invoice",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check items on new invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Note cost center and managers on docket",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send docket and invoice copy to cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Review invoice for accuracy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send invoice copy to cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check invoice",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Note code on docket and return invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Reject invoice",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Reevaluate invoice",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send invoice and docket to another cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Pass invoice copy to next cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Forward invoice copy to commercial manager",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Perform commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Resolve complaint",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Issue approval for payment",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Check amount",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Check invoice by board",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Move invoice copy and docket to accounting employee",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Give payment instructions and close invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Invoice accurate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Invoice in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "All cost center managers approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Amount > 20?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id26",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id26",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id27",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id27",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id28",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id18",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id29",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id29",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id21",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id30",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id30",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id24",
                        "targetRef": "id25"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "10_13.json": {
        "0": {
            "text": "The process begins with the INQ transmitting the transaction data request.  The IP then checks the request of the INQ.  Following this check, the IP answers the question of the INQ. The process ends there.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request of the INQ",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the question of the INQ",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the INQ transmitting the transaction data request.  The IP then checks the request of the INQ.  Following this check, the IP answers the question of the INQ. The process then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the question",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the INQ transmitting the transaction data request.  Following this, the IP checks the request from the INQ.  Finally, the IP answers the INQ's question, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request from INQ",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers INQ's question",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id4",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "5_4.json": {
        "0": {
            "text": "The process begins when an employee purchases a product and then submits an expense report with a list of items. The submitted report is then reviewed by a supervisor.  The supervisor approves or rejects the report. If the report is approved, it is moved to the treasurer. The treasurer checks the receipts and matches the items on the list. If the items are in order, the treasurer accepts the expenses for processing and confirms the payment, thus ending the process.  However, if the items are not in order, specifically if receipts are missing, the treasurer sends the report back to the employee. If the supervisor rejects the report, it\u2019s also sent back to the employee.  The employee can then edit the report and re-submit it for review, returning to the supervisor\u2019s review step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check receipts and match items",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept expenses and confirm payment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Edit Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Report Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Items in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Report Rejected?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an employee purchases a product, and then submits an expense report with a list of items.  The submitted report is checked to see if it is in order. If the report is not in order, it goes to the supervisor for review. The supervisor approves or rejects the report. If the report is rejected, it is sent back to the employee to edit. The edited report is checked again to determine if it is now in order, and this entire sequence may repeat. Eventually, if the report is approved by the supervisor, it is moved to the treasurer.  The treasurer checks the receipts and matches the items on the list. If receipts are missing, the report is sent back to the employee, again to be checked if it is in order and potentially reviewed by the supervisor again. If the receipts are present, the treasurer accepts the expenses for processing and confirms the payment, ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Report Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Supervisor Review",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Supervisor Approve/Reject",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Edit Report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Treasurer Checks Receipts",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Treasurer Accepts Expenses",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Confirm Payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Report in Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Report Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Report in Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Receipts Present?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with an employee purchasing a product. Subsequently, the employee submits an expense report with a list of items.  This report is then reviewed by a supervisor who decides whether to approve it. If approved, the report is moved to the treasurer.  The treasurer checks receipts and matches the items on the list. If everything is in order, the treasurer accepts the expenses for processing and confirms the payment, ending the process. If the receipts are missing, the treasurer sends the report back to the employee.  If the supervisor does not approve the report, it is sent back to the employee for editing.  After editing, the report is sent back for review to the supervisor, restarting the approval cycle.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Receipts and Match Items",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept Expenses and Process Payment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Edit Expense Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Supervisor Approval?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Receipts Check?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    }
}