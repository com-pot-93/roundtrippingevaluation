{
    "9_2.txt": {
        "0": {
            "text": "The process starts with sending a mortgage offer. Based on the customer's reply, three scenarios are possible. If the customer replies, the case details are updated, and the work is archived, ending the process. If the customer does not reply, the case is moved to administration, ending the process.  A third possibility is that the customer replies, and a check for document completeness is performed. If the documents are complete, a message is generated to the customer, and the customer reply check is performed again. If the documents are incomplete, the case is moved to administration, ending the process.  Concurrently, if two weeks pass without a customer reply after the initial offer, the case details are updated, the work is archived, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Generate message to customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Archive",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "2 weeks no answer",
                        "type": "TimerIntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Customer reply?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Documents complete",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with sending a mortgage offer.  Then, depending on the customer's reply, the process follows different paths. If the customer replies, the case details are updated, the work is archived, and the process ends. If the customer does not reply, the process checks if the documents are complete. If the documents are complete, the case is moved to administration, and the process ends. If the documents are not complete, a message is generated to the customer, and a two-week timer starts. After two weeks, the case details are updated, and the process continues as described before, checking for customer reply and document completeness.  The customer not replying can also directly lead to the two-week timer starting.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Move case to administration",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Generate message to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Customer reply?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Documents complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "2 weeks passed?",
                        "type": "EventBasedGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with sending a mortgage offer. Based on the customer's reply, three scenarios are possible. If the customer declines the mortgage, case details are updated, the work is archived, and then canceled. If the customer accepts the mortgage, a document check is performed.  If the documents are complete, the case moves to administration. If they are incomplete, a message is generated to the customer. Finally, if no response is received from the customer, the case details are updated, the work is archived, and then canceled.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Mortgage offer",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Archive work",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Cancel work",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Move to Admin",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate message to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Update case details",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Archive",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Cancel",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer declines mortgage",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Customer accepts mortgage",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Documents incomplete",
                        "type": "MessageEvent"
                    },
                    {
                        "id": "id13",
                        "name": "No response received",
                        "type": "TimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Customer reply",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Document Check",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id15",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "1_1.txt": {
        "0": {
            "text": "The process begins when an order is received.  The order is then checked to see if it will be accepted or rejected. If the order is rejected, the process ends. If the order is accepted, the part list is processed. Next, a check is performed to see if the part is available. If the part is available, it is reserved. If the part is not available, it is back-ordered. Once the parts are either reserved or back-ordered, and the assembly is prepared, the bicycle is assembled.  Finally, the bicycle is shipped, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Reject Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Back-order Part",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Assembly",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Order Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Part Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "All Parts Ready & Assembly Prepared?",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Sales Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Sales Representative",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Storehouse",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Storehouse Clerk",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Engineering Department",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Engineer",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is received.  The order is then either accepted or rejected. If the order is rejected, the process ends. If the order is accepted, the part list is processed. Next, a check is performed to see if the part is available. If the part is available, it is reserved. If the part is not available, it is back-ordered.  Regardless of whether the part was reserved or back-ordered, and in parallel to these activities, the assembly is prepared. Once all parts are ready and the assembly is prepared, the bicycle is assembled. Finally, the bicycle is shipped, and the process is finished.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Reject Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Back-Order Part",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Assembly",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Order Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Part Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "All Parts Ready & Assembly Prepared?",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when an order is received.  The order is then checked to determine if it will be accepted or rejected. If the order is rejected, the process ends. If the order is accepted, the part list is processed by a storehouse clerk. Next, the clerk checks if the part is available. If the part is available, it is reserved. If the part is not available, it is back-ordered. Once all parts have been processed and the assembly has been prepared by an engineer, the bicycle is assembled by the engineer. Finally, the bicycle is shipped by a sales representative, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Reject Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Process Part List",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Reserve Part",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Back-order Part",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Assembly",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble Bicycle",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ship Bicycle",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Bicycle Shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Order Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Part Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "All Parts Processed and Assembly Prepared?",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Sales Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Sales Representative",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Storehouse",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Storehouse Clerk",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Engineering Department",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Engineer",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_3.txt": {
        "0": {
            "text": "The process begins when a guest calls room service. The order is taken down and an order ticket is submitted to the kitchen.  Simultaneously, it is determined whether the order includes alcoholic beverages. If so, the order is given to the sommelier, who then fetches wine from the cellar or prepares other alcoholic beverages.  Regardless of whether alcoholic beverages are included, the order is assigned to a waiter, who readies a cart and prepares any non-alcoholic drinks.  Meanwhile, the kitchen prepares the food.  Once the food, alcoholic beverages (if any), and non-alcoholic beverages (if any) are ready, and the cart is prepared, everything is delivered to the guest's room.  The guest's account is then debited.  Finally, it is checked if there are any other orders to prepare or deliver. If so, the process loops back to readying a cart. Otherwise, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take down order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ready a cart",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Prepare non-alcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Deliver to guest's room",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Debit guest's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest calls room service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Order include alcoholic beverage?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Another order to prepare or deliver?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a guest calls room service.  The room service operator takes down the order and submits an order ticket to the kitchen, where food preparation begins.  Simultaneously, the order details are given to the sommelier, who determines whether wine or other alcoholic beverages are included. If so, the sommelier fetches the wine from the cellar and prepares the drinks. If not, the order is directly assigned to a waiter.  Regardless of alcoholic beverages, the order is assigned to a waiter who readies a cart and prepares any non-alcoholic drinks.  Once the food, drinks, and cart are ready, the waiter delivers the order to the guest's room. Finally, the guest's account is debited, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take down order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Fetch wine from cellar and prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready a cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare non-alcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver order to guest's room",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit guest's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest calls room service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Wine or alcoholic beverage included?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a guest calls room service.  The room service attendant takes the order and submits an order ticket to the kitchen.  Simultaneously, the attendant gives the order details to the sommelier and assigns the order to a waiter. The kitchen staff then prepares the food. The sommelier checks if wine or other alcoholic beverages were ordered. If so, the sommelier fetches the wine and prepares the drinks; otherwise, the process proceeds directly to checking readiness. The waiter, in the meantime, readies the cart and prepares any non-alcoholic drinks. Once the food, cart, and any alcoholic beverages are ready, the waiter delivers the order to the guest's room. After delivery, the waiter checks if there are any other orders to prepare or deliver. If there are more orders, the guest's account is debited, and the process repeats for the next order. If there are no more orders, the process ends, marking the order as fulfilled.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Take order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Give order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Fetch wine and prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ready cart",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare non-alcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver order to guest's room",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Debit guest's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Guest calls room service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order fulfilled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Wine or alcoholic beverage ordered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Food, wine, and cart ready?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Other orders to prepare or deliver?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "3_8.txt": {
        "0": {
            "text": "The process begins when a customer submits a claim.  The notification department then checks the documents and registers the claim. Next, the handling department checks the insurance. An assessment is then performed. Based on the assessment outcome, the process either continues with phoning the garage to authorise repairs or the claim is rejected. If the repairs are authorized, the payment is scheduled.  Finally, a letter is sent to the customer.  If the claim was rejected, a letter is also sent to the customer, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department checks insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assessment is performed",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The car insurance claim process begins when a customer submits a claim. The Notification department checks the documents and registers the claim.  Next, the Handling department checks the insurance and performs an assessment. Based on the assessment result, the process either continues or the claim is rejected. If the assessment is positive, the Handling department phones the garage to authorise repairs and then schedules the payment.  Regardless of whether the claim is approved or rejected, a letter is sent to the customer, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department checks insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assessment is performed",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Assessment result?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Car Insurer",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Notification department",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Handling department",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Customer lane",
                                "elemRefs": [
                                    "id1",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Garage",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Garage lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer submits a claim. The notification department then checks the documents and registers the claim. Next, the handling department checks the insurance.  An assessment is then performed. Based on the assessment outcome, the process either continues with phoning a garage to authorise repairs and scheduling payment, or it proceeds to rejecting the claim.  Regardless of whether the claim is approved or rejected, a letter is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Notification department checks documents and registers claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Handling department checks insurance",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assessment is performed",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reject claim",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Join",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "5_2.txt": {
        "0": {
            "text": "The process begins when an employee submits a vacation request.  The requirement is then registered, after which the supervisor receives the request. The supervisor then approves the request.  Based on the supervisor's decision, the process branches. If the request is rejected, the application is returned to the employee. If the request is approved, a notification is generated and sent to HR.  HR then completes the respective management procedures.  Finally, regardless of whether the request was approved or rejected, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "supervisor approves the request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "return application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "generate notification",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "HR completes the respective management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an employee submits a vacation request.  The requirement is then registered, after which the supervisor receives the request. The supervisor then approves the request.  Based on whether the request is approved, the process branches. If the request is not approved, the application is returned to the employee. If the request is approved, a notification is generated and subsequently, HR completes the respective management procedures.  Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "supervisor approves the request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "return application",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "generate notification",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "HR completes the respective management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Request Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an employee submits a vacation request.  The requirement is then registered, after which the supervisor receives the request. The supervisor then approves the request.  Following approval, there are two paths: either the application is returned to the employee or a notification is generated. If the application is returned, the process continues. If a notification is generated, it is sent to HR, who completes the respective management procedures.  Finally, regardless of whether the application was returned or a notification was generated, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "supervisor approves the request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "return application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "generate notification",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "HR completes the respective management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_2.txt": {
        "0": {
            "text": "The process begins when a vacancy is reported.  A job description is then created and the question is asked whether the department needs to be consulted again. If so, the department is asked for input and the job description is created again.  This loop continues until the department no longer needs to be consulted.  The job description is then submitted for consideration.  Next, it is determined whether the description is approved. If not, the description is corrected and resubmitted for consideration. This loop continues until the description is approved. Once approved, the job is posted and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask the Department again",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Correct the description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Post the job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Vacancy reported",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Job posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Description approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Need to ask the Department again?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a vacancy is reported.  A job description is then created and submitted for consideration.  If there is confusion about the message, the department is asked for clarification and the job description is created again.  If the message is clear, the job description is submitted for approval. If the job description is not approved, it is corrected and resubmitted. If the job description is approved, the job is posted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create job description",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask the Department again",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Correct the description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Post the job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Vacancy reported",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Job posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Confusion in the message?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Job description approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when a vacancy is reported.  A job description is then created.  If there is confusion about the description, the relevant department is asked for clarification and the job description is created again.  If there is no confusion, the job description is submitted for consideration.  If the submitted job description is not approved, it is corrected and resubmitted.  If it is approved, the job is posted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "create a job description",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "ask the Department again",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "submit the job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "correct the description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "post the job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Vacancy reported",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "job posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "confusion?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "10_13.txt": {
        "0": {
            "text": "The process begins with the INQ transmitting a transaction data request.  Next, the IP checks the request. Based on the check's outcome, the process branches. If the check is successful, the IP transmits the data, after which the process ends.  Alternatively, if the check is unsuccessful, the IP rejects the request, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP transmits data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP rejects request",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Check outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an inquiry transmitting a transaction data request.  Next, an involved party checks the request.  Based on the check's outcome, the involved party either answers the question by transmitting the data or rejects the request.  Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the question (transmit data)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP rejects the request",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Check outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the INQ transmitting the transaction data request.  Next, the IP checks the request. Based on the outcome of the examination, the process branches. If the request is approved, the IP answers the question (Transmission of data). If the request is rejected, the IP rejects the request.  Finally, regardless of whether the request was approved or rejected, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "INQ transmits the transaction data request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "IP checks the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP answers the question (Transmission of data)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP rejects the request",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Outcome of examination",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_11.txt": {
        "0": {
            "text": "The process begins when the Grid Operator (GO) requests measurements.  The Metering Service Provider (MSP) then checks the request.  If the request is approved, the MSP performs the measurement. Following the measurement, a check occurs to determine if the reading was successful. If the reading was *not* successful, the MSP informs the GO of the failure, and the process ends. If the reading *was* successful, the MSP transmits the values to the GO. The GO then processes the values and sends changed values back to the MSP. Finally, the GO transmits the readings to the Service Provider (SP), after which the process ends.  If the initial request from the GO was *not* approved, the MSP denies the request, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO requests measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP checks request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP performs measurement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits values to GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends changed values to MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO transmits readings to SP",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP denies request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs GO of failure",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Reading successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "Pool1",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "Pool2",
                        "name": "MSP",
                        "lanes": []
                    },
                    {
                        "id": "Pool3",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "idg2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "mf6",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the Grid Operator (GO) requests measurements. The Metering Service Provider (MSP) then checks the request.  If the request is not approved, the MSP denies the request, and the process ends. If the request is approved, the MSP performs the measurement.  If the reading is unsuccessful, the MSP informs the GO of the failure, and the process ends. If the reading is successful, the MSP transmits the values to the GO. The GO then processes the values and sends changed values to the MSP. Finally, the GO transmits readings to the Service Provider (SP), after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO requests measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP checks request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP denies request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP performs measurement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs GO of failure",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits values to GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends changed values to MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO transmits readings to SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Reading successful?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "pools": [
                    {
                        "id": "GO",
                        "name": "Grid Operator",
                        "lanes": []
                    },
                    {
                        "id": "MSP",
                        "name": "Metering Service Provider",
                        "lanes": []
                    },
                    {
                        "id": "SP",
                        "name": "Service Provider",
                        "lanes": []
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "mf6",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the Grid Operator (GO) requests measurements.  The Measurement Service Provider (MSP) then checks the request.  If the request is not approved, the MSP denies the request and the process ends. If the request is approved, the MSP performs the measurement. Following the measurement, the MSP checks if a successful reading was obtained. If not, the MSP informs the GO of the failure, and the process ends. If the reading was successful, the MSP transmits the values to the GO. The GO then processes the values and sends changed values to the MSP. Finally, the GO transmits readings to the Service Provider (SP), after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "GO requests measurements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSP checks request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSP denies request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSP performs measurement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSP informs GO of failure",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MSP transmits values to GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO processes values",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO sends changed values to MSP",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO transmits readings to SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Request approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Successful reading?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "id14",
                        "name": "MSP",
                        "lanes": []
                    },
                    {
                        "id": "id15",
                        "name": "SP",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    }
                ]
            }
        }
    },
    "10_6.txt": {
        "0": {
            "text": "The process begins when the MSPN sends a dismissal.  This dismissal is then reviewed by the MSPO. The MSPO can then either reject or confirm the dismissal. If the dismissal is rejected, the process ends. If the dismissal is confirmed, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sents a dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Dismissal Rejected or Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MSPN",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MSPN Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MSPO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MSPO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the MSPN sends a dismissal.  The MSPO then reviews the dismissal.  Based on the review, the MSPO can either reject or confirm the dismissal. If the dismissal is rejected, the process ends. If the dismissal is confirmed, the process also ends.  Communication occurs between MSPN and MSPO:  when MSPN sends the dismissal, when MSPO rejects the dismissal, and when MSPO confirms the dismissal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sents a dismissal",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Review Dismissal",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id7",
                        "name": "MSPN",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "MSPN Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id9",
                        "name": "MSPO",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "MSPO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the MSPN sends a dismissal.  The MSPN then sends this dismissal to the MSPO who reviews it.  The MSPO then makes a decision regarding the dismissal. If the MSPO rejects the dismissal, it is sent back to the MSPN and the process ends. If the MSPO confirms the dismissal, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN sents a dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Dismissal Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id7",
                        "name": "MSPN",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "MSPN Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id9",
                        "name": "MSPO",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "MSPO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    }
                ]
            }
        }
    },
    "6_1.txt": {
        "0": {
            "text": "The process begins with receiving an invoice, followed by a visual inspection and forwarding of the invoice.  Next, the supplier is identified, and an invoice instance is created. The invoice is checked, and the cost center is noted. A docket and invoice copy are sent, and the invoice copy is reviewed.  At this point, a decision is made based on invoice accuracy. If accurate, the code is noted on the docket, and the invoice copy is returned. Then, another decision is made: if all items are marked, the invoice copy is passed to the next manager, who again reviews the invoice copy. If not all items are marked, the invoice copy is forwarded to the commercial manager.  If the invoice is not accurate, accounts payable is rejected, noted on the docket, and the invoice copy is sent back to accounting.  Then, clarification with the vendor is sought.  Following clarification, a decision gateway checks if inconsistencies are resolved. If not, cost center managers are consulted, and the process loops back to the inconsistency check. If resolved, the invoice copy is sent to the cost center managers, and the invoice copy is again reviewed. The commercial manager performs a commercial audit.  Following the audit, a decision is made based on whether there is a complaint. If yes, the complaint is resolved, and the commercial audit is repeated. If no, a decision is made based on the amount. If the amount is greater than 20 EUR, the invoice is checked based on the 4-eyes principle, and the invoice copy is forwarded to the commercial manager. If the amount is not greater than 20 EUR, payment instructions are given, the instance is closed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "receive invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "visual inspection",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "forward invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "identify supplier and create invoice instance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "check invoice and note cost center",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "send docket and invoice copy",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "review invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "return invoice copy",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "pass invoice copy to next manager",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "reject AP and note on docket",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "send invoice copy back to accounting",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "clarify with vendor",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "send invoice copy to cost center managers",
                        "type": "Manual"
                    },
                    {
                        "id": "id16",
                        "name": "forward invoice copy to commercial manager",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "issue payment approval",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "check invoice (4-eyes-principle)",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "resolve complaint",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "give payment instructions",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "close instance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id25",
                        "name": "Invoice accurate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "All items marked?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Inconsistencies resolved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "All items AP?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Amount > 20 EUR?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Complaint?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id25",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id25",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id26",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id26",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id27",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id27",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id17",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id30",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id20",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id30",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id18",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id29",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id19",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id29",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id28",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id24"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when an invoice is received.  The invoice is received and forwarded, after which the supplier is identified, and an invoice instance is created.  Next, the invoice items are checked, and the cost center is noted.  The invoice copy is then reviewed, and a decision is made whether the invoice is accurate. If the invoice is not accurate, it is rejected with a note, and the vendor is contacted for clarification.  After clarification, a check is made to see if all inconsistencies are resolved. If not, the invoice copy is reviewed again. If the inconsistencies are resolved, the cost center managers are consulted, and the invoice copy is reviewed once more. If the invoice is accurate, the code is noted on the docket. Then, a decision is made whether all items are marked correctly. If not, the cost center managers are consulted, and the invoice copy is reviewed again. If all items are marked correctly, the invoice is forwarded to the commercial manager for a commercial audit and payment approval.  Following the audit, a decision is made whether the amount exceeds EUR 20. If it does, the invoice is checked using the 4-eyes-principle, and then payment instructions are given, and the instance is closed. If the amount does not exceed EUR 20, a decision is made whether there was a complaint during the audit. If there was a complaint, it is resolved with the supplier, and the commercial audit and payment approval are conducted again. If there was no complaint, payment instructions are given, and the instance is closed.  Finally, the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive and forward invoice",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Identify supplier and create invoice instance",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check invoice items and note cost center",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Note code on docket",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reject AP with note",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Clarify with vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Forward invoice to commercial manager",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Commercial audit and payment approval",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check invoice (4-eyes-principle)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Resolve complaint with supplier",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Give payment instructions and close instance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Invoice received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Invoice accurate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "All items marked correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "All inconsistencies resolved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Amount exceeds EUR 20?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Complaint during audit?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id19",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when an invoice is received.  The invoice then undergoes a visual inspection and is forwarded.  The next step is to identify the supplier and create an invoice instance.  Following this, the invoice items are checked, the cost center is noted, and a docket is created. The docket and an invoice copy are sent to internal mail. The invoice copy is reviewed, and a decision is made regarding its accuracy. If accurate, a code is noted on the docket (AP), and the invoice copy is returned to internal mail. Then, it's determined if all items are marked correctly. If so, the invoice copy is forwarded to the next cost center manager, and the invoice copy is reviewed again.  If not all items are marked correctly, the invoice copy is sent back to accounting, where it is determined if all invoice items are AP. If the invoice is not accurate, it is rejected with a note and statement, and clarification is sought from the vendor.  Following clarification, it is determined if all inconsistencies are resolved. If not, the cost center managers are consulted, and the process loops back to determine if all inconsistencies are resolved. If they are resolved, the invoice copy is sent to the cost center managers, and the invoice copy is reviewed again. If all invoice items are AP, the invoice copy is forwarded to the commercial manager for a commercial audit.  After the audit, payment approval is issued.  A check is then performed to see if the bill amount is greater than 20 EUR. If so, the invoice is checked according to the 4-eyes-principle, and the invoice copy is sent back to accounting. If the bill amount is not greater than 20 EUR, a check is made to see if there was a complaint during the commercial audit. If there was a complaint, the complaint is resolved with the supplier, and clarification is sought from the vendor. If there was no complaint, payment instructions are given, the instance is closed, and the invoice is considered processed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive invoice (paper/fax)",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Visual inspection",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Forward invoice",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Identify supplier and create invoice instance",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check invoice items and note cost center",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create docket",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send docket and invoice copy to internal mail",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Review invoice copy",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Note code on docket (AP)",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Return invoice copy to internal mail",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Forward invoice copy to next cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send invoice copy back to accounting",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Reject AP with note and statement",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Clarify with vendor",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Consult cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send invoice copy to cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Forward invoice copy to commercial manager",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Issue payment approval",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Check invoice (4-eyes-principle)",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Resolve complaint with supplier",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Give payment instructions and close instance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "Invoice received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "Invoice processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id25",
                        "name": "Invoice accurate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "All items marked correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "All inconsistencies resolved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "All invoice items AP?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Bill amount > 20 EUR?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Complaint during commercial audit?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id25",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id26",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id26",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id12",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id25",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id27",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id27",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id28",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id19",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id29",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id20",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id29",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id30",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id30",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id24"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_3.txt": {
        "0": {
            "text": "The process begins when the Head of Department reports a vacancy to the Personnel Department. If there are questions about the tasks involved, the Head of Department clarifies the tasks and requirements with the Personnel Department, who then describes the job.  If there are no questions, the Personnel Department proceeds directly to describing the job. The Head of Department then reviews the job description. If corrections are needed, the Head of Department asks for corrections, and the Personnel Department revises the job description accordingly. This loop continues until the Head of Department approves the job description, at which point the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify tasks and requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need corrections?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Questions about tasks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Head of Department",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Head of Department Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Personnel Department",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "HR Lane",
                                "elemRefs": [
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the Head of the Functional Department reports a vacancy to the Personnel Department. If there are questions about the tasks involved, the Head of the Functional Department clarifies the tasks and requirements with the Personnel Department, who then describes the job.  If there are no questions, the Personnel Department proceeds directly to describe the job. The Head of the Functional Department then reviews the job description. If corrections are needed, the Head of the Functional Department asks for corrections, and the Personnel Department revises the job description. This loop continues until the job description is approved. Once approved, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify tasks and requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need corrections?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Questions about tasks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Head of Functional Department",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Head of Functional DepartmentLane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Personnel Department",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Personnel DepartmentLane",
                                "elemRefs": [
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when personnel requirements are detected. The Head of Department reports the vacancy to the Personnel Department. An HR Colleague describes the job.  If there are questions about the tasks, the Head of Department clarifies the tasks and requirements, after which the job description is sent back to be described again. If there are no further questions, the Head of Department reviews the job description. If corrections are needed, the Head of Department asks for corrections and the job description is sent back to be described again. If no corrections are needed, the Head of Department approves the job description, after which the job description is advertised.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify tasks and requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Detect personnel requirements",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job description advertised",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Need corrections?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Questions about tasks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Head of Functional Department",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Head of Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Personnel Department",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "HR Colleague",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ]
            }
        }
    },
    "10_1.txt": {
        "0": {
            "text": "The process begins when the MPON sends the dismissal.  This dismissal is reviewed by the MPOO. The MPOO then either opposes or confirms the dismissal of the MPON. If the MPOO opposes the dismissal, the process ends.  If the MPOO confirms the dismissal, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON sents the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirmes the dismissal of MPON",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idgw1",
                        "name": "MPOO opposes or confirmes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idgw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idgw1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idgw1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the MPON sends the dismissal.  This dismissal is then reviewed by the MPOO. The MPOO then either opposes the dismissal of the MPON, which ends the process, or confirms the dismissal of the MPON, which also ends the process.  A message flow exists between the MPON sending the dismissal and the MPOO reviewing the dismissal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON sents the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO confirmes the dismissal of MPON",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with MPON sending the dismissal.  Next, MPOO reviews the dismissal.  Then, MPOO decides whether to oppose or confirm the dismissal. If MPOO opposes the dismissal of MPON, the process ends. Alternatively, if MPOO confirms the dismissal of MPON, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON sents the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO confirmes the dismissal of MPON",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "MPOO opposes or confirmes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_5.txt": {
        "0": {
            "text": "The process begins with the receipt of an expense report.  Next, a check is performed to see if an account exists. If no account exists, a new account is created, after which the report is reviewed. If an account already exists, the report is reviewed directly. Following the review, the process checks if the amount is less than 200. If it is, the report is auto-approved, and the reimbursement is sent to the bank account. If the amount is not less than 200, the supervisor approves the report.  After the supervisor's approval, a check occurs to see if the report was approved. If not approved, a rejection notice is sent, and the expense report is resubmitted, restarting the process from the beginning. If approved, the reimbursement is sent to the bank account. After reimbursement, a check is performed to see if the process was completed within 7 days. If so, an \"approval in progress\" email is sent, and the process ends. If not completed within 7 days, a check is performed to see if it was finished within 30 days. If finished within 30 days, the process ends. If not finished within 30 days, a cancellation notice is sent, the expense report is resubmitted, and the process restarts from the beginning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create New Account",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Auto Approve",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Supervisor Approves",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Rejection Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Reimburse to Bank Account",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send Approval in Progress Email",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send Cancellation Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Resubmit Expense Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Account Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Completed in 7 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Finished within 30 days?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when an Expense Report is received.  The process checks if an account exists. If not, a new account is created, after which, or if the account already exists, the Expense Report is reviewed.  Based on the amount, the process proceeds. If the amount is less than 200, automatic approval occurs, leading to reimbursement via direct deposit and process completion. If the amount is 200 or greater, supervisor approval is required.  If approved, reimbursement is made via direct deposit, and the process is completed. If rejected, a rejection notice is sent, and the user can resubmit the Expense Report, which leads back to the review stage.  If 7 days elapse after the review, an \"Approval in Progress\" email is sent. If 30 days elapse after the review, a cancellation notice is sent, and the user can resubmit the report.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create a new account",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Automatic Approval",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Supervisor Approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Reimbursement to Direct Deposit",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Approval in Progress Email",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send Cancellation Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Resubmit Expense Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Expense Report Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "7 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id12",
                        "name": "30 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Account Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Amount < 200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg3",
                        "name": "Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "idg1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "idg1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "idg3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "idg3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of an expense report.  Then, it is checked if an account exists. If not, an account is created, and the report is reviewed. If an account already exists, the report is reviewed directly.  Next, the amount is checked. If it's less than $200, it's automatically approved, and reimbursement is issued. If the amount is greater than or equal to $200, it goes to supervisor approval.  If the supervisor approves, reimbursement is issued. If the supervisor rejects, a rejection notice is sent, and the employee can resubmit the expense report. After reimbursement, a check is made to see if it was completed within 7 days. If so, an \"approval in progress\" email is sent, and then a check is performed to see if it was completed within 30 days. If not, a cancellation notice is sent, and the employee can resubmit the expense report. If it was completed within 30 days, the process ends. If the 7-day check reveals it wasn't completed in time, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Expense Report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Account (if necessary)",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Automatic Approval (<$200)",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Supervisor Approval (>$200)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Rejection Notice",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Reimbursement",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send Approval in Progress Email (7 days)",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send Cancellation Notice (30 days)",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Resubmit Expense Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Account Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Amount < $200?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Supervisor Approves?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Completed in 7 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Completed in 30 days?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "1_2.txt": {
        "0": {
            "text": "The process begins when a customer brings in a defective computer. The CRS checks the defect and hands out a repair cost calculation.  The customer then decides if the costs are acceptable. If the costs are acceptable, the hardware is checked and repaired and in parallel the software is checked and configured.  After both hardware and software checks are complete, the functionality is tested. If further repairs are needed, arbitrary repair activities are executed and the functionality is tested again. This loop continues until no further repairs are needed.  Once the functionality test is successful, the process ends. If at any point after the cost calculation the customer decides the costs are not acceptable, the customer takes the computer home unrepaired and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "hands out a repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "check and repair the hardware",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "check and configure the software",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "test functionality",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "execute arbitrary repair activity",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer brings in defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "costs acceptable?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id10",
                        "name": "takes computer home unrepaired",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "name": "Exclusive Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The computer repair process begins when a customer brings in a defective computer. The CRS then checks the defect and hands out a repair cost calculation.  The customer then decides whether the costs are acceptable. If not, the customer takes the computer home unrepaired. If the costs are acceptable, the repair process continues with two parallel activities: checking and repairing the hardware and checking and configuring the software.  Once both these activities are completed, the functionality is tested. If an error is detected during testing, an arbitrary repair activity is executed. This repair activity may involve further hardware and/or software checks and configurations, looping back to the respective tasks.  Once no more errors are detected, the repair is finished, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "CRS hands out repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check and repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check and configure software",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test functionality",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Execute arbitrary repair activity",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer brings in defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Customer takes computer home unrepaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Repair finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idgw1",
                        "name": "Costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idgw2",
                        "name": "Error detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idgw3",
                        "type": "Parallel"
                    },
                    {
                        "id": "idgw4",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idgw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idgw1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idgw1",
                        "targetRef": "idgw3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idgw3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idgw3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "idgw2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "idgw2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "idgw4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "idgw4",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "idgw4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "idgw2",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer brings in a defective computer.  The CRS then checks the defect and hands out a repair cost calculation. The customer then decides on the costs. If the costs are not acceptable, the customer takes the computer home. If the costs are acceptable, the check and repair of hardware and the check and configuration of software happen in parallel.  Following the hardware check, the system functionality (hardware) is tested. If a hardware error is detected, the hardware error is repaired, and the system functionality (hardware) is tested again.  Following the software check, the system functionality (software) is tested. If a software error is detected, the software error is repaired, and the system functionality (software) is tested again. Once both the hardware and software checks are complete, and any necessary repairs are made, the repair is finished, and the customer takes the computer home.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "CRS checks the defect",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "CRS hands out repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Customer decides on costs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check and repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check and configure software",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test system functionality (hardware)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Repair hardware error",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Test system functionality (software)",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Repair software error",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Customer brings in defective computer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer takes computer home",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Repair finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Costs acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Hardware error detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Software error detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "9_3.txt": {
        "0": {
            "text": "The process begins with the Coordination Unit drafting a schedule and adding draft dates.  Subsequently, the Support Officer checks the dates and suggests modifications.  The Coordination Unit then rechecks the dates, looking for any conflicts.  Finally, Committee Members check their diaries and advise of any conflicts, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts schedule and adds draft dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer checks dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Coordination Unit rechecks dates and looks for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit drafting a schedule and adding it to the calendars.  Next, the Support Officer checks the dates and suggests modifications.  The Coordination Unit then rechecks the dates and looks for conflicts.  Finally, Committee Members check their diaries and advise of any conflicts, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts schedule and adds to calendars",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer checks dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Coordination Unit rechecks dates and looks for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with the Coordination Unit drafting a schedule and adding draft dates.  Subsequently, the Support Officer checks the dates and suggests modifications.  The Coordination Unit then rechecks the dates, looking for any conflicts.  Finally, Committee Members check their diaries and advise of any conflicts, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit drafts schedule and adds draft dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer checks dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Coordination Unit rechecks dates and looks for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members check diaries and advise of conflicts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_14.txt": {
        "0": {
            "text": "The process begins with four parallel paths. In the first path, the Metering Point Operator (MPOO) sends a bill for the temporary continuation of metering point operations.  The Grid Operator (GO) then examines the bill. In the second path, the Metering Service Provider (MSPO) sends a bill for the temporary continuation of the measurement, which is subsequently examined by the GO.  The third path involves the MSPO sending a bill for additional readings, and the GO examining this bill as well.  Finally, in the fourth path, the MPOO sends a bill for equipment acquisition, which is examined by either the Metering Point Operator Network (MPON) or the GO.  Following the examination of each bill, the GO or MPON either confirms the invoice with a payment advice or rejects it.  The process ends after either confirmation or rejection.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO sends bill for the temporary continuation of the measurement",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MSPO sends the bill for additional readings",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "MPOO sends bill for the equipment acquisition",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "MPON or GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO or MPON confirms the invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "GO or MPON rejects the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id0",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id0",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id0",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPOO",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "MSPO",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "GO",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "MPON",
                        "lanes": []
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with three possible starting points. The MPOO may send a bill for temporary continuation of metering point operations, the MSPO may send a bill for temporary continuation of measurement, or the MSPO may send a bill for additional readings.  All three of these bills are examined by the GO.  Separately, the MPOO may also send a bill for equipment acquisition. This bill is handled differently.  It is either examined by the GO or it is sent to the MPON for examination.  After the GO examines a bill, they either confirm the invoice with a payment advice or reject the invoice.  Similarly, after the MPON examines a bill, they either confirm the invoice with a payment advice or reject the invoice.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MSPO sends bill for temporary continuation of measurement",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "MSPO sends bill for additional readings",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "MPOO sends bill for equipment acquisition",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "MPON examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO confirms invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "MPON confirms invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO rejects invoice",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "MPON rejects invoice",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a decision regarding the type of bill.  If the bill is for temporary continuation of metering point operations, the MPOO sends the bill and the GO examines it. If the bill is for the temporary continuation of the measurement or for additional readings, the MSPO sends the bill and the GO examines it.  A third option is that the bill is for equipment acquisition, in which case the MPOO sends the bill and the MPON examines it.  If the bill is for equipment acquisition, the recipient is also the GO, who examines the bill. After the bill is examined, a decision is made to either confirm the invoice with a payment advice or reject the invoice.  Following either decision, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "Service"
                    },
                    {
                        "id": "t2",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "MSPO sends bill for the temporary continuation of the measurement",
                        "type": "Service"
                    },
                    {
                        "id": "t4",
                        "name": "MSPO sends bill for additional readings",
                        "type": "Service"
                    },
                    {
                        "id": "t5",
                        "name": "MPOO sends bill for the equipment acquisition",
                        "type": "Service"
                    },
                    {
                        "id": "t6",
                        "name": "MPON examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "GO or MPON confirms the invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "GO or MPON rejects the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Bill Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Recipient",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Invoice Decision",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "g1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "g2",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g3",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t3",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t4",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g3",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t2",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "t6",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g4",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g4",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t7",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t8",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "3_3.txt": {
        "0": {
            "text": "The process begins with the registration of a claim.  The claim is then examined, after which a settlement recommendation is written. This recommendation is then checked. If the claim is not okay, the recommendation is rewritten and checked again. This cycle continues until the claim is considered okay. Once the claim is okay, the process ends with the claim being approved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Repeat Recommendation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Claim Registered",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Claim Approved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Claim OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the registration of a claim.  Following registration, the claim is examined.  Next, a settlement recommendation is written. This recommendation is then checked.  If the claim is not okay, the recommendation is repeated and then rewritten.  If the claim is okay, the process ends and claim handling proceeds.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Repeat Recommendation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Claim Registered",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Claim Handling Proceeds",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Claim OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the registration of a claim.  The claim is then examined, and a settlement recommendation is written. This recommendation is subsequently checked. If the claim is not okay, the recommendation is repeated, and a new recommendation is written. This cycle continues until the claim is considered okay. Once the claim is okay, the process proceeds with claim handling and finally concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine Claim",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Write Settlement Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Repeat Recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Proceed with Claim Handling",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Claim Registered",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Claim Handled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Claim OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_12.txt": {
        "0": {
            "text": "The process begins with the Existing Customer (EC) informing the Initial Inquirer (INQ) about changes to their master data. The INQ then notifies the Involved Party (IP) of these changes.  The IP checks if the master data can be changed at the requested time.  Following this check, the IP either confirms the changes requested by the INQ or rejects them.  Regardless of confirmation or rejection, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells the INQ about the change of his master data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies the IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks whether the master data can be changed at the desired time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms the changes of the INQ",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects the changes of the INQ",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Confirmation/Rejection Decision",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the EC telling INQ about a master data change.  INQ then notifies IP of the change.  Next, IP checks the data change timing.  Then, the question is asked: \"Can master data be changed?\". If yes, IP confirms the changes and the process ends. If no, IP rejects the changes and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells INQ about master data change",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies IP of change",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks data change timing",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects changes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Can master data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the Existing Customer (EC) informing the Initial Inquiry (INQ) about the changes in their master data.  The INQ then notifies the Issuing Party (IP) about these changes.  The IP checks if the master data can be changed at the requested time.  If the master data can be changed, the IP confirms the changes to the INQ.  If the master data cannot be changed, the IP rejects the changes to the INQ.  The process ends after either confirmation or rejection by the IP.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "EC tells the INQ about the change of his master data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "INQ notifies the IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "IP checks whether the master data can be changed at the desired time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "IP confirms the changes of the INQ",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "IP rejects the changes of the INQ",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "Can master data be changed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "idg1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "10_7.txt": {
        "0": {
            "text": "The process starts with the registration of the measurement by the MSPN.  Following this, the GO examines the application. Based on the application outcome, the GO assigns the MSPN.  The GO then informs the MSPO, followed by informing the MPO, and finally informs the SP. The process then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the MPO",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs the SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application outcome?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the registration of the measurement.  Next, the application is examined. Based on the examination outcome, a decision is made. If the application is rejected, the process ends.  Otherwise, the application is confirmed, and an MSPN is assigned.  Following the assignment, the MSPO is informed about the MSPN assignment. Subsequently, the MPO is informed about the MSPN assignment. Finally, the SP is informed about the MSPN assignment, after which the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "examines the application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "rejects the application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "confirmes the application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "informs the MSPO about the assignment of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "informs the MPO about the assignment of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "informs the SP about the assignment of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the registration of the measurement at the GO by the MSPN.  Subsequently, the GO examines the application of the MSPN. Based on the examination, the GO either rejects the application, ending the process, or confirms it. If confirmed, the GO assigns the MSPN and then informs the MSPO, the MPO, and finally the SP about the assignment, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPN registers the measurement at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO examines the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO rejects the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO confirmes the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the MSPO about the assignment of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs the MPO about the assignment of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "GO informs the SP about the assignment of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Application of the MSPN",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_5.txt": {
        "0": {
            "text": "The process begins when the MPON requests a device takeover bid.  Then, the MPOO sends a tender for equipment takeover. Next, the MPON places an order. Finally, the MPOO confirms the order and sends master data, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order and sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id6",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "id7",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id8",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when MPON requests a device takeover bid.  MPON then sends a tender for equipment takeover to MPOO.  Next, MPON places an order with MPOO.  Finally, MPOO confirms the order and sends master data back to MPON, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order and sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when MPON requests a device takeover bid.  MPON then sends a tender for equipment takeover to MPOO.  Next, MPON places an order with MPOO. Finally, MPOO confirms the order and sends master data back to MPON, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPOO confirms order and sends master data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id6",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "id7",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id8",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ]
            }
        }
    },
    "3_2.txt": {
        "0": {
            "text": "The process begins with checking files.  Then, a decision is made whether files are missing. If files are missing, a search for the missing files is conducted.  Regardless of whether files were missing or not, the next step is to track files.  After tracking files, the files are handed to an Associate.  The Associate then distributes the Judge's Lawlist.  Finally, directions hearings are conducted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Track files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Files missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with checking files.  Then, a decision is made whether files are missing. If files are missing, a search for the missing files is conducted.  Regardless of whether files were missing or not, the next step is to track files.  After tracking files, the files are handed to an Associate.  The Associate then distributes the Judge's Lawlist. Finally, directions hearings are conducted, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Track files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Files missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with checking files.  Then, a decision is made whether files are missing. If files are missing, a search for the missing files is conducted.  Regardless of whether files were missing or not, the next step is to track files.  After tracking files, the files are handed to an Associate.  The Associate then distributes the Judge's Lawlist. Finally, directions hearings are conducted, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check files",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Track files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Files missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_8.txt": {
        "0": {
            "text": "The process begins with the MSPO deregistering at the GO.  The GO then verifies the deregistration. Based on the verification, the GO can either reject the deregistration of the MSPO or preliminarily confirm the deregistration. If the deregistration is preliminarily confirmed, the GO assigns themself as MSP. Following this self-assignment, the GO informs the MSPO about the end of the assignment and the beginning of the GO's assignment.  The GO then informs the MPO about the GO's assignment and subsequently informs the SP about the GO's assignment.  The process ends after the SP is informed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "GO rejects the deregistration of the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO preliminarily confirms the deregistration of the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Decision gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the MSPO deregistering at the GO. The GO then verifies the deregistration.  Next, the GO decides whether to reject the MSPO's deregistration. If the deregistration is rejected, the process ends. If the deregistration is not rejected, the GO assigns himself as MSP.  Following this, the GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO. The GO then informs the MPO about the assignment of the GO. Finally, the GO informs the SP about the assignment of the GO, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "GO rejects the deregistration of the MSPO?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the MSPO deregistering at the GO.  The GO then verifies the deregistration. Subsequently, the GO either rejects the MSPO's deregistration or preliminarily confirms it. If the deregistration is rejected, the process ends. If the deregistration is preliminarily confirmed, the GO assigns himself as MSP.  Following this, the GO informs the MSPO about the end of the MSPO's assignment and the beginning of the GO's assignment. The GO then informs the MPO about the GO's assignment and proceeds to inform the SP about the GO's assignment. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "GO rejects the deregistration of the MSPO or the GO preliminarily confirms the deregistration of the MSPO",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_1.txt": {
        "0": {
            "text": "The process begins when a service is degraded.  The first step is to enter the problem report into system T, followed by comparing the report to the SLA.  Next, necessary countermeasures and priorities are determined, and the customer's significance is evaluated. Based on the customer type, the process branches.  One path leads to determining customer significance, which then branches again based on the significance level. If significant, countermeasures are re-prioritized; otherwise, or after re-prioritization, a detailed problem report is created.  The next step is to investigate the problem.  Following the investigation, the process branches based on whether the problem is analyzable by service management. If yes, the problem is analyzed and a trouble report is created. If not, the process checks for problems.  If problems are detected, a notification about normal service execution is created. If not, the problem is analyzed and a trouble report is created.  In either case, a final status report is prepared.  The process then branches based on whether countermeasures exist. If yes, the process ends. If not, corrective actions are undertaken, and a problem resolution report is created.  Another branch from the countermeasures decision leads to creating a request for automatic resource restoration and waiting for the restoration request. After two days, the process checks if the restoration request was received within that timeframe. If yes, errors are tracked, corrective actions are undertaken, a troubleshooting report is created, and the problem resolution report is created again.  The final steps involve creating a report for the customer and, potentially, reporting an SLA violation rebate, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine necessary countermeasures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Re-prioritize countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Perform analysis",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check for problems",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Analyze problem",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Wait for restoration request",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Track errors",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id25",
                        "name": "Service degraded",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id27",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id29",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id30",
                        "name": "2 days",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id31",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id32",
                        "name": "Customer Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id33",
                        "name": "Customer Significance",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id34",
                        "name": "Analyzable by Service Management?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id35",
                        "name": "Problems detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id36",
                        "name": "Countermeasures?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id37",
                        "name": "Restoration Request within 2 days?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id26",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id32"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id32",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id32",
                        "targetRef": "id33"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id33",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id33",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id34"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id34",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id34",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id35"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id35",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id35",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id15",
                        "targetRef": "id36"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id36",
                        "targetRef": "id38"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id36",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id17",
                        "targetRef": "id39"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id36",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id19",
                        "targetRef": "id37"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id37",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id30",
                        "targetRef": "id37"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id37",
                        "targetRef": "id31"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "id22",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "id39",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "id39",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf40",
                        "sourceRef": "id23",
                        "targetRef": "id40"
                    },
                    {
                        "id": "sf41",
                        "sourceRef": "id24",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf42",
                        "sourceRef": "id40",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf43",
                        "sourceRef": "id38",
                        "targetRef": "id29"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a service degradation is detected.  The first step is to enter the problem report into system T, followed by comparing the problem report to the customer SLA. Next, the necessary counter measures and priorities are determined. The customer's significance is then determined. Based on the customer type, either an extra problem fix process is performed, ending the process, or the customer's significance is evaluated. If the customer is significant, the counter measures are re-prioritized, looping back to determine necessary counter measures and priorities, otherwise a detailed problem report is created.  After creating the detailed problem report, the problem is investigated.  Depending on whether the problem is analyzable by Service Management, either a problem analysis is performed, followed by creating a trouble report, or the process proceeds to check for problems. If problems are detected, the problem is analyzed and a trouble report is created; otherwise, a notification about normal service execution is created.  Regardless of the path taken, the next step is to prepare a final status report. Based on whether counter measures are required, one of three paths is followed: sending the actual service performance to Customer Service, undertaking corrective actions, or creating a request for automatic resource restoration. If the service performance is sent to Customer Service, a report for the customer is created, and then an SLA violation rebate is reported to Billing & Collections, ending the process. If corrective actions are undertaken, a problem resolution report is created, leading to the creation of a report for the customer, and subsequently reporting an SLA violation rebate to Billing & Collections, ending the process. If a request for automatic resource restoration is created, the process checks if the restoration request was received within 2 days. If so, errors are tracked, corrective actions are undertaken, a trouble-shooting report is created, which leads to creating a problem resolution report, and then follows the same path as before to the end. If the restoration request is not received within 2 days, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Compare problem report to customer SLA",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Determine necessary counter measures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "t5",
                        "name": "Extra problem fix process",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Re-prioritize counter measures",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Perform analysis",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "t11",
                        "name": "Check for problems",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Analyze problem",
                        "type": "User"
                    },
                    {
                        "id": "t13",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "t14",
                        "name": "Create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "t15",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "t16",
                        "name": "Send actual service performance to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "t17",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "t18",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "t19",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "t20",
                        "name": "Track errors",
                        "type": "User"
                    },
                    {
                        "id": "t21",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "t22",
                        "name": "Create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "t23",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "t24",
                        "name": "Report SLA violation rebate to Billing & Collections",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Service degradation detected",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Resource Provisioning terminates process",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Customer type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Customer significant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Problem analyzable by Service Management?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Problems detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Counter measures required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g6",
                        "name": "Restoration request received within 2 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t4",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g1",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t5",
                        "targetRef": "e5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g2",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g2",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t6",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "t7",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t8",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g3",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "g3",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t10",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t11",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "g4",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "g4",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "t12",
                        "targetRef": "t13"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "t13",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "t14",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "t15",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "g5",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "g5",
                        "targetRef": "t17"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "g5",
                        "targetRef": "t19"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "t16",
                        "targetRef": "t23"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "t17",
                        "targetRef": "t18"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "t18",
                        "targetRef": "t23"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "t19",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "g6",
                        "targetRef": "t20"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "g6",
                        "targetRef": "e4"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "t20",
                        "targetRef": "t21"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "t21",
                        "targetRef": "t22"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "t22",
                        "targetRef": "t18"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "t23",
                        "targetRef": "t24"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "t24",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the Customer enters a problem report into the system.  The Customer Service representative then compares the problem report to the customer SLA.  Next, necessary countermeasures and priorities are determined.  The customer significance is then determined. If the customer is significant, the process checks if the issue is analyzable by Service Management. If it is, the Service Management investigates the problem, performs an analysis, and creates a trouble report.  If it's not analyzable by Service Management, a detailed problem report is created.  Regardless of whether it was analyzable, the process then checks if there are countermeasures. If there are, the Service Management undertakes corrective actions and creates a problem resolution report. If not, the process ends for TELECO.  Returning to the point where customer significance was evaluated, if the customer is not significant, the process creates a detailed problem report.  After the detailed problem report is created (in either branch), problems are checked for by Resource Provisioning. If problems are detected, Resource Provisioning analyzes the problem and creates a trouble report.  If no problems are detected, a notification about normal service execution is created, and the process ends for Resource Provisioning.  After the trouble report is created (if problems were detected), the Service Management prepares a final status report and sends the actual service performance to Customer Service.  The Service Management then creates a request for automatic resource restoration.  Resource Provisioning waits for the restoration request (max 2 days).  If the restoration request is received within 2 days, errors are tracked, corrective actions are undertaken, and a troubleshooting report is created.  The process then ends for Resource Provisioning.  If the restoration request is not received within 2 days, the process terminates.  After the final status report is sent to Customer Service (in the significant customer branch), a report for the customer is created, and an SLA violation rebate is reported. The process then ends for the Customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Compare problem report to customer SLA",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine necessary countermeasures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Extra problem fix process",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reprioritize countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Investigate problem",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Perform analysis",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check for problems",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Analyze problem",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send actual service performance to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Wait for restoration request (max 2 days)",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Track errors",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Undertake corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "id25",
                        "name": "Report SLA violation rebate",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id26",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id27",
                        "name": "end_Customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "end_TELECO",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id29",
                        "name": "end_Resource_Provisioning",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id30",
                        "name": "Terminate Process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id31",
                        "name": "Customer Significance?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id32",
                        "name": "Significant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id33",
                        "name": "Analyzable by Service Management?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id34",
                        "name": "Problems detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id35",
                        "name": "Countermeasures?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id36",
                        "name": "Restoration Request within 2 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id37",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id38",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id26",
                                    "id27"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id39",
                        "name": "TELECO",
                        "lanes": [
                            {
                                "id": "id40",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id1",
                                    "id28"
                                ]
                            },
                            {
                                "id": "id41",
                                "name": "Service Management",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id42",
                        "name": "Resource Provisioning",
                        "lanes": [
                            {
                                "id": "id43",
                                "name": "Resource Provisioning Lane",
                                "elemRefs": [
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id20",
                                    "id21",
                                    "id22",
                                    "id23",
                                    "id29",
                                    "id30"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [],
                "messageFlows": []
            }
        }
    },
    "9_4.txt": {
        "0": {
            "text": "The process begins with the Coordination Unit finalizing dates.  Subsequently, the Support Officer updates calendars and creates folders.  The Support Officer then uploads documents.  Following this, Committee Members read the documents and then hold a meeting.  The Support Office then produces the minutes of the meeting.  The Coordination Unit conducts a QA check of the minutes.  The minutes are then sent to the Committee Members.  Finally, the Support Officer updates records, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit finalizes dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer updates calendars and creates folders",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer uploads documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members read documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Support Office produces minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit conducts QA check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Minutes sent to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Support Officer updates records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the Coordination Unit finalizing dates.  The Support Officer then updates calendars and creates folders, followed by uploading documents.  Next, Committee Members read the documents and hold a meeting.  The Support Office then produces the minutes of the meeting, which are then QA checked by the Coordination Unit.  Finally, the minutes are sent to Committee Members, and the Support Officer updates records, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit finalizes dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer updates calendars and creates folders",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer uploads documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members read documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Support Office produces minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit conducts QA check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Minutes sent to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Support Officer updates records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process starts with the Coordination Unit finalizing dates.  Subsequently, the Support Officer updates calendars and creates folders.  The Support Officer then uploads documents.  Following this, Committee Members read the documents and then hold a meeting.  The Support Office then produces the minutes of the meeting.  The Coordination Unit conducts a QA check of the minutes.  The minutes are then sent to the Committee Members.  Finally, the Support Officer updates records, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Coordination Unit finalizes dates",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Support Officer updates calendars and creates folders",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Support Officer uploads documents",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Committee Members read documents",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Support Office produces minutes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Coordination Unit conducts QA check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Minutes sent to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Support Officer updates records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "10_10.txt": {
        "0": {
            "text": "The process begins when a fault detector reports a failure or the MPO has a suspicion of a failure.  The MPO then examines the failure and decides whether to confirm or reject it. If the MPO rejects the failure, the process ends. If the MPO confirms the failure, the MPO fixes the fault and shares the result with the fault detector.  Following this, the process splits into two parallel paths which later converge. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPO fixes the fault",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPO shares the result with fault detector",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Fault detector reports failure or MPO has suspicion",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "MPO confirms or rejects failure?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "type": "Parallel"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3",
                        "conditionalExpression": "MPO rejects"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4",
                        "conditionalExpression": "MPO confirms"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process starts with the MPO examining the failure.  The MPO then confirms or rejects the failure. If the failure is rejected, the process ends. If the failure is confirmed, the MPO informs the GO and MSP.  Following this, the MPO fixes the fault and shares the repair results.  Finally, the MPO informs the GO of the resolution and then informs the MSP of the resolution, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPO informs GO and MSP",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPO fixes the fault",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "MPO shares repair results",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "MPO informs GO of resolution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "MPO informs MSP of resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "MPO confirms or rejects failure",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a fault detector reports a failure or an MPO has a suspicion of a failure.  The MPO then examines the failure and subsequently confirms or rejects the failure. If the failure is rejected, the process ends. If the failure is confirmed, the MPO fixes the fault and then shares the results of the repairs.  After sharing the results, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "MPO fixes the fault",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "MPO shares the results of the repairs",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Fault detector reports failure or MPO has suspicion",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "MPO confirms or rejects failure",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "3_7.txt": {
        "0": {
            "text": "The process begins with a search of the police report.  The report is then placed in a file with the claim documentation. Next, an initial claim estimate is calculated.  Following this calculation, an action plan is created.  The next step is to negotiate a settlement. Finally, the claimant is informed of the outcome, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Put in File with Claim Documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Claimant of Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a search for the police report.  The report is then filed. Next, an initial claim estimate is calculated.  Following this, an action plan is created.  The next step is to negotiate a settlement. Finally, the claimant is informed of the outcome, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Put in File",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform claimant of outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a search of the police report.  The report is then put in a file with the claim documentation. Next, an initial claim estimate is calculated.  Following this calculation, an action plan is created.  The next step is to negotiate a settlement. Finally, the claimant is informed of the outcome, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search Police Report",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Put in File with Claim Documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate Initial Claim Estimate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Settlement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Claimant of Outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "7_1.txt": {
        "0": {
            "text": "The process begins with the manager checking open leads.  Next, the manager selects the top five leads. A sales assistant then calls the customer.  Following the call, the sales assistant determines whether the customer is interested. If the customer is not interested, the sales assistant calls the next lead from the top five. If the customer is interested, the sales assistant sends a note to the manager, who then processes the lead, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manager checks open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Manager selects top five leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Sales Assistant calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Sales Assistant sends note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Manager processes lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Customer Interested?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the manager checking open leads. Afterwards, the manager selects the top five leads.  A sales assistant then calls the customer. Based on the outcome of the call, the process branches: if a certain condition is met, the sales assistant sends a note to the manager, who then processes the lead, after which the process ends. If the condition is not met, the sales assistant calls the next customer from the top five leads selected by the manager.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manager checks open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Manager selects top five leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Sales Assistant calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Sales Assistant sends note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Manager processes lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with checking open leads. Subsequently, the top 5 leads are selected, and this selection is sent to the Sales Assistant. The Sales Assistant then calls the customer. Based on the customer's interest, the process diverges. If the customer is not interested, the Sales Assistant sends a note to the Manager, which is then used to process the lead. If the customer is interested, the Sales Assistant loops back to call the next customer from the top 5 leads. Finally, after processing the lead, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check open leads",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select top 5 leads",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send note to manager",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Process lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Interested?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "ManagerLane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Sales Assistant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "SalesAssistantLane",
                                "elemRefs": [
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ]
            }
        }
    },
    "6_4.txt": {
        "0": {
            "text": "The process starts with determining contact details.  This can be done via cold call, exhibition, or contact through acquaintance.  Regardless of the method used, the call center then determines the contact person and budget.  Next, it is evaluated whether the customer is interested. If not, the process ends. If the customer is interested, the process continues by checking if they have a large budget. If so, the head of development contacts the customer, after which the customer's interest is reevaluated. If the customer is no longer interested, the process ends. If they are still interested, or if they initially didn't have a large budget, a decision is made on who gives the presentation: either a sales representative or a pre-sales employee. After the presentation, it is checked if the customer was contacted within 2 weeks.  If so, the sales representative calls the customer.  Finally, a quotation is created, and the process ends. If the customer was not contacted within 2 weeks, the quotation is created directly, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine contact details",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Cold call",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Exhibition",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Contact through acquaintance",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Call center determines contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Head of development contacts customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Detailed online presentation by sales representative",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Detailed online presentation by pre-sales employee",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Sales representative calls customer after 2 weeks",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create quotation",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "How to determine contact details?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "Customer interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg3",
                        "name": "Large budget?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg4",
                        "name": "Who gives presentation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg5",
                        "name": "Contacted within 2 weeks?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "idg1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "idg1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "idg2",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "idg3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "idg3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "idg2",
                        "targetRef": "idg4"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "idg4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "idg4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id7",
                        "targetRef": "idg5"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id8",
                        "targetRef": "idg5"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "idg5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "idg5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process starts with determining the customer's contact details. Based on how these details are determined, the customer is contacted via a call. Next, the contact person and their budget are determined, followed by inquiring about the customer's general interest. Depending on the customer's interest, the process branches. If interested, the budget is evaluated. If the budget is substantial, the Head of Development attempts to acquire the customer, after which the customer's interest is re-evaluated.  Regardless of the Head of Development's involvement, if the customer remains interested, a detailed online presentation is given. Based on who gives this presentation, the process waits for the customer to make contact. If contact is made within two weeks, a sales representative calls the customer. Regardless of whether the customer contacted within two weeks, a quotation is created, after which the process ends. If at any point the customer expresses disinterest, the process proceeds directly to creating a quotation and then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "determine contact details",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Start calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "determine contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "ask customer about general interest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Head of development tries to acquire customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "wait for customer contact",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "sales rep calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "create quotation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "How contact details are determined?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Customer interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Is budget huge?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Who gives online presentation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Contacted within 2 weeks?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process starts with determining contact details.  Then, depending on how the contact details are determined, either a cold call is made, an exhibition takes place, or a referral is given.  Regardless of how the contact details were determined, the next step is calling the customer.  After calling the customer, the budget and contact person are determined.  Next, it is decided whether the customer is interested or not. If interested, an online presentation is given. If not interested, the budget is checked. If the budget is huge, the head of development acquires the customer, and then an online presentation is given. If the budget is not huge, the process ends. After the online presentation, it is determined whether the presentation was technical.  If it was technical, there is a waiting period, after which it is determined whether the customer was contacted within 2 weeks. If contacted within 2 weeks, the sales representative calls the customer.  If not contacted within 2 weeks, or if the presentation was not technical, a quotation is made.  Finally, after either the sales representative calls the customer or a quotation is made, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine contact details",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Cold call",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Exhibition",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Referral",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Determine budget and contact person",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Head of development aquires the customer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Online presentation",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Wait",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Sales representative calls customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Quotation",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "How to determine contact details?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Interested?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Budget Huge?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Is presentation technical?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Contacted within 2 weeks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_1.txt": {
        "0": {
            "text": "The process begins when a party sends a warrant possession request.  Client Service Back Office receives the request and retrieves the SCT file.  The SCT Warrant Possession is then forwarded to Queensland Police.  The SCT physical file is stored, after which the respective SCT file is retrieved. A new SCT document is attached, and finally, the expanded SCT physical file is stored, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "party sends a warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Client Service Back Office receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "retrieve the SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "forward SCT Warrant Possession to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "store the SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "store the expanded SCT physical file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a party sends a warrant possession request.  Client Service Back Office then receives the request.  The next step is to retrieve the SCT file.  Following this, the SCT Warrant Possession is forwarded to Queensland Police.  The SCT physical file is then stored.  The respective SCT file is retrieved, and a new SCT document is attached. Finally, the expanded SCT physical file is stored, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "party sends warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Client Service Back Office receives the request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "retrieve the SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "forward SCT Warrant Possession to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "store the SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "store expanded SCT physical file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a party sends a warrant possession request.  Client Service Back Office then receives the request and retrieves the SCT file.  The SCT Warrant Possession is forwarded to Queensland Police.  The Back Office stores the physical file.  The Police then sends a report.  The Back Office retrieves the respective SCT file and attaches a new SCT document. Finally, the Back Office stores the expanded SCT file, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Party sends warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Client Service Back Office receives request and retrieves SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "SCT Warrant Possession is forwarded to Queensland Police",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Back Office stores physical file",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Police sends report",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Back Office retrieves respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Back Office attaches new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Back Office stores expanded SCT file",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_3.txt": {
        "0": {
            "text": "The process begins when a new order is received.  The first step is to determine the necessary parts and their quantities, as well as the desired delivery date.  This information is then entered into the PPS system.  Next, the data is manually transferred to the ERP system.  Following this transfer, a check is performed to determine if any parts are missing. If no parts are missing, the implementation of the order is taken care of.  Finally, the order quality is checked, and the process ends with the order being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts and quantities as well as delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Transfer data manually to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Take care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receive new order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id6",
                        "name": "Parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a new order is received.  The first step is to determine the necessary parts and quantities, as well as the delivery date.  Next, this data is entered into the PPS system. The data is then manually transferred to the ERP system.  At this point, a check is performed to see if any parts are missing. If not, production is started, and a notice is received.  An employee then takes care of the implementation, after which the order quality is checked. Finally, the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts and quantities as well as delivery date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter data into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Transfer data manually to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Start production and receive notice",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Employee takes care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receive new order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a new order is received.  The first step is to determine the necessary parts and quantities.  Next, this data is entered into the PPS system. The data is then transferred to the ERP system.  At this point, a check is performed to see if any parts are missing. If parts are missing, they are procured.  Once all parts are available (either immediately or after procurement), a notice is received from the system.  Production is then implemented.  Finally, the order quality is checked, and the order is marked as completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine necessary parts and quantities",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter data into PPS",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Transfer data to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Implement production",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check order quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Receive new order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Receive notice from system",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Parts missing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_4.txt": {
        "0": {
            "text": "The process begins when a company decides to go public.  The first step is to select underwriters.  Following this, the underwriters provide procedural and financial advice.  Concurrently, the company prepares a registration statement, checks blue-sky law compliance, begins to firm up the issue price, and arranges a road show.  These activities all lead to receiving SEC clearance.  While this is happening, the underwriters buy the issue and resell it to the public.  Once SEC clearance is received, the issue price is fixed, and the company enters into a firm commitment.  At this point, a decision is made whether or not there is a reason not to offer the stock. If there is no reason not to offer, the stock is offered to the public.  Once the stock is offered to the public or the underwriters have resold the issue to the public, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Resell to the public",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare registration statement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check blue-sky law compliance",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Begin to firm up issue price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Arrange road show",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive SEC clearance",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter into firm commitment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Offer stock to public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Company decides to go public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Reason not to offer?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a company decides to go public.  The first step is to select underwriters, followed by providing procedural and financial advice. The underwriters then buy the issue and resell it to the public.  Next, a registration statement is prepared, and the issue's compliance with blue-sky laws is checked.  The company then begins to firm up the issue price and arranges a road show.  After receiving clearance from the SEC, the issue price is fixed. The underwriters enter into a firm commitment to buy the stock.  Finally, the stock is either offered to the public, after which the process ends, or the process ends without the stock being offered to the public.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Resell to the public",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare a registration statement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check issue compliance with blue-sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Begin to firm up the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Arrange a road show",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive clearance from the SEC",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter into a firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Offer the stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Company decides to go public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins when a company decides to go public.  The first step is to select underwriters.  Then, the underwriters provide procedural and financial advice while simultaneously preparing a registration statement.  After the registration statement is prepared, compliance with blue-sky laws is checked.  Next, the firm begins to firm up the issue price and arranges a road show.  Following the road show, clearance from the SEC is received, allowing the firm to fix the issue price.  The underwriters then enter into a firm commitment to buy the stock.  At this point, a decision is made whether or not to offer the stock to the public. If the decision is to offer the stock to the public, the stock is offered, and the process ends. If not, the process ends without offering the stock to the public.  Concurrently with providing advice, the underwriters buy the issue and resell it to the public.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Resell the issue to the public",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare a registration statement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check compliance with blue-sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Begin to firm up the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Arrange a road show",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive clearance from the SEC",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter into a firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Offer the stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Company decides to go public",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Reason not to offer to public?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "3_6.txt": {
        "0": {
            "text": "The process begins when a claim is received. The first step is to check the insurance.  If the claimant is not insured, they are informed of the rejection, and the process ends. If the claimant is insured, the claim's severity is evaluated.  If the claim is simple, the relevant forms are sent to the claimant.  The received forms are then checked for completeness. If the forms are complete, the claim is registered, and the process ends. If the forms are incomplete, the claimant is informed to update the forms.  Once updated, the forms are checked again for completeness, looping back to the completeness check until they are satisfactory.  If the claim is complex, it also follows the same path of sending forms, checking completeness, requesting updates if necessary, and finally registering the claim.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Inform Claimant of Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Forms for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Claim Registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Insured?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Simple or Complex?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins when a claim is received. The first step is to check the insurance.  Then, the claim is evaluated to determine whether it is simple or complex. If the claim is simple, it is rejected. If the claim is complex, the claim's severity is evaluated, and the relevant forms are sent out.  The completeness of the returned forms is then checked. If the forms are complete, the claim is registered and the process ends. If the forms are incomplete, the claimant is informed of the need to update the forms. Once the updated forms are received, they are checked for completeness. If the updated forms are complete, the claim is registered and the process ends. If the updated forms are still incomplete, the claimant is again informed of the need to update the forms, and this loop continues until the forms are complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Forms Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id2",
                        "name": "Claim Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id5",
                        "name": "Simple or Complex Claim?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id7",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Updated Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a claim is received.  The insurance is then checked. If the claimant is not insured, the claimant is informed of the rejection and the process ends. If the claimant is insured, the claim severity is evaluated.  If the claim is simple, relevant forms are sent to the claimant.  The completeness of the forms is then checked. If the forms are complete, the claim is registered and the process ends. If the forms are incomplete, the claimant is informed to update the forms. Once updated, the forms are checked again for completeness, looping back to the completeness check. If the claim is complex, the process follows the same path as for a simple claim, starting with sending the relevant forms.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Inform Claimant of Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Claim Severity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Relevant Forms",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Forms for Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register Claim",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform Claimant to Update Forms",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Updated Forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Claim Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Claim Registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Insured?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Simple or Complex?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Forms Complete?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    }
                ],
                "pools": [],
                "messageFlows": []
            }
        }
    },
    "9_1.txt": {
        "0": {
            "text": "The process begins by backing up the database.  Next, the Account Defaulter table is checked for new records. If new records are found, the database backup task is performed again. If no new records are found, the CRM system is checked for new returns. If no new returns are found, the CRM system is checked again for new returns. If new returns exist, all defaulting accounts and customers are registered.  Then, it is determined whether the defaulting client codes have been previously advised. If the defaulting client codes have not been previously advised, a table of defaulting accounts is produced and sent to account management.  If the defaulting client codes have been previously advised, the process checks if the previous steps were completed by 2:30 pm. If completed by 2:30 pm, the CRM system is checked for new returns. If not completed by 2:30 pm, the CRM system is checked for new returns. Regardless of whether new returns are found or not, if the previous steps were completed by 2:30 pm, the CRM system is checked for new returns. If new returns are found, they are reconciled with the existing account defaulters table.  If the reconciliation is completed by 4:00 pm, the process ends. If the reconciliation is not completed by 4:00 pm, the process ends. If the defaulting client codes were previously advised, the process checks if the subsequent steps were completed by 2:30 pm. If so, the CRM system is checked for new returns. If not, the CRM system is also checked for new returns. If no new returns are found when checking the CRM system, the CRM system is checked again for new returns.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register all defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send to account management",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Reconcile with existing account defaulters table",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start Event",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "No new records",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id5",
                        "name": "New returns exist",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Defaulting client codes not previously advised",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Completed by 2:30 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Not completed by 2:30 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id13",
                        "name": "New returns filed",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Completed by 4:00 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Not completed by 4:00 pm",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idg1",
                        "name": "New records found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg2",
                        "name": "New returns found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg3",
                        "name": "Previously advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg4",
                        "name": "New returns found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg5",
                        "name": "Completed in time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idg6",
                        "name": "Completed in time?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "idg1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idg1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "idg2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "idg2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "idg3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "idg3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "idg5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "idg5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "idg5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "idg4"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "idg4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "idg6"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "idg6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "idg6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "idg1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "idg2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "idg3",
                        "targetRef": "idg5"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with backing up the database. Next, the Account Defaulter table is checked for new records. If new records exist, the CRM system is checked for new returns.  If new returns exist, defaulting accounts and customers are registered. Subsequently, a check is performed to see if client codes have been advised. Regardless of whether new records exist in the Account Defaulter table, or if new returns exist in the CRM, or if client codes have been previously advised, the process proceeds to produce a table of defaulting accounts. This table is then sent to account management.  A check is then made to determine if the process has been completed by the 2:30 pm deadline. If not, the process waits until the deadline and then alerts the supervisor. If the 2:30 pm deadline has passed, the CRM system is checked again for new returns. If new returns have been filed, they are reconciled with the Account Defaulters table.  Regardless of whether the 2:30 pm deadline has passed or if new returns have been filed, the process waits for the 4:00 pm deadline. Once the 4:00 pm deadline is reached, a message is sent to the supervisor, and the process ends. If no new returns are filed after the 2:30 pm deadline check, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if client codes have been advised",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send report to account management",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Check CRM for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Reconcile with Account Defaulters table",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "2:30 pm deadline",
                        "type": "IntermediateTimer"
                    },
                    {
                        "id": "id13",
                        "name": "Alert supervisor (2:30 pm)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "4:00 pm deadline",
                        "type": "IntermediateTimer"
                    },
                    {
                        "id": "id17",
                        "name": "Message Supervisor (4:00 pm)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "New records?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "New returns exist?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Previously advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Completed by 2.30pm?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "New returns filed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id19",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id19",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "2": {
            "text": "The process begins with backing up the database.  Next, the Account Defaulter table is checked for new records. If new records exist, the CRM system is checked for new returns. If there are new returns, defaulting accounts and customers are registered.  Following this, a check is performed to determine if defaulting client codes have been previously advised. If they have not been advised, a table of defaulting accounts is produced and sent to account management.  Regardless of whether defaulting client codes were previously advised or new returns existed, the process waits until a 2:30 PM deadline. At 2:30 PM, an alert is sent to the supervisor. If new records were not found in the Account Defaulter table, the CRM system is checked for new returns. If new returns are filed, they are reconciled with the existing account defaulters table.  Regardless of whether new returns were filed or not, the process waits until a 4:00 PM deadline. At 4:00 PM, a message is sent to the supervisor, and the process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Backup the database",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if defaulting client codes have been previously advised",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send to account management",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Reconcile with existing account defaulters table",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "2:30 PM deadline",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Alert supervisor (2:30 PM)",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id17",
                        "name": "4:00 PM deadline",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Send message to supervisor (4:00 PM)",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "New records in Account Defaulter table?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "New returns exist?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Defaulting client codes previously advised?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "New returns filed?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id17",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "5_4.txt": {
        "0": {
            "text": "The process begins when an employee purchases a product or service. Subsequently, the employee submits an expense report, which is then reviewed by their supervisor. The supervisor then decides whether to approve the report. If the report is not approved, the employee must edit the expense report and resubmit it to their supervisor for review.  If the report is approved, the treasurer checks the receipts. If the receipts do not match the report, the employee must edit and resubmit the expense report, which again goes through the supervisor's review. If the receipts match, the treasurer accepts the expenses. An automatic activity then links to the payment system, and the process waits for payment confirmation before concluding.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Employee purchases product/service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Employee submits expense report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Supervisor reviews expense report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Employee edits expense report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Treasurer checks receipts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Treasurer accepts expenses",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Automatic activity links to payment system",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for payment confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Report approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipts match?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        },
        "1": {
            "text": "The process begins with the purchase of a product or service.  The employee then submits an expense report, which is subsequently reviewed.  The reviewer then decides whether to approve or reject the report. If rejected, the employee must edit the expense report and resubmit it for review.  If the report is potentially approved, the receipts are checked. If the receipts are not okay, the employee must again edit the expense report and resubmit it for review. If the receipts are okay, the expenses are accepted for processing.  The process then links to the payment system and waits for payment confirmation before ending.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase product/service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review expense report",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Edit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check receipts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept expenses for processing",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Link to payment system",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for payment confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Approve or reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipts OK?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the purchase of a product or service.  Following the purchase, an expense report is submitted and subsequently reviewed. The review process leads to a decision point: approve or reject. If rejected, the expense report must be edited and then re-submitted for review.  If, after editing, the report is still rejected, it proceeds to a check of the receipts. If the original review is approved, the receipts are also checked. After checking the receipts, there's a final decision: accept or reject. Rejection leads back to editing the expense report. Acceptance, however, means the expenses are accepted for processing, which involves linking to a payment system and waiting for payment confirmation, thus concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase product / service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review expense report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Edit expense report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check receipts",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Accept expenses for processing",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Link to payment system",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Wait for payment confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id4",
                        "name": "Approve or reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id6",
                        "name": "Approve or reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Accept or reject?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "2_2.txt": {
        "0": {
            "text": "The process begins with a switch-over request. The customer transmits data to customer service, who then receives the customer data and enters it into the CRM.  The new supplier compares the data with their internal customer database. If the customer exists, any errors are corrected, and the data is re-entered into the CRM.  If the customer does not exist, a new customer object is created. Next, the new supplier prepares the contract documents, which are then automatically checked. If the documents are not generated correctly, they are analyzed, issues are resolved, and the documents are prepared again.  If the documents are correctly generated, a confirmation document is sent to the customer, and a switch-over request is sent to the grid operator. The grid operator checks the request. If supplier concurrence is needed, the grid operator informs suppliers and resolves any demand conflicts. If concurrence is not achieved, the sales agreement is terminated, and the grid operator checks the switch-over request again. If supplier concurrence is achieved, the new supplier creates a CIS contract, which the customer then checks. If the customer confirms the contract, the process ends for the customer and new supplier. If the customer withdraws or does not respond within 7 days, the customer is automatically withdrawn.  If the customer is withdrawn, either automatically or explicitly, the grid operator imports meter data to systems, computes the final billing, and creates and sends the final billing to the old supplier, after which the process ends for all parties.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "compare with internal customer database",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "correct errors",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "automated check of contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "send confirmation document to customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "send switch-over request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "check switch-over request",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "inform suppliers and demand conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "terminate sales agreement",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "customer checks contract details",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "import meter data to systems",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "create and send final billing to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "switch-over request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id27",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id29",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Customer exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Contract documents generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Supplier concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Customer confirms/withdraws?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "7 days passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id16",
                                    "id26",
                                    "id28"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "New Supplier",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id10",
                                    "id15",
                                    "id17",
                                    "id27"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "CIS",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Grid Operator",
                                "elemRefs": [
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id18",
                                    "id29"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Old Supplier",
                        "lanes": [
                            {
                                "id": "lane5",
                                "name": "Old Supplier",
                                "elemRefs": [
                                    "id19",
                                    "id29"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id21",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id22",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id23"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id23",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id24",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id24",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id26",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id25",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id17",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id26",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id19",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "id18",
                        "targetRef": "id29"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a switch-over request.  Customer service transmits data to the customer, receives customer data, and enters it into the CRM.  The data is compared and checked for completeness. If errors are found, they are corrected, and the data is checked again.  If the customer exists, data correction takes place, otherwise, a new customer object is created.  Next, contract documents are prepared and checked. If the documents are not generated correctly, document issues are analyzed and resolved, after which the contract documents are prepared and checked again. If the contract documents are correctly generated, a confirmation is sent to the customer, and a switch-over request is sent to the grid operator. The grid operator checks the switch-over request. If supplier concurrence is not achieved, the customer service informs suppliers and resolves demand conflicts, and the switch-over request is checked again. If supplier concurrence is achieved, a CIS contract is created, which the customer then checks.  After 7 days, or if the customer confirms the contract, meter data is transmitted.  The meter data is also imported into the systems.  Finally, the final billing is computed and sent to the customer, and the process ends. If the customer withdraws from the contract, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "compare data and check completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "correct data errors",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "check contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "analyze and resolve document issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "send confirmation to customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "send switch-over request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "check switch-over request",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "inform suppliers and demand conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "terminate sales agreement",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "customer checks contract",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "withdraw from contract",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "confirm contract",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "transmit meter data",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "send final billing to customer",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "import meter data to systems",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "switch-over request",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id24",
                        "name": "process end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "7 days",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Customer exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Contract generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Supplier concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Contract accepted?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id26",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id27",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id27",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id28",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id28",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id29",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id29",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id16",
                        "targetRef": "id25"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id25",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id21",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id24"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Customer Service",
                        "lanes": []
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator",
                        "lanes": []
                    },
                    {
                        "id": "pool4",
                        "name": "Old Supplier",
                        "lanes": []
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with a switch-over request.  The customer service transmits data to the customer, receives customer data back, and enters it into the CRM. The customer data is compared and checked for completeness. If the customer exists, any errors are corrected and the completeness check is repeated. If the customer does not yet exist, a new customer object is created. Next, the contract documents are prepared and automatically checked. If the documents are not successfully generated, issues are analyzed and resolved, after which the contract documents are prepared again. If the documents are successfully generated, a confirmation document is sent to the customer, and a switch-over request is sent to the grid operator. The grid operator checks the switch-over request for supplier concurrence. If there is no concurrence, the involved suppliers are informed, conflict resolution is demanded, and the concurrence is checked again after terminating the sales agreement with the old supplier. If there is concurrence, a CIS contract is created, and the customer checks the contract details.  At this point, either 7 days elapse or the customer confirms the contract. If the customer withdraws from the contract, the process ends. If the customer confirms the contract or 7 days have passed, the switch-date is reached. Power meter data is then transmitted to customer service and the old supplier.  Finally, the final billing is computed and sent to the customer, the meter data is imported into the systems, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "transmit data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "compare customer data and check for completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "correct errors",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "automated check of contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "send confirmation document to customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "send switch-over request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "check switch-over request for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "inform involved suppliers and demand conflict resolution",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "terminate sales agreement with old supplier",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "create CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "customer checks contract details",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "withdraw from switch contract",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "confirm switch contract",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "transmit power meter data to customer service and old supplier",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "compute final billing",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "send final billing to customer",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "import meter data to systems",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id23",
                        "name": "switch-over request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "7 days",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id26",
                        "name": "switch-date",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id27",
                        "name": "customer exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "contract documents generated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "supplier concurrence?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "customer confirmation/7 days?",
                        "type": "EventBasedGateway"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id23",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id27"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id27",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id27",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id28"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id28",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id28",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "id29"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id29",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id29",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id30"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id30",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id30",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id25",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "id18",
                        "targetRef": "id26"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id26",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "id21",
                        "targetRef": "id24"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "id22",
                        "targetRef": "id24"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "Customer",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "Customer_Service",
                        "name": "Customer Service",
                        "lanes": []
                    },
                    {
                        "id": "Grid_Operator",
                        "name": "Grid Operator",
                        "lanes": []
                    },
                    {
                        "id": "Old_Supplier",
                        "name": "Old Supplier",
                        "lanes": []
                    }
                ]
            }
        }
    },
    "6_2.txt": {
        "0": {
            "text": "The process starts at Assembler AG on a timer.  Assembler AG places an order, which is then sent to the Supplier. The Supplier processes the order and then sends an invoice back to Assembler AG.  Assembler AG receives the invoice, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Assembler AG places an order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "5",
                                    "6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with a timer event.  Assembler AG places an order. Then, Assembler AG sends the order to the Supplier. The Supplier processes the order and sends an invoice to Assembler AG.  Assembler AG receives the invoice, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "place an order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "send order to supplier",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "process the order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "send invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "receive invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "Assembler_AG",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "Assembler_AG_lane1",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Supplier",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "Supplier_lane2",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a timer event.  Assembler AG places an order. Then, Assembler AG sends the order to the Supplier. The Supplier processes the order and sends an invoice to Assembler AG.  Assembler AG receives the invoice, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "place an order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "send the order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "process the order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "send an invoice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "receive the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "start",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id9",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        }
    }
}