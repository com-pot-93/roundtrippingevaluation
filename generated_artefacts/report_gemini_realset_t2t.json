{
    "G_g03.txt": {
        "0": {
            "text": "The process starts.  If the user does not have a battle.net account, they enter their account information and click a link in a confirmation mail. Subsequently, the process checks if the user has a WoW subscription. If not, the user selects a payment method, which can be either credit card or bank account. If the user selects credit card, they enter their credit card information. If the user selects bank account, they enter their IBAN and BIC. Regardless of the payment method, the user then logs into the game. If the user already has a battle.net account, the process directly checks for a WoW subscription. If the user has a WoW subscription, they directly log into the game. In parallel to the battle.net account check, the user comes up with character names. After logging in, the user selects realm, race, and class, and then enters a character name. The process waits for the name availability. If the name is available, the process ends. If an expansion is released while waiting for name availability, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter account information",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click link in confirmation mail",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Log into game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select realm, race, and class",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Come up with character names",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter character name",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Expansion Released",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id12",
                        "name": "Name available",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "battle.net account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "WoW subscription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id15",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts. If the user does not have a battle.net account, they enter their account information and click a confirmation link.  Next, regardless of whether they had to create a battle.net account, the process checks if they have a WoW subscription. If not, they select a payment method. If they choose credit card, they enter their credit card information. If they choose bank account, they enter their IBAN and BIC.  Once payment information is entered or if they already had a subscription, they log into the game. If they created a battle.net account at the start, they now also check if they have a WoW subscription. If not, they select a payment method and enter the appropriate information as described before, then log into the game. After logging in, the user selects realm, race, and class. Concurrently, the user comes up with character names and enters a character name.  If the name is available, the process ends. If the name is not available, the user enters a new character name and checks availability again. The process can also end if an expansion is released.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter account information",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click confirmation link",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Log into game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select realm, race, and class",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Come up with character names",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter character name",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Expansion Released",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Name available",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "battle.net account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "WoW subscription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Name Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id15",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts. If the user does not have a battle.net account, they must enter their account information and click a link in a confirmation mail.  Regardless of whether the user had to create a battle.net account or not, the process continues with checking for a WoW subscription. If they do not have a WoW subscription, they must select a payment method. If they choose credit card, they enter their credit card information. If they choose bank account, they enter their IBAN and BIC.  If the user already has a WoW subscription or after payment information has been entered, they log into the game. Regardless of the path taken, the user then selects realm, race, and class. In parallel to account creation and subscription set up, the user comes up with character names. After selecting realm, race, and class, the user enters a character name. If the name is not available, the user must enter a new character name. This loop continues until a name is available. Once the name is available, the process ends.  The process can also end when the expansion is released.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter account information",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click link in confirmation mail",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Log into game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select realm, race, and class",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Come up with character names",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter character name",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Expansion Release",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Name available",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "battle.net account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "WoW subscription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Name available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id15",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j05.txt": {
        "0": {
            "text": "The process starts with checking the requirements for working and living in Austria.  After this, the user organizes accommodation and negotiates a bank account. Once the accommodation and bank account are organized, the process continues.  In parallel to organizing accommodation and a bank account, the user also applies for a Visa (Rot-Weiss-Rot Card). This involves gathering visa application documents and submitting the visa application.  The application is then checked, and the process branches based on whether the visa application is approved or rejected. If approved, the visa is renewed every X months. If rejected, the process ends.  Regardless of whether the visa was obtained via the initial application or after organizing accommodation and a bank account, the visa renewal process leads to the completion of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Requirements for Working and Living in Austria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Organize Accommodation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Negotiate Bank Account",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Apply for Visa (Rot-Weiss-Rot Card)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Gather Visa Application Documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Submit Visa Application",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Renew Visa Every X Months",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Visa Approved",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Visa Rejected",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Accommodation and Bank Account Organized",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Visa Application Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with checking the requirements for working and living in Austria.  Next, accommodation is organized, followed by negotiating a bank account. Once the accommodation and bank account are organized, the application for a Rot-Weiss-Rot Card visa begins.  This involves gathering the visa application documents and submitting the application.  The applicant then awaits the visa decision.  If the visa is approved, the visa is renewed every X months, and the process ends with the applicant working and living in Austria. If the visa is rejected, the process ends with the applicant unable to work and live in Austria.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Requirements for Working and Living in Austria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Organize Accommodation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Negotiate Bank Account",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Apply for Visa (Rot-Weiss-Rot Card)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Gather Visa Application Documents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Submit Visa Application",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Await Visa Decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Renew Visa Every X Months",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Visa Approved",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Visa Rejected",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Accommodation and Bank Account Organized",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Work and Live in Austria",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Unable to Work and Live in Austria",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Visa Decision?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id10",
                        "condition": "Approved"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id11",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with checking the requirements for working and living in Austria.  Next, the required documents are gathered, and the visa application form is completed.  The applicant then negotiates accommodation and sets up a bank account.  The visa application is then submitted, and the applicant awaits the visa decision.  If the visa is approved, the process ends with the visa being approved, after which the visa is renewed every X months. If the visa is rejected, the process ends with the visa being rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Requirements for Working and Living in Austria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Gather Required Documents",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Complete Visa Application Form",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Negotiate Accommodation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Set up Bank Account",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Submit Visa Application",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Await Visa Decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Renew Visa Every X Months",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Visa Approved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Visa Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Visa Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_g01.txt": {
        "0": {
            "text": "The process starts with entering the phone model and broken parts.  Next, the available materials and tools are checked.  Then, friends are contacted for any missing parts or tools.  Any remaining necessary parts or tools are purchased.  After acquiring all necessary resources, repair instructions are received.  The phone is then repaired.  Following the repair attempt, a check is performed to determine if the repair was successful. If the repair was successful, a review or video is sent, and the process ends with a successful repair. If the repair was not successful, the phone is sent to an expert, and the process ends with a failed repair.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter phone model and broken parts",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check materials and tools",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact friends for parts/tools",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Buy necessary parts/tools",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive repair instructions",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Repair the phone",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Send review/video",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send phone to expert",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Repair successful",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Repair failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Repair successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with entering the phone model and the broken part.  Next, the required materials, tools, and ordering choices are retrieved. The user then checks their owned materials and tools.  Following this, the user contacts friends for borrowing or buying materials/tools.  Any remaining materials or tools are then purchased.  Repair instructions are then received. The user then attempts to fix the phone.  If the repair is successful, a review or video is sent, and the process ends with a successful repair. If the repair is not successful, the phone is sent to an expert, and the process ends with repair failure.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter phone model and broken part",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Get materials, tools, ordering choices",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check owned materials/tools",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact friends for borrowing/buying",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Buy the rest of the materials/tools",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive repair instructions",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Fix the phone",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Send review/video",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send phone to expert",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Repair Successful",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Repair Failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Repair successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with entering the phone model and the broken part.  Next, the required materials, tools, and ordering choices are retrieved. The user then checks their owned tools and materials.  Following this, the user contacts friends for borrowing or buying items.  Then, any remaining required items are purchased.  Repair instructions are then received. The user follows the provided repair instructions.  Next, the process checks if the repair was successful. If yes, the user sends a review or video, and the process ends with a successful repair. If the repair was not successful, the phone is sent to an expert, and the process ends with repair failure.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter phone model and broken part",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Get materials, tools, and ordering choices",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check owned tools and materials",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact friends for borrowing/buying",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Buy the rest of the required items",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive repair instructions",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Follow repair instructions",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send review/video",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send phone to expert",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Repair Successful",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Repair Failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Repair successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j02.txt": {
        "0": {
            "text": "The process starts with fetching information about potential models.  Next, a model is selected, and relevant information is collected.  Social Security is notified, followed by a notification to the company. Information is gathered from the companies. Finally, a decision is made about an extension, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fetch information about potential models",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select model",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect relevant information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Social Security",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Notify Company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Gather information from companies",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Decide about extension",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with fetching information about potential models.  Next, a model is selected.  Relevant information is then collected.  Social Security is notified, followed by a notification to the company. Information is gathered from the companies. Finally, a decision is made about an extension, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fetch information about potential models",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select model",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect relevant information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Social Security",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Notify Company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Gather information from companies",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Decide about extension",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with fetching information about potential models.  Next, a model is selected, and relevant information is collected.  Social Security is notified, followed by a notification to the company. Information is gathered from companies. Finally, a decision about extension is made, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fetch information about potential models",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select model",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect relevant information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Social Security",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Notify Company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Gather information from companies",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Decide about extension",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "V_g01.txt": {
        "0": {
            "text": "The process starts when an order is received.  The first decision to be made is whether the order is for a menu or just a burger. If it's a menu, a drink is prepared. Next, a decision is made whether the customer wants fries or wedges. If fries are chosen, they are prepared. If wedges are chosen, they are prepared.  If the initial decision was just a burger, the burger is prepared directly. After either fries or wedges (in case of a menu) or directly after the drink (in case of just a burger), the burger is prepared. Finally, the order is delivered, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Drink",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Fries",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Wedges",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Burger",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver Order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Receive Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order Delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Menu or Just Burger?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Fries or Wedges?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1",
                        "condition": "Menu"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "Just Burger"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Fries"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Wedges"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an order is received.  The first decision to be made is whether the order is for a menu or just a burger. If it's a menu, a drink is prepared. Next, it is determined whether the order includes fries or wedges. If fries are ordered, they are prepared. If wedges are ordered, they are prepared.  Regardless of whether fries or wedges are prepared, a burger is then prepared. If the initial order was just a burger, the burger is prepared directly after the first decision. Finally, the order is delivered, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Drink",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Fries",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Wedges",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Burger",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver Order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Receive Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order Delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Menu or Just Burger?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Fries or Wedges?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1",
                        "condition": "Menu"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "Just Burger"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Fries"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Wedges"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an order is received.  The first decision to be made is whether the order is for a menu or just a burger. If it's a menu, a drink is prepared.  Following this, the next decision branches between fries and wedges. If fries are chosen, they are prepared. If wedges are chosen, they are prepared.  After either fries or wedges are prepared, the burger is prepared. If the initial decision was just a burger, then the burger is prepared directly after receiving the order. Finally, regardless of the chosen menu options, the order is delivered, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Drink",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Fries",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Wedges",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Burger",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver Order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Receive Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order Delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Menu or Just Burger?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Fries or Wedges?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1",
                        "condition": "Menu"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "Just Burger"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Fries"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Wedges"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "X_g03.txt": {
        "0": {
            "text": "The process starts with selecting a starting block.  Next, a 5km run is performed and the time is measured.  The runner then checks if the time is less than 25 minutes. If not, they train and check the time again, repeating the 5km run and measurement. If the time is less than 25 minutes, the runner gets their starting number.  The runner then figures out whether they can go to the night run from home or work. If there's more than one hour left, the runner goes to the night run from home. If not, they leave directly from work.  Finally, the runner runs the night run and drinks, receives their final running time, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select starting block",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Run 5km and measure time",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Train and check time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Get starting number",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find out whether you can go from home or work",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Go to Night Run from home",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Leave directly from work",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Run and drink",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive final running time",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Time < 25 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "More than one hour left?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts.  First, the starting block is selected. Then, a 5km run is performed and the time is measured. Next, the question \"Time < 25 minutes?\" is asked. If the answer is no, training is done and the time is checked, after which another 5km run is performed and the time is measured again. This cycle repeats until the time is less than 25 minutes. If the time is less than 25 minutes, the starting number is obtained.  After this, the starting point (home or work) is determined.  If there is more than 1 hour left, the participant goes to the starting block from home. If there is not more than 1 hour left, the participant goes to the starting block from work.  Finally, the participant runs and drinks, receives the final running time, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select starting block",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Run 5km and measure time",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Train and check time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Get starting number",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Determine starting point (home or work)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Go to starting block from home",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Go to starting block from work",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Run and drink",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive final running time",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Time < 25 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Time left > 1 hour?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts.  First, the starting block is selected. Next, a 5km run is completed, and the time is measured.  The runner then checks if the time is less than 25 minutes. If not, they train and check the time again, repeating the 5km run and time measurement. If the time is less than 25 minutes, the runner gets their starting number.  After receiving the starting number, the runner finds out where to leave from. Then, they check if there is more than one hour left. If so, they go to the Night Run from home. If not, they go to the Night Run from work. Regardless of where they left from, the runner then runs and drinks. Finally, they receive their final running time, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select starting block",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Run 5km and measure time",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Train and check time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Get starting number",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find out where to leave from",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Go to Night Run from home",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Go to Night Run from work",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Run and drink",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive final running time",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Time < 25 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "More than one hour left?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_g01.txt": {
        "0": {
            "text": "The process starts with instructing the artist.  Next, the artist sends sketches, and the customer requests changes.  After the changes are made, the customer chooses a plastic color.  If the color is in stock, the customer checks if there is enough plastic. If there isn't enough plastic, it's added to the shopping list, and then ordered. If there is enough plastic, the printer is turned on. If the color isn't in stock, it's ordered. Once the plastic is ordered, the printer is turned on.  Next, the print bed and extruder are heated up.  Then, the gcode is generated, and the model is printed. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Instruct artist",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send sketches",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request changes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Choose plastic color",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check plastic amount",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Add plastic to shopping list",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order plastic",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Turn on printer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Heat up bed and extruder",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Generate gcode",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Print model",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Color in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Enough plastic?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with instructing the artist.  Next, the artist sends sketches, and the client can request changes. After the changes are made, the client chooses a plastic color. Then it is checked if plastic is in stock. If plastic is in stock, it is checked if there is enough plastic. If there is not enough plastic, it is added to the shopping list and ordered. If there is no plastic in stock, it is also ordered.  If there is enough plastic in stock, the printer is turned on. After turning on the printer, the bed and extruder are heated up.  Next, the gcode is generated. Finally, the model is printed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Instruct artist",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send sketches",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request changes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Choose plastic color",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check plastic stock",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Add plastic to shopping list",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order plastic",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Turn on printer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Heat up bed and extruder",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Generate gcode",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Print model",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Plastic in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Enough plastic?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with instructing the artist.  Next, sketches are sent to the artist, and changes are requested.  A plastic color is then chosen.  The process checks if the color is in stock. If yes, the plastic stock is checked. If the color is not in stock, plastic is ordered. If there is not enough plastic stock, plastic is added to a shopping list, and then ordered. If there is enough plastic, the printer is turned on.  Regardless of whether plastic was ordered or already in stock, the bed and extruder are heated up after the printer is turned on.  Gcode is generated, the model is printed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Instruct artist",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send sketches to artist",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request changes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Choose plastic color",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check plastic stock",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Add plastic to shopping list",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order plastic",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Turn on printer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Heat up bed and extruder",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Generate gcode",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Print model",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Color in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Enough plastic?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "V_k09.txt": {
        "0": {
            "text": "The process starts with reading an order from the automatic order management system.  Next, a check is performed to see if the first product from the order is in stock. If the product is in stock, it is withdrawn from the warehouse, and the product is registered in the stock management system. If the product is not in stock, it is reordered from the wholesaler.  After reordering, a check is made to determine if more than 10 days have passed. If more than 10 days have passed, a delivery delay penalty is demanded from the wholesaler, and the product is then registered in the stock management system. If 10 days have not passed, the product is registered in the stock management system. After registering the product, a check is performed to see if the whole order is ready for shipment. If the order is ready for shipment, a courier is requested, the products are packed, and the process ends with the order being shipped. If the order is not ready for shipment, the next product from the order is selected, and the process loops back to check if this next product is in stock.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Read order from automatic order management system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check if the first product from the order is in stock",
                        "type": "Automated"
                    },
                    {
                        "id": "id3",
                        "name": "Withdraw from warehouse",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Reorder from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Demand delivery delay penalty from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register product in stock management system",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if whole order is ready for shipment",
                        "type": "Automated"
                    },
                    {
                        "id": "id8",
                        "name": "Request courier",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pack products",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Select next product from order",
                        "type": "Automated"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Order shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Product in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Waited more than 10 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Order ready for shipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with reading an order from the automatic order management system. Next, a check is performed to see if the first product from the order is in stock. If the product is in stock, it is withdrawn from the warehouse and registered in the stock management system. If the product is not in stock, it is reordered from the wholesaler.  After reordering, a check is made to determine if the wait time has exceeded 10 days. If the wait time has exceeded 10 days, a delivery delay penalty is demanded, and the product is then registered in the stock management system. If the wait time has not exceeded 10 days, the product is registered in the stock management system directly.  Following registration, a check is performed to see if the whole order is ready for shipment. If the order is ready for shipment, the process proceeds in parallel: a courier is requested, and the products are packed.  After both the courier request and packing are complete, the products are shipped, and the process ends. If the order is not ready for shipment, the next product from the order is selected, and the process loops back to check if this next product is in stock.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Read order from automatic order management system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check if the first product from the order is in stock",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Withdraw from warehouse",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Reorder from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Demand delivery delay penalty",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register product in stock management system",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if the whole order is ready for shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Request courier",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pack products",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Ship products",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Select next product from order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Product in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Waited more than 10 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Order ready for shipment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with reading an order from the automatic order management system.  Next, a check is performed to see if the first product from the order is in stock. If the product is in stock, it is withdrawn from the warehouse and registered in the stock management system. If the product is not in stock, it is reordered from the wholesaler. After reordering, the process waits for the arrival of the ordered product. Once the product arrives, a check is made to determine if the wait time exceeded 10 days. If the wait time exceeded 10 days, a delivery delay penalty is demanded from the wholesaler, and the product is then registered in the stock management system. If the wait time did not exceed 10 days, the product is registered directly in the stock management system. After registering the product, a check is performed to see if the whole order is ready for shipment. If the order is ready for shipment, a courier is requested, the products are packed, and the process ends. If the order is not ready for shipment, the next product from the order is selected, and the process loops back to check if this next product is in stock.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Read order from automatic order management system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check if the first product from the order is in stock",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Withdraw from warehouse",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Reorder from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Demand delivery delay penalty from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register product in stock management system",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check if whole order is ready for shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Request courier",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pack products",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Select next product from order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Arrival of ordered product",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Product in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Waited more than 10 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Order ready for shipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j02.txt": {
        "0": {
            "text": "The process starts. The user enters the machine type, followed by entering the serial number. Next, the user answers questions and then presses buttons.  Values are then collected from the machine by a service. The collected values are shown to the user.  The process then checks if additional questions are needed. If yes, the user answers additional questions. Finally, regardless of whether additional questions were answered or not, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter machine type",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter serial number",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Answer questions",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Press buttons",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Collect values from machine",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Show values",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Answer additional questions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Need additional questions?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The inspection process starts with entering the machine type and serial number.  Next, the user answers a set of questions and then presses buttons.  Values are then collected from the machine and displayed to the user.  The displayed values are evaluated. Based on the results, if additional questions are needed, they are asked.  Regardless of whether additional questions were asked or not, the inspection process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter Machine Type and Serial Number",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Answer Questions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Press Buttons",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Collect Values from Machine",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Display Values",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Evaluate Results",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Ask Additional Questions (Conditional)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Inspection Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Inspection End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Results?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Additional Questions Needed"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "No Additional Questions"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with entering the machine type.  Next, the serial number is entered, followed by answering questions.  The user then presses buttons on the machine, and values are collected from the machine.  These values are shown to the user.  The results are then evaluated, and a decision is made on whether additional questions are needed. If yes, additional questions are asked, and the user is directed back to pressing buttons on the machine.  This loop continues until no further questions are needed.  If no additional questions are needed, the inspection is complete, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter Machine Type",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter Serial Number",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Answer Questions",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Press Buttons",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Collect Values from Machine",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Show Values",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Evaluate Results",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Ask Additional Questions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Inspection Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Need Additional Questions?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_j03.txt": {
        "0": {
            "text": "The process starts.  First, web shops are queried. If there are enough parts, a list of parts is created, and the parts are ordered. When the parts arrive, building starts. After building, the stock level is checked. If the stock is below 5, parts are reordered from the cheapest vendor, and building starts again. If the stock is below 3, parts are reordered from the fastest vendor, and building starts again. If the stock is zero, a complaint email is written, and building starts again. If the stock level is OK, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Query Web Shops",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create List of Parts",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order Parts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Start Building",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder (Cheapest)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reorder (Fastest)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Write Complaint Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Parts Arrive",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Stock Below 5",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Stock Below 3",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Stock Zero",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Enough Parts?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Stock Level?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id10",
                        "condition": "Below 5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id11",
                        "condition": "Below 3"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id12",
                        "condition": "Zero"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id13",
                        "condition": "OK"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j04.txt": {
        "0": {
            "text": "The process starts with entering the intern's topic, payment, experience, and hobbies.  The intern then receives offers from companies.  Next, the intern accepts or denies an offer.  The chosen offer is accepted, and other offers are invalidated.  The intern then writes a status update.  Following this, the company writes a status update.  Finally, after the internship is finished, the company is recommended on Twitter via a tweet.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter Topic, Payment, Experience, Hobbies",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Accept/Deny Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Invalidate Other Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Write Status Update (Intern)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Write Status Update (Company)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Recommend Company (Tweet)",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Internship Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Intern",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Intern Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Company Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Twitter",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Twitter Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with the intern entering their topic, money, experience, and hobbies. The company then receives offers. The intern can accept or deny the offer. Based on the intern's decision, the company invalidates other offers. The intern then writes a status update, followed by the company writing a status update. Finally, after the internship is finished, a tweet is automatically generated by Twitter recommending the company.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter Topic, Money, Experience, Hobbies",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Accept/Deny Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Invalidate Other Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Write Status Update (Intern)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Write Status Update (Company)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Recommend Company (Tweet)",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Internship Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Intern",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Intern Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Company Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Twitter",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Twitter Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the intern entering their topic, desired pay, experience, and hobbies. The company then sends internship offers to the intern. The intern reviews the offers and either accepts or denies them. Based on the intern's decision, the company invalidates any other pending offers.  Following this, the intern writes a weekly status update. The company also writes a weekly status update. Once the internship is finished, the intern has the option to recommend the company via Twitter. If they choose to do so, the recommendation is sent as a tweet.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter Topic, Desired Pay, Experience, and Hobbies",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Internship Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Accept/Deny Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Invalidate Other Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Write Weekly Status Update (Intern)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Write Weekly Status Update (Company)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Recommend Company (via Twitter)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Tweets",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Internship Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Intern",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Intern Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Company Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Twitter",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Twitter Lane",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "G_g01.txt": {
        "0": {
            "text": "The process starts with sending invitations to friends.  Next, the game list is received, and a date is appointed.  Then, it is checked if 8 or more friends agreed. If yes, it is checked if all games are available. If not, the date is appointed again. If all games are available, it is checked if there are any missing games. If yes, the missing games are downloaded. If no, or after the missing games are downloaded, the required beer amount is found out. Then, it is checked if there is enough beer. If no, the missing beer is bought. If yes, or after the missing beer is bought, the LAN party is enjoyed. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to friends",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive game list",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Appoint a date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if all games are available",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Download missing games",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Find out required beer amount",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Buy missing beer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enjoy LAN party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "8 or more agree?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Missing games?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Enough beer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with sending out invitations.  Next, a list of games is received, and a date is appointed.  The process then checks if 8 or more people agree on the date. If not, the process loops back to appointing a date. If 8 or more people agree, the process continues to find out if all games are available. If not, the missing games are downloaded.  Following this, or if all games were already available, the process determines how much beer friends will require.  Then, it is checked if there is enough beer. If not, the missing beer is bought. Finally, whether or not additional beer was required, the LAN party is enjoyed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive list of games",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Appoint date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Find out if you have all the games",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Download missing games",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Find out how much beer friends will require",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Buy missing beer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enjoy LAN party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "8 or more people agree on date?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "All games available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Enough beer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with sending out invitations.  Next, game preferences are determined, and a date is appointed.  It is then checked if 8 or more people agree on the date. If not, a new date is appointed and the check is repeated. If enough people agree, game availability is checked. If games are missing, they are downloaded.  Next, beer requirements are determined. If there is not enough beer, the missing beer is bought. Finally, the LAN party is enjoyed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Find out game preferences",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Appoint a date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check game availability",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Download missing games",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Find out beer requirements",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Buy missing beer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enjoy LAN party",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "8 or more agree?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Missing games?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Enough beer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_j02.txt": {
        "0": {
            "text": "The process starts with the sales team of the airplane manufacturer receiving specifications. The sales team then sends the requirements to the manufacturing teams.  The Vodka Bar Team in Russia manufactures the vodka bar, the Whiskey Bar Team in Ireland manufactures the whiskey bar, and the Seat Manufacturing Team manufactures the seats. These items are sent to the airplane manufacturer's assembly team, who then assembles the interior.  Next, the test pilot conducts a test flight and creates a test protocol. The test pilot sends the test protocol to the customer representative.  The airplane manufacturer's sales team delivers the plane, and sends confirmation to the customer representative.  Finally, the customer representative confirms delivery, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Receive Specifications",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Send Requirements to Manufacturing Teams",
                        "type": "Service"
                    },
                    {
                        "id": "t3",
                        "name": "Manufacture Vodka Bar",
                        "type": "Manual"
                    },
                    {
                        "id": "t4",
                        "name": "Manufacture Whiskey Bar",
                        "type": "Manual"
                    },
                    {
                        "id": "t5",
                        "name": "Manufacture Seats",
                        "type": "Manual"
                    },
                    {
                        "id": "t6",
                        "name": "Assemble Interior",
                        "type": "Manual"
                    },
                    {
                        "id": "t7",
                        "name": "Conduct Test Flight",
                        "type": "Manual"
                    },
                    {
                        "id": "t8",
                        "name": "Create Test Protocol",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Deliver Plane",
                        "type": "Service"
                    },
                    {
                        "id": "t10",
                        "name": "Confirm Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Airplane Manufacturer",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Sales",
                                "elemRefs": [
                                    "t1",
                                    "t2",
                                    "t9"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Assembly",
                                "elemRefs": [
                                    "t6"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Test Pilot",
                                "elemRefs": [
                                    "t7",
                                    "t8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "l4",
                                "name": "Customer Representative",
                                "elemRefs": [
                                    "t10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p3",
                        "name": "Vodka Bar Team (Russia)",
                        "lanes": [
                            {
                                "id": "l5",
                                "name": "Vodka Bar Manufacturing",
                                "elemRefs": [
                                    "t3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p4",
                        "name": "Whiskey Bar Team (Ireland)",
                        "lanes": [
                            {
                                "id": "l6",
                                "name": "Whiskey Bar Manufacturing",
                                "elemRefs": [
                                    "t4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p5",
                        "name": "Seat Manufacturing Team",
                        "lanes": [
                            {
                                "id": "l7",
                                "name": "Seat Manufacturing",
                                "elemRefs": [
                                    "t5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "m1",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "m2",
                        "sourceRef": "t2",
                        "targetRef": "t4"
                    },
                    {
                        "id": "m3",
                        "sourceRef": "t2",
                        "targetRef": "t5"
                    },
                    {
                        "id": "m4",
                        "sourceRef": "t8",
                        "targetRef": "t10"
                    },
                    {
                        "id": "m5",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "t2",
                        "targetRef": "t6"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "t3",
                        "targetRef": "t6"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "t4",
                        "targetRef": "t6"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "t7",
                        "targetRef": "t8"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "t8",
                        "targetRef": "t9"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "t10",
                        "targetRef": "e2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with a start event. The customer representative receives customer specifications. After the specifications are received, the customer representative sends the requirements to the manufacturer's sales team. The sales team then sends the requirements to the Russian, Irish, and Seat manufacturing teams. The Russian team manufactures the vodka bar, the Irish team manufactures the whiskey bar, and the Seat team manufactures the seats. Once all parts are manufactured, the assembly team assembles the plane interior. When the plane interior is assembled, the test pilot conducts a test flight. After the test flight is complete, the test pilot creates a test protocol. The sales team then delivers the plane to the customer. Finally, after the test protocol is sent to the customer and the plane is delivered, the customer representative confirms the delivery, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Customer Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Requirements to Manufacturing Teams",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Manufacture Vodka Bar",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Manufacture Whiskey Bar",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Manufacture Seats",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Assemble Plane Interior",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Test Flight",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create Test Protocol",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Specifications Received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Parts Manufactured",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Interior Assembled",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Test Flight Complete",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Plane Delivered",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Customer Confirmed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Customer Representative",
                                "elemRefs": [
                                    "id1",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Manufacturer",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Sales",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Russian Team",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Irish Team",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Seat Team",
                                "elemRefs": [
                                    "id5"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Assembly Team",
                                "elemRefs": [
                                    "id6"
                                ]
                            },
                            {
                                "id": "id24",
                                "name": "Test Pilot",
                                "elemRefs": [
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with the Sales department of the Airplane Manufacturer receiving specifications.  Once the specifications are received, the Sales department sends the requirements to the Manufacturing Teams.  The Russian team manufactures the vodka bar, the Irish team manufactures the whiskey bar, and the Assembly team manufactures other parts.  These manufacturing steps happen concurrently. When all parts are manufactured, the Assembly team assembles the interior.  After the interior is assembled, the Test Pilot conducts a test flight.  Once the test flight is completed, the Test Pilot creates a test protocol and sends it to the Customer Representative.  The Sales department then delivers the plane to the customer, and the Customer Representative confirms the delivery.  The process ends with the delivery confirmation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Requirements to Manufacturing Teams",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Manufacture Vodka Bar",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Manufacture Whiskey Bar",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Manufacture Other Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Assemble Interior",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Test Flight",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Create Test Protocol",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver Plane",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Specifications Received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts Manufactured",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Interior Assembled",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Test Flight Completed",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Protocol Created",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Plane Delivered",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery Confirmed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Airplane Manufacturer",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Sales",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id9",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Russian Team",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Irish Team",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Assembly Team",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id13",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id24",
                                "name": "Test Pilot",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Customer Representative",
                                "elemRefs": [
                                    "id10",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    }
                ]
            }
        }
    },
    "M_k05.txt": {
        "0": {
            "text": "The process starts with collecting requirements.  Then, the requirements are sent. A draft is created, and the draft is refined.  Next, a materials list is created, and the materials are ordered. Build messages are sent, and the house is built.  Invitations are sent, an attendee list is created, and snacks are bought.  The process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send requirements",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create draft",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Refine draft",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create materials list",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Order materials",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send build messages",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Build house",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send invitations",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create attendee list",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Buy snacks",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with collecting requirements.  Then, the requirements are sent to the architect.  A draft is created, and the draft is refined.  Next, a materials list is created, and the materials are ordered.  The tree house is then built.  Invitations are sent out, and a list of attendees is created.  Finally, snacks are bought, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Requirements to Architect",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Draft",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Refine Draft",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create Materials List",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Order Materials",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Build Tree House",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Invitations",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create List of Attendees",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Buy Snacks",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with collecting requirements. The collected requirements are then sent.  A draft is created and subsequently refined.  Based on the refined draft, a materials list is created, and the materials are ordered.  Messages are sent regarding the ordered materials.  The house is then built.  Invitations are sent out, and finally, an attendees list is created, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "collect_requirements",
                        "name": "Collect Requirements",
                        "type": "User"
                    },
                    {
                        "id": "send_requirements",
                        "name": "Send Requirements",
                        "type": "Service"
                    },
                    {
                        "id": "create_draft",
                        "name": "Create Draft",
                        "type": "User"
                    },
                    {
                        "id": "refine_draft",
                        "name": "Refine Draft",
                        "type": "User"
                    },
                    {
                        "id": "create_materials_list",
                        "name": "Create Materials List",
                        "type": "User"
                    },
                    {
                        "id": "order_materials",
                        "name": "Order Materials",
                        "type": "Service"
                    },
                    {
                        "id": "send_messages",
                        "name": "Send Messages",
                        "type": "Service"
                    },
                    {
                        "id": "build_house",
                        "name": "Build House",
                        "type": "Manual"
                    },
                    {
                        "id": "send_invitations",
                        "name": "Send Invitations",
                        "type": "Service"
                    },
                    {
                        "id": "create_attendees_list",
                        "name": "Create Attendees List",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "collect_requirements"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "collect_requirements",
                        "targetRef": "send_requirements"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "send_requirements",
                        "targetRef": "create_draft"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "create_draft",
                        "targetRef": "refine_draft"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "refine_draft",
                        "targetRef": "create_materials_list"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "create_materials_list",
                        "targetRef": "order_materials"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "order_materials",
                        "targetRef": "send_messages"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "send_messages",
                        "targetRef": "build_house"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "build_house",
                        "targetRef": "send_invitations"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "send_invitations",
                        "targetRef": "create_attendees_list"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "create_attendees_list",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "G_j01.txt": {
        "0": {
            "text": "The process starts with collecting user preferences. Then, resources are farmed.  If a natural disaster occurs, the farming process is repeated. Regardless of a natural disaster, the farming list is updated, which leads back to farming more resources.  Farming can also trigger milestone notifications, which in turn lead back to farming. Once farming is finished, the user can brag to friends, after which materials are sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect Preferences",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Farm Resources",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Update Farming List",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Milestone Reached",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Brag to Friends",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Materials",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Natural Disaster",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Farming Finished",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with collecting user preferences.  Then, resources are farmed. When a milestone is reached during farming, a notification is sent and farming continues. This cycle of farming, reaching milestones, sending notifications, and resuming farming repeats until farming is finished.  If a natural disaster occurs during farming, farming resumes. Once farming is complete, the user can brag to friends and send materials.  Farming can also be updated at any point after the initial farming begins, which leads back to farming.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect Preferences",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Farm Resources",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Update Farming List",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Milestone Reached",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Brag to Friends",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Materials",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Farming Finished",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Natural Disaster",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Milestone Reached",
                        "type": "IntermediateThrowEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with collecting user preferences.  Then farming is started. If a natural disaster occurs, farming is restarted.  The farming list is updated, after which farming is resumed.  When a milestone is reached, a notification is sent and farming continues.  Once farming is finished, the user brags to friends, sends materials to friends, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect Preferences",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start Farming",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Update Farming List",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Milestone reached notification",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Brag to friends",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Materials to friends",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Natural Disaster",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Farming Finished",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_g02.txt": {
        "0": {
            "text": "The process starts with developing a basic design.  Next, Lego brick sets are ordered, and then the Lego parts are sorted. A subcomponent is then built.  After building the subcomponent, it is determined whether the parts are available. If the parts are not available, individual parts are reordered, and the subcomponent is built again.  If the parts are available, the subcomponent is tested. If the test is successful, the subcomponents are assembled, and the process ends. If the test is not successful, the subcomponent is redesigned, rebuilt, and tested again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Develop basic design",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order Lego brick sets",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Sort Lego parts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Build subcomponent",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder individual parts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test subcomponent",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble subcomponents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Redesign subcomponent",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Rebuild subcomponent",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parts available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Test successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with developing a basic design.  Then, certain Lego brick sets are ordered. Next, the parts are sorted, and subcomponents are built individually.  It is then checked if all parts are available. If not, individual parts are reordered, and the subcomponents are built individually again. If all parts are available, the individually built subcomponents are tested. If the test is successful, the subcomponents are assembled, and the process ends. If the test is not successful, the subcomponents are redesigned, rebuilt, and tested again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Develop basic design",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order certain Lego brick sets",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Sort the parts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Build subcomponents individually",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder individual parts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test subcomponents individually",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble subcomponents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Redesign subcomponents",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Rebuild subcomponents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parts available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Test successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with developing a basic design.  Next, certain Lego brick sets are ordered.  The parts from these sets are then sorted.  Following this, subcomponents are built individually.  Then, it is checked if all parts are available. If not, individual parts are reordered, and the subcomponents are built individually again. If all parts are available, the individually built subcomponents are tested. If the tests are successful, the subcomponents are assembled, and the process ends. If the tests are not successful, the subcomponents are redesigned and rebuilt, after which they are tested again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Develop basic design",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order certain Lego brick sets",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Sort the parts",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Build subcomponents individually",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder individual parts",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test subcomponents individually",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble subcomponents",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Redesign and rebuild subcomponents",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parts available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Test successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j01.txt": {
        "0": {
            "text": "The process starts with collecting relevant information from the machine.  The OEE is then calculated. Next, a decision is made based on whether the OEE is below the threshold. If the OEE is below the threshold, the machine is stopped, and an email is sent to an engineer.  After the email is sent, the process waits for the machine to be restarted. Once the machine is restarted, the process continues measuring and loops back to collecting information from the machine. If the OEE is not below the threshold, the process waits for the machine to be disconnected. When the machine disconnects, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect relevant information from machine",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Calculate OEE",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Stop machine",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send email to engineer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Continue measuring",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "OEE below threshold?",
                        "type": "IntermediateConditionalEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Machine restarted",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Machine disconnected",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "OEE below threshold?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with collecting machine information.  The next step is to calculate the OEE (Overall Equipment Effectiveness).  Based on the OEE check, if the OEE is below a defined threshold, the machine is stopped. An email notification is sent, and then the process waits for a signal indicating that the machine has been restarted. Once the machine restarts, information is measured and collected, and the OEE is calculated again. This creates a loop until the OEE is above the threshold. If the OEE is at or above the threshold, or any other conditions are met during the OEE check, the process waits for a message indicating that the machine has been disconnected, and then the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Collect Machine Information",
                        "type": "Service"
                    },
                    {
                        "id": "task2",
                        "name": "Calculate OEE",
                        "type": "Service"
                    },
                    {
                        "id": "task4",
                        "name": "Stop Machine",
                        "type": "Service"
                    },
                    {
                        "id": "task5",
                        "name": "Send Email",
                        "type": "Service"
                    },
                    {
                        "id": "task6",
                        "name": "Restart Machine",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Measure and Collect Information",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "OEE Below Threshold",
                        "type": "IntermediateConditionalEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Machine Restarted",
                        "type": "IntermediateSignalEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Machine Disconnected",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "event5",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "OEE Check",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "event2",
                        "condition": "OEE < Threshold"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "event2",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task5",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "event3",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task7",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway1",
                        "targetRef": "event4",
                        "condition": "OEE >= Threshold or other conditions"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "event4",
                        "targetRef": "event5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts and the first step is to collect relevant information from the machine.  The OEE is then calculated and checked. If the OEE is not below the threshold, the process loops back to collecting information from the machine. If the OEE is below the threshold, the machine is stopped. An email is sent, and when the machine is restarted, the process loops back to collecting information from the machine. If the machine is disconnected, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect relevant information from machine",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Calculate OEE",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Stop machine",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send Email",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Restart Machine",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "OEE below Threshold?",
                        "type": "IntermediateConditionalEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Machine Restarted",
                        "type": "IntermediateConditionalEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Machine Disconnected",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "OEE below Threshold?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j03.txt": {
        "0": {
            "text": "The process starts when a fridge malfunctions. The customer then describes the symptoms and sends the description and type information to the central service. The central service selects a local facility, which then makes an appointment with the customer.  The local facility staff arrive and assess the fridge.  Next, it is determined if the necessary parts are available. If the parts are available, the local facility repairs the fridge. The customer then confirms the repair and rates the service, after which the process ends. If the parts are not available, the local facility raises an escalation indicating they need additional parts, and the process loops back to the make appointment step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe Symptoms",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Description and Type",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Local Facility",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Make Appointment",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Arrive and Assess",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Repair Fridge",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm Repair",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Rate Service",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Fridge Malfunctions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Repair Confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Need Additional Parts",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parts Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Customer Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Central Service",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Central Actions",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Local Facility",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Local Actions",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Parts Available"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "Need Parts"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a customer experiences fridge noises. The customer then describes the symptoms and sends the description along with the fridge type to the central service center. An agent at the central service center selects a local service facility, which then makes an appointment with the customer. A technician from the local service facility arrives at the customer's location. The technician then checks if the necessary parts are available. If the parts are available, the technician repairs the fridge. The customer confirms if the fridge is working correctly and then rates the service facility. The process ends with the fridge being repaired. If the parts are not available, the technician reports that additional parts are needed, and the process loops back to the local service facility making an appointment.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe symptoms",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send description and fridge type",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select local service facility",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Make appointment",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Arrive at customer",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Repair fridge",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm fridge is OK",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Rate service facility",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Fridge noises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Fridge repaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Need additional parts",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parts available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Central Service Center",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Agent",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Local Service Facility",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Technician",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a customer's fridge malfunctions. The customer describes the symptoms and sends the description along with the fridge type to the Central Fridge Service Center. A representative at the center selects a local service facility, which then makes an appointment with the customer. A technician from the local service facility arrives and assesses the fridge.  If the necessary parts are available, the technician repairs the fridge. The customer then confirms the repair and rates the service facility, after which the process ends with the fridge repaired. If the parts are not available, the process ends, noting that the fridge was unable to be repaired.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe Symptoms",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Description and Fridge Type",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Local Service Facility",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Make Appointment",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Arrive and Assess",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Repair Fridge",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm Repair",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Rate Service Facility",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Fridge Malfunctions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Fridge Repaired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Need Additional Parts",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Unable to Repair",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Parts Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Customer Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Central Fridge Service Center",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Center Representative",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Local Service Facility",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Technician",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "X_g01.txt": {
        "0": {
            "text": "The process starts. The user selects a course.  Next, it is checked if slots are free. If so, available courses and dates are relayed to the user. The user then selects a course and date.  The system checks for an existing account. If an account exists, the user logs into the account. If not, the system checks university eligibility. If the user is eligible, they register an account and then log in. If not, the user requests activation and waits for a response before logging in. After logging in, the user's account tweets to friends.  Finally, the user completes registration by providing payment information, after which they receive their course ticket.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Course",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Tell Available Courses and Dates",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select Course and Date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check for Existing Account",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check University Eligibility",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register Account",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Activation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for Response",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Log into Account",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Tweet to Friends",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Complete Registration",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Provide Payment Information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Receive Course Ticket",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Slots Free?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Existing Account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Eligible University?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with course selection.  If slots are free, the next step is to check for an existing account. If an account exists, the user logs into the account. If no account exists, university eligibility is checked. If the university is eligible, the user registers an account and then logs in. If the university is not eligible, the user requests activation and waits for a response before logging into the account. Once logged in, the user tweets to friends, completes registration, provides payment information, and finally receives their course ticket.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Course",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account Existence",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check University Eligibility",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register Account",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Activation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for Response",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Log into Account",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Tweet to Friends",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Complete Registration",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Provide Payment Information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Course Ticket Received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Slots Free?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Existing Account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Eligible University?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with course selection.  Next, course availability is checked.  The user then selects a course and date.  Existing account details are checked. If an account exists, the user logs in. If not, university eligibility is checked. If the university is eligible, the user registers an account and then logs in. If the university is not eligible, the user requests activation and waits for a response before logging in. After logging in, the user tweets to friends, completes registration, provides payment information, and finally receives a course ticket.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Course",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Course Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select Course and Date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check for Existing Account",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check University Eligibility",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register Account",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Activation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for Response",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Log into Account",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Tweet to Friends",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Complete Registration",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Provide Payment Information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Receive Course Ticket",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Account Exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Eligible University?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "V_k08.txt": {
        "0": {
            "text": "The process starts with a login event, which is followed by a check of the user's credentials.  If the login is successful, the user can select products. The selected product is then added to the shopping cart and saved. The user is then asked if all products have been selected. If not, the user can select more products. This loop continues until the user confirms that all products have been selected.  Once all products are selected, the order is finished.  The process then splits into two parallel paths: preparing the payment and preparing the shipment.  To prepare the payment, the user enters payment data, and the system waits for bank confirmation. To prepare the shipment, the user enters their shipping address. If the shipping address is not equal to the billing address, the user is prompted to enter a billing address.  Once both the payment and shipping information are complete, the parallel paths converge, and the order is finalized. The process ends with the order finished event.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Credentials",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Select Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Add to Shopping Cart",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Save Product",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check if All Products Selected",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Finish Order",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Prepare Shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Enter Payment Data",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Wait for Bank Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Enter Shipping Address",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Enter Billing Address (Optional)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Finish Order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Login",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Shopping Experience Stops",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Order Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Login Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "All Products Selected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Shipping Address Equal to Billing Address?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Payment and Shipping Complete?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id15",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a log in event, followed by a login confirmation.  If the login is successful, the user selects a product, adds it to the shopping cart, and saves the product. The product selection is then checked. If all products have been selected, the order is finished. Otherwise, the user selects more products.  When the order is finished, payment and shipment are prepared in parallel. To prepare the payment, the user enters payment data, and the process waits for bank confirmation. To prepare the shipment, the user enters their shipping address.  The process checks if the shipping address is the same as the billing address. If not, the user enters their billing address. Once the billing address is entered or confirmed, and the bank confirmation is received, the order is finished, and the process ends. If the initial login is not successful, the shopping experience stops.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Add Product to Shopping Cart",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Save Product",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Product Selection",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Finish Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare Shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Enter Payment Data",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Wait for Bank Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Enter Shipping Address",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if Shipping Address equals billing address",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Enter Billing Address",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Finish Order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Log in",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Login Confirmation",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Shopping Experience Stops",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Payment Confirmation",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Order Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Login Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "All Products Selected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Shipping Address equals billing address?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id19",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id20",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id20",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id17",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id17",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id16",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a customer logs in.  The login credentials are checked. If the login is unsuccessful, the shopping experience stops. If the login is successful, the customer selects products. The selected product is added to the shopping cart, and the product is saved.  The system checks if all products have been selected. If not, the customer selects more products. This loop continues until all products are selected.  Once all products are selected, the order is finished.  Payment and shipment are prepared in parallel.  To prepare the payment, the customer enters payment data, and the system waits for payment confirmation.  To prepare the shipment, the customer enters their shipping address. The customer then checks if the shipping address is the same as the billing address. If not, the customer enters their billing address. Finally, the order is finished, and the process ends with the order finished.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Add Product to Shopping Cart",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Save Product",
                        "type": "System"
                    },
                    {
                        "id": "id4",
                        "name": "Check if All Products Selected",
                        "type": "System"
                    },
                    {
                        "id": "id5",
                        "name": "Finish Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare Shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Enter Payment Data",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Wait for Payment Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Enter Shipping Address",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if Shipping Address equals Billing Address",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Enter Billing Address",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Check Login Credentials",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Finish Order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Customer Logs In",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Shopping Experience Stops",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Order Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Login Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "All Products Selected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Shipping Address equals Billing Address?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id18",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id19",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id14",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j04.txt": {
        "0": {
            "text": "The process starts with the service being done.  After a period of time, indicated by a timer, the process checks if service is necessary. Subsequently, after another timer event, the process checks if the car is registered. If the car is registered, the user is notified.  Following the notification, the process checks if the service is done. If the service is done, the user enters the problems, sends status updates, pays, enters the successful repair and Pickerl, enters the next service time, and the process ends. If the service is not done, a 30-day timer is triggered. After 30 days, a fine is issued, and the process ends. If the car is not registered, the process ends immediately after the registration check.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter problems",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send status updates",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Pay",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter successful repair and Pickerl",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter next service time",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify User",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Issue Fine",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Service Done",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Service Necessary",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Car Registered?",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "30 days",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Car Registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Service Done?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a service is done. First, a check is performed to see if the car is registered. If the car is not registered, the process ends. If the car is registered, the car owner is notified about the needed service via an app. Next, a check is performed to see if the service was performed. If the service was performed, the problems are entered. Following this, status updates are sent, and the repair is marked as done. Then, the payment is made through the app, the successful repair and \"Pickerl\" are entered, and the time for the next service is entered. Finally, the process ends when the next service is scheduled. If the service was not performed, 30 days are waited. Once 30 days have passed, a fine is issued, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Check if car is registered",
                        "type": "Service"
                    },
                    {
                        "id": "t2",
                        "name": "Notify car owner about needed service via app",
                        "type": "Service"
                    },
                    {
                        "id": "t3",
                        "name": "Issue fine",
                        "type": "Service"
                    },
                    {
                        "id": "t4",
                        "name": "Enter problems",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Send status updates",
                        "type": "Service"
                    },
                    {
                        "id": "t6",
                        "name": "Pay through the app",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Enter successful repair and \"Pickerl\"",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Enter time for next service",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Service done",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Car not registered",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Fine issued",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Next service scheduled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e5",
                        "name": "30 days passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "e6",
                        "name": "Repair done",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Car registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Service performed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "t1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "g1",
                        "targetRef": "t2",
                        "condition": "yes"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "t2",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "g2",
                        "targetRef": "t4",
                        "condition": "yes"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "g1",
                        "targetRef": "e2",
                        "condition": "no"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "g2",
                        "targetRef": "e5",
                        "condition": "no"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "e5",
                        "targetRef": "t3"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "t3",
                        "targetRef": "e3"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "t5",
                        "targetRef": "e6"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "e6",
                        "targetRef": "t6"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "t7",
                        "targetRef": "t8"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "t8",
                        "targetRef": "e4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the \"Service Done\" event, after which a timer event \"Service Necessary\" is triggered.  Then, it is checked if the car is registered. If the car is registered, the user is notified.  The user then decides whether to go to service. If the user decides to go to service, they enter the problems, send status updates, pay, enter the successful repair and Pickerl, and finally enter the next service time, after which the process ends. If the user decides not to go to service, a timer event \"30 days\" is triggered, after which a fine is issued, and the process ends. If the car is not registered, the process ends immediately.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter problems",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send status updates",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Pay",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter successful repair and Pickerl",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter next service time",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify User",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Issue Fine",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Service Done",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Service Necessary",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "30 days",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Car Registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Go to Service?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j03.txt": {
        "0": {
            "text": "The process starts with a work accident or near miss. The employer is informed.  A check is performed to determine if there was a fatality or serious injury. If yes, a report is made to the Labour Inspectorate, otherwise, a check is performed to determine if the person involved is employed. If employed, a report is made to the Accident Insurance Provider, after which the process is completed. If not employed, a check is performed to determine if the person is self-employed. If self-employed, a report is made to the Accident Insurance Provider, after which the process is completed. If not self-employed, a check is performed to determine if the person is a student or schoolchild. If a student or schoolchild, a report is made to the School Directorate, after which the process is completed. If not a student or schoolchild, a check is performed to determine if the person is privately insured. If privately insured, a report is made to Private Insurance, after which the process is completed. If not privately insured, the process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Employer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report to Labour Inspectorate (if applicable)",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Report to Accident Insurance Provider",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Report to School Directorate",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Report to Private Insurance",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Work Accident or Near Miss",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Fatality or Serious Injury?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Employed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Self-Employed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Student or Schoolchild?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Privately Insured?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a work accident, near miss, safety risk, or defect. The employer is informed.  If there was a fatality or serious injury, a report is made to the labor inspectorate. In either case, it is then determined whether the affected person is employed. If so, a report is submitted to the accident insurance provider. If not, it is determined whether they are self-employed. If self-employed, a report is also sent to the accident insurance provider. If not self-employed, it is determined whether the person is a student or schoolchild. If so, a report is made to the competent directorate, followed by a report to the school or university.  If the person is not a student or schoolchild, it is checked if they are privately insured. If privately insured, a report is sent to the private insurance provider. Once all applicable reports are submitted, the process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Employer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report to Labor Inspectorate (if applicable)",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Report to Accident Insurance Provider",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Report to Competent Directorate (Students/Schoolchildren)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Report to School/University",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Report to Private Insurance Provider",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Work Accident/Near Miss/Safety Risk/Defect",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Fatality or Serious Injury?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Employed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Self-Employed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Student/Schoolchild?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Privately Insured?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a work accident or near miss.  The employer is informed.  If the accident resulted in a fatality or serious injury, a report is made to the labor inspectorate. Regardless of whether a report was made to the labor inspectorate, it is then determined whether the injured person is employed. If they are employed, a report is submitted to the accident insurance provider, after which the process is complete. If the injured person is not employed, it is determined whether they are a student or schoolchild. If so, a report is made to the school directorate, after which the process is complete. If not, it is determined whether the injured person is privately insured. If they are privately insured, a report is made to the private insurance, after which the process is complete. If they are not privately insured, the process is also complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Employer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report to Labor Inspectorate (if applicable)",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Report to Accident Insurance Provider",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Report to School Directorate (if applicable)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Report to Private Insurance (if applicable)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Work Accident or Near Miss",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Fatality or Serious Injury?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Employed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Student or Schoolchild?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Privately Insured?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "condition": "Yes",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "condition": "No",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "condition": "Yes",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "condition": "No",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "condition": "Yes",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "condition": "No",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "condition": "Yes",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "condition": "No",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j01.txt": {
        "0": {
            "text": "The process starts with the job application. The applicant reports job applications, which are then sent as potential job offers by the system.  Based on whether the offer is accepted, the company confirms the application receipt and rates the application. The applicant then negotiates a job interview. If accepted, the applicant starts the probation phase. When the probation is complete, the applicant rates the company, and subsequently, the company rates the employee. Depending on the company rating (C or less, or greater than C), the process either ends with the job becoming permanent or an intermediate event occurs where the company is rated C or less. If the company is rated C or less, potential job offers are sent again by the system, creating a loop in the process. If the offer was initially rejected, the system also sends potential job offers again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report Job Applications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Potential Job Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Application Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Rate Application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Start Probation Phase",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Rate Company",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Rate Employee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Job Becomes Permanent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Company Rated C or Less",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Probation Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Company Rating?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Job Applicant",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Applicant Actions",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Companies",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Company Actions",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Automated Actions",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "Rating > C"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id11",
                        "condition": "Rating <= C"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the job applicant reporting job applications. The system then sends potential job offers.  If a company offers a job, the company confirms the application receipt and rates the application. The job applicant then negotiates a job interview. This loop of sending job offers and negotiating interviews can repeat until a job offer is accepted. If no company offers a job, the job applicant reports more job applications. If a job offer is accepted, the job applicant starts the probation phase. After starting the probation phase, the system waits for the probation to be passed. Once the probation is passed, the job applicant rates the company. Depending on the company rating, the job applicant either rates the employee, leading to the end of the process with the job becoming permanent, or reports new job applications if the company rating is not satisfactory.  Concurrently, after the probation phase starts, a timer event representing one year passing can trigger the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report Job Applications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Potential Job Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Application Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Rate Application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Start Probation Phase",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Rate Company",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Rate Employee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Job Becomes Permanent",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id34",
                        "name": "One Year Passed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Company Offer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Probation Passed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Company Rating?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Job Applicant",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Applicant Actions",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Companies",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Company Actions",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Automated Actions",
                                "elemRefs": [
                                    "id2",
                                    "id10",
                                    "id34"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id34",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the job applicant reporting job applications. The system then sends potential job offers, and the company confirms application receipt. The company then rates the application. Based on the company's rating, if the company offers a job, the applicant negotiates a job interview and starts the probation phase. The applicant then rates the company, and the company rates the employee. Based on the company's rating of the employee, if the probation is successful, the process waits for one year. After one year, based on the company rating, the process ends. Concurrently, one year after the probation phase starts, the system sends potential job offers.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report Job Applications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Potential Job Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Application Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Rate Application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Negotiate Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Start Probation Phase",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Rate Company",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Rate Employee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Job Becomes Permanent",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "One Year Elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Company offers job?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Probation successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Company rating?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Job Applicant",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Company Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "System Lane",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_j01.txt": {
        "0": {
            "text": "The process starts with a customer order.  Then, parts are ordered. Once the parts arrive, they are inspected. Following inspection, the parts are assembled. Then, an update is sent to the customer. The process waits for customer approval. If the customer approves, the remaining order is produced, and the process ends with the order being complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order Parts",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Inspect Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Assemble Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Produce Remaining Order",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Send Update to Customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Customer Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order Complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Parts arrived",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Customer approves first saw",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Customer approves?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a customer request.  Parts are then ordered. Once the parts are ordered, the process waits for the parts to arrive. When the parts arrive, they are inspected.  Following inspection, the parts are assembled.  After assembly, the first saw is produced. The first saw is then sent to the customer. The customer is then asked if they are satisfied. If the customer approves, the remaining saws are produced, and the order is fulfilled, ending the process. If the customer rejects the saw, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "order_parts",
                        "name": "Order Parts",
                        "type": "Service"
                    },
                    {
                        "id": "inspect_parts",
                        "name": "Inspect Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "assemble_parts",
                        "name": "Assemble Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "produce_remaining_saws",
                        "name": "Produce Remaining Saws",
                        "type": "Manual"
                    },
                    {
                        "id": "send_updates",
                        "name": "Send Updates",
                        "type": "User"
                    },
                    {
                        "id": "send_first_saw",
                        "name": "Send First Saw",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "customer_request",
                        "name": "Customer Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "parts_ordered",
                        "name": "Parts Ordered",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "parts_arrived",
                        "name": "Parts Arrived",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "first_saw_produced",
                        "name": "First Saw Produced",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "customer_approves",
                        "name": "Customer Approves",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "order_fulfilled",
                        "name": "Order Fulfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "customer_rejects",
                        "name": "Customer Rejects",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "customer_satisfied",
                        "name": "Customer Satisfied?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "customer_request",
                        "targetRef": "order_parts"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "order_parts",
                        "targetRef": "parts_ordered"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "parts_ordered",
                        "targetRef": "parts_arrived"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "parts_arrived",
                        "targetRef": "inspect_parts"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "inspect_parts",
                        "targetRef": "assemble_parts"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "assemble_parts",
                        "targetRef": "first_saw_produced"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "first_saw_produced",
                        "targetRef": "send_first_saw"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "send_first_saw",
                        "targetRef": "customer_satisfied"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "customer_satisfied",
                        "targetRef": "customer_approves"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "customer_approves",
                        "targetRef": "produce_remaining_saws"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "produce_remaining_saws",
                        "targetRef": "order_fulfilled"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "send_updates",
                        "targetRef": "send_updates"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "customer_satisfied",
                        "targetRef": "customer_rejects"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a customer order.  Parts are then ordered. Next, the parts are inspected and then assembled. An update is sent and the saw is shipped. The process then waits for customer approval. If the customer approves the saw, the remaining order is produced, and the process ends. If the customer rejects the saw, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order Parts",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Inspect Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Assemble Parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Produce Remaining Order",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Send Update",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ship Saw",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Customer Order",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Customer approves saw",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer rejects saw",
                        "type": "IntermediateMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Customer approves saw?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}