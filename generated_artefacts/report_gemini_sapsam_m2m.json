{
    "20_ground_truth.json": {
        "0": {
            "text": "The process starts when a customer decides to resolve a problem through customer service. The customer begins by recognizing the problem, then contacts customer service to describe the problem. The consultant then identifies the problem and finds a suitable solution, which they describe to the customer. The customer then tries to fix the problem.  If the customer finds the solution helpful, they implement the solution and the process ends with the problem fixed. If the customer does not find the solution helpful, they request a new solution from the consultant. The consultant then suggests further solutions. This loops back to describing the solution to the customer, who again tries to fix the problem and determines if the solution is helpful. If at any point after implementing a solution the customer determines the problem is fixed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe Problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Identify Problem",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Find suitable solution",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Describe solution",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Try to fix problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Implement Solution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request new solution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Suggest further solutions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Problem Fixed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Solution Helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a customer decides to resolve a problem through customer service. The customer begins by recognizing the problem, after which they contact customer service and then describe the problem. A consultation member of customer service identifies the problem and finds a suitable solution. The consultation member describes the solution to the customer who then tries to fix the problem. The customer then decides whether the solution was helpful. If the solution was helpful, it is implemented, after which the problem is considered fixed, and the process ends. If the solution was not helpful, the customer requests a new solution from customer service. The consultation member then suggests further solutions, which are in turn tried by the customer, and checked if helpful again in an iterative way, looping back to the solution implementation if the current suggestion was deemed helpful by the customer. If not helpful the loop through requests and suggestions continuous until a solution has been found and implemented.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Recognize Problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Contact Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Describe Problem",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Identify Problem",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find Suitable Solution",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe Solution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Try to Fix Problem",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Implement Solution",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request New Solution",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Suggest Further Solutions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem Fixed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Solution Helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a customer decides to resolve a problem through customer service. The customer begins by recognizing the problem, after which they contact customer service. Next, the customer describes the problem to customer service. The consultation department then identifies the problem and finds a suitable solution. The consultation department then describes the solution to the customer. The customer then fixes the problem and determines if the solution was helpful. If the solution was helpful, the customer implements the solution, and after implementing the solution the problem is considered fixed, ending the process. If the solution was not helpful, the customer can request a new solution. The consultation department suggests further solutions based on this request. Then, after the suggestions are given the customer again fixes the problem and checks the solution again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Recognize Problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Contact Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Describe Problem",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Identify Problem",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find Suitable Solution",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe Solution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Fix Problem",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Implement Solution",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request New Solution",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Suggest Further Solutions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem Fixed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Solution Helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id10",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "14_ground_truth.json": {
        "0": {
            "text": "The process begins when the online selling process is started by the seller, who then displays items on the webpage. A buyer can then purchase the item.  The buyer's purchase, along with any decision to ask for a reshipment, is routed to the seller. The seller receives the buyer's order and sends a purchase confirmation to the buyer.  Next, the seller sends the order to the shipping company. The shipping company gets the item and checks whether to deliver on time. If the shipping company delivers the item to the customer on time, eBay tracks the order, and the process ends when the buyer closes the order. If the company does not deliver the purchase, the buyer decides whether to ask for money reimbursement or reshipment of the item. If the buyer asks for money reimbursement, the seller receives the buyer's decision and reimburses the money, after which the purchase is not continued. If the buyer asks for reshipment, the request goes to the seller as stated earlier in the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display Items on Webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Purchase Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Order to Shipping Company",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Get Item and Check Delivery Time",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Track Order",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Reimburse Money",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start Online Selling Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order Closed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Purchase Not Continued",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Deliver on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Reshipment or Reimbursement?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Reimbursement"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Reshipment"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a seller displays items on a webpage. A buyer can then purchase the item.  The seller and the buyer converge when the seller receives the buyer's order. The seller then sends an order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company gets the item and now will determine if delivery can be done on time. If so, the shipping company delivers the item to the customer on time, and eBay tracks the order, after which the buyer closes the order, thus ending the process. If the delivery is not on time, the shipping company does not deliver the item. The buyer then must decide whether to ask for money reimbursement or reshipment of the item. If the buyer asks for a money reimbursement, the seller receives the buyer's decision and reimburses the money, ending the purchase process. If the buyer asks for reshipment, the flow goes back to where the seller receives the request and converges with the other flows where the seller receives the buyer's order.  If the buyer does not wish to continue with the purchase after the seller displays the item, the purchase is not continued.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display Items",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order Purchase Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send Order to Shipping Company",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Get Item",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Deliver Item",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Track Order",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Close Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Reimburse Money",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Buyer's Decision",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Purchase Not Continued",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Purchase Cancelled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Can delivery be done on time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Buyer's Decision?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2",
                                    "id8",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when the seller displays items on the webpage. A buyer can then purchase the item, which is followed by the seller receiving the buyer's order. The seller then sends the order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company gets the item and will either deliver the item to the customer on time or not deliver the purchase.  If the item is delivered on time, eBay tracks the order and the process ends when the buyer closes the order. If the company does not deliver the purchase, the buyer will decide whether to ask for money reimbursement or ask for reshipment of the item. If the buyer asks for money reimbursement, the seller receives the buyer's decision and reimburses the money, after which, the process is stopped and the purchase is not continued.  If the buyer asks for reshipment, this information is passed to the seller and the process loops back to where the seller sends the order to the shipping company.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display Items on Webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Buyer's Order",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send Order Purchase Confirmation to Buyer",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send Order to Shipping Company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Get Item",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver Item to Customer",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Track Order",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Close Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Decide on Reimbursement or Reshipment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Receive Buyer's Decision (Reimbursement)",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Reimburse Money",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Receive Buyer's Decision (Reshipment)",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Purchase Not Continued",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Order Closed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Reimbursement or Reshipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "Reimbursement"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "Reshipment"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "72_ground_truth.json": {
        "0": {
            "text": "The process \"Oculist Check Appointment\" starts when a patient requests to book an appointment. The patient first indicates their need for an appointment. The patient then sends a request appointment message describing the problem to the receptionist. The receptionist verifies the dates.  Next, the receptionist checks if there are any available dates within 90 days. If not, the process ends, and the patient receives a reject appointment message. If there are available dates, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient then checks the appointment data. The patient is then asked to confirm the appointment. If they do not confirm, the process loops back to the beginning, and the patient is asked to require a new appointment. If they confirm, the patient sends their personal data, after which the receptionist sends an email with data for patient. The receptionist then registers the appointment, and the process ends with the appointment successfully done.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Indicate need for appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send personal data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send email with data for patient",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Register appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Request appointment",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Reject appointment",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Confirm?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id1",
                        "targetRef": "id2",
                        "name": "Request appointment"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4",
                        "name": "Appointment time and date"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id9",
                        "name": "Email with data for patient"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "name": "Reject appointment"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when a patient wants to book an appointment. The patient first requests an appointment.  The patient then sends a message to the receptionist, requesting an appointment and describing the problem. The receptionist verifies the dates and checks if there are any available dates within 90 days. If not, the process ends, and the patient receives a message rejecting the appointment. If there are available dates, the receptionist makes the appointment and sends a message to the patient with the appointment time and date. The patient checks the appointment data. If the patient does not confirm the appointment, the process loops back to the beginning and the patient requests a new appointment. If the patient confirms, they send their personal data to the receptionist. The receptionist receives the patient's email with their data and registers the appointment. Finally, the process ends with the appointment successfully booked.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates and check availability",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send personal data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive patient's email and register appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient wants to book an appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment booked",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Patient confirms appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ]
            }
        },
        "2": {
            "text": "The process \"Oculist Check Appointment\" starts when a patient requests an appointment.  The patient provides appointment details which are then checked. If the patient confirms the details, their personal data is sent. Upon receipt of the patient's data, the receptionist registers the appointment. Finally, the receptionist makes the appointment and sends the appointment time and date to the patient. The process ends with the appointment marked as \"done\". If the patient does not confirm, the appointment request cycle restarts from the beginning. The receptionist first verifies the dates. If there are dates available within 90 days, the receptionist makes the appointment. Otherwise, the process ends, and the patient receives a rejection message.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Appointment Details",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Appointment Details",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Send Personal Data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Make Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Appointment Time and Date",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Verify Dates",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Request Appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment Done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Rejection",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Confirm Details?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Dates Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "25_ground_truth.json": {
        "0": {
            "text": "The process starts with the company sending a message that starts the SEC approval process at the credit institution.  The credit institution then prepares a registration report and checks against Blue-Sky laws in parallel.  Once both tasks are complete, they are synchronized. Then the credit institution prepares a determination of the issue price and waits for registration approval via a message from the company. When the registration approval is received, they are synchronized and the credit institution organizes an information event.  After the information event, and in parallel with waiting for registration approval, the credit institution decides on the issue price.  After the issue price is decided, the credit institution evaluates if the obligation really occurs.  If the obligation does occur, they conclude the contract, and the process ends with the stock offered to the public. If the obligation does not occur, the process is aborted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare determination of the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Organize information event",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Decide on the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Evaluate if the obligation really occurs",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conclude the contract",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start SEC approval process",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Stock offered to the public",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process aborted",
                        "type": "EndTerminateEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Registration approval",
                        "type": "IntermediateCatchMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Obligation occurs?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Company",
                        "lanes": []
                    },
                    {
                        "id": "id16",
                        "name": "Credit Institution",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "no"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts at the company with the SEC approval process which is then sent to the credit institution. The credit institution starts preparing a registration report and checking against Blue-Sky laws in parallel. Once both tasks are finished, they are synchronized. The registration report leads to the preparation of a determination of issue price, while \"Checking against Blue-Sky laws\" waits for the \"Registration approval received\" from the company. After the determination of issue price is finished and the registration is approved, both paths are synchronized. The next step is to organize an information event and wait for registration approval. When the information event is organized and the registration approval is received, these paths synchronize, which leads to the decision on the issue price. Based on the decision on the issue price, the credit institution decides if the obligation really occurs. If yes, the contract is concluded, and the stock is offered to the public, ending the process. If the obligation does not occur, the process is aborted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare determination of issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Organize information event",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Decide on issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Conclude contract",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Offer stock to public",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Registration approval received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Exclusive Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Company",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Company Lane",
                                "elemRefs": [
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Credit Institution",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Credit Institution Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id11",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the credit institution receiving a message that the SEC approval process has started from a company.  Two parallel paths are then initiated. The first involves preparing a registration report and the second involves checking against Blue-Sky laws.  Once both tasks are complete, the paths converge, and then split again into two parallel paths.  One path leads to the preparation of a determination of issue price, while the other path waits for the registration approval to be received (as a message from the company). Once both the determination of issue price is prepared and registration approval is received, the paths converge again. Next, an information event is organized. After the information event, the converging paths split again; the issue price is decided upon and at the same time the registration approval is sent. Once again the two parallel paths converge. Based on the decision of whether the obligation really occurs, the process either continues or is aborted. If the obligation occurs, the contract is concluded, and the process ends with the stock offered to the public. If the obligation does not occur, the process is aborted and ends there.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare determination of issue price",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Decide upon issue price",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send registration approval",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "SEC approval process started",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Registration approval received",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Stock offered to public",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process aborted",
                        "type": "EndTerminateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Split 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Join 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Obligation occurs?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "43_ground_truth.json": {
        "0": {
            "text": "The process starts with an order placed by the customer.  The Driller then checks the feasibility of the order. If the order is not feasible, the process ends and is aborted. If the order is feasible, a decision is made on whether an offer is available or if it is a repeat order.  If there is no offer available and it is not a repeat order, Jane Doe performs a price calculation and then creates and sends an offer to the customer.  Silke then starts a waiting time, after which the customer decides whether to accept the offer. If the offer is not accepted, the process ends with customer info but no order confirmation sent. If the offer is accepted, or if the decision gateway indicated an offer was available/it was a repeat order, Silke creates the order. Next, Silke enters the order in production planning, and subsequently sends the order confirmation, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Price Calculation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create and Send Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter Order in Production Planning",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Order Confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Order Aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Customer Info, No Order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Offer Accepted?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Waiting Time",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Order Feasible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Offer Available/Repeat Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an order by a customer.  The Driller then checks feasibility. If it is not feasible, the process ends and is aborted.  If it is feasible, a decision is made if an offer is available or whether it's a repeat order. If so, the process flows to a decision gateway where the order is either created or, if not available/not a repeat order, the price calculation is performed by Jane Doe. After the price calculation, an offer is created and sent by Silke. Subsequently there is a waiting time. Following the waiting time, it is checked whether the offer was accepted.  If the offer is accepted the order is created by Silke. If the offer is not accepted the process ends and the customer is informed that there will be no order confirmation.  If the order was created, Silke enters the order into production planning and subsequently sends the order confirmation.  The process ends when the order confirmation is sent.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Price Calculation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter Order into Production Planning",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Order Confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Order by Customer",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Process Aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Offer Accepted?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id10",
                        "name": "No Order Confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order Confirmation Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Feasibility?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Offer/Repeat Order Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Not Feasible"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "Feasible"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Available/Repeat Order"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Not Available/Not Repeat Order"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "Not Accepted"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with an order from a customer.  The Driller then checks the feasibility of the order. If the order is not feasible the process ends and is aborted. If it is feasible, a price calculation is performed by Jane Doe. Next, an offer is created and sent by Silke. After a waiting time, the offer is either accepted or not. If the offer is not accepted, the process ends, informing the customer that there will be no order confirmation. If the offer is accepted, or if an offer is available from a previous order, or if it's a repeat order, an order is created by Silke.  The order is then entered into production planning and an order confirmation is sent.  After sending the order confirmation, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Price Calculation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter Order into Production Planning",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order Aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "No Order Confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order Confirmation Sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Offer Accepted?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Offer Available",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Repeat Order?",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Feasible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Inclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_ground_truth.json": {
        "0": {
            "text": "The process starts with a credibility check performed by risk management. In parallel, a BKR check and a Jane Doe check are performed. Once all checks are done, the results are sent to senior risk management, who confirms the credibility check. Based on the check confirmation the process takes different branches. If the credibility assessment is rejected, a rejection letter is sent by administration, and the process ends. If the credibility assessment is accepted, the customer is contacted to complement information. Based on whether the customer picked up or not, a loan offer is created or a timer event starts for one hour which then leads to customer contact to complement information. Regardless which of these two options was chosen, a loan offer is created eventually, then it is sent to the client by customer contact. After sending the offer, an event-based gateway is activated. If an accepted offer is received by finance, a welcome letter is sent and a loan is activated. After validating the loan activation, the initial payment is executed by finance and then documents are returned to the client by administration. Alternatively, if one hour passes before the offer is accepted, the client is reminded by customer contact. After reminding the client, the process returns to the decision whether the client answered the call. If a further hour has passed after the reminder is sent and the client hasn't accepted the offer, the client is contacted again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Credibility Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "BKR Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Jane Doe Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Credibility Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Contact Customer to Complement Information",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Send Loan Offer",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Send Welcome Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Activate Loan",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Validate Loan Activation",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Execute Initial Payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Return Documents to Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Remind Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Contact Client Again",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Credibility Assessment Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id20",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id24",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "name": "Credibility Check Confirmation",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Customer Pick Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Loan Offer Status",
                        "type": "EventBased"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id23",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id23",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id24",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id25",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id25",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id26",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id26",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id27",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id13",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id27",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id27",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id15",
                        "targetRef": "id26"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts in risk management with a parallel check of credibility, BKR, and Jane Doe. Once all checks are completed, the combined results are confirmed by senior risk management.  If the credibility assessment is rejected, a rejection letter is sent by administration, and the process ends. If the credibility assessment is accepted, the customer is contacted by customer contact to complement the information. Depending on whether the customer picks up, a loan offer is created or a timer is started for one hour. After one hour, if the call was not picked up, the customer is reminded, and this process is repeated until the customer picks up the phone. If the customer picks up, a loan offer is created by customer contact.  The loan offer is then sent to the customer. After the loan offer is sent, another timer event starts for one hour. While the customer can accept the loan offer anytime, if one hour passes, the customer is reminded again. A reminder is sent every hour until the customer accepts the loan offer. Once the customer accepts the loan offer, the loan application is activated by finance. Then the loan activation is validated, and the initial payment is executed. Finally, after payment, a welcome letter is sent by administration, and the process ends.  If any payment was missed, the documents are returned to the client by administration, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Credibility",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Check BKR",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Check Jane Doe",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Combined Results",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Remind Customer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Remind Customer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Return Documents to Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Credibility Rejected",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id19",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Loan Offer Accepted",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id21",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Payment Missed",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Credibility Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id26",
                        "name": "Customer Pick Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Payment Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id25",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id25",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id25",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id1",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id2",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id24",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id26",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id26",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id21",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id20",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id27",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id14",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id27",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id22",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a loan application is submitted. First, risk management performs a credibility check, a BKR check, and a Jane Doe check concurrently. Once all checks are completed, the results are passed to senior risk management. Senior risk management confirms the credibility check and assesses the overall credibility. If the credibility assessment is rejected, a rejection letter is sent by administration, and the process ends. If the credibility assessment is accepted, the customer contact calls the client to complement the provided information. Based on whether the client picks up, the process diverges. If the client picks up, customer contact creates a loan offer and sends it to the client. Then, the process waits for the client to accept the offer. If the client does not pick up, a timer is started. After one hour, customer contact calls the client again, and based on whether the client picks up this time, the process repeats the previous steps. In parallel to the communication with the client, once the credibility assessment is accepted by senior risk management, finance executes the initial payment. Once paid, finance activates the loan application and validates the activation. After the initial payment, if the client accepts the loan offer (signaled via a message), a welcome letter is sent to the client by administration, and the loan application is activated by finance. Once activated, the activation is validated by finance and if validated, the execution of the initial payment occurs.  Following this, the documents are returned to the client by administration and the process ends. If the client does not accept the offer after customer contact sent the offer, a timer event starts. After one hour, the client is reminded by customer contact. Subsequently, the process waits again for client's acceptance or proceeds with another reminder after another hour.  If the client rejects the offer, a rejection letter is sent by administration, and the process ends. If the initial payment is executed, the return documents to client takes place, followed by the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform Credibility Check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Perform BKR Check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Perform Jane Doe Check",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assess Overall Credibility",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Call Client Again",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Loan Application Submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Client Accepts Offer",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id19",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Client Rejects Offer",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id21",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Application Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Credibility Assessment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Client Pick Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Client Pick Up(2)?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Activation Validated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id30",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id32",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id35",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id36",
                                "name": "Finance",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id37",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id38",
                                "name": "Administration",
                                "elemRefs": [
                                    "id6",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id39",
                        "sourceRef": "id17",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id29",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id29",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id29",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id5",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id24",
                        "targetRef": "id6",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id6",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id24",
                        "targetRef": "id7",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id7",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id25",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id9",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id25",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id19",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id16",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id26",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id26",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id27",
                        "targetRef": "id13",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id12",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id28",
                        "targetRef": "id10",
                        "condition": "Validated"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id14",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id27",
                        "targetRef": "id23",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id68",
                        "sourceRef": "id23",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id69",
                        "sourceRef": "id15",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id70",
                        "sourceRef": "id27",
                        "targetRef": "id6",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id71",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "11_ground_truth.json": {
        "0": {
            "text": "The process starts when the program starts for the player of AO-Software.  The player then decides whether to start the tutorial or not. If the player chooses to start the tutorial, the player proceeds to the tutorial. Following the tutorial, the player is asked whether to start the tutorial again. If not, the standard key assignment starts. If the player chooses not to start the tutorial, the standard key assignment starts directly. After the standard key assignment is completed, introduction is completed.  After the introduction, the player proceeds to the main menu. The player can choose from several options in the announcement selection menu: \"Start new game\", \"Load game\", \"Continue game\", \"Settings\", or \"To the tutorial\".  If the player chooses \"Start new game\", the player starts a new game and the game settings are configured by the player. If the player chooses \"Load game\", the game states are retrieved. If the player chooses \"Continue game\", the player continues the game. If the player chooses \"Settings\", the player configures the game settings. If the player chooses \"To the tutorial\", the player proceeds to the tutorial and is asked again whether to start the tutorial. After the game settings are configured or the game states are retrieved, or the game is continued, the game starts. When the game starts, background music is played and ambient noise is generated. Once the background music and ambient noises are generated, the game is loaded.  The player then sees a command prompt, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Tutorial",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Standard key assignment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Introduction",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Start new game",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Configure game settings",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Load game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Retrieve game states",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Continue game",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Configure game settings",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Start game",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Play background music",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Generate ambient noise",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Load game",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Display command prompt",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Program starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Start tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Start tutorial again?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Announcement selection",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id17",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id18",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id18",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "Start new game"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Load game"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "Continue game"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "Settings"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id1",
                        "condition": "To the tutorial"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the program starts for a player at AO-Software. The player then decides if they want to start the tutorial.  If the player wants to start the tutorial, they are presented with a tutorial for the features on the controller. After the tutorial, the player is asked if the introduction was completed. If the introduction is complete, the player is given the option to start the game. If the introduction isn't complete, the player is prompted to proceed to the tutorial. If the player doesn't want to start the tutorial at the beginning, they start with the standard key assignment. After the standard key assignment or the introduction is finished, they have a choice to select from a menu. The menu offers options to start a new game, load a game, continue a game, adjust settings, or go to the tutorial. If a new game is started, the player enters game settings. The game settings selection is followed by a prompt for the announcement selection menu. Following this, the process splits into two parallel paths. In one path, background music starts to play. In the other path, ambient noise is generated. The two paths converge, and the game has been loaded. Next, a command prompt appears and finally, the process ends. If the player decides to load a game, game states are retrieved, and the player then has the option to start the game. If the player chooses to continue a game, the player can continue the game and then is prompted to start the game. If the player chooses to go to the tutorial, they can then decide again if they want to start the tutorial. Regardless of the path taken, when the player starts the game, background music begins playing and ambient noise is generated concurrently. The paths converge and the game loads. A command prompt is displayed. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Present Tutorial for Controller Features",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Standard Key Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select from Menu",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter Game Settings",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Announcement Selection Menu",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Start Background Music",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Generate Ambient Noise",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Retrieve Game States",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Continue Game",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Program Starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Start Tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Introduction Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Menu Selection",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Start Game?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id15",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4",
                        "condition": "Start New Game"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id8",
                        "condition": "Load Game"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id9",
                        "condition": "Continue Game"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id3",
                        "targetRef": "id12",
                        "condition": "Go to Tutorial"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the program starts for the player of AO-Software. The player then decides whether to start the tutorial or not.  If the player chooses to start the tutorial, the tutorial for the features on the controller is shown. Afterward, or if the player initially skipped the tutorial, the player proceeds with the standard key assignment. Following this, the introduction is considered complete.\n\nNext, the player can choose from the announcement selection menu among several options. These options include \"Start new game\", \"Load game\", \"Continue game\", \"Settings\", and \"To the tutorial\".\n\nIf the player selects \"Start new game,\" they start a new game. If the player selects \"Load game\", the game states are retrieved. Afterward, in both cases the process continues with the game settings. After that, the actual game start process is executed.\n\nIf the player selects \"Continue game,\" they continue the game, and then the game is started. In all three cases where the game is started (\"Start new game\", \"Load game\" and \"Continue Game\"), background music is played and ambient noise is generated concurrently. After the music and noise begin, the game is loaded, after which the player receives a command prompt from the game and the process ends.\n\nIf the player chooses \"Settings\" from the menu, they go to the game settings, and then, return to the announcement selection menu. If the player chooses \"To the tutorial\", they're shown the tutorial for the features of the controller. After this, the process loops back to ask again if the introduction is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show tutorial for controller features",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Standard key assignment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Start new game",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Retrieve game states",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Game settings",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Execute actual game start process",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Continue game",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Play background music",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Generate ambient noise",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Load game",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Program start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Game loaded, command prompt received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Start tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Announcement selection",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Introduction completed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "Start new game"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Load game"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "Continue game"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Settings"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "To the tutorial"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "39_ground_truth.json": {
        "0": {
            "text": "The process at SoKnow starts with securing personnel development needs by analyzing employee data.  Concurrently, the personnel capacity is checked, the capacity requirements are determined, and training opportunities are identified.  The capacity check, determining requirements, and training identification all feed into leading employee interviews.  Concurrently with the interview, the capacity requirements feed back to the parallel check/determine/identify step. The employee interview leads to allocating training, considering training requests, and considering improvement suggestions.  These three activities then are discussed with the department head.  This discussion then leads to the organization of training and continuing education, which in conjunction with updating the competency profile, completes the process with personnel development needs secured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze Employee Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Personnel Capacity",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine Capacity Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Identify Training Opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Lead Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Allocate Training",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider Training Requests",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consider Improvement Suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Discuss with Department Head",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Organize Training and Continuing Education",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Update Competency Profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Personnel Development Needs Secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Split 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Parallel Join 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process at SoKnow starts with securing personnel development needs by the HR department.  Employee data is analyzed, after which personnel capacity is checked and capacity requirements are determined, and concurrently, training opportunities are identified. Following the capacity check, the determined capacity requirements and identified training opportunities both lead into employee interviews.  After the interview, training requests, allocation of training, and improvement suggestions are considered. Finally, allocated training, considered training requests, and improvement suggestions are discussed with the department head.  The results from that discussion then feed into organizing training/continuing education activities, and finally, the employee\u2019s competency profile is updated, concluding the personnel development needs process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Secure personnel development needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze employee data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check personnel capacity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine capacity requirements",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Identify training opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct employee interviews",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider training requests",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Allocate training",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Generate improvement suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Discuss with department head",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Organize training/continuing education activities",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update employee competency profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Synchronize 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Synchronize 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process at SoKnow starts with securing personnel development needs by analyzing employee data.  Concurrently, the personnel capacity is checked, capacity requirements are determined, and training opportunities are identified. The check of personnel capacity, the determination of capacity requirements, and the identification of training opportunities feed into leading an employee interview.  The employee interview, in turn, branches into allocating training, considering the training request and considering improvement suggestions. These three activities are then consolidated and lead into a discussion with the department head. Finally, training/continuing education is organized, the competency profile is updated, and the process ends with personnel development needs secured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze employee data",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check personnel capacity",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine capacity requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Identify training opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Lead employee interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Allocate training",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Consider training request",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Consider improvement suggestions",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Discuss with department head",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Organize training/continuing education",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Update competency profile",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Personnel development needs secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "77_ground_truth.json": {
        "0": {
            "text": "The process starts with opening the start datasheet at TAS AG by a robot.  The robot then clicks on \"Start\", followed by a click on \"Format\". Next, the robot clicks on \"Show and hide\" and then \"Show sheet\". Finally, the robot presses Enter, which leads to the data sheet being opened.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Open start datasheet",
                        "type": "Robot"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Start\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id3",
                        "name": "Click on \"Format\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id4",
                        "name": "Click on \"Show and hide\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Show sheet\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id6",
                        "name": "Press Enter",
                        "type": "Robot"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Data sheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "TAS AG",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Robot",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with opening the start datasheet.  A robot at TAS AG will then click on \"Start\", followed by clicking on \"Format\". Next, the robot clicks on \"Show and hide\" and then on \"Show sheet\". Finally, the robot presses Enter, which leads to the data sheet being opened.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on \"Start\"",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Format\"",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Click on \"Show and hide\"",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Click on \"Show sheet\"",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Press Enter",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Datasheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "TAS AG",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Robot",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with opening the start datasheet performed by a robot at TAS AG. The robot then clicks on \"Start\", followed by clicking on \"Format\". Next, the robot clicks on \"Show and hide\", proceeds to click on \"Show sheet\", and finally presses Enter, which results in the data sheet being opened.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Open start datasheet",
                        "type": "Robot"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Start\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id3",
                        "name": "Click on \"Format\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id4",
                        "name": "Click on \"Show and hide\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Show sheet\"",
                        "type": "Robot"
                    },
                    {
                        "id": "id6",
                        "name": "Press Enter",
                        "type": "Robot"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Data sheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "TAS AG",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Robot",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "21_ground_truth.json": {
        "0": {
            "text": "The process starts with a new order at MyMuffin.  The first phase consists of three parallel tasks: preparing the dough, preparing cooking paper, and setting up delivery. Once all three tasks are complete, the second phase begins with preparing the muffins.  Next, the muffins are cooked. After cooking, the third phase starts with two parallel tasks: payment and dispatching the muffins.  Once both payment and dispatch are completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Cooking Paper",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Set Up Delivery",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a new order at MyMuffin.  The first phase consists of three parallel tasks: preparing the dough, preparing cooking paper, and setting up delivery. Once all three tasks are completed, the second phase begins with preparing the muffins.  Following this, the muffins are cooked.  After cooking, the third phase commences, involving two parallel tasks: payment and dispatching the muffins. Once both payment and dispatch are complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Cooking Paper",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Set Up Delivery",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Payment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a new order at MyMuffin.  Phase 1 starts with the parallel tasks of preparing the dough, preparing cooking paper, and setting up delivery. Once these tasks are completed phase 2 starts and the muffins are prepared. When the muffins are prepared they are cooked. Once cooked, phase 3 starts. Payment and dispatching the muffins happen in parallel.  After both payment and dispatch are completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Phase 1 Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Phase 1 End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Phase 3 Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Phase 3 End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "47_ground_truth.json": {
        "0": {
            "text": "The process begins with the definition of a requirement for a license purchase. The first step is to determine the license selection.  This is followed by a check if the system has been executed. If the system has been executed, a decision is made whether to purchase a license. If the decision is yes, a license is purchased. If the decision is no, a test license is bought. If the system has not been executed, the process goes directly to purchasing the license or buying a test license based on the earlier decision. Both purchasing a license and buying a test license converge to creating a license purchase agreement.  After the agreement is created, the process forks in parallel to agree on framework contracts and to have the system provide license purchase contract data. The data provided by the system updates contract information, and these two parallel paths synchronize before placing the order. Once the order is placed, it again forks into two parallel paths: one for final acceptance of delivery and the other for forwarding payment. The payment is then sent to Accounting/Controlling. After the final acceptance of delivery, a review of framework agreements takes place, followed by a system update. Finally, both parallel paths synchronize again, and the process ends with the license purchased and payment executed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine License Selection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase License",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Buy Test License",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create License Purchase Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Agree on Framework Contracts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Provide License Purchase Contract Data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Update Contract Information",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Final Acceptance of Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Forward Payment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Payment to Accounting/Controlling",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Review of Framework Agreements",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "System Update",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "License Purchased and Payment Executed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "System Executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Purchase or Test?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id21",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the definition of a requirement for a license purchase. The first step is to determine the license selection.  Next, the process checks if the system has been executed. If the system has been executed, the process proceeds to purchase the license. If not, it will buy a test license. After either purchasing the license or buying a test license, framework contracts are agreed upon.  Concurrently, after a license purchase or buying a test license, a license purchase agreement is created. This agreement creation triggers two parallel paths: one where the system provides license purchase contract data and another where the system updates contract information. Once both of these system actions are completed, the order is placed. Placing the order initiates two more parallel paths: final acceptance of delivery and payment forwarding. After the delivery is accepted, framework agreements are reviewed, after which, the system is updated. Once the system is updated, the license is considered purchased, marking the end of one branch of the process. In parallel, after forwarding the payment to Accounting/Controlling, and once the payment is executed, the process concludes.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine License Selection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase License",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Buy Test License",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Agree Framework Contracts",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Create License Purchase Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Provide License Purchase Contract Data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Update Contract Information",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Place Order",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Final Acceptance of Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Review Framework Agreements",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Update System",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Forward Payment to Accounting/Controlling",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Payment",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "License Purchased",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process Concluded",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "System Executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Agreement Created",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Contract Actions Complete",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "name": "Order Placed",
                        "type": "Parallel"
                    },
                    {
                        "id": "id21",
                        "name": "Payment Forwarded",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the definition of a requirement for a license purchase. The first step is to determine the license selection.  Next, the process checks if the system has been executed. If the system has been executed, the process proceeds to purchase the license. If not, it checks if a test license should be bought. If yes, the test license is bought. If no, a regular license is purchased.  Both paths converge and lead to agreeing on framework contracts.  After the license purchase (test or regular) and after the framework contracts are agreed upon, the process creates a license purchase agreement. This agreement is followed by two parallel steps: The system provides license purchase contract data and the system updates contract information. After both are complete, the order is placed.  Following the order placement, two parallel paths are executed: final acceptance of the delivery and forwarding the payment. Forwarding the payment sends information to accounting/controlling. Once the delivery is accepted, a review of framework agreements takes place, which then leads to updating the system. After the system is updated and the payment is executed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine License Selection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase License",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Buy Test License",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Purchase Regular License",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Agree on Framework Contracts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create License Purchase Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Provide License Purchase Contract Data",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Update Contract Information",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Place Order",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Final Acceptance of Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Forward Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Review of Framework Agreements",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Update System",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "System Executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Buy Test License?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Join"
                    },
                    {
                        "id": "id21",
                        "type": "Join"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "15_ground_truth.json": {
        "0": {
            "text": "The process at Hochschule Mainz starts when a ticket is received by support, initiating the task of determining whether customer participation is necessary. If customer participation is required, the support team contacts the customer, conducts a detailed interview regarding the problem, and then connects to the customer's client.  The customer then solves the problem.  Support may request further information from the customer; this cycle may repeat until the support team determines they no longer need customer participation. If customer participation is not required, the support team proceeds to solve the problem without involving the customer. Once the problem is solved, notes for documentation are created. Finally, a confirmation of ticket completion is sent, and the process ends with the problems being marked as solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine Customer Participation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Detailed Interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to Client",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Solve Problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Further Information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Solve Problem",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create Notes for Documentation",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Ticket Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem Solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Customer Participation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Need more information?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Hochschule Mainz",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Support",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Customer",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ]
            }
        },
        "1": {
            "text": "The process at Hochschule Mainz starts with the receipt of a ticket to solve problems.  Support then decides if the customer's participation is necessary. If so, the support contacts the customer, conducts a detailed interview about the problem, and then connects to the customer's client.  The customer is then asked for further information.  After receiving further information, the process loops back to check if customer participation is still necessary. Otherwise, support attempts to solve the problem without involving the customer.  Once the problem is solved, notes are created for documentation, a confirmation ticket is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Detailed Interview",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Connect to Client",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Further Information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Solve Problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create Notes",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Confirmation Ticket",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Ticket Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Problem Solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Customer Participation Necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Customer Participation Still Necessary?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id10",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process at Hochschule Mainz starts when a ticket is received by support, initiating the task of solving problems. Next, the support assesses whether customer participation is necessary. If not, the problem is solved without involving the customer, after which the problem is considered solved. Notes are then created for documentation, a confirmation ticket is sent, and the process ends with the problems solved. If customer participation is necessary, the support contacts the customer, conducts a detailed interview on the problem, and then connects to the client of the customer. The customer then attempts to solve the problem. Following this, the support asks for further information and checks again if customer participation is necessary. If customer participation is still required, the customer will again attempt to solve the problem.  If not, support solves the problem. Once the problem is solved the process will continue as described above (creating notes for documentation, sending the confirmation ticket and ending the process).\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Solve Problems",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Solve Problem without Customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Notes for Documentation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Confirmation Ticket",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Detailed Interview on the Problem",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Connect to the Client of the Customer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Customer Attempts to Solve Problem",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Ask for Further Information",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Solve Problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Ticket Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem Solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Customer Participation Necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Customer Participation Still Necessary?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "73_ground_truth.json": {
        "0": {
            "text": "The process starts when a user comes to the library. The first step is the user logging in.  After logging in, the user makes a request.  If the request is to extend a medium, the medium is extended, after which the process ends, noting that the media has been extended.  If the request is to borrow a medium, the user selects a medium, and the system searches for the medium in the database. If the medium is found, the system identifies the user. If the medium is not found, the system sends a \"medium not available\" message to an external participant (Library user not HTW). This external participant can then either confirm the reservation or reject the reservation.  If the reservation is confirmed, the process resumes with a reservation process, after which the process ends, noting that the medium will be reserved. If the reservation is rejected, the process ends, noting that the rental process was aborted.  Once the user is identified, the process ends, noting that the medium will be lent. If the user is not identified after the medium is found, the system again sends the \u201cmedium not available\u201d message to the external Library user.  The same confirm/reject reservation process follows as described above. Following extending media, and if the user decides not to continue, the process ends, and the medium will be returned.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Extend Medium",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Medium",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Search for Medium",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Identify User",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Reservation Process",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "User Comes to Library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Media Extended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Medium Will Be Lent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Medium Will Be Reserved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Rental Process Aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Medium Returned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Medium Not Available",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id13",
                        "name": "User login",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "User request",
                        "type": "Task"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Request Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Medium Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "User Identified?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Reservation Confirmed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Continue?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Extend"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Borrow"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "Confirm"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "Reject"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a user comes to the library. The first step is the user logging in.  After logging in, the user has several options: borrow a medium, extend a loan, or perform another action. If the user chooses to extend a loan, they then extend the media.  Following this, a decision is made whether to extend further. If no further extension is needed, the process ends and the medium is returned.  If the extension is approved, the process ends with the media extended.  If the user chooses to borrow a medium, then a medium is selected. The next step is to search for the medium in the database. The process then checks if the medium is available. If it is not available, a message \"Medium not available\" is sent to the library user and the user has the choice to confirm or reject the reservation. If the user confirms the reservation, the process continues as if the medium had been available immediately.  If the reservation is rejected, the rental process is aborted and the process ends. If the medium is available, then a check takes places if the user is from HTW. If they are from HTW, the medium will be lent and the process ends.  If they are not from HTW, the process of identification of the user starts, and the process ends with the medium being lent out. If the medium is reserved, the process ends and the medium will be reserved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Extend Media",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Medium",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Search for Medium in Database",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Lend Medium",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Identify User",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reserve Medium",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "User Comes to Library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Medium Returned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Medium Extended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Rental Process Aborted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Medium Lent Out",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Medium Reserved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Another Action?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Further Extension Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Medium Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Confirm Reservation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "User from HTW?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Medium Reserved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "name": "Log in",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a user comes to the library.  The user logs in. Afterwards, the user can choose between borrowing, extending a medium, or leaving. If the user chooses to extend a medium, the medium is extended, which ends the process. If the user chooses to borrow, the next step is to select a medium.  The system then searches for the medium in the database. If the medium is found, the system checks if the user is a member of the HTW. If the user is a member, the system proceeds to identify the user. If not, the system sends a message \"Medium not available\" to a library user not at HTW, and waits for either a confirmation or rejection of the reservation. If the reservation is rejected the process ends. If the reservation is confirmed, the reservation process starts, and when it's finished, the process ends with the medium reserved. If the medium is not available, the system again sends \"Medium not available\" to the library user not at HTW. The process waits for either a confirmation or rejection of the reservation. If rejected, the process ends. If confirmed, the reservation process starts, and when finished, ends the process. Once the user is identified, the process ends and the medium is lent. If the medium was not found, the process ends indicating that the medium was not available. If the user chooses not to extend or borrow a medium, the process ends, indicating that the medium will be returned.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log in",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Extend Medium",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Medium",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Search for Medium",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check HTW Membership",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Identify User",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Start Reservation Process",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Lend Medium",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "User Comes to Library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Medium Extended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Medium Lent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Medium Not Available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Medium Reserved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Reservation Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Medium Returned",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Borrow, Extend, or Leave?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Medium Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "HTW Member?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Medium Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Confirm Reservation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Confirm Reservation?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id17",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id16",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "24_ground_truth.json": {
        "0": {
            "text": "The process starts with the realization that the existing website is outdated at SoKnow. The marketing department analyzes the current content and, in parallel, the development department reviews the current content.  Based on the development department's review, a decision is made whether or not improvements are needed to the content of the website. If they determine improvements are not needed, the website remains as-is, concluding the process and resulting in a website that requires no updates.  If improvements are necessary, the development department proceeds with designing new content and updating the existing content simultaneously.  Once both tasks are complete, the changes are consolidated and then permanently updated on the website. At the same time, the marketing department evaluates the analyzed content.  If the evaluation is positive, the marketing department informs management, after which the website is considered up-to-date and the process ends. If the evaluation is negative, the process loops back to the development department's content review and subsequent updates.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze Current Content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Current Content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Design New Content",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Update Existing Content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Consolidate Changes",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Permanently Update Website",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Evaluate Analyzed Content",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform Management",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Website Outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Website Requires No Updates",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Website Up-to-date",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Improvements Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Evaluation Positive?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an existing website is outdated at SoKnow. The marketing department analyzes the current content and the development department reviews the current content.  After the current content analysis, the development department checks if current content needs improvements. If no improvements are needed, the process splits to design new content and update existing content.  If improvements are needed, then based on evaluation, new content is designed and existing content is updated concurrently.   After designing the new content and updating the existing content they are merged and permanently updated, after which the content is evaluated by the marketing department. If the evaluation is positive, the marketing department informs management, after which the process ends, declaring the Website up-to-date. If the evaluation is negative, the process loops back to where the development department checks for improvements to the current content.  If management is informed that the website needs no improvements, the process ends indicating no improvements needed to website.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze Current Content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Current Content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check if Current Content Needs Improvements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Design New Content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Update Existing Content",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Merge and Permanently Update Content",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Evaluate Content",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform Management",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Website Outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Website Up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "No Improvements Needed to Website",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Improvements Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Evaluation Positive?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id11",
                        "condition": "No Improvements Needed"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the realization that the existing website is outdated at SoKnow. The marketing department analyzes the current content and the development department reviews the current content.  The current content analysis branches off, with the development department designing new content and updating existing content in parallel. After the new content is designed and the existing content updated, they are joined, permanently updating the content, and also the content is evaluated by the marketing department. If the evaluation is positive, the marketing department informs management and the process ends noting that the website currently needs no improvements. If the evaluation is negative, then it loops back to where the development department reviews the current content. After content is permanently updated, the process ends with the Website up-to-date.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review current content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Design new content",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Update existing content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Permanently update content",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Evaluate content",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform management",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Website outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Website up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "No improvements needed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Content Evaluation",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Update",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "Positive"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Negative"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_ground_truth.json": {
        "0": {
            "text": "The process begins when the application process is opened. The student then conducts the application. The department of admission and enrollment accepts the application and provides the applicant files. The WI selection committee then checks the applicant's eligibility. Subsequently, the department of admission and enrollment evaluates the admission test results. The department selects and admits the applicant.  The student accepts admission. The department then enrolls the students and sends the enrollment documents. Finally, the process ends when the application process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept Application and Provide Applicant Files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Applicant Eligibility",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate Admission Test Results",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select and Admit Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept Admission",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enroll Student and Send Enrollment Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Application Process Opened",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Application Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Department Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Committee Lane",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the application process is opened by the student. The student then conducts the application, which is then accepted by the Department of Admission and Enrollment. The department provides the applicant files to the WI Selection Committee, who then checks the applicant's eligibility. Subsequently, the Department of Admission and Enrollment evaluates the admission test results and selects and admits the applicant. The student then accepts admission.  The department finally enrolls the students, sends the enrollment documents, and the process ends when the application process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide Applicant Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Applicant Eligibility",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate Admission Test Results",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select and Admit Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Accept Admission",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enroll Student",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Enrollment Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Application Process Opened",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Application Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Department Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Committee Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the student opens the application process. The student then conducts the application and the department of admission and enrollment accepts the application.  The department then provides the applicant files. Next, the WI selection committee checks the applicant's eligibility.  The department of admission and enrollment evaluates the admission test results. The department then selects and admits the applicant. The student accepts admission.  The department then enrolls the students, sends the enrollment documents and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide Applicant Files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Applicant Eligibility",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate Admission Test Results",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select and Admit Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Accept Admission",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enroll Student",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Enrollment Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Open Application Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Department Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Committee Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_ground_truth.json": {
        "0": {
            "text": "The Request Fulfillment process starts with sending the order for request handling to the Incident Manager. The Incident Manager receives the order and forwards it to 1st Level Support. 1st Level Support logs and categorizes the request and checks if the request is authorized. If authorized, the request is split into two parallel paths.  In one path, Request Monitoring and Escalation is performed by the Incident Manager and 1st Level Support jointly. In the other path, Request Model Execution is handled by the Service Request Fulfillment Group and 1st Level Support jointly.  Both paths converge, after which the request closure and evaluation is done by 1st Level Support. Following this, 1st Level Support checks if there were problems with request processing. If no, the request is sent to Request Fulfillment Support by the Incident Manager and successfully ends.  If yes, then the process ends by contacting the incident manager about the problem. If the initial authorization check fails, the request is sent back to the Incident Manager to verify it, then sent for request handling again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Request",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Contact Incident Manager",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Request Fulfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Request Failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Problems with Request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Incident Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager Lane",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "1st Level Support",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "1st Level Support Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Service Request Fulfillment Group",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group Lane",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The request fulfillment process starts with sending the order for request handling to the incident manager. The incident manager then returns to the first step and verifies the request.  Following verification, the order proceeds to the 1st level support for receiving. The received order is then logged and categorized. Next, the authorization of the request is checked. If authorized, the process splits into two parallel paths.  In one path, request monitoring and escalation is performed by the incident manager and 1st level support. In the other path, the request model is executed by the service request fulfillment group and 1st level support.  Both paths converge, and the request proceeds to closure and evaluation by 1st level support.  After evaluation, it is determined whether there was a problem with request processing or the request record. If no problem is found, the request proceeds to the Request Fulfilment Support provided by the Incident Manager, after which the process ends successfully. If a problem is found, the incident manager is contacted, and the process ends by highlighting the issue.  If the request is not authorized, it is returned to the incident manager at the initial step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Log and Categorize Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Execute Request Model",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Fulfilment Support",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Contact Incident Manager",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Request Fulfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Request Issue Highlighted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Authorization Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id14",
                        "condition": "Authorized"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "No Problem"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Problem"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "Not Authorized"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The Request Fulfillment process starts with sending the order for request handling to the Incident Manager.  The Incident Manager receives the order and forwards it to 1st Level Support for request logging and categorization. Next, 1st Level Support checks if the request is authorized. If authorized, the process splits into two parallel paths. One path involves request monitoring and escalation handled by the Incident Manager and 1st Level Support collaboratively. The other path involves request model execution performed by the Service Request Fulfillment Group and 1st Level Support.  These two paths merge, after which the request closure and evaluation is conducted by 1st Level Support.  Then, 1st Level Support checks if there was a problem with the request processing or the request record. If there was a problem, 1st level support will contact the incident manager about the problem and the process ends. If no problem is found, the process continues with request fulfillment support by the Incident Manager, ultimately leading to the successful end of the process.  However, if the initial authorization check fails, the request is sent back to the Incident Manager for verification, and this loops back to the order being resent to 1st level support for request handling.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Logging and Categorization",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Authorization Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Problem Check",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Contact Incident Manager",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Forward Order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Verification",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Resend Order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Request Fulfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Problem Reported",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Problem Found?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Incident Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager Lane",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id3",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "1st Level Support",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "1st Level Support Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Service Request Fulfillment Group",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "38_ground_truth.json": {
        "0": {
            "text": "The process starts with the selection and purchase of goods online.  The next step is to check if the price requires a credit check. If a credit check is required, the finance department requests information and then checks the creditworthiness.  If the customer is creditworthy, the finance department informs the warehouse about the shipping. If the customer is not creditworthy, the finance department informs the customer about the rejection, ending the process.  After the warehouse is informed, they check if the item is available. If the item is available, a parallel process starts where the warehouse packs and ships the goods and online purchase and shipping confirmation takes place. These parallel paths converge and the process ends. If the item is not available, the warehouse reorders it. Once reordered, the item availability is checked again.  If the price does *not* require a credit check, the finance department informs the warehouse about shipping, resuming the flow as described previously.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and Purchase Goods Online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if Price Requires Credit Check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Request Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Creditworthiness",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Warehouse About Shipping",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Customer About Rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check Item Availability",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Pack Goods",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Ship Goods",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Online Purchase and Shipping Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Reorder Item",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit Check Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Item Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the selection and purchase of goods online.  Next, the price is checked to see if a credit check is required by the finance department. If a credit check *is* required, the finance department requests information.  Following the request, the finance department checks the creditworthiness. If the customer is unworthy, the customer is informed about the rejection, and the process ends.  If the customer *is* worthy, the warehouse is informed about the shipping. The warehouse then checks if the item is available. If the item is *not* available, the warehouse reorders it and checks availability again.  If the item *is* available, the process proceeds in parallel: the item is packed and shipped by the warehouse, and simultaneously, purchase and shipping confirmation is sent online. After both of these parallel actions complete, the process ends.  If a credit check is *not* required after purchasing online, the warehouse is informed about the shipping, and the process continues as described above from the point of checking item availability.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and Purchase Goods Online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Price and Credit Requirement",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Request Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Creditworthiness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Customer about Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Warehouse about Shipping",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check Item Availability",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Reorder Item",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Pack Item",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ship Item",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Purchase and Shipping Confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Rejection",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit Check Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Customer Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Item Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the selection and purchase of goods online.  The price is then checked to see if a credit check is required by the finance department. If a credit check *is* required, the finance department requests information. Next, the finance department checks the creditworthiness. If the customer is deemed unworthy, the finance department informs the customer about the rejection and the process ends. If the customer *is* worthy, the finance department informs the warehouse about the shipping.  If a credit check is *not* required, the finance department also informs the warehouse about the shipping. The warehouse then checks if the item is available. If it is not available, the warehouse reorders the item, and checks again for availability. If it is available, the warehouse checks if packing and shipping is in parallel. If packing and shipping is in parallel, they are performed at the same time by the warehouse, after which the purchase and shipping confirmation is given online, and the process ends. If packing and shipping are not in parallel only the warehouse will pack and ship. Once packed and shipped the process will then end when the warehouse informs the online system and the purchase and shipping confirmation is sent online.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and Purchase Goods Online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Price and Credit Requirement",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Request Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Creditworthiness",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Customer about Rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Warehouse about Shipping",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check Item Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Reorder Item",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pack",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Ship",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Purchase and Shipping Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Pack and Ship",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit Check Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Customer Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Item Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Packing and Shipping?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "22_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient registers in the hospital. The clerk first records the data of each patient. Then, the SSN, name, and surname of the patient are registered in parallel.  Once all three registrations are complete, the clerk prints the referral document. Finally, the clerk archives the record in the file system, after which the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel Registration Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Registration End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient registers in the hospital.  The clerk first records the data of each patient. Then, three actions are performed concurrently: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered.  Once all three registrations are complete, the clerk prints the referral document. Finally, the record is archived in the file system, and the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a patient registers in the hospital. The clerk first records the data of each patient.  Following this, three actions are performed concurrently: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered. Once all three registration actions are completed, the clerk prints the referral document. Finally, the clerk archives the record in the file system, after which the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "58_ground_truth.json": {
        "0": {
            "text": "The process starts when the annual meeting is upcoming at SoKnow. Management sends invitations to employees. Then, the process forks into two parallel paths: Management leads the annual planning meeting and employees participate in the annual planning meeting. After both tasks are finished, the process merges and Management conducts a review and discussion of the current strategy. The process again forks into two parallel paths: Management reformulates the strategy and employees align for the strategy. When both tasks are completed, the process merges and Management communicates the strategy. Finally, Management pursues the strategy and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to employees",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Lead the annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Participate in the annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct a review and discussion of the current strategy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate the strategy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Align for the strategy",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate the strategy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue the strategy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Gateway 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Gateway 4",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Employees",
                                "elemRefs": [
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the annual meeting is upcoming at SoKnow. Management sends invitations to employees. Then, the process splits into two parallel paths. In the first path, the employees participate in the annual planning meeting. In the second path, management leads the annual planning meeting. Once both tasks are finished, the process synchronizes and proceeds with a review and discussion of the current strategy, led by management. After the review, the process splits again into two parallel paths. Management reformulates the strategy, while simultaneously, the employees align for the new strategy. Once both tasks are completed, the process synchronizes and management communicates the new strategy. Finally, management pursues the strategy, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Participate in Annual Planning Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Lead Annual Planning Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review and Discuss Current Strategy",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Reformulate Strategy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Align for New Strategy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate New Strategy",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Pursue Strategy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Annual Meeting Upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Synchronization 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Synchronization 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Management",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employees",
                                "elemRefs": [
                                    "id1",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the upcoming annual meeting at SoKnow. Management sends invitations to employees.  Then, concurrently, the employees participate in the annual planning meeting, and management leads the annual planning meeting.  Following both these activities, the current strategy is reviewed and discussed. Subsequently, the strategy is reformulated and, at the same time, employees align for the strategy.  After both reformulating the strategy and aligning for it, the strategy is communicated. Finally, the communicated strategy is pursued, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to employees",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Participate in the annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Lead the annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review and discuss the current strategy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate the strategy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Align for the strategy",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate the strategy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue the communicated strategy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Upcoming annual meeting",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Employees",
                                "elemRefs": [
                                    "id2",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "16_ground_truth.json": {
        "0": {
            "text": "The learning progress process starts. The process then branches into two paths based on whether the user is a student or teacher.  If the user is a teacher, they activate the learning progress in selected objects. This is followed by a check of the status, which can be red, gray, yellow, or green. If the status is red, it indicates that the object, such as a course, test or exercise, is failed. If gray, it signifies that the object has not yet started. If yellow, it means the object is in progress. And if green, it denotes that the object is fully processed. Regardless of the status (red, gray, yellow, or green), the process proceeds to the end. If the user is a student, they click on \"Learning Progress\" for each object. This is followed by a decision on how the progress is set: manually or automatically. If manual, the progress is manually set by the user. If automatic, it's determined by the instructor. After either manual or automatic determination, the status is again checked (as described before), with the process ends after the status has been processed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Learning Progress\"",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Manually set progress",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Automatically determine progress",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Learning progress process starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "User type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Progress setting method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1",
                        "condition": "Teacher"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id6",
                        "condition": "Red"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id6",
                        "condition": "Gray"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id6",
                        "condition": "Yellow"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id6",
                        "condition": "Green"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id2",
                        "condition": "Student"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Manual"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Automatic"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The learning progress process starts.  The process branches based on whether a student or teacher is involved. If a teacher is involved, they activate learning progress in selected objects. If a student is involved, they click on \"Learning Progress\" for each object.  The student then decides whether to set the learning progress manually or if it's determined automatically by the instructor. If manual, the learning progress is manually set by the user. If automatic, it is automatically determined by the instructor. In either case, the student can see the status based on a color marking.  If the color is red, it indicates that the student has failed in courses, tests, or exercises. If the color is gray, it indicates that the object has not yet been started. If yellow, it indicates it is in progress. If green, it means the object has been fully processed. When the teacher activates the learning progress, the status is checked and color-coded similarly. After the status check, whether done by the student or the teacher, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Learning Progress\"",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Manually set learning progress",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Automatically determine learning progress",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Learning progress process starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Student or teacher?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id8",
                        "name": "Manual or automatic?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1",
                        "condition": "Teacher"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id2",
                        "condition": "Student"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id3",
                        "condition": "Manual"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "Automatic"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The learning progress process begins.  The process considers both students and teachers. For students, they click on \"Learning Progress\" for each learning object. Next, the learning progress can be set manually by the student or automatically by the instructor. If set manually, the status is checked. If set automatically, the status is also checked. The status can be red (failed), gray (not yet started), yellow (in progress), or green (fully processed). Depending on the status, the learning object is marked with a red cross, gray, yellow, or green color, and the process ends. For teachers, they can activate learning progress in selected objects. Afterwards, the status is checked and marked with the appropriate color, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on \"Learning Progress\"",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Set learning progress manually",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress automatically",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check status",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Mark learning object",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate learning progress",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Manual or automatic?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Status?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id9",
                                    "id4",
                                    "id10",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Teacher",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Teacher Lane",
                                "elemRefs": [
                                    "id6",
                                    "id3",
                                    "id4",
                                    "id10",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Manual"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Automatic"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Red"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Gray"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yellow"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Green"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "70_ground_truth.json": {
        "0": {
            "text": "The process begins with the recording of a customer application in the service department. The service department records the order and sends it to the finance department to check customer data.  After checking the customer data, the finance department either releases the order or rejects it. If the order is rejected, the service department informs the customer, and the process ends. If the order is released, the service department continues processing the order.  The next steps performed by the service department are to print the order, then forward the order. After forwarding the customer order, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Inform Customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Print Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Forward Order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Order Forwarded",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Order Released?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Service Staff",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Finance Staff",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the recording of a customer application in the service department.  The service department records the order and sends it to the finance department to check the customer data.  The finance department then decides whether to release or reject the order.  If the order is rejected, the service department informs the customer, and the process ends. If the order is released, the service department continues processing the order, prints the order, forwards the order, and the process ends with the customer order forwarded.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Inform Customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Continue Processing Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print Order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward Order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Order Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Customer Order Forwarded",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Release or Reject?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Service Staff",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Finance Staff",
                                "elemRefs": [
                                    "id2",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Reject"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Release"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with the recording of a customer application in the service department.  The service department records the order and sends it to the finance department to check customer data.  Based on the check, the finance department either releases the order or rejects it. If the order is rejected, the service department informs the customer, ending the process by having informed the customer. If the order is released, the service department continues processing the order, prints it, forwards the customer order, and with that the process ends by having forwarded the customer order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check customer data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Inform customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Continue processing order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward customer order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Informed customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Forwarded customer order",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Order released?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Service Staff",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Finance Staff",
                                "elemRefs": [
                                    "id2",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id15",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ]
            }
        }
    },
    "69_ground_truth.json": {
        "0": {
            "text": "The process begins when a patient shows their medicare card and prescriptions to the pharmacist. The pharmacist receives and checks the script details. If the script is not valid, the prescription remains unfilled and the process ends. If the script is valid, the pharmacist opens and reviews the patient's profile in the pharmacy information system.  The system calculates medicare costs waivers and total fees, and makes the prescription information ready to view by the pharmacist. The pharmacist then checks if the patient appears suspicious. If so, they contact the patient's GP. The GP replies via call or email, and the pharmacist provides advice/recommendations to the patient based on the GP's input, after which the patient confirms their decision, leading to the prescription being unfilled and the process ending.  If the patient does not appear suspicious, the pharmacist checks the patient's status, including allergies, pregnancy, and past history. If the status check does not pass, the pharmacist offers alternative medicines with a lower dosage level. If the patient agrees to the alternatives, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the patient does not agree, the prescription is unfilled and the process ends.  If the inventory check reveals that the prescribed medication is out of stock, the pharmacist informs the patient about alternatives. The pharmacist proceeds if the medication is in stock. If not, the prescription remains unfilled, ending the process. If the patient agrees to the alternatives, this proceeds as if the patient did not agree with lower dosage alternatives, leading to the prescription being unfilled and the process ending. If the patient does not agree to the alternatives, the prescription goes unfilled and the process ends.  If the status check passes, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the required drugs are in stock, the pharmacist double-checks and collects the correct drugs, prints and attaches labels with CMI, and sends them to the patient. The patient then has a consultation and recommendation session with the pharmacist. Following this, the patient pays the prescription fees and receives the filled prescription, marking the end of the dispensing process. If the patient does not pick up their own prescription, additional signature/documents are required from the patient and the process ends with the prescription unfilled because the required documentation cannot be provided. If the patient has their own prescription, the script is handed over to the patient.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate medicare costs, waivers, and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Make prescription information ready",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check if patient appears suspicious",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Contact patient's GP",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Provide advice/recommendations to patient",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check patient status (allergies, pregnancy, past history)",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternative medicines with lower dosage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Select correct prescribed dosage",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform patient about alternatives (out of stock)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Consultation and recommendation session",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Request additional signature/documents",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Hand over script to patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Patient shows medicare card and prescriptions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Patient confirms decision",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Dispensing process complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "GP replies",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Script valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Patient agrees to alternatives?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Patient agrees to alternatives (out of stock)?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Patient picks up own prescription?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id1",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id20",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id24",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id25",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id23",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id25",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id26",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id27",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id27",
                        "targetRef": "id20",
                        "condition": "no"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id11",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id28",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id12",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id29",
                        "targetRef": "id20",
                        "condition": "yes"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id29",
                        "targetRef": "id20",
                        "condition": "no"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id28",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id16",
                        "targetRef": "id30"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id30",
                        "targetRef": "id17",
                        "condition": "no"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id30",
                        "targetRef": "id18",
                        "condition": "yes"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id18",
                        "targetRef": "id22"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient shows their Medicare card and prescriptions at NewTown Health Chemist.  If the prescriptions are for the patient themselves, the patient hands the script to the pharmacist, who receives and checks the script details. If the prescriptions are not for the patient themselves, they are unable to provide additional signatures or documents and the prescription remains unfilled. The pharmacist checks if the script is valid. If not, the prescription remains unfilled. If the script is valid, the pharmacist opens and reviews the patient profile in the pharmacy information system, which makes the prescription information ready to view. The pharmacist checks if the patient looks suspcious. If the patient looks suspcious, the pharmacist contacts the GP for advice. The doctor replies via call or email and provides advice/recommendations to the pharmacist. If the patient doesn't look suspcious, the pharmacist checks the patient's status, including allergies, pregnancy, and past history. Next, if the status check passes, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the status check does not pass, the pharmacist offers alternative, lower dosage level medicines to the patient, and checks if they agree. If not, the prescription remains unfilled. If they agree, the pharmacist makes a short note about the decision and the process ends for the patient with the decision confirmed.  If the prescribed medication is out of stock, the pharmacist informs the patient about alternatives and the prescription remains unfilled. If the medication is in stock, the pharmacist collects the correct drugs and prints and attaches labels with CMI. The pharmacist then provides counseling and recommendations to the patient, who then pays the prescription fees. Finally, the patient receives the prescriptions, ending the dispensing process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Hand script to pharmacist",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide advice/recommendations",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select correct prescribed dosage",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternative medicines",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Make short note about decision",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Collect correct drugs and print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Provide counseling and recommendations",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Pay prescription fees",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Show Medicare card and prescriptions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Prescription information ready to view",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Decision confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Prescriptions received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Prescriptions for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Script valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Patient looks suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient agree?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id26",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id14",
                                    "id15",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Pharmacist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id30",
                                "name": "Pharmacy Information System Lane",
                                "elemRefs": [
                                    "id17"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "GP",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "GP Lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id20",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id17",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id22",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id22",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id23",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id25",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id23",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id9",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id24",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id24",
                        "targetRef": "id16",
                        "condition": "No"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id20",
                        "targetRef": "id16",
                        "condition": "No"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id21",
                        "targetRef": "id16",
                        "condition": "No"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a patient shows their Medicare card and prescriptions at NewTown Health Chemist. The patient is asked if the prescriptions are for themselves.  If not, the process ends as a prescription unfilled. If the prescriptions are for the patient, they are received and checked by the pharmacist. If the script details are not valid, the process ends as a prescription unfilled. If valid, the pharmacist opens and reviews the patient's profile in the pharmacy information system. The system calculates Medicare costs waivers and total fees, and the prescription information is made ready to view by the pharmacist. The pharmacist then checks if the patient appears suspicious. If so, the pharmacist contacts the patient's GP for advice. The GP replies via call or email, and the pharmacist provides advice/recommendations to the patient. The patient then decides whether or not they agree. If not, the process ends as a prescription unfilled. If the patient agrees, or if the patient did not appear suspicious initially, the pharmacist then checks the patient's status, including allergies, pregnancy, and past history. If the status check does not pass, the pharmacist offers alternative medicines with a lower dosage level.  The patient is then asked if they agree to the alternatives. If not, the process ends as a prescription unfilled.  If they agree, or if the status check passed initially, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the prescription is out of stock, the pharmacist informs the patient about alternatives.  The patient then decides whether or not they agree to the alternatives. If not, the process ends as a prescription unfilled. If the patient agrees, or if the required medication was in stock, the pharmacist collects the correct drugs, prints and attaches labels, adds a short memo and informs patient that the labels and CMI is ready. The patient then pays their prescription fees and receives their prescriptions, at which point dispensing ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive and check prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate Medicare costs, waivers, and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare prescription information for pharmacist review",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Contact patient's GP",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Provide advice/recommendations to patient",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check patient status (allergies, pregnancy, past history)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Offer alternative medicines",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Select correct prescribed dosage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Inform patient about alternatives (out of stock)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Collect correct drugs, print and attach labels, add memo",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Inform patient that labels and CMI are ready",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Receive prescriptions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Patient shows Medicare card and prescriptions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Dispensing ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Prescriptions for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Script details valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient agrees to alternatives?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Prescription in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Patient agrees to alternatives (out of stock)?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Patient",
                                "elemRefs": [
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id22",
                                    "id24",
                                    "id26"
                                ]
                            },
                            {
                                "id": "id29",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id19",
                                    "id20",
                                    "id21",
                                    "id23",
                                    "id25"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "Patient's GP",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "GP",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id31"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id31",
                        "targetRef": "id6"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id1",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id6",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id22",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id7",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id23",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id23",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id8",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id24",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id24",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id10",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id25",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id11",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id26",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id26",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    }
                ]
            }
        }
    },
    "27_ground_truth.json": {
        "0": {
            "text": "The process starts when a conflict occurs for an employee at SoKnow. The employee seeks a mediator.  The mediator then contacts the HR department and listens to the employee. Next, the HR department schedules an appointment.  The employee attends the appointment and then describes the conflict. Based on this description, the mediator will attempt to find a conflict resolution. The employee is then asked if the conflict is resolved. If the conflict is resolved, the process ends. If not, another appointment is scheduled, leading back to describing the conflict again and the process continues trying to find a resolution.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek Mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Contact HR Department",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Listen to Employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Schedule Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Attend Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe Conflict",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Attempt to Find Conflict Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ask if Conflict is Resolved",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Schedule Another Appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Conflict Occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Conflict Resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Is Conflict Resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Mediator",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id4",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a conflict occurs for an employee at SoKnow. The employee seeks a mediator, who then contacts the HR department and listens to the employee. The HR department schedules an appointment with the employee, who then attends the appointment.  After attending the appointment, the employee describes the conflict. Based on the description, they work towards finding a conflict resolution. The employee then assesses whether the conflict is resolved. If not, they schedule another appointment with the mediator and the process loops back to describing the conflict. If the conflict is resolved, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek Mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Contact HR Department",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Listen to Employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Schedule Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Attend Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Describe Conflict",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Work Towards Conflict Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Assess Conflict Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Schedule Another Appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Conflict Occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Conflict Resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Is Conflict Resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a conflict occurs for an employee at SoKnow. The employee seeks a mediator.  The mediator then speaks with the employee in the HR department and schedules an appointment. The employee attends the appointment and describes the conflict.  The next step is to find a conflict resolution. The question is asked whether the conflict is now resolved. If no, another appointment is scheduled, and the conflict resolution process continues. If yes, the process ends, and the conflict is resolved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek Mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Speak with Employee",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Schedule Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Attend Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Describe Conflict",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Find Conflict Resolution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Schedule Another Appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Conflict Occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Conflict Resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Is Conflict Resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id6",
                                    "id7",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Mediator",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "41_ground_truth.json": {
        "0": {
            "text": "The process starts when a task arises.  The technical Jane Doe estimates the working time effort and checks if the employee is reachable. If the employee is not reachable, the task is marked as not assigned and the technical Jane Doe checks if the employee is reachable again. If the employee is reachable, the technical Jane Doe checks resource availability and selects a field employee. Then, the technical Jane Doe contacts the field employee. If the employee is reachable, the technical Jane Doe assigns the task to the employee and specifies the procedure for task completion. The field employee receives the task, confirms the task and processes the task. After processing the task, the field employee completes the task, makes a completion report, and the technical Jane Doe documents the completion report.  The process ends when the task is processed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if employee is reachable",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Mark task as not assigned",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check resource availability",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select field employee",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Assign task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive task",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm task",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process task",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Complete task",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Make completion report",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Document completion report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a task arises in Viticulture in Outdoor Operations. The technical Jane Doe estimates the working time effort and checks if the employee is reachable. If the employee is reachable, the technical Jane Doe checks resource availability.  If the employee isn't reachable, the task is not assigned and the technical Jane Doe checks whether the employee is reachable again. If the employee is now reachable, the resource availability is checked. Following this check, a field employee is selected. Then the technical Jane Doe contacts the field employee.  If the employee is reachable, the task is assigned to the employee, who receives the task.  The procedure for task completion is then specified.  The field employee does the task within the process task, confirms the task within the confirm task subprocess, and makes a completion report within the make completion report subprocess. Finally, the technical Jane Doe documents the completion report and the process ends with the task being processed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check resource availability",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign task",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive task",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Process task",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm task",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Make completion report",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Document completion report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Task not assigned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a task arises within Viticulture in Outdoor Operations.  The technical Jane Doe then estimates the working time effort and checks if the employee is reachable.  If the employee is reachable, the technical Jane Doe checks the resource availability. Afterward, they select a field employee and contact them. If the employee is not reachable the task is simply marked as not assigned, and the employee reachability is checked again. If reachable this time, available resources are checked. If not reachable again the task is never assigned. Once a field employee is selected, the Jane Doe contacts them. If the field employee is reachable, the technical Jane Doe assigns the task to the employee.  If the field employee is not reachable, the task is not assigned and the employee reachability is checked again until being reachable. Once assigned, the technical Jane Doe specifies the procedure for task completion. The field employee receives the task, confirms it by a sub-process and proceeds with the sub-process of task completion. Following this, the field employee carries out the sub-process of making a completion report, and the technical Jane Doe documents the completion report. The process ends when the task is processed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check resource availability",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign task",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm task",
                        "type": "Sub-Process"
                    },
                    {
                        "id": "id9",
                        "name": "Complete task",
                        "type": "Sub-Process"
                    },
                    {
                        "id": "id10",
                        "name": "Make completion report",
                        "type": "Sub-Process"
                    },
                    {
                        "id": "id11",
                        "name": "Document completion report",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Mark task as not assigned",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Field employee reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "13_ground_truth.json": {
        "0": {
            "text": "The process starts with receiving an order in warehousing at Startup TZd-03. The first step is the creation of a bill of materials, after which the goods are ordered. Once ordered, a check is performed to clarify if immediate shipping is possible. If immediate shipping is possible, the question is clarified with the specialist department, after which an event-based gateway awaits either a supplier inquiry, delivery of parts, or a timeout indicating that no delivery occurred within 5 working days.  If a supplier inquiry is received, it is followed by a clarification with the specialist department. If parts are delivered, the next step is checking quantity and quality. Following the quality check, the result is evaluated. If the quality check fails, a request for replacement delivery is made to the supplier, after which clarification with the specialized department follows again. If five working days pass without delivery, the supplier is contacted.  From the supplier a message indicating delivery of parts is sent. Subsequently, the quantity and quality are checked and if it fails, this will lead to requesting a replacement delivery to the supplier. Back to the immediate shipping question: If immediate shipping is not possible, the process ends with a delivery issue escalation. Returning to the quality check: if successful, the goods are stored. Once stored, another order is received from Sales, and the warehousing department carries out goods preparation and packaging. Finally, shipping/goods issue takes place.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify with specialist department",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Check quantity and quality",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate result",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request replacement delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Contact supplier",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Store goods",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Goods preparation and packaging",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Shipping/goods issue",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Receive order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Supplier inquiry",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Delivery of parts",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Timeout (5 working days)",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Delivery issue",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Receive order (Sales)",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Immediate shipping possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery within 5 days?",
                        "type": "EventBased"
                    },
                    {
                        "id": "id19",
                        "name": "Quality check successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Startup TZd-03",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Warehousing",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id17",
                                    "id19",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Specialist Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Sales",
                                "elemRefs": []
                            },
                            {
                                "id": "id24",
                                "name": "Supplier",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id17",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with warehousing at Startup TZd-03 receiving an order from sales. The first step is to create a bill of materials, after which the goods are ordered.  Following this, the order is checked. If immediate shipping is possible the order proceeds. If it's not possible the process ends as an escalation of delivery issues. If shipping is possible the question is clarified with the specialist department. Subsequently, the warehousing department contacts the supplier, who then sends a supplier inquiry back to warehousing.  This inquiry is followed by clarifying the question with the specialized department, which leads to another check. This check goes to an event-based gateway where three paths are possible: A delivery of parts from the supplier, the supplier sending an inquiry to warehousing, or a timer event triggering after no delivery within 5 working days.  Both the delivery of parts and the supplier inquiry lead to a check of quantity and quality. If the check fails, a request for replacement delivery is sent to the supplier.  This request loops back to the order check. If the quantity and quality check is successful, the goods are stored. After storing the goods, another order from sales arrives at warehousing. Then goods preparation and packaging takes place, followed by shipping and goods issue.  If, however, after the initial order check, no delivery occurs within 5 business days, the warehousing department contacts the supplier, looping back to the order check.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check order",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Clarify with specialist department",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Contact supplier",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Clarify question with specialized department",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check quantity and quality",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send request for replacement delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Store goods",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Goods preparation and packaging",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Shipping and goods issue",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Order from sales",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Delivery issues",
                        "type": "EndEscalationEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Delivery of parts",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Supplier inquiry",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id16",
                        "name": "No delivery within 5 working days",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Order from sales",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Goods issued",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Immediate shipping possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Check result",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "EventBased"
                    }
                ],
                "pools": [
                    {
                        "id": "id22",
                        "name": "Startup TZd-03",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Warehousing",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id24",
                                "name": "Sales",
                                "elemRefs": [
                                    "id12",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id14",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Specialist Department",
                                "elemRefs": [
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id7",
                        "condition": "Delivery of parts"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id6",
                        "condition": "Supplier Inquiry"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id5",
                        "condition": "No delivery within 5 working days"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id20",
                        "targetRef": "id8",
                        "condition": "Check fails"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id20",
                        "targetRef": "id9",
                        "condition": "Check successful"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with warehousing at Startup TZd-03 receiving an order from sales.  The order is prepared which involves creating a bill of materials followed by ordering goods.  The order is then clarified with the specialist department. Following this clarification, there is a check to see if immediate shipping is possible. If immediate shipping is not possible, the process ends with a delivery issue.  If immediate shipping is possible, the process proceeds with the clarification with the specialist department again. This is followed by an event-based gateway that waits for one of three events: delivery of parts from the supplier, a supplier inquiry, or a timeout if no delivery occurs within 5 working days. If a supplier inquiry is received, the question is clarified with the specialist department. If the parts are delivered, the quantity and quality are checked.  Based on the result of the quality check, if the check fails, a replacement delivery is requested from the supplier.  The replacement delivery request then leads back to the check with the specialist department. If the quality check is successful, the goods are stored. After the goods are stored, an order message is sent back to sales. Next, goods preparation and packaging takes place. Finally, shipping/goods issue occurs. If no delivery is received within 5 working days after contacting the supplier, the supplier will be contacted. After the supplier is contacted, there is another check if immediate delivery is possible or not with the same consequences mentioned before.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Bill of Materials",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clarify with Specialist Department",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clarify with Specialist Department",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Quantity and Quality",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Replacement Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Store Goods",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Goods Preparation and Packaging",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Shipping/Goods Issue",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Contact Supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Order Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Delivery Issue",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Parts Delivered",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Supplier Inquiry",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Timeout (5 working days)",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Immediate Shipping Possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Quality Check Passed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Immediate Delivery Possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "EventBasedGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "75_ground_truth.json": {
        "0": {
            "text": "The process \"Viticulture in Outdoor Operations\" starts with the field employee receiving the task \"Grape harvest\".  The field employee receives information about the stroke location. Next, the field employee loads tools and then drives to the field. After arriving, the tools are unloaded.  Following this, the field employee conducts the hand grape harvest.  After the harvest, the field employee loads the tools again and drives to the winery.  Finally, the field employee unloads the tools at the winery and the process ends with the task being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Grape harvest",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive stroke location information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Load tools",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Drive to the field",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Unload tools",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Hand grape harvest",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Load tools",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Drive to the winery",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Unload tools at the winery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Task completed",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Process Started",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process Ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process \"Viticulture in Outdoor Operations\" starts with receiving the task \"Grape harvest\". Then, the field employee receives information about the stroke location.  Next, the field employee loads tools and drives to the field.  After arriving at the field, the field employee unloads the tools and conducts the hand grape harvest. Once harvesting is complete, the field employee loads the tools again and drives to the winery. Upon arriving at the winery, the field employee unloads the tools. Finally, the process ends when the task is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Grape harvest",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Inform about stroke location",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Drive to the field",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Hand grape harvest",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Drive to the winery",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Complete task",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process \"Viticulture in Outdoor Operations\" starts with receiving the task \"Grape harvest\".  The field employee receives information about the stroke location. Then, the field employee loads tools and drives to the field. After arriving at the field, the tools are unloaded. Next, the hand grape harvest is conducted. After the harvest, the tools are loaded again, and the field employee drives to the winery. Finally, the tools are unloaded at the winery and the process ends. \n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Drive to the field",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Hand grape harvest",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Drive to the winery",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Unload tools at the winery",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Grape harvest",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "23_ground_truth.json": {
        "0": {
            "text": "The process begins with a doctor in the Treatment Chambers evaluating the condition of a patient entering short-term treatment.  Next, a technician tests the patient in the laboratory.  The doctor then treats the patient and prescribes medicines. Finally, the prescription is delivered, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate Patient Condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Test Patient",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat Patient and Prescribe Medicines",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deliver Prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Short-Term Treatment Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Prescription Delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id7",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id8",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with entering short-term treatment within the Treatment Chambers. A doctor evaluates the condition of the patient. Next, a technician tests the patient in the laboratory.  The doctor then treats the patient and prescribes medicines. Finally, the prescription is delivered, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter short-term treatment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Test patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Treat patient and prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts, when a patient enters short-term treatment at the Treatment Chambers. A doctor evaluates the condition of the patient. Then, a technician tests the patient in the laboratory.  After the patient is tested, the doctor treats the patient. Next, the doctor prescribes medicines. Finally, after the prescription is delivered, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Test patient",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicines",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id7",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id8",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "17_ground_truth.json": {
        "0": {
            "text": "The process starts when a new email account is needed, which leads to logging on to the email provider website through the Email Account Creation Portal.  Next, a package is chosen, and then it is checked if a personal account is available. If a personal account is not available, the process ends. If it is available, the user enters the private account welcome page. Following this, personal information is provided, after which the user enters their full name and uploads a photo ID in parallel. Once both actions are complete, the personal data is confirmed. Finally, a new email ID and password are generated, and the process ends with the successful creation of a private email.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose Package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter Private Account Welcome Page",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide Personal Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter Full Name",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload Photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm Personal Data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Generate New Email ID and Password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Need New Email Account",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Log on to Email Provider Website",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Personal Account Not Available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Private Email Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Personal Account Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "parallel gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "parallel gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an email account is needed. The user logs on to the email provider website using the Email Account Creation Portal. Next, the user chooses a package.  The process checks if a personal account is available. If not, the process ends. If a personal account is available, the user enters the private account welcome page.  The user then provides personal information, after which, concurrently, the user enters their full name and uploads a photo ID. Once both actions are complete, the personal data is confirmed. A new email ID and password are generated, and finally, a private email is created, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to email provider website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter private account welcome page",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enter full name",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Create private email",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Account Unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Email Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Personal Account Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an email account is needed. The user logs on to the email provider website and chooses a package through the Email Account Creation Portal. Next, the process checks if a personal account is available. If not, the process ends. If a personal account is available, the user enters the private account welcome page. Following this, they provide personal information, which leads to entering full names and uploading a photo ID in parallel. Once both actions are completed, personal data is confirmed, a new email ID and password are generated, and the process ends with the creation of the private email.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter private account welcome page",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload a photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Personal account not available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "parallel gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "parallel gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "name": "Log on to email provider website",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "59_ground_truth.json": {
        "0": {
            "text": "The process starts when a customer wants a credit. The customer fills out a credit application and sends it to a Mediation Agency. The Mediation Agency sends the credit inquiry to Bank A and Bank B.  Bank A checks the credit amount and then checks if the credit amount is greater than 20 times the monthly income. If so, the rejection is sent to the Mediation Agency. Otherwise, if the credit amount is not greater than 20 times the monthly income, Bank A estimates 20% interest per year and sends a credit report to the Mediation Agency. Concurrently, upon receiving the loan request, Bank B checks the credit amount and then checks if the customer's income is between \u20ac2,000 and \u20ac100,000. If not, the rejection is sent to the Mediation Agency. Otherwise, if the income is within the required range, Bank B performs an interest rate determination and sends a credit report to the Mediation Agency. The Mediation Agency waits to receive either credit proposals or rejections from both banks. Upon receiving a rejection from either bank, the Mediation Agency sends a rejection to the customer. Upon receiving credit proposals from both Bank A and Bank B, the Mediation Agency sends the proposals to the customer. The customer then decides whether to accept or reject the proposals. The process ends when the customer makes their decision.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send credit inquiry",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check credit amount",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check credit amount",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Estimate interest rate",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Determine interest rate",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send credit report",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send credit report",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send proposals",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Decide on proposals",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Credit amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Income between \u20ac2,000 and \u20ac100,000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Rejection from either bank?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Proposals from both banks?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Mediation Lane",
                                "elemRefs": [
                                    "id2",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Bank A Lane",
                                "elemRefs": [
                                    "id3",
                                    "id5",
                                    "id7",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Bank B Lane",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id8",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id19",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a customer wants a credit. The customer fills out a credit application and sends it to a mediation agency. The mediation agency sends the application to Bank A and Bank B. Bank A checks the credit amount and checks if the credit amount is greater than 20 times the monthly income. If so, the rejection is sent to the mediation agency.  If not, Bank A estimates 20% interest per year and sends a credit report to the mediation agency. Concurrently, upon receiving the credit application, Bank B checks the credit amount and then checks if the customer's income is between \u20ac2,000 and \u20ac100,000. If not, Bank B sends a rejection to the mediation agency. If the income is within the required range, Bank B performs an interest rate determination and sends a credit report to the mediation agency. The customer waits for a credit proposal or a rejection from the mediation agency.  Once the customer receives either a proposal or a rejection, the process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check credit amount",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check credit amount",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check income",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Estimate interest rate",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send credit report",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Determine interest rate",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send credit report",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for proposal or rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Receive proposal or rejection",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Income between \u20ac2,000 and \u20ac100,000?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Mediation Lane",
                                "elemRefs": [
                                    "id21",
                                    "id22",
                                    "id24",
                                    "id25"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Bank A Lane",
                                "elemRefs": [
                                    "id3",
                                    "id6",
                                    "id7",
                                    "id10",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Bank B Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id11",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id23",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id37"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id37"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id16",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id37"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id37",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id46",
                        "sourceRef": "id2",
                        "targetRef": "id47"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id2",
                        "targetRef": "id48"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when a customer wants a credit. The customer fills out a credit application and sends it to a mediation agency. The mediation agency then sends a credit inquiry to Bank A and a loan request to Bank B.  Bank A checks the credit amount and decides whether the credit amount is greater than 20 times the monthly income. If it is, Bank A sends a rejection to the mediation agency. Otherwise, they estimate 20% interest per year and send a credit report to the mediation agency.  Simultaneously, Bank B checks the credit amount and assesses if the income is between \u20ac2,000 and \u20ac100,000. If not, Bank B sends a rejection to the mediation agency. If the income is within the required range, Bank B performs an interest rate determination and sends a credit report to the mediation agency. The mediation agency waits to receive either a credit report or a rejection from both Bank A and Bank B.  Upon receiving these messages, the mediation agency either sends a credit proposal or rejection to the customer.  Finally, the customer receives either the credit proposal or the rejection, after which the credit process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send credit inquiry",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Send loan request",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Check credit amount",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Estimate interest",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Send credit report",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Check credit amount",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Perform interest rate determination",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Send credit report",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send credit proposal",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Send rejection",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Credit process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Credit amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Income between \u20ac2,000 and \u20ac100,000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Credit reports or rejections received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Mediation Agency Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id12",
                                    "id13",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Bank A Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Bank B Lane",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id17"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id37",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "Credit reports received"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "Rejection received"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ]
            }
        }
    },
    "71_ground_truth.json": {
        "0": {
            "text": "The process starts with the creation of a booking system within Accounting and Controlling. The booking system is then started, followed by reading the payment.  Payment automation is started next, and it is checked if the payment is made. If the payment is made, it is booked, and the process ends with the payment paid status. If the payment is not made, a reminder is sent. After the reminder is sent, the process checks if the payment is made after the reminder. If the payment is made, it leads to booking the payment and ending the process with payment paid status.  If the payment is still not made, a written dunning procedure is initiated. This leads to reviewing the reminder notice, which involves checking if the inspection was successful. If not successful, the reminder notice is filled out correctly, and the review process is repeated. If the inspection is successful, the reminder notice is sent, and the process ends with a reminder notice sent status. If the payment is made after the reminder but before the dunning procedure starts, it also leads to booking the payment and the process ending with payment paid status.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Read payment",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Start payment automation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Book payment",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Initiate written dunning procedure",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Review reminder notice",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Fill out reminder notice correctly",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Send reminder notice",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Payment paid",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Reminder notice sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Payment made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Payment made after reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Inspection successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Accounting and Controlling",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id16",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the creation of a booking system within Accounting and Controlling. The booking system is then started, after which payment is read.  Payment automation is then started. Next, a check is performed to see if the payment has been made. If the payment has been made, the payment is booked, and the process ends with the payment paid status. If the payment has not been made, a reminder is sent.  Following the reminder, a check is made to see if the payment has been made after the reminder. If the payment has been made, the payment is booked, and the process ends with the payment paid status.  If the payment has still not been made, a written dunning procedure is initiated. Next, the reminder notice is reviewed. An inspection follows to see if the reminder notice has been filled out correctly. If not, the reminder notice is corrected, and the review process is repeated. If the reminder notice has been filled out correctly, the reminder notice is sent, and the process ends with the reminder notice sent status.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Create booking system",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Start booking system",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Read payment",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Start payment automation",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Book payment",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Send reminder",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Initiate written dunning procedure",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Review reminder notice",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Correct reminder notice",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Send reminder notice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Payment Paid",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Reminder Notice Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Payment Made After Reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Reminder Notice Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accounting and Controlling",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task5",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway1",
                        "targetRef": "task6",
                        "condition": "No"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "No"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task8",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway3",
                        "targetRef": "task9",
                        "condition": "No"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task9",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "task10",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task10",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the creation of a booking system within Accounting and Controlling.  The booking system is then started, after which payment is read.  Payment automation is started next.  The process then checks if the payment is made. If the payment is made, the payment is booked, and the process ends with the payment paid status. If the payment is not made, a reminder is sent. After the reminder is sent, the process checks if the payment is made after the reminder. If the payment is made, the payment is booked, and the process ends with the payment paid status. If the payment is still not made, a written dunning procedure is initiated and the review reminder notice subprocess is triggered. If the inspection of the reminder notice is successful, a reminder notice is sent, and the process ends with a reminder notice sent status. If the inspection is not successful, the reminder notice needs to be filled out correctly.  Once correctly filled, it proceeds to the review reminder notice subprocess and the cycle repeats until a reminder notice is sent.\n\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Read payment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Start payment automation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Book payment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send reminder",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Initiate written dunning procedure",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Fill reminder notice correctly",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send reminder notice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Payment Paid",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Reminder Notice Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Payment Made After Reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Inspection Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "26_ground_truth.json": {
        "0": {
            "text": "The process starts when a late payment is received by the SoKnow finance department. Management is informed and, depending on whether a reminder was previously sent, the process branches.  If a reminder was sent, an inquiry is made with the customer. If no reminder was previously sent, a reminder is created and sent to the customer by the legal department. A message is sent to the customer containing the inquiry or the reminder.  Regardless of a reminder being sent or not, after sending an inquiry to the customer, the process checks whether a response was received. If a response was received, an online banking check is performed by the finance department. If no response was received, or if three reminders were unsuccessful, the finance department notifies the legal department. The legal department then notifies a lawyer, sending a request message to an external lawyer. After notifying the lawyer, the legal department runs a reminder process. Once the reminder process is completed, the process ends for the legal department. After performing the online banking check, if the payment was made, the payment is posted and the process ends.  If the payment was not made after the reminder process, a parallel gateway starts two flows. In one flow the legal department continues the reminder process, while in a separate flow, the payment is processed by the finance department (after having confirmed it has been made) and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Management",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Make Inquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send Reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Perform Online Banking Check",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Notify Legal",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Notify Lawyer",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Run Reminder Process",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Post Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Process Payment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Late Payment Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Payment Posted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Reminder Process Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Payment Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Reminder Sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Response Received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Three Reminders Unsuccessful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id21",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Legal Department",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "customer"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "customer"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "External Lawyer"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id16",
                        "targetRef": "id17",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id19",
                        "condition": "no"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "no"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id20",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when SoKnow receives a late payment.  Management is informed and decides whether or not a reminder was previously sent. If so, an inquiry is made with the customer. If not, a reminder is created and sent to the customer. After sending an inquiry email to the customer, the finance department awaits a response.  If there is no response, the legal department is notified and the question arises if the third reminder was unsuccessful. If the third reminder was unsuccessful, the legal department notifies a lawyer. If it was successful or if there was a customer response to the inquiry, the finance department performs an online banking check. This check is also performed after the reminder process has been run. A parallel gateway then waits for the online banking check and the reminder process. Once completed successfully the reminder process ends. The online banking check triggers an exclusive gateway which branches on the condition if payment was made. If the payment was not made, a reminder is created in the legal department, a reminder message is sent to the customer and the process loops back to the \"was reminded\" gateway. The reminder message also triggers another process concerning reminder processes which ends when the reminder process is completed. The message about obtaining legal assistance is sent to an external lawyer. If the payment was made, the payment is posted and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Management",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Make Inquiry",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Await Response",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify Legal",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Notify Lawyer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Perform Online Banking Check",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create Reminder (Legal)",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Reminder Message",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Post Payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Late Payment Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Reminder Process Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Payment Posted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Was Reminded?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Third Reminder Unsuccessful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16",
                        "condition": "no response"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id8",
                        "condition": "response"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when SoKnow receives a late payment. The finance department informs management.  Management then checks if the customer has been reminded before. If so, the finance department inquires with the customer, sending an inquiry email to the customer company. If the customer company responds, an online banking check is performed.  If there is no response, the Legal department notifies the lawyer, who will send a message to obtain legal assistance from an external lawyer.  The legal department then runs the reminder process. Once the reminder process is completed, the process ends. Meanwhile, back in the finance department, if the customer has not been reminded before, a reminder is created by the legal department. A reminder is then sent to the customer company. Afterwards it is checked if the payment has been made. If the payment has been made the payment is posted and the process ends when the payment is processed. If the payment has not been made, and this isn't the third reminder, it's checked if the customer has been reminded before and the loop continues. If this is the third unsuccessful reminder, the finance department notifies the legal department. The legal department then checks with the finance department whether to notify the lawyer to obtain legal assistance. If the legal department is not notified, the legal department creates a reminder, and the loop continues from there. If the legal department is notified by the finance department, the legal department notifies the lawyer and the process continues as before when the lawyer has been notified previously.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Management",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Inquire with Customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform Online Banking Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Lawyer (Internal)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Message to External Lawyer",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Run Reminder Process",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Reminder",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Post Payment",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Notify Legal Department",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check with Finance Department",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Late Payment Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Reminder Process Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Payment Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Customer Reminded Before?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Customer Response?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Third Reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Notify Lawyer (External)?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Management",
                                "elemRefs": [
                                    "id15"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Legal Department",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Customer Company",
                        "lanes": []
                    },
                    {
                        "id": "id25",
                        "name": "External Lawyer",
                        "lanes": []
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id27",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id30"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id30",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id33"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id33",
                        "targetRef": "id17"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id18",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "yes"
                    }
                ]
            }
        }
    },
    "68_ground_truth.json": {
        "0": {
            "text": "The process starts when a warehouse supervisor in the FMCG Company requests sample products. After the request, the supplier provides sample products.  The warehouse supervisor then checks if the samples meet the requirements. If the samples do not meet the requirements, the supplier adjusts the product specifications and provides new samples products to be re-checked by the warehouse supervisor in a loop until the samples finally meet the requirements.  If the samples meet the requirements, the warehouse supervisor selects a product and sends a purchase order to the supplier.  Concurrently the supervisor will check the stock availability. If the stock is not available, the supplier restocks the inventory. Eventually, regardless of stock availability, sends the product. Then the warehouse supervisor receives the product, and checks if the received product matches the purchase order. If the order and physical product do not match, the warehouse supervisor requests the missing products, then checks availability again for the missing products and the process iterates until all products are received and match the order. If the order and product match, the warehouse supervisor sends a payment authorization to the department. The department processes the payment and notifies the supplier, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide Sample Products",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Check if Samples Meet Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust Product Specifications",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Provide New Sample Products",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Stock Availability",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Restock Inventory",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Send Product",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check if Received Product Matches Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Request Missing Products",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Check Availability for Missing Products",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send Payment Authorization",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Process Payment",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Notify Supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Samples Meet Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Department",
                                "elemRefs": [
                                    "id16",
                                    "id17"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Supplier Representative",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id20",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id20",
                        "targetRef": "id23",
                        "condition": "Yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id23",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id23",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id22",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id14",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id22",
                        "targetRef": "id15",
                        "condition": "Yes"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id17",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a warehouse supervisor in the FMCG Company requests sample products. The supplier then provides sample products. The warehouse supervisor checks if the samples meet the requirements. If the samples do not meet the requirements, the supplier adjusts the product specifications and provides new samples for checking, looping back to the requirement check.  If the samples meet the requirements, the warehouse supervisor selects a product. Next, the warehouse supervisor sends a purchase order which in turn is received by the supplier, kicking off the stock availability check by the supplier. If the stock is not available, the supplier restocks the inventory. Regardless of whether restocking was needed or not, the supplier sends the product to the warehouse supervisor. The warehouse supervisor receives the product and checks if the physical product matches the order. If they do not match, the warehouse supervisor requests the missing products from the supplier, who performs the check of stock availability and sends the product if stock is available or restocks, looping through these actions.  If the physical product and order match, the warehouse supervisor sends a payment authorization. Following this, the department in the FMCG Company processes the payment and notifies the supplier, finalizing the process when the supplier is notified. \n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check if Samples Meet Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Adjust Product Specifications",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Provide New Samples",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send Product",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if Physical Product Matches Order",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Request Missing Products",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Payment Authorization",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Process Payment",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Notify Supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Request Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Supplier Notified",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Samples Meet Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Physical Product Matches Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id21",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Department",
                                "elemRefs": [
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a warehouse supervisor of the FMCG Company requesting sample products. Following this request, the supplier provides sample products. The warehouse supervisor then checks if the samples meet the requirements. If the samples do not meet the requirements, the supplier adjusts the product specifications, and provides new samples for checking if the samples meet requirement.  This cycle will loop until the sample products meets requirement. If the samples meet the requirements, the warehouse supervisor selects a product and sends a purchase order to the supplier. Subsequently, the supplier checks stock availability. If the stock is not available, the supplier restocks the inventory and subsequently will check the stock availability again. If the stock is available, the supplier sends the product to the FMCG Company. After receiving the product, the warehouse supervisor checks if the order and the physical product match. If they do not match, the warehouse supervisor requests the missing products, and the supplier checks if there is stock availability for those requested missing products again.  If the order and the physical product match, the warehouse supervisor sends a payment authorization. Finally, the FMCG Company department processes the payment and notifies the supplier, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request sample products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide sample products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check if samples meet requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust product specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide new samples",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select product and send purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check stock availability",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Restock inventory",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send product",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if order and physical product match",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request missing products",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send payment authorization",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Process payment and notify supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Samples meet requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Order and product match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id6",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "40_ground_truth.json": {
        "0": {
            "text": "The process starts when an application is received at the ADOmoney Bank. The application documents are reviewed and pre-selected by recruitment.  Next, it is determined whether the application is for a key position. If it is for a key position, a telephone interview is conducted.  If not, or after the telephone interview is complete, an appointment for a personal interview is communicated via email. Regardless of whether a telephone interview takes place, the applicant will receive communication via email to arrange their in-person interview. Following this, a decision is made about the application. If the application is rejected at this stage, a rejection is created and sent to the applicant, and the process ends. If the application is advanced, the appointment and applicant documents are forwarded to the department. A personal interview is then conducted. Following the interview, another decision gateway is encountered. This gateway leads to two parallel paths: scheduling an appointment for the assessment center, and planning and preparing the assessment center. These paths converge before the assessment center is conducted. After the assessment center, the applicants are voted on. A final decision is then made. If the applicant is accepted, an acceptance letter is written and sent to the applicant, and the process ends. If the applicant is rejected, a rejection is drafted and sent to the applicant, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review and pre-select application documents",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Make decision on application",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and send rejection",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward appointment and applicant documents to department",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule appointment for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Vote on applicants",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Make final decision",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Write and send acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Draft and send rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Is application for key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Is application rejected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "name": "Is applicant accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "ADOMoney Bank",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Recruitment",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id19"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Department",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Assessment Center Team",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Hiring Manager",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id20",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id19",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id22",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when an application has been received at the ADOmoney Bank\u2019s recruitment department. The application documents are reviewed and pre-selected.  The process may continue with examining the application documents in detail or be directly rejected after preselection, ending the process. If the application is not rejected, it is assessed whether it is for a key position. If it is for a key position, a telephone interview is conducted, after which an appointment for a personal interview is communicated via email. If the application is not for a key position, the appointment for a personal interview is communicated directly via email.  Regardless of whether a telephone interview was conducted, the applicant may be invited for another personal interview or directly proceed to the next stage. If another personal interview takes place, it may result in the applicant being scheduled for an assessment center. Irrespective of how the applicant reaches the assessment center scheduling stage, the appointment and applicant documents are forwarded to the department.  In parallel, the appointment is scheduled with the applicant, and the assessment center is planned and prepared.  Both these paths converge to the conduct assessment center step. Following this, the applicants are voted on.  Based on the vote, the recruitment department either writes and sends an acceptance to the applicant, concluding the process, or drafts a rejection and sends it to the applicant, also ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review and pre-select application documents",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Examine application documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate appointment for personal interview (email)",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward appointment and applicant documents to department",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Schedule appointment with applicant",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Vote on applicants",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Write and send acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Draft and send rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Application rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Pre-selection outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Personal interview outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Vote outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "ADOMoney Bank",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Department",
                                "elemRefs": [
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id3",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id7",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id8",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id20",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id20",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when an application has been received by Recruitment at the ADOmoney Bank. The application documents are reviewed and a pre-selection is made.  Based on the review, the application might be rejected after preselection, ending the process. If not rejected, it is checked whether the application is for a key position. If so, a telephone interview is conducted.  Regardless of whether a telephone interview takes place or not, an appointment for a personal interview is communicated via email.  After multiple attempts to communicate the appointment, the applicant documents are forwarded to the department, and a personal interview is conducted. Following the interview, the process might involve scheduling an appointment for an assessment center and simultaneously planning and preparing for the assessment center.  Both paths converge, leading to the actual assessment center being conducted.  After the assessment center, the applicants are voted on. Depending on the vote outcome, the applicant is either sent an acceptance letter, concluding the process, or a rejection letter, also ending the process.  If the application is not for a key position, the process continues with examination of the applicant documents. After the documents are examined, the application might be rejected or continue to the next stage, similar to the key position application process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents and pre-selection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Communicate appointment for personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward applicant documents to department",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Schedule appointment for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Plan and prepare for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Vote on applicants",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Examine applicant documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Application rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Application accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Application rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Pre-selection outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Vote outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Application examination outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "name": "Converging Gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "ADOmoney Bank",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Recruitment",
                                "elemRefs": [
                                    "id1",
                                    "id13",
                                    "id17",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Hiring Manager",
                                "elemRefs": [
                                    "id2",
                                    "id18",
                                    "id12",
                                    "id20"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id21",
                                    "id22",
                                    "id8",
                                    "id9",
                                    "id19",
                                    "id10",
                                    "id11",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id6",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id7",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    }
                ]
            }
        }
    },
    "90_ground_truth.json": {
        "0": {
            "text": "The process starts with the claim of revenue by SoKnow's strategy process.  The company must ensure self-financing or receive funding amounts. Following either of those options, the company aims to gain a high market share in open-source solutions and generate revenue through additional services. These two goals are pursued in parallel.  Gaining high market share leads to organizing training units, after which consulting services are performed. Performing consulting services leads to generating follow-up projects and subsequently to the end of the process, where the revenue is claimed. Generating revenue through additional services also feeds into the same parallel gateway before organizing training.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Ensure Self-Financing",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Funding Amounts",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Gain High Market Share in Open-Source Solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Generate Revenue Through Additional Services",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize Training Units",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Perform Consulting Services",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Generate Follow-Up Projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Claim of Revenue",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Revenue Claimed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Funding Secured?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Goals",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1",
                        "condition": "Self-financed"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "External Funding"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a claim of revenue within SoKnow's strategy process.  The company can choose to ensure self-financing or receive funding amounts, or both.  Following this decision, the process splits into two parallel paths. The first path focuses on gaining a high market share in open-source solutions, while the second focuses on generating revenue through additional services. After gaining high market share, the process continues to organize training units which leads to performing consulting services and finally generating follow-up projects. Simultaneously, after generating revenue through additional services, the same activities of organizing training, performing consulting, and generating follow-up projects occur. Once all these activities are completed, converging from the parallel paths, the process ends with the revenue claimed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Ensure Self-financing",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Funding Amounts",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Gain High Market Share in Open-Source Solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Generate Revenue through Additional Services",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize Training Units",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Perform Consulting Services",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Generate Follow-up Projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Claim of Revenue",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Revenue Claimed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Self-financing or Funding?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Paths Converge",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Strategy Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the claim of revenue within SoKnow's strategy process. The process has two inclusive gateways to make decisions on how to ensure financial stability; either by ensuring self-financing or by receiving funding amounts. Following either or both paths, the process aims to gain a high market share in open-source solutions and generate revenue through additional services. These two objectives are pursued in parallel.  After gaining market share, training units are organized, followed by performing consulting services, finally generating follow-up projects and the claimed revenue. The same final step occurs after generating revenue through services.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Ensure Self-financing",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Funding Amounts",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Gain High Market Share in Open-Source Solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Generate Revenue through Additional Services",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize Training Units",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Perform Consulting Services",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Generate Follow-up Projects and Claimed Revenue",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Claim of Revenue",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Financial Stability",
                        "type": "Inclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Paths",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Merge",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "74_ground_truth.json": {
        "0": {
            "text": "The process begins when a student enters the library. The student goes to a PC. After some time searching books, or immediately if time has elapsed, the student goes to the checkout counter. The library staff checks the student's ID. If the ID is valid, the student receives books and leaves the library. If the ID is not valid, the student receives no books and leaves the library.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search books",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive books",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive no books",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Student enters library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Student goes to PC",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Time elapsed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Student goes to checkout",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Student leaves library (with books)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Student leaves library (no books)",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "ID Valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a student enters the library. The student goes to a PC. After some time has elapsed, the student searches books.  Next, the student goes to the checkout counter. The library staff checks the student's ID. If the ID is valid, the student receives books and then leaves the library. If the ID is not valid, the student receives no books and subsequently leaves the library.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search books",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Go to checkout counter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive books",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive no books",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Enter library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Go to a PC",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Elapsed Time",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "ID Valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a student enters the library. The student goes to a PC. After some time has elapsed, the student searches books.  Next, the student goes to the checkout counter. The library staff checks the student's ID. If the ID is valid, the student receives books and subsequently leaves the library. If the ID is not valid, the student receives no books and then leaves the library.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search books",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Go to checkout counter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive books",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive no books",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Go to a PC",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Enter library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Time elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "ID Valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "49_ground_truth.json": {
        "0": {
            "text": "The process starts with the Waiter in the Kitchen and the Customer. The Waiter starts and sends the order to the Sous Chef. The Customer starts and orders food, sending a message to the Sous Chef with the order.  The Sous Chef manages the order of cooking, after which the Chef cooks the food and sends it to the Sous Chef. The Sous Chef checks the food and calls the waiter to grab it. The Waiter sends the food to the customer, who enjoys the food, after which the process ends for both the Customer and the Waiter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage order of cooking",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Cook food",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check food",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Grab food",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send food to customer",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Enjoy food",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Waiter start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Customer start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Waiter",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "WaiterLane",
                                "elemRefs": [
                                    "id7",
                                    "id13",
                                    "id4",
                                    "id5",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "CustomerLane",
                                "elemRefs": [
                                    "id8",
                                    "id16",
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Kitchen",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Sous Chef",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id19"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Chef",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id13",
                        "name": "Send order",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "name": "Order food",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id19",
                        "name": "Call waiter",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with the waiter receiving an order. The waiter sends the order to the Sous Chef. The customer orders food, which is sent as a message to the waiter, who sends the order to the sous chef. The Sous Chef manages the order of cooking.  The chef cooks the food and sends it to the Sous Chef. The Sous Chef checks the food and calls the waiter to grab the food. The waiter sends the food to the customer. The customer enjoys the food, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage order of cooking",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Cook the food",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check the food",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Grab the food",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send the food to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Receive order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Customer enjoys the food",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Waiter",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "WaiterLane",
                                "elemRefs": [
                                    "id10",
                                    "id12",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id11",
                        "name": "Sous Chef",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Sous Chef Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Chef",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Chef Lane",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "Customer",
                        "targetRef": "Waiter"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with the waiter receiving an order in the kitchen. The waiter sends the order to the Sous Chef. The customer orders food, which is sent to the Sous Chef. The Sous Chef manages the order of cooking. Next, the chef cooks the food. After cooking, the chef sends the food to the Sous Chef. The Sous Chef checks the food and calls the waiter to grab it.  The waiter sends the food to the customer, who then enjoys the food, thus completing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage order of cooking",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Cook food",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check food",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to Sous Chef",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send food to Sous Chef",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Call waiter",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send food to customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Customer orders food",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer enjoys food",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Waiter",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "WaiterLane",
                                "elemRefs": [
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Sous Chef",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Sous Chef Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Chef",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Chef Lane",
                                "elemRefs": [
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_ground_truth.json": {
        "0": {
            "text": "The process starts when parts are required.  A check is performed to determine whether parts are in stock. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are out of stock, the requirements are specified and quantified.  Next, a purchase order is completed, which is then checked.  The process then checks if the vendor is known.  If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created, after which an order template is created from the purchase order.  The purchase order is then approved.  Receipt of goods follows.  If there are delivery problems during the receipt of goods process, the order status is adjusted, which leads to the process ending as cancelled due to delivery problems. Otherwise, if the receipt of goods is successful the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check Stock",
                        "type": "Task"
                    },
                    {
                        "id": "task2",
                        "name": "Retrieve from Storage",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Specify and Quantify Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task4",
                        "name": "Complete Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task5",
                        "name": "Check Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task6",
                        "name": "Check Vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Create Order Template",
                        "type": "Task"
                    },
                    {
                        "id": "task8",
                        "name": "Create New Vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task9",
                        "name": "Approve Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task10",
                        "name": "Receipt of Goods",
                        "type": "Task"
                    },
                    {
                        "id": "task11",
                        "name": "Adjust Order Status",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Parts Required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Parts Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Cancelled due to Delivery Problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Delivery Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parts in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Vendor Known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Delivery Problems?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "No"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task8",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task7",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task10",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "event4",
                        "condition": "No"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gateway3",
                        "targetRef": "event5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "event5",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "task11",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when parts are required in the department of ACME AG.  A check is performed to determine if parts are in stock. If the parts are in stock, they are retrieved from storage, after which the process ends, indicating that the parts have been retrieved from storage.  If the parts are out of stock, the requirements are specified and quantified by the department. Next, a purchase order is completed, also by the department. The purchase order is then checked by Central Purchasing. Subsequently, it is determined by Central Purchasing whether the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created. Once the order template is created or the vendor is created, the purchase order is sent to the approver for approval.  After the purchase order is approved, the receipt of goods takes place within Central Purchasing.  If the receipt of goods is successful, the process ends, and the parts are procured. However, if a delivery problem occurs during the receipt of goods, the order status is adjusted, and the process ends indicating cancellation due to delivery problems.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storage",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Check Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create Order Template",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create New Vendor",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Approve Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Goods",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust Order Status",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Parts Required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order Cancelled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Delivery Problem",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Parts in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Vendor Known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Approver",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id15",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when parts are required.  A check is performed to determine whether parts are in stock. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are out of stock, the requirements are specified and quantified. Next, a purchase order is completed, which is then checked.  The process then checks if the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, the vendor is created.  Once the vendor is known or created, the purchase order is approved. After approval, the receipt of goods takes place. If the receipt of goods is successful, the process ends. However, if there are delivery problems during the receipt of goods, the order status is adjusted, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check Stock",
                        "type": "Task"
                    },
                    {
                        "id": "task2",
                        "name": "Retrieve from Storage",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Specify and Quantify Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task4",
                        "name": "Complete Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task5",
                        "name": "Check Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task6",
                        "name": "Create Order Template",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Create Vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task8",
                        "name": "Approve Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task9",
                        "name": "Receipt of Goods",
                        "type": "Task"
                    },
                    {
                        "id": "task10",
                        "name": "Adjust Order Status",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Parts Required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Parts Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Delivery Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parts in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Vendor Known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Receipt Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "No"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task9",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway3",
                        "targetRef": "event3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "event5",
                        "condition": "No"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "event5",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task10",
                        "targetRef": "event4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "61_ground_truth.json": {
        "2": {
            "text": "The application process for IMIS at FH-SWF begins by going to the FH-SWF website and defining search criteria.  The next step is to select \"Informatics and Digitalization\" as the subject area, select \"Campus Soest\", and select \"Master Study Course\", all happening concurrently.  Following this, the applicant clicks \"Find a Study Course\" and then \"Learn more on IMIS banner\", after which they click \"See how to apply here\". The applicant then checks the application procedure, leading to a decision point based on whether they are an EU applicant. If they are, they apply via the FH-SWF Online Portal after considering whether they are a current FH-SWF student/graduate. If they are not an EU applicant, they are categorized as a Non-EU/International applicant and apply via Uni-Assist, followed by sending the required documents to Uni-Assist.  EU applicants send their required documents if they are not current FH-SWF students, and contact the IMIS office otherwise. Current FH-SWF students apply via the online portal and contact the IMIS office. For FH-SWF applicants, it takes 4-6 weeks for a decision, while for international applicants it takes 10-12 weeks. The process ends upon the receipt of an admission or rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Select Informatics and Digitalization",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Click 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Click 'Learn more on IMIS banner'",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Click 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "t11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "t13",
                        "name": "Contact IMIS office",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Admission/Rejection Letter Received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "EU Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "Current FH-SWF Student/Graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t1",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t1",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t2",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t3",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t7",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t8",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g1",
                        "targetRef": "g2",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g2",
                        "targetRef": "t9",
                        "condition": "No"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g1",
                        "targetRef": "t10",
                        "condition": "No"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "t10",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t11",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g2",
                        "targetRef": "t13",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "t13",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "t9",
                        "targetRef": "t12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "t12",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "33_ground_truth.json": {
        "0": {
            "text": "The process starts with analyzing technology needs at SoKnow. Two parallel paths are initiated: conducting a market analysis and finding ideas, both performed by an employee.  The market analysis is followed by a review and finding ideas is also followed by a review by the same employee.  After both reviews are completed, the employee passes the idea to project management.  The idea is then subject to an approval gateway. If the idea is approved, it is passed on. If not approved the idea is not approved, and the process ends with new technologies discovered. Whether the idea was approved or not approved, the process ends with new technologies discovered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Market Analysis",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Find Ideas",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Market Analysis",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pass Idea to Project Management",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "New Technologies Discovered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id9",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Approval Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Project Management",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Approved"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Not Approved"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with analyzing technology needs at SoKnow. Two parallel paths are initiated: one involves conducting a market analysis and the other involves finding ideas.  The market analysis leads to a review and the results from the market analysis and finding ideas are reviewed together. The idea is either approved or not approved.  If the idea is not approved, it is not pursued further and the process ends with new technologies discovered.  If the idea is approved, it is passed on to project management and the process ends with new technologies discovered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Market Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Find Ideas",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Review Market Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Review Ideas",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Pass to Project Management",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Analyze Technology Needs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "New Technologies Discovered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Parallel Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id9",
                        "name": "Parallel End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Approve Idea?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Approved"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Not Approved"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "55_ground_truth.json": {
        "0": {
            "text": "The process \"Viticulture in Outdoor Operations\" starts when a task is completed by a Field Employee. The Field Employee then checks if information needs to be passed on. If yes, the information is passed on and documented.  Afterwards, the Field Employee checks if tech. Jane Doe is reachable. If yes, the Field Employee submits a completion report and the process ends. If tech. Jane Doe is not reachable, a completion report cannot be submitted, which is documented, and subsequently tech. Jane Doe is informed of the matter. If it was determined at the beginning that information does not need to be passed on, then information is not passed on and also documented. Again, tech. Jane Doe is informed of the matter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Complete Task",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Pass on Information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Document Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Submit Completion Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Document Unsubmitted Report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Tech. Jane Doe",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Document No Information Passed",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Information Passed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Tech. Jane Doe Reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process for Viticulture in Outdoor Operations starts when a task is completed by a Field Employee.  The Field Employee then checks if information needs to be passed on. If yes, the information is passed on and then documented.  The Field Employee then checks if tech. Jane Doe is reachable. If yes, the Field Employee submits a completion report and the process ends with the completion report submitted. If tech. Jane Doe is not reachable, a completion report cannot be submitted and tech. Jane Doe is contacted. If information does not need to be passed on, the information is not passed on and no further information is given, and tech. Jane Doe is contacted. If the completion report cannot be submitted after tech. Jane Doe has been contacted, tech. Jane Doe is contacted again. Regardless of whether the information was passed on or not, the process will continue with the contact tech Jane Doe after which it is determined if a completion report can be submitted.  If so, the process ends, if not, information is documented and tech Jane Doe is contacted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Complete Task",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Pass on Information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Document Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Submit Completion Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact Tech. Jane Doe",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Document Information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Completion Report Submitted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Information needs to be passed on?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Tech. Jane Doe reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Completion Report can be submitted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process \"Viticulture in Outdoor Operations\" starts when a task is completed by a field employee. The field employee then checks if information needs to be passed on. If yes, the information is passed on and documented.  Following this, the field employee checks if tech. Jane Doe is reachable. If yes, a completion report is submitted, ending the process. If tech. Jane Doe is not reachable, a completion report cannot be submitted and tech. Jane Doe is contacted. Regardless of whether the completion report can be submitted after contacting tech. Jane Doe, the process ends by documenting the information of this attempt.  If, after the initial task completion, the field employee determines that information does not need to be passed on, the information is not passed on. Then, the same check regarding tech. Jane Doe's reachability and subsequent submission of the completion report or its failure unfolds, followed by documenting the result and thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Complete Task",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Pass on Information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Document Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Submit Completion Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact Tech. Jane Doe",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Document Result",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Do not pass on information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Information needs to be passed on?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Tech. Jane Doe reachable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Tech. Jane Doe reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "64_ground_truth.json": {
        "0": {
            "text": "The process starts with the creation of an application by a loan provider. The loan provider receives the application and controls the document.  The loan provider then checks if the application is complete. If the application is complete, the loan provider accepts the paper, and the process ends with the completion of providing. If the application is incomplete, the application is returned to the applicant to complete the missing information. Once the missing information is complete, the loan provider admits the document, and the process ends by finishing the providing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Check Application Completeness",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Accept Application",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Return Application",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Complete Missing Information",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Admit Document",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Providing Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the creation of an application by the loan provider. The loan provider receives the application and controls the document.  The loan provider then checks if the application is complete. If the application is complete, the loan provider accepts the paper, and the process ends with completed providing. If the application is incomplete, the application is returned to the applicant who completes the missing information. The loan provider then admits the document, and the process ends with finish the providing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Application Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept Application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Return Application",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Completed Providing",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Finish Providing",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Complete"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the creation of an application by the loan provider. The loan provider receives the application and controls the document.  The loan provider then checks if the application is complete. If the application is complete, the loan provider accepts the paper, which completes the providing process and the process ends. If the application is incomplete, the application is returned to the applicant to complete the missing information. Once the missing information is complete, the loan provider admits the document, finishes the providing, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Application Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept Application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Return Application",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Application Provided",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Application Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "Complete"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "78_ground_truth.json": {
        "0": {
            "text": "The process for purchasing office supplies starts with recording the requirement.  Then, offers are obtained and subsequently reviewed. If the offer is greater than \u20ac2000, it needs approval. If approved, the process continues; otherwise, the offer is not approved and is reviewed again together with any potentially not approved offers. If the offer is not greater than \u20ac2000, or after approval if required, the goods are ordered.  After ordering, there's a check to see if the delivery is on time. If it is, the goods receipt takes place and the goods undergo final acceptance. Then, the delivery is inspected. If the delivery is deemed correct, payment is initiated, and the process ends with the office supplies purchased, and the accounting/controlling department is notified by a message flow. If the delivery is incorrect, the suppliers are contacted, a new delivery is requested, a new delivery deadline is set and the process loops back to the order being placed again. If the delivery is not on time, the delivery deadline is set and then placed again as well, as in the previous case.  If the delivery was not complete after inspection, then it is classified as incorrect automatically.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Requirement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Review Offers",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order Goods",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Goods Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Final Acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inspect Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Suppliers",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request New Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Set New Delivery Deadline",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Initiate Payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Office Supplies Purchased",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Offer > \u20ac2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery Correct?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Delivery Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id42",
                        "sourceRef": "id14",
                        "targetRef": "Accounting/Controlling"
                    }
                ]
            }
        },
        "1": {
            "text": "The process \"Purchase of office supplies\" starts with recording a requirement. Then, offers are obtained and reviewed. If the offer is greater than \u20ac2000, it needs approval. If it's not approved, the process goes back to reviewing the offer. If it is approved or if the offer is not greater than \u20ac2000, the goods are ordered. After ordering, it is checked if the delivery is on time. If not, a new delivery deadline is set, and the process loops back to check again. If the delivery is on time, the goods receipt is informed that the goods are going to goods receipt via a message flow. Following this, the final acceptance of goods takes place, and a delivery inspection follows. If the delivery is correct, payment is initiated, after which Accounting/Controlling gets a message, and the process ends with the office supplies purchased. If the delivery is incorrect, the suppliers are contacted, and a new delivery from the suppliers is requested. This then loops back to set a new delivery deadline.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Requirement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain Offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Review Offers",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Order Goods",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Set New Delivery Deadline",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Final Acceptance of Goods",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Delivery Inspection",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Initiate Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Contact Suppliers",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Request New Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Purchase of office supplies starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Office supplies purchased",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Offer > \u20ac2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ]
            }
        },
        "2": {
            "text": "The process \"Purchase of office supplies\" starts with recording a requirement.  Then, offers are obtained and reviewed. If the offer is greater than 2000 \u20ac, it needs to be approved. If it's not approved, the process goes back to reviewing the offer. If it's approved, or if the offer is not greater than 2000 \u20ac, the goods are ordered. Once ordered, it is checked if the delivery is on time. If not, the delivery deadline is set, after which the process goes back to the delivery on time check. If the delivery is on time, the goods undergo final acceptance, after which they are sent to Goods Receipt (via a message flow \"Ware geht in den Wareningang\"). Next, the delivery is inspected.  If the delivery is correct, payment is initiated, and this information is sent to Accounting / Controlling (via a message flow). The process ends with the office supplies being purchased. If the delivery is incorrect, the suppliers are contacted, after which a new delivery is requested from the suppliers, and this leads back to setting the delivery deadline.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Requirement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain and review offers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Approve Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Delivery on Time",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Set Delivery Deadline",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Final Acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inspect Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Initiate Payment",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Contact Suppliers",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request New Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Purchase of office supplies starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Office supplies purchased",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Offer > 2000\u20ac?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Delivery Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "Goods Receipt",
                        "name": "Ware geht in den Wareningang"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "Accounting / Controlling"
                    }
                ]
            }
        }
    },
    "36_ground_truth.json": {
        "0": {
            "text": "The process starts with the formulation of a consulting service at SoKnow. The consulting team analyzes workshop results.  Next, new strategic opportunities are developed, and a report with results and objectives is formulated.  The report is then forwarded to management.  Management reads the report and decides whether the report is in order. If the report is in order, it is immediately forwarded back to the consulting team where it again enters management's workflow in a loop. Otherwise, the report must be corrected and forwarded back to consulting for review.  After corrections are made and reviewed (potentially requiring multiple iterations of correction and review), the consulting team formulates the consulting service, completing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze workshop results",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Develop new strategic opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Formulate report with results and objectives",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Read report",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Correct report",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Review report",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Formulate consulting service",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report in order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Consulting Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Management",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the formulation of a consulting service at SoKnow Consulting.  Workshop results are then analyzed. Based on the analysis, new strategic opportunities are developed.  Next, a report with results and objectives is formulated and forwarded to SoKnow Management. Management then reads the report and decides whether the report is in order. If the report is in order, it is immediately forwarded. If the report is not in order, it is corrected and then forwarded. Following this correction and forwarding, or the immediate forwarding, the report is formulated into a consulting service which then concludes the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze Workshop Results",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Develop New Strategic Opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Formulate Report with Results and Objectives",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Read Report",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Forward Report",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Correct Report",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Formulate Consulting Service",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Formulation of Consulting Service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Consulting Service Formulated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report in Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow Consulting",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Consultant",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "SoKnow Management",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Management",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "SoKnow Consulting",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Consultant",
                                "elemRefs": [
                                    "id7",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the formulation of a consulting service at SoKnow Consulting.  Workshop results are then analyzed, after which new strategic opportunities are developed.  Next, a report with results and objectives is formulated and forwarded to SoKnow Management.  Management then reads the report and decides whether the report is in order. If the report is in order, it is immediately forwarded, after which the process loops back and creates another report with results and objectives before forwarding to management. If the report is not in order, it is corrected and then forwarded.  After the report is forwarded (either immediately or after correction), SoKnow Consulting formulates the consulting service, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze workshop results",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Develop new strategic opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Formulate report with results and objectives",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Read report",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Forward report",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Correct report",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Formulate consulting service",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report in order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow Consulting",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Consultant",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "SoKnow Management",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Manager",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "50_ground_truth.json": {
        "0": {
            "text": "The process starts with a new marketing campaign upcoming at SoKnow. Management then plans the focal points and the marketing department designs ideas. Next, the marketing department defines specifications and sends an order to an external marketing agency. After receiving the order, the external marketing agency creates drafts and sends them back to SoKnow's marketing department. The marketing department evaluates the agency drafts and votes on them.  If the vote is positive, the marketing department informs management. Management then evaluates the drafts. If management's evaluation is also positive, they give the green light to the marketing department. If either the vote or management\u2019s evaluation are negative, the marketing department requests new drafts from the external marketing agency and the process loops back to evaluating the agency\u2019s drafts. When the marketing department receives the green light, they conduct the campaign, sending another order to the external marketing agency for execution, and finally, the marketing campaign ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan focal points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design ideas",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Define specifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create drafts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate agency drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Vote on drafts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request new drafts",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct campaign",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "New marketing campaign upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Marketing campaign ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Vote positive?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Evaluation positive?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id8",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id10",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "External Marketing Agency",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Agency",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with a new marketing campaign upcoming at SoKnow.  Management plans the focal points, and then the marketing department designs ideas and defines specifications. The marketing department sends an order to an external marketing agency. Upon receiving the order, the agency creates drafts and sends them back to SoKnow's marketing department. The marketing department evaluates the agency drafts and votes on them. If the vote is positive, the marketing department informs management. Management then evaluates the drafts.  If management's evaluation is also positive, they give the green light to the marketing department. The marketing department then conducts the campaign, sending another order to the external agency, after which the marketing campaign ends. If the vote on the drafts is negative, the marketing department requests new drafts from the external marketing agency, after which the process loops back to evaluating the agency drafts. Similarly, if management's evaluation is negative, the process loops back to the marketing department requesting new drafts from the agency.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan Focal Points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design Ideas and Define Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Drafts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate Agency Drafts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Vote on Drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Evaluate Drafts",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request New Drafts",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct Campaign",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "New Marketing Campaign Upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Marketing Campaign Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Vote Positive?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Management Evaluation Positive?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8",
                                    "id9",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "External Marketing Agency",
                        "elemRefs": [
                            "id3"
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a new marketing campaign upcoming at SoKnow.  Management plans the focal points and the marketing department designs ideas.  Next, the marketing department defines specifications and sends an order to the external marketing agency. Upon receiving the order, the agency creates drafts and sends them back to SoKnow\u2019s marketing department. The marketing department evaluates the agency drafts and votes on them. If the vote is positive, the marketing department informs management. Management then evaluates the drafts.  If management\u2019s evaluation is positive, they give the green light to the marketing department. The marketing department then conducts the campaign, commissioning the external agency, after which the marketing campaign ends. If the vote on the drafts is negative, the marketing department requests new drafts from the agency, leading back to the evaluation of agency drafts. Similarly, if management\u2019s evaluation is negative, the process loops back to where the marketing department defines new specifications.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan focal points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design ideas",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Define specifications",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create drafts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate agency drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Vote on drafts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Give green light",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct campaign",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request new drafts",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Define new specifications",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "New marketing campaign upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Marketing campaign ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Vote positive?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Evaluation positive?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "External Marketing Agency",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Agency",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id16",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    }
                ]
            }
        }
    },
    "80_ground_truth.json": {
        "0": {
            "text": "The process \"Manage personnel accounting\" starts with personnel administration starting the payroll program at SoKnow.  Automated debits are then controlled.  This is followed by two parallel paths. In one path, labor costs are calculated and, in the other path, salaries and social contributions are paid. After the labor costs are calculated, they are used, together with the paid salaries and social contributions, to enter bonuses. After the bonuses are entered, financial accounting is controlled.  The invoice is then sent, after which the process ends. In parallel to sending the invoice, and also following the payment of salaries and social security contributions, health insurance and additional costs are paid. The process indicates that the entering of the bonuses occurs only after salaries and social security contributions are paid, and the labor costs are calculated. It also enforces that health insurance and additional costs are paid after salaries and social contributions are paid and in parallel with calculating the labor costs.  Financial accounting is controlled and an invoice is sent only after the bonuses are entered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start payroll program",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Control automated debits",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate labor costs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pay salaries and social contributions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter bonuses",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Control financial accounting",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send invoice",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Pay health insurance and additional costs",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Personnel administration",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Payroll department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process \"Manage personnel accounting\" starts at SoKnow. The payroll program is started by the personnel administration. Next, automated debits are controlled. This is followed by two parallel steps: Calculation of labor costs and Payment of salaries and social contributions as well as Payment of health insurance and additional costs. After the payment of salaries and social contributions, labor costs and health insurance and additional costs, bonuses are entered. Following this, financial accounting is controlled and an invoice is sent. Finally, the process ends and personnel accounting is considered completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start payroll program",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Control automated debits",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate labor costs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pay salaries and social contributions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay health insurance and additional costs",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enter bonuses",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Control financial accounting",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "SoKnow",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Personnel accounting completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process \"Manage personnel accounting\" starts in the personnel administration department of SoKnow. The payroll program is started.  Then automated debits are controlled. Following this, the process splits into two parallel paths. In the first path, labor costs are calculated and, concurrently in the second path, salaries and social contributions are paid. Once the salaries and social contributions are paid, they converge before splitting again into two new parallel paths: One to enter bonuses and the other to pay health insurance and additional costs. These paths converge once again. In parallel to these converging paths, after the automated debits are controlled and simultaneously while the labor costs are calculated, health insurance and additional costs are paid. Once the bonuses are entered, financial accounting is controlled. Finally, once financial accounting is controlled, an invoice is sent and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start payroll program",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Control automated debits",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Calculate labor costs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pay salaries and social contributions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter bonuses",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Pay health insurance and additional costs",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Control financial accounting",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Personnel Administration",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ]
            }
        }
    },
    "48_ground_truth.json": {
        "0": {
            "text": "The process starts with an order intake at SoKnow.  A Knowledge Management System is purchased by the development department. After the purchase, the development department waits to receive adjustment requests from the customer company. Once received, the development department makes adjustments and notifies the customer company. Following this notification, the development department searches for a test group. If a test group is found, tests are conducted. Based on the test results, either a positive or negative outcome is determined.  If positive, test group workshops are conducted. If negative, adjustments are made, after which the development department searches again for a test group. After conducting the workshops, SoKnow's development department trains employees, which triggers adjustments requests to the customer company. The customer company sends back their adjustment requests to SoKnow, after which SoKnow checks if the adjustments are satisfactory.  If yes, the development department implements the Knowledge Management System and the process ends with the order completed. If the adjustments are not satisfactory, further adjustments are made by the development department. If adjustments are required after the initial tests but before the training, SoKnow will notify the customer of the finished product and wait for their adjustment requests. After making adjustments based on the feedback after the finished product adjustments, the development department will proceed with the next steps according to the existing decision pathways. This loop continues until the adjustments are deemed satisfactory.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Knowledge Management System",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Wait for Adjustment Requests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make Adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Customer Company",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Search for Test Group",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Tests",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Test Group Workshops",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Train Employees",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Implement Knowledge Management System",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Notify Customer of Finished Product",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Further Adjustments",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Order Intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Test Group Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Test Results?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Adjustments Satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "Customer Company",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Positive"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Negative"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id17",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an order intake at SoKnow. The knowledge management system is purchased.  After the purchase, the development department waits for adjustment requests from the customer company. Upon receipt of the adjustment requests, the development department makes adjustments and notifies the customer company. A search for a test group follows. If a test group is found, tests are conducted. Based on the test results, either positive or negative feedback is received.  If the feedback is positive, test group workshops are conducted. If the feedback is negative, adjustments are made, and the development department searches for a test group again. After the test group workshops, SoKnow trains its employees and then waits for the customer company\u2019s adjustment requests again.  The customer company is notified after adjustments are made. If the customer company finds the adjustments satisfactory, SoKnow implements the knowledge management system, and the order is completed. If the adjustments are not satisfactory, the development department makes further adjustments, sending another notification to the customer, and waits for the feedback regarding satisfaction again. If the customer deems further adjustments necessary after the first round of notification, adjustments are again made and then notification is sent again to the customer. This loop continues until the customer is satisfied and SoKnow can finally implement the knowledge management system.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Knowledge Management System",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Wait for Adjustment Requests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make Adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Customer Company",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Search for Test Group",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Tests",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Test Group Workshops",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Train SoKnow Employees",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Implement Knowledge Management System",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Order Intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Receive Adjustment Requests",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Receive Feedback",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Receive Satisfaction Feedback",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Test Group Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Feedback Positive?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Adjustments Satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Sales/Implementation",
                                "elemRefs": [
                                    "id1",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Customer Company",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Business User",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "no"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with an order intake at SoKnow. The first step is to purchase a Knowledge Management System. When the purchase is complete, SoKnow waits to receive adjustment requests from the customer company.  Upon receiving the requests, SoKnow makes adjustments and notifies the customer company that the adjustments have been made.  Next, SoKnow searches for a test group. If a test group is found, tests are conducted. If no test group is found, SoKnow proceeds directly to conducting test group workshops. After the tests are conducted, an event-based gateway awaits either positive or negative test results.  If the results are positive, test group workshops are conducted. If the results are negative, SoKnow makes adjustments and searches for a test group again. Following the test group workshops, SoKnow trains employees, and the product is finished. SoKnow then notifies the customer company that the product is finished. SoKnow waits for the customer company to indicate whether adjustments are satisfactory. If adjustments are satisfactory, SoKnow implements the Knowledge Management System and the process ends with the order completed. If adjustments are not satisfactory, SoKnow asks if the adjustments can still be made. If so, SoKnow makes adjustments, sends the product notification to the customer company again, and awaits feedback on adjustments. If not, SoKnow proceeds directly to the implementation step and then the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase Knowledge Management System",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Make Adjustments",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Notify Customer Company (Adjustments Made)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Search for Test Group",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Tests",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Test Group Workshops",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Train Employees",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Notify Customer Company (Product Finished)",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Implement Knowledge Management System",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask if Adjustments Can Still Be Made",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Order Intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Receive Adjustment Requests",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Positive Test Results",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Negative Test Results",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Adjustments Satisfactory",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Adjustments Not Satisfactory",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Yes",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id18",
                        "name": "No",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Test Group Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Test Results",
                        "type": "EventBased"
                    },
                    {
                        "id": "id22",
                        "name": "Further Adjustments Possible?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "SoKnow Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id20",
                                    "id21",
                                    "id22"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Customer Company",
                        "lanes": []
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id16",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id22",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id22",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    }
                ]
            }
        }
    },
    "60_ground_truth.json": {
        "0": {
            "text": "The process \"Introduce change processes\" starts in SoKnow's consulting lane. First, new strategies and opportunities are received through consulting.  Then, the new strategies are communicated. Next, suitable systems are selected, implemented, and communicated. Subsequently, change processes in the project are coordinated.  Finally, working groups are consulted about the change processes, after which the \"Change process introduced\" end event is reached.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new strategies and opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate new strategies",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Implement suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate implemented systems",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate change processes in project",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consult working groups about change processes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Introduce change processes",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Change process introduced",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Consulting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the introduction of change processes at SoKnow Consulting.  New strategies and opportunities are received through consulting. Then, the new strategies are communicated. Suitable systems are selected, implemented, and communicated. Change processes in the project are coordinated.  Finally, working groups are consulted about the change processes, after which the change process is considered introduced.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new strategies and opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate new strategies",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Select suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Implement systems",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate implemented systems",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate change processes in the project",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Consult working groups about change processes",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Introduction of change processes",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Change process introduced",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process \"Introduce change processes\" starts within SoKnow's consulting department. First, new strategies and opportunities are received through consulting. Then, the new strategies are communicated. Next, suitable systems are selected, implemented, and communicated.  Following this, the change processes in the project are coordinated. Finally, working groups are consulted about the change processes, after which the change process is considered introduced.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new strategies and opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate new strategies",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Implement suitable systems",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate implemented systems",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate change processes in the project",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consult working groups about change processes",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Change process introduced",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Consulting Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "32_ground_truth.json": {
        "0": {
            "text": "The process starts with a planned discharge in the doctor's lane. The dismissal date is set, after which medical care needs are determined and discussed with the patient and their relatives.  Concurrently, nursing care needs are determined by care personnel.  These two tasks lead to defining the supply facility. This definition is performed concurrently with the creation of a doctor's letter. Once the supply facility is defined, it is checked whether social services are required.  If social services are *not* required, the creation of dismissal documentation takes place.  If social services *are* required, further care services are initiated by the social service department which then leads to the creation of dismissal documentation. Finally, after the creation of the dismissal documentation, advanced tasks are discharged, and the process ends with the patient's dismissal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine and discuss medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create dismissal documentation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Discharge advanced tasks",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Planned Discharge",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Patient Dismissal",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Social Services Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id8",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Care Personnel",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Social Service",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a planned discharge in the doctor's lane.  The doctor first sets the dismissal date.  In parallel, medical care needs are determined and the further course is discussed with the patient and relatives as well as nursing care needs are determined.  This leads to defining a supply facility.  In parallel the doctor creates a doctor's letter.  Dismissal documentation is created, potentially after initiating further care services if they are required based on whether social services are required or not.  Advanced tasks are discharged and the process ends with the dismissal of the patient.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set dismissal date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Discuss further course with patient and relatives",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create dismissal documentation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Discharge advanced tasks",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Planned discharge",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Patient dismissed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Social services required?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id6",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Nurse",
                                "elemRefs": [
                                    "id2",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Administrative Staff",
                                "elemRefs": [
                                    "id7",
                                    "id9",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Social Worker",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a planned discharge by the doctor. The dismissal date is set, and in parallel, medical care needs are determined, and nursing care needs are determined by care, and the further course is discussed with patient and relatives.  After the discussion, the define supply facility subprocess starts within care, in parallel with the doctor creating the doctor's letter. Once the supply facility is defined, the process splits to determine if social services are required. If social services are not required, the dismissal documentation is created by care. If social services are required, the social service subprocess starts by social service, after which the dismissal documentation is created. After the doctor's letter is created and the dismissal documentation is created, both flows synchronize and proceed to advanced tasks discharge within care. Once the advanced tasks discharge is complete and the process ends with the dismissal of the patient.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set Dismissal Date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine Medical Care Needs",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine Nursing Care Needs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Discuss Further Course",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Define Supply Facility",
                        "type": "CollapsedSubprocess"
                    },
                    {
                        "id": "id6",
                        "name": "Create Doctor's Letter",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Dismissal Documentation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Social Service",
                        "type": "CollapsedSubprocess"
                    },
                    {
                        "id": "id9",
                        "name": "Advanced Tasks Discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Planned Discharge",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Dismissal of Patient",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Exclusive Gateway",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Doctor",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Care",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Care Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Social Service",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Social Service Lane",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Patient/Relatives",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Patient/Relatives Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "54_ground_truth.json": {
        "0": {
            "text": "The process starts when someone wants to start a WoW subscription using the online tool for creating characters. The applicant receives a subscription form. The applicant then selects a payment method. If the applicant selects credit card, they enter their credit card information. If the applicant selects bank account, they enter their IBAN and BIC numbers. After entering the payment information, regardless of the chosen method, the applicant submits the information. Finally, the online tool activates the WoW subscription and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start WoW subscription process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW subscription activated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a request to start a WoW subscription using an online tool for creating characters.  The applicant receives a subscription form. The applicant then selects a payment method. If the applicant selects \"credit card\", they are prompted to enter their credit card information. If the applicant selects \"bank account\", they enter their IBAN and BIC numbers.  After entering either credit card or bank account information, the applicant submits the information. Following the submission, the online tool activates the WoW subscription, thus completing the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Request to start WoW subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW subscription activated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "credit card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "bank account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when someone wants to start a WoW subscription using an online tool provided by the wow community. The first step for the online tool is to send a subscription form to the applicant. The applicant then selects a payment method.  If the applicant selects \"credit card\", they must enter their credit card information. If they select \"bank account\", they must enter their IBAN and BIC numbers. After entering the necessary information, regardless of the chosen method, the applicant submits the information.  The online tool then activates the WoW subscription and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Subscription Form",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Select Payment Method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter Credit Card Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit Information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW Subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start WoW Subscription Process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW Subscription Activated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "65_ground_truth.json": {
        "0": {
            "text": "The process starts with the realization that existing corporate designs are outdated in SoKnow's marketing department.  A brainstorming session is conducted, followed by the design of a new element by a designer. The designer then decides if the design is satisfactory. If not satisfactory, the design is further refined by the designer, and this loop continues until the design is deemed satisfactory. If the design is satisfactory, the designer proceeds to create templates.  These templates are then reviewed by the marketing department. If the marketing department finds the template satisfactory, they communicate with management.  If they do not find it satisfactory, the designer refines the design, and the process loops back to template review. After communicating with management, the marketing department decides whether the template is satisfactory. If yes, the process ends with the use of the new corporate designs. If no, the designer again refines the design, leading back to the template review stage.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Brainstorming Session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design New Element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Refine Design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review Templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with Management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Use New Corporate Designs",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Design Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Templates Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Management Approval?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designer",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when existing corporate designs are outdated at SoKnow. The marketing department conducts a brainstorming session.  Following this, the designer designs a new element. After designing the new element, the designer decides if the design is satisfactory. If deemed not satisfactory, the designer redesigns the element and repeats until satisfactory. If the design is deemed satisfactory, the designer creates templates. The marketing department reviews the templates and checks whether they are satisfactory. If they are satisfactory, they conduct communication with management. After this, management checks if the templates are satisfactory again. If no, the template design loop continues, and if yes, the process ends where new corporate designs are used. If they are not satisfactory, the designer redesigns the element.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct a brainstorming session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design a new element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Redesign the element",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check templates",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Existing corporate designs are outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New corporate designs are used",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Is the design satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Are the templates satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Are the templates satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designer",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Yes"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with the realization that existing corporate designs are outdated.  In the marketing department of SoKnow, a brainstorming session is conducted. Following this, a new design element is designed by a designer. The designer then decides if the design is satisfactory. If not satisfactory, the design is reworked by the designer until it is deemed satisfactory. Once the design is satisfactory, it is reviewed by the designer. After review, templates are created by the designer. These templates are then reviewed by the marketing department. The marketing department then determines if the templates are satisfactory. If they are satisfactory, communication with management is conducted. Subsequently, management makes a decision whether the templates are satisfactory.  If management finds the templates satisfactory, the process ends and new corporate designs are used. If not, the designer redesigns the new element based on management's feedback, and the review process repeats. If the marketing department initially deems the templates unsatisfactory, they are also sent back to the designer for redesign.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct brainstorming session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design new design element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Rework design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review design",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Review templates",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate with management",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Redesign new design element",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "New corporate designs used",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Design satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Templates satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Templates satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Designer",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Management",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "37_ground_truth.json": {
        "0": {
            "text": "The process starts with the organization of employee interviews at SoKnow.  The HR department sends appointment suggestions and the next step is to conduct regular inquiries and conduct an employee interview. Then, these happen in parallel.  After the interview, the HR department assigns training.  Simultaneously, after the appointment suggestions are sent, the employee confirms the appointment. Once the confirmed and assigned training happens the employee participates in employee meeting and completes training following participation.  When training is complete, the process ends, also when parallel paths merge in the HR department the process ends with the employee interview conducted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Appointment Suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Regular Inquiries",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct Employee Interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign Training",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in Employee Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Training",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Training Complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Employee Interview Conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Employee",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the organization of employee interviews at SoKnow. The HR department sends appointment suggestions to the employee and simultaneously conducts regular inquiries and conducts an employee interview. The employee confirms the appointment.  After the interview, the HR department assigns training. Following this, the employee participates in an employee meeting and then completes the training. The process ends with the training being completed and the notification that the employee interview was conducted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send appointment suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct regular inquiries",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign training",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Participate in employee meeting",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Complete training",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Training completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Employee interview conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Employee",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "2": {
            "text": "The process at SoKnow starts with the HR department organizing employee interviews.  The HR department sends appointment suggestions which triggers parallel paths. In one path, the HR department conducts employee interviews, then assigns training. In the other parallel path, the HR department conducts regular inquiries.  Both paths converge, after which the HR department confirms the appointment. The employee participates in the employee meeting and completes the training.  Once the training is complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Appointment Suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign Training",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Regular Inquiries",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in Employee Meeting",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Training",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Employee",
                                "elemRefs": [
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "79_ground_truth.json": {
        "0": {
            "text": "Frank's lunch break at Global Car Manufacturing Inc. begins.  First, Frank chooses a preferred lunch. If Frank chooses pizza, the next step is to choose an order form. If Frank chooses noodles, the noodles are prepared.  For noodles, the next steps are to boil water and prepare the sauce, which happen in parallel. Once the water is boiled, the noodles are added. Once the sauce and the noodles with water are ready, they are mixed. After the noodles and sauce are mixed, or if Frank chooses to order pizza, he either orders online or by phone. If the order is placed online, Frank accesses the website. If the order is placed by phone, Frank calls the pizza delivery person. After accessing the website or calling the pizza delivery person, Frank places the order, which is received by the pizza delivery person at the Pizzeria. Upon receiving the incoming order, the pizza is prepared and delivered by the pizza delivery person. The pizza is then handed over to Frank and in return Frank pays for the pizza, completing the payment. Whether Frank chose noodles or pizza, he proceeds to eat the meal. Finally, Frank's lunch break ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Noodles",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Boil Water",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Add Noodles to Water",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Mix Noodles and Sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Choose Order Form",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Access Website",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Call Pizza Delivery Person",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Deliver Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Handover Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Pay for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Eat Meal",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Lunch Break Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Lunch Break Ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Incoming Order",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Preferred Lunch?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Frank",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Frank's Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id18",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Pizzeria",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Pizza Delivery Person",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id17"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id1",
                        "condition": "Noodles"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id27",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "Pizza"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "Online"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "Phone"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "Frank's lunch break at Global Car Manufacturing Inc. begins.  Frank chooses their preferred lunch. If Frank chooses noodles, they prepare the noodles, boil water, and prepare the sauce. After the noodles are prepared, they are added to the boiling water and cooked for 8 minutes.  The sauce is prepared in parallel with boiling the water and noodles. Once the sauce is ready and the noodles are cooked,  the noodles and sauce are mixed. After mixing, the meal is eaten and Frank's lunch break ends. If Frank chooses pizza, they choose how to order. If ordering online, they access the website.  If ordering by phone, they call the pizza delivery person.  In either case, after placing the order,  a message is sent to the Pizzeria indicating an incoming order.  A pizza delivery person at the Pizzeria prepares the pizza, delivers the pizza, and hands it over to Frank.  Frank pays for the pizza, sending payment to the delivery person who accepts payment. After Frank receives the pizza, they eat and their lunch break ends.  The process ends for the Pizzeria when the payment is accepted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Noodles",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Boil Water",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Add Noodles to Boiling Water",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Noodles for 8 minutes",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Mix Noodles and Sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Eat Meal",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Access Website",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Call Pizza Delivery Person",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Deliver Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Hand over Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Pay for Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Accept Payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Eat Pizza",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Lunch Break Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Lunch Break Ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Lunch Break Ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Incoming Order",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Process Ends for Pizzeria",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Choose Lunch",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Choose Order Method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "Frank",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Frank's Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id13",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id21",
                                    "id22"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Pizzeria",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Pizzeria Actions",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id14",
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id21",
                        "targetRef": "id1",
                        "condition": "Noodles"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id21",
                        "targetRef": "id22",
                        "condition": "Pizza"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id22",
                        "targetRef": "id8",
                        "condition": "Online"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id22",
                        "targetRef": "id9",
                        "condition": "Phone"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id14",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "Frank's lunch break at Global Car Manufacturing Inc. starts.  First, Frank chooses a preferred lunch. If Frank chooses noodles, he proceeds to choose a noodle order form. If Frank chooses pizza, he proceeds to choose a pizza order form. If Frank chooses noodles, he prepares the noodles.  Concurrently, he boils water and prepares the sauce.  Once the water is boiled, he adds the noodles. Once the noodles are prepared and the sauce is ready, he mixes the noodles and the sauce. Following this, he eats the meal and his lunch break ends. If Frank chooses to order pizza, he decides whether to order online or by phone. If he orders online, he accesses the website. If he orders by phone, he calls the pizza delivery person. Regardless of how the order is made, he then places an order, which is received by the pizza delivery person at the Pizzeria.  The pizza delivery person prepares the pizza and delivers it. The pizza is then handed over to Frank, who then pays for the pizza, which leads to payment acceptance by the delivery person. The pizza delivery person's participation ends with the order completed.  After Frank pays, he eats the meal, concluding his lunch break.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a noodle order form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare noodles",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Boil water",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Add noodles",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Mix noodles and sauce",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Eat meal",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Choose a pizza order form",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Access website",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Call pizza delivery person",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Place order",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Deliver pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Hand over pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Pay for pizza",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Accept payment",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Lunch break starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Lunch break ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Order Received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Preferred lunch?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Order online or by phone?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "type": "Parallel"
                    },
                    {
                        "id": "id24",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id25",
                        "name": "Frank",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Frank's Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id15",
                                    "id17",
                                    "id18",
                                    "id21",
                                    "id22",
                                    "id23",
                                    "id24"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Pizzeria",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Pizza Delivery Person",
                                "elemRefs": [
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id16",
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id1",
                        "condition": "Noodles"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id23",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id23",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id24",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id8",
                        "condition": "Pizza"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id9",
                        "condition": "Online"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id22",
                        "targetRef": "id10",
                        "condition": "Phone"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id20",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "51_ground_truth.json": {
        "0": {
            "text": "The process starts with retrieving the activity representation by a clerk within the HR Personnel.  This is followed by two parallel paths: creating a requirement profile and creating a job posting. Once both the requirement profile and job posting are created, the documents are filed, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "HR Personnel",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with retrieving the activity representation by the clerk within HR Personnel.  This is followed by two parallel paths. One path involves creating a requirement profile, while the other involves creating a job posting. Once both the requirement profile and job posting are complete, the documents are filed, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "HR Personnel",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with retrieving the activity representation by a clerk within the HR Personnel.  This is followed by two parallel paths. In one path, a requirement profile is created. In the other path, a job posting is created. Once both the requirement profile and job posting are created, the documents are filed, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "HR Personnel",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "HR Specialist",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ]
            }
        }
    },
    "81_ground_truth.json": {
        "0": {
            "text": "The process starts at Accentis when a sales enquiry request is received from a customer. The enquiry can be for an inbound or an outbound customer.  If the enquiry is for an outbound customer, an enquiry is created. If it is for an inbound customer, a contact is created.  Both paths lead to a check of price and customer interest. If the qualified price is not OK or there is no interest, approval from the customer is requested.  If the customer approval is not received, the enquiry status is updated, and the process ends. If customer approval is received,  the requirements are analyzed, and a quote is created. The enquiry status is updated again, and finally, a job is created, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check Price and Customer Interest",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Request Approval From Customer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Analyze Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receive Sales Enquiry Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Inbound or Outbound Customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Qualified Price OK and Interest?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Customer Approval Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when Accentis receives a sales enquiry request from a customer.  Accentis checks if it is an inbound or outbound customer. For inbound customers, a contact is created, and for outbound customers, an enquiry is created. Afterwards it is checked if the price is ok and customer has shown interest.  The customer can then send a customer approval. Based on price approval decision, there are two paths: If the price is approved, a quote is created, requirements are analysed. The enquiry status is updated and a job is created, thus ending the process.  If the price is not approved, the enquiry status is updated and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Analyse Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create Job",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Sales Enquiry Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Enquiry Updated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Customer Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with Accentis receiving a sales enquiry request from a customer.  Accentis checks if it is an inbound or outbound customer. If it is an outbound customer, Accentis creates an enquiry. If it's an inbound customer, Accentis creates a contact. Both paths lead to checking if the price is OK and there is interest. If there isn't, customer approval is received from the customer. If the price is approved by the customer, Accentis creates a quote, then performs a requirements analysis, updates the enquiry status and creates a job, thus ending the process. If the price is not approved by the customer, Accentis updates the enquiry status and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Receive Sales Enquiry Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Enquiry Status Updated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Inbound or Outbound Customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Price OK & Interest?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Customer Approve Price?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Sales",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Customer Service",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "0_ground_truth.json": {
        "0": {
            "text": "The process starts when an applicant submits an application to ACME AG.  ACME AG sends a receipt confirmation to the applicant. Then the applicant is verified by the Head of Human Resources. Depending on the application status, the process continues.  If the application is accepted, the Human Resources Department sends an invitation to a job interview to the applicant. Next, the Human Resources Department prepares an employment agreement and conducts the job interview. Afterward, the Human Resources Department sends the employment contract to the applicant. Once ACME AG receives the signed employment contract from the applicant, the process ends. If the application is rejected, the Head of Human Resources sends a rejection to the applicant. After the rejection is sent, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Job Interview Invitation",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Employment Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Application Submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Signed Employment Contract Received",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Rejection Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Application Status",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "name": "Receipt Confirmation"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id13",
                        "name": "Signed Employment Contract"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the applicant submits an application to the ACME AG's Human Resources Department.  The Human Resources Department sends a receipt confirmation to the applicant and then prepares an employment agreement. Once prepared, the Human Resources Department invites the applicant to a job interview, sending the invitation to the applicant. After the interview is carried out, the applicant is verified by the Head of Human Resources. The Head of Human Resources then decides on the application status. If the application is accepted, the Human Resources Department sends an employment contract to the applicant. Upon receipt of the signed employment contract from the applicant, the process ends. If the application is rejected, the Head of Human Resources sends a rejection to the applicant. A rejection sent message is then thrown to the Applicant and the process ends with the applicant rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare employment agreement",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Invite applicant to job interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Carry out interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Verify applicant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Decide on application status",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send employment contract",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Application submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Signed employment contract received",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Application rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Applicant actions",
                                "elemRefs": [
                                    "id4",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the applicant submits an application to the ACME AG Human Resources Department.  The Human Resources Department sends a receipt confirmation to the applicant. Next, the application is verified by the Head of Human Resources. Depending on the application status, the process proceeds. If the application is accepted, the Human Resources Department sends an invitation to a job interview to the applicant.  The Human Resources Department then prepares the employment agreement and conducts the job interview.  If the applicant is suitable, the Human Resources Department sends the employment contract to the applicant. If the applicant is not suitable, the Human Resources Department sends a rejection to the applicant and then the Head of Human Resources sends a rejection notification.  When the Head of Human Resources sends a rejection notification, the process ends, noting the applicant was rejected.  If the applicant was sent a contract and returns a signed employment contract to the Human Resources Department, the process ends with the signed employment contract present.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Receipt Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Job Interview Invitation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Employment Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Rejection to Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Rejection Notification",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Application Submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Signed Employment Contract",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application Status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id2",
                                    "id8",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Rejected"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "63_ground_truth.json": {
        "0": {
            "text": "The process starts when the customer sends a booking request to the taxi booking system. The taxi system forwards the request to a customer service operator. The operator checks the data provided by the customer. If the data is not sufficient, a cancellation message is sent to the customer, and the process ends. Otherwise, if the data is complete, the operator checks for available cars in the next 30 minutes. If no cars are available, a cancellation message is sent to the customer by the taxi system, and the process ends. If a car is available, the taxi system displays a list of options to the operator. The operator picks the nearest car considering the customer's location and calculates the estimated time of arrival.  The calculated time of arrival is then used to book the taxi. Once booked, the taxi system sends a booking confirmation to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Forward request",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check car availability",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Display car options",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Pick nearest car and calculate ETA",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Book taxi",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send booking confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Send cancellation message",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send cancellation message",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Booking request received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process cancelled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process cancelled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Booking confirmed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Data sufficient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Car available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "id17",
                        "name": "Taxi Booking System",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when the customer sends a booking request to the taxi booking system.  The taxi system forwards the request to a customer service operator who checks the data provided. If the data is not sufficient, a cancellation message is sent to the customer and the process ends.  If the data is sufficient, the customer service operator proceeds to check for available cars in the next 30 minutes. If no cars are available, a cancellation message is sent to the customer and the process ends. If cars are available, the taxi system displays a list of options to the customer service operator, who then picks the nearest car considering the client. Subsequently, the system calculates the time of arrival, and finally, the customer service operator books the taxi. After booking, a booking confirmation is sent to the customer and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Available Cars",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Pick Nearest Car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate Time of Arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Booking Request Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Cancellation Message Sent",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking Confirmation Sent",
                        "type": "EndMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Sufficient Data?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Cars Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the customer sends a booking request which is received by the Taxi System. The customer service operator then checks the data. If the data is not sent a cancellation message is sent to the customer and the process ends. If the data is sent, the customer service operator checks for available cars. If there is no available car in the next 30 minutes, a cancellation message is sent to the customer, and the process ends. However, if a car is available, the customer service operator displays a list of options. The operator picks the nearest car with the client, calculates time of arrival and finally books the taxi. A booking confirmation is sent to the customer and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Available Cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Display List of Options",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pick Nearest Car with Client",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Calculate Time of Arrival",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Booking Request Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Cancellation Message Sent",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Booking Confirmation Sent",
                        "type": "EndMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Data Sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Car Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "Taxi System",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ]
            }
        }
    },
    "19_ground_truth.json": {
        "0": {
            "text": "The process starts with a risk manager performing a BKR check and, concurrently, a Jane Doe check.  Once both checks are completed, the risk manager performs a credibility check. Based on the credibility check's outcome, the process forks. If the Credibility Assessment is \"accepted,\" the senior risk manager confirms the credibility check.  If the assessment is not \"accepted\", an exclusive gateway is activated. If after one hour, information is received from the client and 'pickedup', the customer relation manager will create a loan offer. However, if the client doesn't pick up, they will be reminded after an hour. If the information is still 'notpickedup' after this point, the customer relation manager will proceed to an exclusive gateway. This gateway also receives the outcome of the loan offer, if one has been created. If the loan offer is accepted by the customer relation manager, a welcome letter is sent by the administrator, and the finance department activates the loan application.  Following this, the finance department validates the loan activation and executes the initial payment, after which the process ends. If the senior risk manager rejects the loan, a rejection letter is sent by the administrator. Once the rejection letter is sent, the process ends. If the Credibility Assessment is \"rejected,\" the senior risk manager decides and if rejected, a rejection letter is sent. If the Rejection Letter is \"sent,\" the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Remind after 1 hour",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Information Received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Credibility Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Client Information",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Loan Offer Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Senior Risk Manager Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "accepted"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id19",
                        "condition": "not accepted"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id19",
                        "targetRef": "id14",
                        "condition": "pickedup"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id15",
                        "condition": "notpickedup"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "notpickedup"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id7",
                        "condition": "accepted"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id11",
                        "condition": "rejected"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a risk manager performing a BKR check and, at the same time, performing a Jane Doe check.  Once both checks are finished, a credibility check is performed.  The result of the credibility check is then confirmed by a senior risk manager. If the credibility check is accepted, the process continues.  If it is rejected, the administrator sends a rejection letter and the process ends. If the credibility check is accepted by the senior risk manager, this decision is passed on to the customer relation manager and a loan offer is created and then sent to the client. Once sent, the customer relations manager waits for the client to either accept the offer or for one hour to pass.  If the client accepts the offer, a welcome letter is sent by the administrator, who then activates the loan application.  After the application is activated, it is validated, the initial payment is executed by the finance department and the documents are returned to the client, after which the process ends.  If the client does not accept the offer within one hour, a reminder is sent to the client by the customer relations manager. Then, the customer relations manager again waits for the client to accept the offer or for another hour to pass. If the client accepts the offer, the administrator sends a welcome letter and the process follows the same path as described before. If the client does not accept the offer within the second hour, the customer relations manager calls the client to complement the required information. After the call, the decision is made whether the required information was picked up or not.  If picked up, a new loan offer is created by the customer relations manager, and the process loops back to the point where the loan offer is sent to the client. If the information was not picked up, one hour timer starts. Once the time is up, it triggers a reminder to the customer, prompting them to pick up the missing information. From this point, the process repeats the steps related to contacting the client, creating a loan offer, and awaiting the client\u2019s response or the timer event.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Credibility Check Result",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate Application",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Create New Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send Reminder to Pick Up Information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Rejection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id21",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Required Information Picked Up?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id23",
                        "name": "One Hour Timer for Information Pickup",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Credibility Check Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Client Accepted Offer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Information Picked Up?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id24",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id25",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id25",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id25",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id14",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id26",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id26",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id23",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id16",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a risk manager performing a BKR check and, concurrently, a Jane Doe check.  If the BKR assessment is accepted, the process continues. Similarly, if the Jane Doe assessment is accepted, the process also continues. These checks occur in parallel. Once both checks are completed, a credibility check is performed.  Following the credibility check, the risk manager makes a decision based on the Credibility Assessment. If accepted, it's passed to a senior risk manager for confirmation. If the senior risk manager\u2019s Credibility Assessment is rejected, it goes back to the customer relations department, who will call the client to complement the information. After the call, the customer relations checks whether the client has picked up. If so, a loan offer is created and the process continues. Otherwise, if not picked up, a timer starts, and after one hour, the customer relations reminds the client. After reminding, the process flows back to the decision point following the sending of the loan offer. If the client accepts the offer the process will continue. If an hour passes and no response is received, another timer is started, and after an hour the customer relations remind the client again.  If the loan offer is rejected, the process goes back to the start event following the first reminder. Regardless of how the customer relations proceeds, once the offer is created, the customer relations department checks it before sending it to the client. After the client receives the offer, they can either accept or reject it. If they accept, a welcome letter is sent by the administrator, after which the loan application is activated by the finance department. After activating, the finance department validates the loan activation before executing the initial payment. Finally, the administrator returns the documents to the client, and the process ends. If, however, the client rejects the loan offer or the senior risk manager rejects the credibility check, the administrator sends a rejection letter, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client to Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Client Pick Up Check",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Loan Offer Check",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id22",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "BKR Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Jane Doe Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Credibility Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Client Picked Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Loan Offer Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id29",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id28",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id28",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id23",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id24",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id29",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id25",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id7",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id26",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id26",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id27",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id27",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id22",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id25",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "57_ground_truth.json": {
        "0": {
            "text": "The process begins when an applicant submits an application to the savings bank. The HR team sends a receipt confirmation to the applicant and reviews the application. If the application is not in order, the HR team evaluates the application with the IT department.  If the IT department deems the applicant suitable, the HR team invites the applicant. If not, the application process is cancelled, and the HR team rejects the applicant, sending a rejection notice to the Applicant. The process then ends with the applicant being rejected.\n\nIf the application is in order, the HR team also evaluates the application with the IT department, and follows the same process as described before. If invited, the HR team prepares for the interview, conducts the interview, and then decides whether the applicant is good. If not, the process follows the same rejection path as described previously. If the applicant is considered good, the HR team puts the applicant on a list, and then selects an applicant from that list. The HR team then obtains approval from the Board of Directors. If the hiring is not approved, the process follows the same rejection path as described before. If the hiring is approved, the HR team prepares the contract and the applicant and HR team sign the contract. An intermediate cancel event can happen during the contracting phase. If the applicant declines, they are rejected and the rejection path is followed.\n\nAfter successful contract signing, the HR team places the applicant in the position. After placing the applicant in the position, the HR team occupies the position in the system in the IT department. The HR team then completes the application process and the process ends with the applicant being hired. Finally, the HR team archives the application documents and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Invite applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reject applicant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send rejection notice",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare for interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct interview",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Put applicant on list",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Select applicant from list",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Obtain approval from Board of Directors",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare contract",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Sign contract",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Place applicant in position",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Occupy position in system",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Complete application process",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Archive application documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Application submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Applicant hired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Application process completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Contract cancelled",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Application in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Applicant suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Applicant good?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Hiring approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Savings Bank",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "HR Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id29",
                                "name": "IT Department",
                                "elemRefs": [
                                    "id3",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id30",
                                "name": "Board of Directors",
                                "elemRefs": [
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id18",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id3",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id24",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id25",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id11",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id26",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id16",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id20",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id17",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id25",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id26",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id22",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an application arrives at the savings bank, sent by the applicant.  The HR team sends a receipt confirmation to the applicant and reviews the application. If the application is not in order, the HR team evaluates the application with the IT department. If the IT department deems the applicant suitable, the HR team prepares an interview. The interview is then conducted, after which the HR team decides whether the applicant is good.  If not, the flow returns to the evaluation with the IT department. If the applicant is good, they are put on the list. From the list, the applicant is selected and invited. If the application is in order, the IT department also evaluates the applicant. If they are not suitable, the application process goes to an exclusive gateway where the decision is made to either reject the applicant or not. If the applicant is rejected, a rejection message is sent to the applicant, after which, the HR team archives the application documents, and the process ends with the applicant being rejected. If the applicant is invited by HR and accepts, they enter a confirmation subprocess. If the applicant declines at any point after being invited, the application process also proceeds to the gateway where the decision is made to either reject the applicant or not. After confirmation, the HR team prepares a contract and the applicant and the savings bank participate in the contract signing subprocess.  If, after the contract is prepared, an approval is obtained from the board of directors, the position is occupied in the system by HR. Finally, the HR team completes the application process, and the process ends with the applicant hired. If hiring is not approved by the board of directors, the rejection path is also taken.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Receipt Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Decide on Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Put Applicant on List",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select and Invite Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Evaluate Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Rejection Message",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Archive Application Documents",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Confirmation Subprocess",
                        "type": "Subprocess"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare Contract",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Contract Signing Subprocess",
                        "type": "Subprocess"
                    },
                    {
                        "id": "id15",
                        "name": "Obtain Approval from Board of Directors",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Occupy Position in System",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Complete Application Process",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Application Arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Applicant Hired",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Application in Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Applicant Good?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Reject Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Applicant Accept?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Hiring Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Applicant",
                        "lanes": []
                    },
                    {
                        "id": "id28",
                        "name": "Savings Bank",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "HR Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id11",
                                    "id13",
                                    "id16",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id30",
                                "name": "IT Department",
                                "elemRefs": [
                                    "id3",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id31",
                                "name": "Board of Directors",
                                "elemRefs": [
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id23",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id24",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id25",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id25",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id15",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id26",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id26",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id23",
                        "targetRef": "id3"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when an applicant submits an application to the savings bank. The HR team sends a receipt confirmation to the applicant and reviews the application. If the application is not in order, the HR team evaluates the application with the IT department. If the IT department deems the applicant unsuitable, the application process is cancelled. Otherwise if the IT department deems the applicant suitable, or if the application was in order to begin with, the HR team proceeds. If the applicant is deemed good, the applicant is put on the list. If the applicant is not deemed good, the application is also evaluated by the IT department. If the IT department deems the applicant suitable, the applicant is put on the list. if the IT department deems the applicant unsuitable, or if the applicant is not deemed good, the HR team proceeds with selecting an applicant. Next the HR team invites the applicant. Following this, the HR team prepares the interview and conducts the interview. After the interview, the HR team decides whether to invite the applicant or not. If not, the HR team again proceeds with selecting an applicant. If so, the HR team prepares for interview. After the interview, the HR team decides whether the applicant is good or not. If not, the application proceeds to be evaluated by the IT department again. If the applicant is good, the HR team confirms the applicant. If the hiring was not approved by the Board of Directors, the HR team rejects the applicant and sends a rejection notification to the applicant. After sending the rejection, the HR team archives the application documents, and the process ends with the applicant being rejected. If hiring is approved, the HR team prepares a contract. After preparing the contract, the HR team proceeds with contract signing. If the applicant declines during contract signing, the HR team goes back to rejecting the applicant. Once the contract is signed, the HR team places the applicant in the position.  After the position is occupied in the system by the HR Team, the HR team completes the application process, and the process ends with the Applicant Hired.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Receipt Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Put Applicant on the List",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Invite Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare Interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct Interview",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Reject Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Rejection Notification",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Archive Application Documents",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare Contract",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Contract Signing",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Place Applicant in Position",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Complete Application Process",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application Submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Application Cancelled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Applicant Hired",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Application in Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Applicant Good?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Invite Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Applicant Good?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Hiring Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Applicant Declines?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id30",
                        "name": "Savings Bank",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "HR Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id32",
                                "name": "IT Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id33",
                                "name": "Board of Directors",
                                "elemRefs": []
                            }
                        ]
                    },
                    {
                        "id": "id34",
                        "name": "Applicant",
                        "lanes": []
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id18",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id23",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id23",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id23",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id3",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id24",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id25",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id25",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id8",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id26",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id3",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id27",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id26",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id9",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id28",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id12",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id28",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id68",
                        "sourceRef": "id14",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id69",
                        "sourceRef": "id29",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id70",
                        "sourceRef": "id29",
                        "targetRef": "id15",
                        "condition": "No"
                    },
                    {
                        "id": "id71",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id72",
                        "sourceRef": "id16",
                        "targetRef": "id20"
                    }
                ]
            }
        }
    },
    "28_ground_truth.json": {
        "0": {
            "text": "The process starts with an order intake at SoKnow.  The development department then describes the requirements, followed by a workshop. Next, a project sketch is created, after which an appointment confirmation is received from the customer company. The development department then conducts a customer conversation and writes a specification sheet. This information is then sent to the customer company.  SoKnow waits for feedback from the customer and after receiving it, performs project and capacity planning and checks standard open-source products. If suitable open-source products exist, the process flow branches. The development department defines use cases and calculate costs. If no suitable open-source product exists, only costs are calculated.  The process then reaches a decision point: \"New development or existing products?\"  If existing products are used, the knowledge management systems (target process) are adjusted. If new products need to be developed, they are created (target process).  Regardless of the branch taken, the process merges before product acceptance. The customer company participates in the product acceptance. The development department obtains customer feedback. Finally, SoKnow identifies follow-up projects, and the process ends with the order being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct workshop",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create project sketch",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct customer conversation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Write specification sheet",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Perform project and capacity planning",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check standard open-source products",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Define use cases",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Calculate costs",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust knowledge management systems (target process)",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Create new products (target process)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Obtain customer feedback",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Identify follow-up projects",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Appointment confirmation received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Feedback received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Suitable open-source products exist?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "New development or existing products?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Customer Company",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an order intake at SoKnow. The requirements are described, leading to a workshop.  A project sketch is then created, after which an appointment is set with the customer company, confirmed by a \"Terminbest\u00e4tigung\" message.  Next, a customer conversation is conducted, followed by writing a specification sheet. Information is then sent to the customer company  with an \"Informationen\" message.  After sending the information, feedback is received from the customer with a \"Feedback\" message. Based on this feedback, project and capacity planning are performed.  This is followed by checking standard open-source products. If suitable open-source products are found, use cases are defined, after which costs are calculated. If no suitable open-source product exists, the costs are directly calculated after checking. The decision gateway \"New development or existing products?\" then determines the next step. If existing products are used, an adjustment is made to the knowledge management systems (target process). Otherwise, if new products are to be developed, the development (target process) subprocess is executed. Both paths converge before product acceptance, for which the customer participates through a \"Teilnahme an Produktabnahme\" message. After product acceptance, customer feedback is obtained via a \"Feedback\" message. Finally, follow-up projects are identified, and the process ends with the order completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct workshop",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create project sketch",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct customer conversation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Write specification sheet",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Perform project and capacity planning",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check standard open-source products",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Define use cases",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Calculate costs",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust knowledge management systems (target process)",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Development (target process)",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Product acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Identify follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Suitable open-source product?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "New development or existing products?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "SoKnow Mitarbeiter",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "Customer Company",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Customer",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id40",
                        "sourceRef": "id3",
                        "targetRef": "id21",
                        "name": "Terminbest\u00e4tigung"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id5",
                        "targetRef": "id21",
                        "name": "Informationen"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id6",
                        "name": "Feedback"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id12",
                        "name": "Teilnahme an Produktabnahme"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "name": "Feedback"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with an order intake at SoKnow. The requirements are described, leading to a workshop. The workshop results in a project sketch, after which an appointment is set with the customer company and confirmed by a message \"Terminbest\u00e4tigung\". Next, a customer conversation is conducted, followed by writing a specification sheet. Information is then sent to the customer company via an \"Informationen\" message. After sending the information, SoKnow waits to receive feedback from the customer via a \"Feedback\" message. Once received, the project and capacity planning are performed, which then leads to checking standard open-source products.  If suitable open-source products are found, use cases are defined and the costs are calculated. Otherwise, the development department directly proceeds with calculating the costs. Based on the cost calculation, it is decided whether new products need to be developed or existing products can be used. If existing products suffice, the knowledge management systems (target process) are adjusted. If new products are required, the product (target process) is developed. In both cases, the process continues with product acceptance in which the customer company participates via a \"Teilnahme an Produktabnahme\" message. The development department then obtains customer feedback which is sent from the customer by a \"Feedback\" message. Finally, follow-up projects are identified, and the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct Workshop",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Project Sketch",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Set Appointment",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Customer Conversation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Write Specification Sheet",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Perform Project and Capacity Planning",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Check Standard Open-Source Products",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Define Use Cases",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Calculate Costs",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Calculate Costs",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Adjust Knowledge Management Systems",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Develop Product",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Conduct Product Acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Obtain Customer Feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id16",
                        "name": "Identify Follow-Up Projects",
                        "type": "Task"
                    },
                    {
                        "id": "id17",
                        "name": "Complete Order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Order Intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Terminbest\u00e4tigung",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id20",
                        "name": "Informationen",
                        "type": "IntermediateMessageEventThrowing"
                    },
                    {
                        "id": "id21",
                        "name": "Feedback",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id22",
                        "name": "Teilnahme an Produktabnahme",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id23",
                        "name": "Feedback",
                        "type": "IntermediateMessageEventCatching"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Suitable Open-Source Products Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Develop New or Use Existing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id26",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Development Department",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Customer Company",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id8",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id24",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id24",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id25",
                        "targetRef": "id12",
                        "condition": "Use Existing"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id25",
                        "targetRef": "id13",
                        "condition": "Develop New"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id22",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id15",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id23",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id55",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id20",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id28",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id28",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id28",
                        "targetRef": "id23"
                    }
                ]
            }
        }
    },
    "66_ground_truth.json": {
        "0": {
            "text": "The process starts when a customer experiences hunger.  The customer then chooses a pizza from the menu and orders it by phone. Following the order, the customer waits for the pizza to arrive or 60 minutes to pass. If the pizza arrives, the customer pays the delivery boy and then eats the pizza, after which the process ends, with hunger satisfied. If 60 minutes pass before the pizza arrives, the customer calls the pizzeria to inquire about the order.  When the pizza eventually arrives, the customer pays the delivery boy, eats the pizza, and the process ends with hunger satisfied.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pay",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Eat Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Pizzeria",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Hunger",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Pizza Arrives",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id9",
                        "name": "60 Minutes Pass",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Hunger Satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Pizza Arrived or 60 Minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Pizza Arrived"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "60 Minutes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The customer's process starts when they feel hungry.  They choose a pizza from the menu and order it by phone. After ordering, the customer waits for the pizza to arrive or for 60 minutes to pass. If 60 minutes pass, the customer will call the pizzeria and inquire about the order, after which they again wait for the pizza to arrive. Once the pizza arrives, the customer pays the delivery boy and eats the pizza, finally satisfying their hunger and ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a pizza from the menu",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for pizza to arrive",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call pizzeria and inquire about order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Feel hungry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "60 minutes passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Pizza arrived",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Hunger satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Pizza arrived or 60 minutes passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "Pizza arrived"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "60 minutes passed"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a customer experiences hunger.  The customer chooses a pizza from the menu and then orders the pizza by phone. After ordering, the customer waits for the pizza to arrive or 60 minutes to pass. If 60 minutes pass, the customer calls the pizzeria to inquire about the order.  If the pizza arrives (informed by the pizzeria during the call), or the pizza arrives while the customer is waiting initially, they proceed to pay the delivery boy. After paying, the customer eats the pizza, and finally, their hunger is satisfied.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Call Pizzeria",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat Pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Hunger",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Pizza Arrives",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id9",
                        "name": "60 Minutes Pass",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Pizza Arrived or 60 Minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Pizza Arrived?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "34_ground_truth.json": {
        "0": {
            "text": "The process starts with the generation of a software and document draft at Harro H\u00f6fliger Verpackungsmaschinen GmbH. First, an overview of the machine is obtained.  Then, the SPS project, the HMI project, and the safety project are completed in parallel. Once all programs are ready, the software is tested.  After testing, a software design review is conducted.  Finally, the software is ready for commissioning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain machine overview",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel End",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the generation of a software and document draft at Harro H\u00f6fliger Verpackungsmaschinen GmbH.  Production / Design and Development then gets an overview of the machine. Subsequently, the SPS project, the HMI project, and the safety project are completed in parallel.  Once all programs are ready, the software is tested.  After testing, a software design review is conducted. Finally, the software is ready for commissioning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Get overview of the machine",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the generation of a software and document draft at Harro H\u00f6fliger Verpackungsmaschinen GmbH.  Production / Design and Development then gets an overview of the machine. Subsequently, the SPS project, the HMI project, and the safety project are completed in parallel.  Once all programs are ready, the software is tested.  Following the software test, a software design review is conducted. Finally, the software is ready for commissioning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Get overview of the machine",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "52_ground_truth.json": {
        "0": {
            "text": "The process starts with a clerk from HR Personnel retrieving a requirement profile. Next, the clerk retrieves a job posting. Based on the job posting, the clerk decides whether further comments are needed. If no comments are needed, the clerk creates a co-signature note.  If comments are needed, the clerk creates a co-signature note. Subsequently, the clerk forwards the co-signature note to a section manager. The section manager checks the note and decides if there are any comments.  If the section manager has comments, the clerk repeats retrieving the job posting. If the section manager has no comments, the note is forwarded to a department head, who checks the note. The department head also decides whether there are comments; if there are comments, the process loops back to where the clerk retrieves the job posting. If the department head has no comments, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Create co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Forward co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Check co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Check note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Further comments needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Section manager comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Department head comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task6",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a clerk from HR Personnel retrieving a requirement profile.  Next, the clerk retrieves a job posting. Based on the job posting, the clerk decides whether further comments are needed. If comments are needed, the clerk creates a co-signature note and forwards it to the section manager. The section manager checks the note and decides whether there are comments. If the section manager has comments, the process loops back to the clerk retrieving a job posting. If the section manager has no comments, the note is forwarded to the department head. The department head checks the note and decides whether there are comments. If the department head has comments, the process again returns to the clerk retrieving the job posting. If the department has no comments, the process ends.  If, after the clerk has retrieved the job posting, no comments are needed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check co-signature note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Further comments needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "HR Personnel",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Section Manager",
                                "elemRefs": [
                                    "id4",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Department Head",
                                "elemRefs": [
                                    "id5",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with an HR clerk retrieving a requirement profile, followed by retrieving a job posting.  Next, the clerk checks whether there are comments on the posting. If there are comments, the clerk creates a co-signature note and forwards it to the section manager. The section manager checks the note. If the section manager has comments, the process loops back to the clerk retrieving the job posting. If the section manager does not have comments, the note is forwarded to the department head. The department head checks the note. If there are comments, the process loops back to the clerk retrieving the job posting. If the department head has no comments, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check for comments on posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Forward note to section manager",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check note (section manager)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Forward note to department head",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check note (department head)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Comments on posting?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Section manager comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Department head comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_ground_truth.json": {
        "0": {
            "text": "The process starts when a need arises for procurement within ACME AG.  The stock is checked. If work equipment is in stock, it is retrieved from the storeroom, and the process ends noting the work equipment has been removed from the storeroom.  If the work equipment is not in stock, the requirements are specified and quantified. An order is then placed. After the order is placed, either a receipt of work equipment will occur, or after 5 days, the order will be placed by email to the supplier. Receipt of work equipment can occur from either the initial order or from the email follow-up after five days. After a message is received confirming receipt of the work equipment, the process ends and it's noted that the work equipment has been procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by Email to Supplier",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need for Procurement",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work Equipment Removed from Storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "5 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "In Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "ACME AG",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process at ACME AG starts when a need for work equipment arises. The procurement department first checks the stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends. If the work equipment is not in stock, the requirements are specified and quantified.  Next, an order is placed. After the order is placed, either a \"receipt of work equipment\" message is received from the supplier, or a timer for 5 days expires. If the message is received, the process continues. If the timer expires, an order is placed by e-mail to the supplier. After the order is placed by email, ACME AG awaits a \"receipt of work equipment\" message from the supplier. In both ordering paths, following receipt of the \"receipt of work equipment\" message, the process ends with \"work equipment procured\".\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need for Work Equipment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work Equipment Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "5 Days Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "In Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "EventBasedGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process at ACME AG starts when a need arises for procurement. The first step is to check stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends indicating the work equipment has been removed from the storeroom.  If the work equipment is not in stock, the requirements are specified and quantified. An order is then placed. After the order is placed, there is an event-based gateway to handle different types of receipt. Either a message is received as the receipt of work equipment from the supplier, or a timer event occurs after 5 days. If the receipt of work equipment takes place, the process continues to a final check. If the timer event occurs then an order is placed by email and then another message is expected from the supplier as the receipt of work equipment. After this, the process continues to a final check and ends with work equipment procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Final Check",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Place order by Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Need for Procurement",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work Equipment removed from Storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id10",
                        "name": "5 Days Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Receipt Type",
                        "type": "EventBasedGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "In Stock"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Not in Stock"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "30_ground_truth.json": {
        "0": {
            "text": "The process can start in two ways. One way is when the timer event for registering time is triggered in the Request Assistant pool. The request is then registered and the Request Assistant checks if there are enough requests to respond to customer demand. If yes, the order request document is sent to the Shop Assistants' Team (represented by a message flow).  The Shop Assistants' Team then prepares the order and the order is delivered and the process ends. If there are not enough requests, the request is registered again. The other way to start the process is when a new service is requested in the Client pool. The client enters the store and looks for a specific service.  The client then determines if they need a ticket. If a ticket is required from the app or the store, the client takes the ticket and chooses the service and waits their turn.  After waiting, the client looks for the product and specific criteria. If a ticket was not required, the client looks for the product and specific criteria directly after looking for the specific service. The client then asks for a specific request (represented by a message flow to the Request Assistant), and the Request Assistant registers the request. The client collects their order, checks if they have another new request. If yes, the client looks for the requested service again. If no, the process ends. Once the client asks for a specific request, the request is sent to the Request Assistant.  The Request Assistant registers the request, sends the order request document to the Shop Assistants' Team. The Shop Assistants\u2019 Team prepares the order and delivers it, then the process ends for the Shop Assistants' Team.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Enough Requests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deliver Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter Store and Look for Service",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Determine Ticket Necessity",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Take Ticket and Choose Service",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Wait Turn",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Look for Product and Criteria",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask for Specific Request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Collect Order",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check for Another Request",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Time for Registering Time",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id14",
                        "name": "New Service Requested",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Order Delivered",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Enough Requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Ticket Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Another Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Request Assistant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Shop Assistants' Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Client Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id14",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id16",
                        "condition": "no"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id46",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    }
                ]
            }
        },
        "1": {
            "text": "The process can start in two ways. The first way is when the timer for registering time starts within the Request Assistant.  The request is then registered and the Request Assistant checks if there are enough requests to respond to customer demand. If yes, the order request document is sent to the Shop Assistants' Team. This message triggers the Shop Assistants' Team to prepare the order. After preparing the order, it will be delivered and this ends one part of the process for the Shop Assistants' Team while for the Request Assistant it triggers the end of the registration.  If there are not enough requests to respond to customer demand, the request is registered again. The second way the process can begin is when a client enters the store wanting a new service.  The client looks for a specific service and then decides where they have taken their ticket from. If it is from the app, the client chooses the service and waits for their turn. After waiting, the client looks for the product and specific criteria they need, and then check how many tickets are ahead. The client will then wait in line until their turn and finally collects their order. This ends the process for the client. If the ticket is physical, the client waits for their turn. Then they ask the Request Assistant for a specific request; this message triggers the Request Assistant to register the request. As mentioned before, the Request Assistant will check if there are enough requests to respond to customer demand, which if there are enough triggers the Shop Assistants' Team to begin preparing the order. Otherwise, the Request Assistant continues to register requests until there are enough to send to the Shop Assistant's Team. If after collecting their order, the client asks for a new request, they look for a specific service and continue through the flow described above. If they have no further requests, this will end the process for the client.  If after looking for a specific service, there is no specific ticket to take, then that ends another part of the process for the client.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Deliver Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Choose Service",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for Turn",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Look for Product and Specific Criteria",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Tickets Ahead",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Wait in Line",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Collect Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask for Specific Request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Look for Specific Service",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Timer Starts",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Client Enters Store",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End Registration",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End Process for Client",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "No Specific Ticket",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Enough Requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Ticket Type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "New Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Request Assistant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id17",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Shop Assistants' Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Client Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id15",
                                    "id18",
                                    "id19",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "App"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id19",
                        "targetRef": "id15",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "Physical"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id16",
                        "condition": "No Ticket"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    }
                ]
            }
        },
        "2": {
            "text": "The process can start in two ways. The first way is when the timer for registering time starts within the Request Assistant.  When the timer starts, the request assistant registers the request. This is checked to see if there are enough requests to respond to customer demand. If yes, the request assistant sends the order request document, which is then received by a shop assistant who prepares the order. Once the order is prepared, it will be delivered, and the process ends with preparation finished. If there are not enough requests to respond to customer demand, the request is registered again. The second way to start is when a new service is requested by a client. The client enters the store and looks for a specific service. Next, the client decides where the ticket is taken. If using the app, the client chooses the service and waits for their turn. Once the waiting time is over, the client looks for the product and specific criteria and checks how many tickets are ahead, then waits again. After waiting, the client makes a specific request, which is sent to the request assistant. The request assistant registers the request and the process continues as described above.  If the client takes a physical ticket, they take their ticket, representing their turn, choose the service, wait for their turn, and then look for the product and specific criteria, which leads to checking how many tickets are ahead and joining the queue by waiting for their turn again.  Regardless of how the ticket was taken, after the client asks for a specific request, the request is sent to the request assistant.  After collecting the order, the client may need to look for another service. If yes, the client looks for the specified service and continues through the process. If no, the process ends. Also, when collecting an order the client can choose not to continue with another request. In this case the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order Request Document",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deliver Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter Store and Look for Service",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Choose Service",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for Turn",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Look for Product and Criteria",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Tickets Ahead",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Make Specific Request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Take Ticket",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Collect Order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Look for Another Service",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Timer Starts",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id15",
                        "name": "New Service Requested",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Preparation Finished",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Enough Requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Ticket Type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Another Service?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Continue?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id18",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "App"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Physical"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id20",
                        "targetRef": "id17",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "56_ground_truth.json": {
        "0": {
            "text": "The process starts with a request from the customer, The Bike Zone. GBI's sales department receives the request and can either create customer master data followed by changing the customer data, or directly accept and process the request. Subsequently, an offer is processed and copied to an order, which is then sent to the customer. The customer then places an order, which is accepted and processed by GBI.  At the same time, GBI checks inventory. If the product is available, material management requests the product in stock. If not, goods are procured or ordered.  If in stock, material management continues to inventory control. Next, picking of the material takes place, followed by packing/loading and sending it to the customer. The Bike Zone receives the goods.  Following this, GBI creates a delivery note and checks inventory. Next, an invoice is created and sent to the customer. The customer receives the invoice and settles it. GBI processes the incoming payment and edits/displays the document flow, after which the process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Customer Master Data",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Change Customer Data",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Accept and Process Request",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Process Offer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Copy to Order",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Accept and Process Order",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check Inventory",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Request Product in Stock",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Procure/Order Goods",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Inventory Control",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Picking",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Packing/Loading",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Create Delivery Note",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Check Inventory",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Create Invoice",
                        "type": "Task"
                    },
                    {
                        "id": "id16",
                        "name": "Process Incoming Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id17",
                        "name": "Edit/Display Document Flow",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Request Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Order Sent",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Order Placed",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Goods Sent",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Goods Received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Invoice Sent",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "Invoice Received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Invoice Settled",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id27",
                        "name": "Request Processing Choice",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Product Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id29",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id31",
                                "name": "Material Management",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "The Bike Zone",
                        "elemRefs": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id27",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id27",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id7",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id28",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id28",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id15",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id24",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id25",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id17",
                        "targetRef": "id26"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a customer request at \"The Bike Zone\".  The customer sends a request to GBI which is accepted and processed by the Sales department.  GBI Sales then creates a process offer, copies the offer to an order, and sends it to the customer. The customer then creates a customer order and sends it to GBI which creates the corresponding master data. If a change of customer data is necessary, the master data is updated accordingly and the process loops back to accepting and processing the request. Otherwise, the customer's order is accepted and processed by GBI Sales, who then checks inventory. If the product is available, GBI requests the product in stock and proceeds with processing the customer order.  If not available, GBI procures/orders the goods and then processes the customer order.  GBI Sales then creates a delivery note and sends it to Material Management. Material management picks and packs the material, then sends it to the customer. Simultaneously, Finance creates and sends an invoice to the customer. The customer then settles the invoice and makes a payment to GBI.  GBI processes the incoming payment, edits and displays the document flow, and the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Accept and Process Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Copy Offer to Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create Master Data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Update Master Data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Accept and Process Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request Product in Stock",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Procure/Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Create Delivery Note",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Pick and Pack Material",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Create and Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Settle Invoice and Make Payment",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Process Incoming Payment",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Edit and Display Document Flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Customer Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Change of Customer Data?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Product Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id22",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id4",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Sales",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Material Management",
                                "elemRefs": [
                                    "id13"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Finance",
                                "elemRefs": [
                                    "id14"
                                ]
                            },
                            {
                                "id": "id28",
                                "name": "Master Data Management",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id29",
                                "name": "Inventory/Procurement",
                                "elemRefs": [
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id30",
                                "name": "Accounting",
                                "elemRefs": [
                                    "id16",
                                    "id17"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id20",
                        "condition": "Yes",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id20",
                        "condition": "No",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id21",
                        "condition": "Yes",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id21",
                        "condition": "No",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id17",
                        "targetRef": "id19"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a customer request, after which the customer sends a request to GBI.  GBI\u2019s sales department receives the request and can either accept and process it or, if the customer master data needs to be created or changed, creates or changes customer data accordingly before accepting and processing the request.  Once the request is accepted and processed, GBI processes the offer, copies the offer to an order, and sends it to the customer. The customer receives the offer and places an order with GBI. GBI accepts and processes the order, which leads to checking the inventory.  If the product is available, GBI requests the product in stock. If it is not available, GBI procures/orders the goods. Regardless of the product\u2019s availability, GBI proceeds with the order by first processing the customer's order and then creating a delivery note. Once the delivery note is created, the material management department picks the material, packs/loads it, and sends it to the customer.  After the goods are shipped, GBI creates and sends an invoice to the customer, and the customer, after receiving the invoice, makes a payment and sends the invoice to GBI.  GBI processes the incoming payment, edits, and displays the document flow, after which the process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Accept and Process Request",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Create or Change Customer Data",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Process Offer",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Copy Offer to Order",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Accept and Process Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Request Product in Stock",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Procure/Order Goods",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Process Customer Order",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Create Delivery Note",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Pick Material",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Pack/Load Material",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Create Invoice",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Process Incoming Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Edit Document Flow",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Display Document Flow",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Customer Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Send Request",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Receive Request",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Send Offer/Order",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Receive Offer",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Place Order",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Send Goods",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id24",
                        "name": "Send Invoice",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Receive Invoice",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "Make Payment",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id27",
                        "name": "Send Invoice with Payment",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id28",
                        "name": "Process Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id29",
                        "name": "Customer Data OK?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Product Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id31",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Customer Actions",
                                "elemRefs": [
                                    "id17",
                                    "id18",
                                    "id21",
                                    "id22",
                                    "id25",
                                    "id26",
                                    "id27"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "Sales",
                                "elemRefs": [
                                    "id19",
                                    "id1",
                                    "id2",
                                    "id29",
                                    "id3",
                                    "id4",
                                    "id20",
                                    "id24"
                                ]
                            },
                            {
                                "id": "id35",
                                "name": "Order Processing",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id30",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id36",
                                "name": "Inventory",
                                "elemRefs": [
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id37",
                                "name": "Material Management",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id23"
                                ]
                            },
                            {
                                "id": "id38",
                                "name": "Accounting",
                                "elemRefs": [
                                    "id27",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id28"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id23",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id24",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id27",
                        "targetRef": "id14"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id45",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id19",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id29",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id29",
                        "targetRef": "id2",
                        "condition": "no"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id4",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id6",
                        "targetRef": "id30"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id30",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id30",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id12",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id13",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id25",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id26",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id68",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id69",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id70",
                        "sourceRef": "id16",
                        "targetRef": "id28"
                    }
                ]
            }
        }
    },
    "18_ground_truth.json": {
        "0": {
            "text": "The PC assembly process starts with preparing the workplace with an anti-static mat, tools, and gloves. Then, the motherboard is placed on the anti-static mat. Next, thermal paste is applied. The process then checks if installation is possible. If yes, adjustments are made.  If there is no power, no image, a hard drive not recognized, or a boot loop, further adjustments are made, and another check is performed if the installation is now possible.  If installation is still not possible, further adjustments are made. If installation is possible, final adjustments are made and the process ends. If the initial installation check yields a \"no\", final adjustments are also made, leading to the process end.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place Motherboard",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Apply Thermal Paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Make Adjustments",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Make Further Adjustments",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Make Final Adjustments",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Installation Possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Installation Possible?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The PC assembly process starts with preparing the workplace with an anti-static mat, tools, and gloves. Then, the motherboard is placed on the anti-static mat, and the CPU is installed in the processor. Next, thermal paste is applied. The process proceeds to check if the installation is possible. If yes, the next step is to check for multiple conditions: no power, no image, hard drive not recognized, and boot loop. If any of these conditions are met, specific actions are performed for each condition. These actions converge to a point where further checks are conducted, and if the installation is still not possible, the process loops back to the \"Installation possible?\" check.  If the installation is possible, the process checks again if the installation is possible. If yes, it leads to another check, and if yes again, the process ends.  If no, the process also ends. If the first \"Installation possible?\" check was negative, the process directly ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place Motherboard",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Install CPU",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Apply Thermal Paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Check No Power",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Check No Image",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Check Hard Drive Not Recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Check Boot Loop",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Perform Actions for No Power",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Perform Actions for No Image",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Perform Actions for Hard Drive Not Recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Perform Actions for Boot Loop",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Conduct Further Checks",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start PC Assembly",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "PC Assembly Complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "PC Assembly Failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Installation possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Multiple Conditions Check",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "Installation possible? 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Installation possible? 3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id18",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id9",
                        "condition": "no power"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id10",
                        "condition": "no image"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id11",
                        "condition": "hard drive not recognized"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id12",
                        "condition": "boot loop"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id17",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id15",
                        "condition": "yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id20",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id19",
                        "targetRef": "id16",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The PC assembly process starts by preparing the workplace with an anti-static mat, tools, and gloves. The motherboard is then placed on the anti-static mat, and thermal paste is applied. Next, the CPU is installed in the processor, after which the process checks if the installation was possible. If yes, the next step is to turn on the PC and check for potential issues. If there is no power, the process flows to check for multiple issues like no image, a boot loop, or a hard drive not being recognized. These issues are addressed, and the process continues to the next check of whether the installation is possible. If no, the process directly proceeds to the next check.  If the installation is still not possible after troubleshooting the mentioned issues, the process ends. Otherwise, if the installation is deemed possible, a final check is performed. If this check is successful, the process ends. If not, the process reiterates the troubleshooting steps and continues until the installation is successful or deemed impossible.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place Motherboard",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Apply Thermal Paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Install CPU",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Turn on PC",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Check for No Image",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Check for Boot Loop",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Check for Hard Drive Recognition",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Address Issues",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Perform Final Check",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start PC Assembly",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Installation Impossible",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Installation Successful",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Installation Possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Power On?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Final Check Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "4_ground_truth.json": {
        "0": {
            "text": "The process begins when an applicant submits an application to ACME AG, which is received by the HR department.  The HR department sends an acknowledgment of receipt to the applicant.  Next, the HR manager checks the applicant. Based on the check, the manager decides whether to invite or reject the applicant. If the applicant is invited, the HR department sends an invitation to a job interview to the applicant. Following this, the HR department prepares an employment contract and then conducts the interview. After the interview, the HR department sends the employment contract to the applicant.  The applicant then signs the contract and sends it back to the HR department. When the signed employment contract is received, the process ends. If the applicant is rejected, either by the HR manager directly or after the interview process, the HR department or the HR Manager sends a rejection to the applicant. The process then ends with the applicant being rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgement of receipt",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send invitation to job interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare employment contract",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send employment contract",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Sign contract",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Application submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Signed employment contract received",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Invite or reject?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "HR Manager",
                                "elemRefs": [
                                    "id2",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Invite"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Reject"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when an application is received by the HR department of ACME AG. An acknowledgment of receipt is sent to the applicant. The HR manager checks the applicant. Based on the check, the HR manager makes a decision to either invite or reject. If the decision is to invite, the applicant is invited to a job interview.  The invitation is sent to the Applicant.  Then the HR department prepares an employment contract. The HR department conducts the interview and sends the prepared employment contract to the applicant. The process waits for the signed employment contract which, once received, leads to the end of the process and declares that a signed employment contract is available.  If, on the other hand, the HR manager decides to reject the Applicant, a rejection is sent and the process ends, noting that the applicant was rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check applicant",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Invite applicant to job interview",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare employment contract",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct interview and send contract",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Acknowledgment of receipt sent",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Invitation sent",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Signed employment contract available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Rejection sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Signed employment contract received",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Invite or Reject?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Invite"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "Reject"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins at ACME AG when an application is received from an applicant.  The HR department sends an acknowledgment of receipt to the applicant. The HR manager checks the applicant. Based on the check, the HR manager makes a decision to either invite or reject the applicant. If the decision is to invite, the HR department invites the applicant to a job interview and a message is sent to the applicant. The HR department then prepares an employment contract and conducts the interview.  Following the interview, if the applicant is deemed suitable, the HR department sends the employment contract to the applicant. The applicant then sends the signed employment contract back to the HR department, and the process ends. If the applicant is not deemed suitable after the interview, the HR department sends a rejection to the applicant.  If the HR manager's initial decision was to reject the applicant, a rejection is sent to the applicant by the HR manager. In either rejection scenario, the process ends when the applicant is rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgement of receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Invite applicant to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send employment contract to applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection to applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send rejection to applicant",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Receive application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Signed contract received",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Invite or Reject?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "HR Manager",
                                "elemRefs": [
                                    "id2",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Applicant",
                                "elemRefs": []
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Applicant",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Invite"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Suitable"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Not Suitable"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Reject"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    }
                ]
            }
        }
    },
    "29_ground_truth.json": {
        "0": {
            "text": "The process starts when a hotel guest sends an order to the Hotel Evanstonian, triggering the order received event. The room service manager then creates and forwards an order ticket.  This ticket is then used to initiate parallel processes: preparing the meal in the kitchen, preparing the car by the waiter, and determining the type of beverages desired. If wine is desired, the sommelier fetches wine from the cellar.  If not, the process proceeds to check if other alcoholic beverages are desired.  If other alcoholic beverages are desired, the sommelier prepares them.  If not, the process moves to the next stage.  After fetching the wine, the process also checks if other alcoholic beverages are desired and, if so, the sommelier prepares them. Regardless of the alcoholic beverage choices, the waiter prepares non-alcoholic beverages. Once the meals, car, and all beverages are ready, the waiter delivers the order to the hotel guest. Afterwards, if there are no other orders to process, the waiter debits the customer's account, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meal",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Other orders?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a hotel guest sends an order to the Hotel Evanstonian, where it is received by the room service manager. The room service manager creates and forwards an order ticket.  Then, the meals are prepared by the kitchen, the car is prepared by the waiter, and it is determined whether wine is desired. If wine is desired, the sommelier fetches wine from the cellar.  After fetching the wine, or if wine was not desired, it is determined if other alcoholic beverages are desired.  If other alcoholic beverages are desired, the sommelier prepares them, if not desired, the process goes directly to the next check. Following this step or after the other alcoholic beverages have been prepared by the sommelier, the waiter prepares non-alcoholic beverages.  Once all beverages and meals are prepared, the waiter delivers the desired order to the hotel guest.  Once delivered, it is checked if there are other orders to process. If there are no other orders to process, the waiter debits the customer's account, after which the customer's order is completed and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order to hotel guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Hotel guest sends order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Other orders to process?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Hotel Evanstonian",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id3",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a hotel guest sends an order, which is received by the room service manager of Hotel Evanstonian. The room service manager creates and forwards an order ticket.  Then, the order ticket is split into three parallel flows. In the kitchen, the meals are prepared.  The room service manager also starts preparing the car and asks if wine is desired. If yes, the sommelier fetches wine from the cellar and then checks if other alcoholic beverages are desired.  If other alcoholic beverages are desired, the sommelier prepares them, otherwise they synchronize and join the waiter\u2019s flow. If wine was not desired, the sommelier asks directly if other alcoholic beverages are desired. If other alcoholic beverages are desired, the sommelier prepares them, otherwise they continue to the waiter\u2019s flow.  In parallel to the meals and alcoholic beverages preparation, the waiter prepares non-alcoholic beverages. Once all three parallel flows are complete, the waiter delivers the order to the guest. After the delivery, the waiter checks if there are other orders to process. If there are no other orders to process, the waiter debits the customer's account and the process ends with the completion of the customer's order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order to guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Guest sends order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Other orders to process?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Hotel Evanstonian",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id14",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Hotel Guest",
                        "lanes": []
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id15",
                        "condition": "no"
                    }
                ]
            }
        }
    },
    "53_ground_truth.json": {
        "0": {
            "text": "The process starts when the travel details are fixed.  A roadtrip participant prepares a checklist for preparations, then checks and completes necessary papers. Next, the participant must determine if a visa is required. If a visa is required, the participant applies for one (sending a message to the embassy). Regardless of whether a visa is required or not, the participant clears any unfinished business.  After clearing unfinished business, the participant must determine if any pets need care.  If pets need care, the participant makes arrangements for them and then unsubscribes any postal deliveries, or arranges for a neighbor to collect them.  If no pets need care, the participant unsubscribes postal deliveries or asks a neighbor for help. In parallel to pet care arrangements and post, four other tasks are carried out: the participant gathers travel documents and addresses, buys or lends guidebooks and city maps, prepares a first-aid kit and gets necessary vaccinations. While getting vaccinations, the participant checks insurance coverage and applies for further coverage if necessary (sending a message to the insurance company). Once all of these parallel tasks are complete, the participant makes copies of their ID cards and travel documents, after which the travel preparations are completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear Unfinished Business",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Make Arrangements for Pets",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe Postal Deliveries or Arrange for Neighbor to Collect",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Buy or Lend Guidebooks and City Maps",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Prepare a First-Aid Kit",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Get Necessary Vaccinations",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check Insurance Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Apply for Further Insurance Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Travel Details Fixed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Travel Preparations Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Pets Need Care?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Sufficient Insurance Coverage?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id18",
                        "targetRef": "id20",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id46",
                        "sourceRef": "id3",
                        "targetRef": "Embassy"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "Insurance Company"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when travel details are fixed. The roadtrip participant prepares a checklist for preparations, then checks and completes the necessary papers. Next, it is determined whether a visa is required. If a visa is required, the participant applies for one (sending a message to the embassy).  Regardless of whether a visa is required or not, the participant clears any unfinished business.  Following this, the participant decides whether any pets need care. If so, the participant arranges care for the pets, then unsubscribes any post or asks a neighbor to fetch it. If no pets require care, the participant goes directly to the unsubscribing/neighbor task.  Concurrently, the participant gets the necessary vaccinations (checking insurance coverage and applying for further coverage if necessary - sending a message to the insurance company during the check), buys or lends guidebooks and city maps, and prepares a first-aid kit.  Once the vaccination, guide/map acquisition, and first-aid kit preparation are complete, these activities converge.  Similarly, the pet care and mail activities converge.  Finally, once both converged paths (pet/mail and vaccination/maps/first-aid) are complete, the participant makes copies of ID cards and travel documents. The process ends when travel preparations are completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange Care for Pets",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe Post/Ask Neighbor",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Get Necessary Vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Check Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Apply for Further Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Buy/Lend Guidebooks and City Maps",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Prepare First-Aid Kit",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Travel Details Fixed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Travel Preparations Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Pets Need Care?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Vaccination/Maps/First-Aid Complete?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Pet Care/Mail Complete?",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "name": "All Preparations Complete?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id17",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id19",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id44",
                        "sourceRef": "id3",
                        "targetRef": "embassy"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "insurance_company"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when travel details are fixed. The roadtrip participant prepares a checklist for preparations, then checks and completes necessary papers. Next, it is determined whether a visa is required. If a visa is required, the participant applies for one at the embassy. Regardless of whether a visa is needed, the participant clears unfinished business.  Following this, the process checks if there are any pets to take care of. If so, the participant arranges care for the pets and then unsubscribes post or asks a neighbor to fetch it. If no pet care is needed, the participant moves directly to unsubscribing post or asking a neighbor to fetch it. Concurrently to checking pet care needs, the participant checks insurance coverage and applies for further coverage if necessary, sending a message to their insurance company, gathering travel documents and addresses, buying or lending guidebooks and city maps, and preparing a first-aid kit. These four activities happen in parallel.  Once the necessary vaccination is received, the insurance, documents, guidebooks, and first-aid kit are handled, the participant makes copies of ID cards and travel documents, concluding the process with travel preparations completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear Unfinished Business",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange Care for Pets",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe Post/Ask Neighbor",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Insurance Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Apply for Further Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Buy/Lend Guidebooks and City Maps",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Prepare First-Aid Kit",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Travel Details Fixed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Travel Preparations Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Necessary Vaccination Received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Pets to Take Care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Further Coverage Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id20",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id15",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "InsuranceCompany"
                    }
                ]
            }
        }
    }
}