{
    "2_ground_truth.json": {
        "0": {
            "text": "The process begins when parts are required. A check for parts availability follows. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are out of stock, the requirements are specified and quantified. Then, a purchase order is completed and checked. Next, it is determined whether the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created, after which an order template is created from the purchase order.  The purchase order is then approved.  Receipt of goods follows. If there are delivery problems during the receipt of goods, the order status is adjusted, leading to the process ending as cancelled due to delivery problems. Otherwise, if the receipt of goods is successful, the process ends with the parts procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check Parts Availability",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Retrieve Parts from Storage",
                        "type": "Manual"
                    },
                    {
                        "id": "task3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Complete Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Check Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Create Order Template from Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Create New Vendor",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Approve Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Receipt of Goods",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Adjust Order Status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Parts Required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Parts Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Cancelled due to Delivery Problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Parts Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Delivery Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parts in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Vendor Known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Delivery Problems?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "No"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task7",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task6",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task9",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway3",
                        "targetRef": "event4",
                        "condition": "No"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "task10",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "event5",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task10",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when parts are required. A check for parts availability is performed. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are out of stock, the requirements are specified and quantified.  A purchase order is then completed and checked. Next, it is determined whether the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created, after which an order template is created from the purchase order.  The purchase order is then approved.  Receipt of goods follows. If the receipt of goods is successful, the process ends. If a delivery problem occurs during the receipt of goods process, the order status is adjusted, leading to the process ending due to delivery problems.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check Parts Availability",
                        "type": "Task"
                    },
                    {
                        "id": "task2",
                        "name": "Retrieve Parts from Storage",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Specify and Quantify Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task4",
                        "name": "Complete Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task5",
                        "name": "Check Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task6",
                        "name": "Create Order Template from Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Create New Vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task8",
                        "name": "Approve Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task9",
                        "name": "Receipt of Goods",
                        "type": "Task"
                    },
                    {
                        "id": "task10",
                        "name": "Adjust Order Status",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Parts Required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Parts Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Process Ended Successfully",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Process Ended due to Delivery Problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Delivery Problem",
                        "type": "IntermediateErrorEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parts in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Vendor Known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Receipt Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "No"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task7",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task6",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task9",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway3",
                        "targetRef": "event3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "event5",
                        "condition": "No"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "event5",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task10",
                        "targetRef": "event4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when parts are required.  A check for parts in stock follows. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are out of stock, the requirements are specified and quantified.  Then, a purchase order is completed and checked. Next, the process checks if the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a vendor is created, after which an order template is created from the purchase order.  The purchase order is then approved.  Receipt of goods follows. If the receipt of goods is successful, the process ends. If, however, delivery problems occur during the receipt of goods process, the order status is adjusted, leading to the process ending due to cancellation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task_check_stock",
                        "name": "Check Parts in Stock",
                        "type": "Task"
                    },
                    {
                        "id": "task_retrieve_parts",
                        "name": "Retrieve Parts from Storage",
                        "type": "Task"
                    },
                    {
                        "id": "task_specify_requirements",
                        "name": "Specify and Quantify Requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task_complete_purchase_order",
                        "name": "Complete Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task_check_purchase_order",
                        "name": "Check Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task_create_order_template",
                        "name": "Create Order Template",
                        "type": "Task"
                    },
                    {
                        "id": "task_create_vendor",
                        "name": "Create Vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task_approve_purchase_order",
                        "name": "Approve Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "task_receive_goods",
                        "name": "Receipt of Goods",
                        "type": "Task"
                    },
                    {
                        "id": "task_adjust_order_status",
                        "name": "Adjust Order Status",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event_start",
                        "name": "Parts Required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event_parts_retrieved",
                        "name": "Parts Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_process_end",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_delivery_problems",
                        "name": "Delivery Problems",
                        "type": "IntermediateErrorEvent"
                    },
                    {
                        "id": "event_order_cancelled",
                        "name": "Order Cancelled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway_stock_check",
                        "name": "Parts in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_vendor_check",
                        "name": "Vendor Known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_receipt_successful",
                        "name": "Receipt Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_to_check_stock",
                        "sourceRef": "event_start",
                        "targetRef": "task_check_stock"
                    },
                    {
                        "id": "flow_check_stock_to_retrieve_parts",
                        "sourceRef": "task_check_stock",
                        "targetRef": "task_retrieve_parts",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow_retrieve_parts_to_end",
                        "sourceRef": "task_retrieve_parts",
                        "targetRef": "event_parts_retrieved"
                    },
                    {
                        "id": "flow_check_stock_to_specify_requirements",
                        "sourceRef": "task_check_stock",
                        "targetRef": "task_specify_requirements",
                        "condition": "No"
                    },
                    {
                        "id": "flow_specify_to_purchase",
                        "sourceRef": "task_specify_requirements",
                        "targetRef": "task_complete_purchase_order"
                    },
                    {
                        "id": "flow_purchase_to_check",
                        "sourceRef": "task_complete_purchase_order",
                        "targetRef": "task_check_purchase_order"
                    },
                    {
                        "id": "flow_check_to_vendor_check",
                        "sourceRef": "task_check_purchase_order",
                        "targetRef": "gateway_vendor_check"
                    },
                    {
                        "id": "flow_vendor_known_to_create_template",
                        "sourceRef": "gateway_vendor_check",
                        "targetRef": "task_create_order_template",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow_vendor_unknown_to_create_vendor",
                        "sourceRef": "gateway_vendor_check",
                        "targetRef": "task_create_vendor",
                        "condition": "No"
                    },
                    {
                        "id": "flow_create_vendor_to_create_template",
                        "sourceRef": "task_create_vendor",
                        "targetRef": "task_create_order_template"
                    },
                    {
                        "id": "flow_template_to_approve",
                        "sourceRef": "task_create_order_template",
                        "targetRef": "task_approve_purchase_order"
                    },
                    {
                        "id": "flow_approve_to_receive",
                        "sourceRef": "task_approve_purchase_order",
                        "targetRef": "task_receive_goods"
                    },
                    {
                        "id": "flow_receive_to_receipt_check",
                        "sourceRef": "task_receive_goods",
                        "targetRef": "gateway_receipt_successful"
                    },
                    {
                        "id": "flow_receipt_successful_to_end",
                        "sourceRef": "gateway_receipt_successful",
                        "targetRef": "event_process_end",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow_receipt_fail_to_delivery_problems",
                        "sourceRef": "gateway_receipt_successful",
                        "targetRef": "event_delivery_problems",
                        "condition": "No"
                    },
                    {
                        "id": "flow_delivery_problems_to_adjust_status",
                        "sourceRef": "event_delivery_problems",
                        "targetRef": "task_adjust_order_status"
                    },
                    {
                        "id": "flow_adjust_status_to_order_cancelled",
                        "sourceRef": "task_adjust_order_status",
                        "targetRef": "event_order_cancelled"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "64_ground_truth.json": {
        "0": {
            "text": "The process begins with the creation of an application by a loan provider. The loan provider receives the application and controls the document.  Next, a check is performed to see if the application is complete. If the application is complete, the loan provider accepts the paper, and the process ends with completed providing. If the application is incomplete, it is returned to the applicant to complete the missing information.  After the missing information is completed, the loan provider admits the document, and the process ends with finish the providing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and Control Document",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check Application Completeness",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Accept Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Complete Missing Information",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Admit Document",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Completed Providing",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Finish Providing",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Application Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Complete"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the creation of an application by a loan provider. The loan provider receives the application and controls the document.  The loan provider then checks if the application is complete. If the application is complete, the loan provider accepts the paper, and the process ends with the completion of providing. If the application is incomplete, the application is returned to the applicant to complete the missing information. After the missing information is completed, the loan provider admits the document, and the process ends with the finish of the providing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Application Completeness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept Application",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Return Application",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Providing Finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Complete"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the creation of an application by a loan provider. The loan provider receives the application and controls the document.  The loan provider then checks if the application is complete. If the application is complete, the loan provider accepts the paper, and the process ends with completed providing. If the application is incomplete, the application is returned to the applicant to complete the missing information. After completing the missing information, the loan provider admits the document, and the process ends with finish the providing.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create application",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Control document",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Check application",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Accept paper",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Return application",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Complete missing information",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Admit document",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Completed providing",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Finish providing",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "Pool_id1",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "Lane_id1",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Pool_id2",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "Lane_id2",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Complete"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "23_ground_truth.json": {
        "0": {
            "text": "The process begins with entering short-term treatment within the Treatment Chambers. A doctor evaluates the condition of the patient.  Next, a technician tests the patient in the laboratory.  The doctor then treats the patient and prescribes medicines. Finally, the prescription is delivered, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter short-term treatment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Test patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Treat patient and prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient enters short-term treatment at the Treatment Chambers. A doctor evaluates the condition of the patient.  Next, a technician tests the patient in the laboratory.  The doctor then treats the patient and prescribes medicines. Finally, the prescription is delivered, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Test patient",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient and prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Treatment Chambers",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id9",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with entering short-term treatment at the Treatment Chambers. A doctor evaluates the condition of the patient. Then, a technician tests the patient in the laboratory.  The doctor then treats the patient and prescribes medicines. Finally, the prescription is delivered, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Test patient",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient and prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Enter short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Treatment Chambers",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id9",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "30_ground_truth.json": {
        "0": {
            "text": "The process can start in two ways. One way is when the timer event \"Register time\" triggers for the Request Assistant, after which a request is registered.  Alternatively, a client can enter the store with the intent of a new service, and look for a specific service. From this point on, the process is identical, regardless of the starting point. After looking for the service in question, the client decides if they need to take a ticket. If a ticket is necessary and taken physically within the store, the client waits for their turn.  If the ticket is obtained via the app, the client chooses the requested service and then waits for their turn. While the client is waiting, an intermediate timer event \"waiting time\" occurs, after which the client looks for the product and specific criteria they need. Regardless of whether a ticket was necessary, the client now asks for a specific request. This request is sent to the request assistant, who registers it.  The request assistant then checks if there are enough requests to respond to customer demand. If yes, the order request document is sent to the Shop Assistants' Team; if not, the request is registered again. The Shop Assistants' Team prepare the order once the request is received.  Once the preparation is finished, the Shop Assistants' Team deliver the order.  If the client receives the order and has no further service requests, the process ends for the client. The client then collects the order, decides if they have a new service request and the process ends. If there is a new request they look for another specific service and the process repeats accordingly. For the request assistant, after the \"send order request document\" activity is performed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Look for specific service",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Take a ticket (physical)",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Choose requested service",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Look for product and criteria",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Register Request",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Collect Order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Register time",
                        "type": "TimerIntermediateEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Client enters store",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Waiting time",
                        "type": "TimerIntermediateEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Need Ticket?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Ticket obtained via app?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "New service request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id22",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Client Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id12",
                                    "id14",
                                    "id16",
                                    "id18",
                                    "id19",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Request Assistant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id8",
                                    "id9",
                                    "id13",
                                    "id17",
                                    "id20"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Shop Assistants' Lane",
                                "elemRefs": [
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id21",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process can start in two ways. The first way is when a client enters the store. The client then looks for a specific service.  Next, the client decides if they need to take a ticket. If the client chooses to take a ticket, the client chooses between using the app or waiting physically in line. If the client chooses the app, the client will choose their desired service and wait for their turn. If the client waits physically, the client waits for their turn. Whether or not the client uses the app or waits physically, once it is their turn, the client looks for the product that meets their specific criteria, checks how many tickets are ahead, and then waits until their turn again.  When their turn arrives, they collect their order, and after receiving the order, the client decides if they have a new request. If they do have a new request, the client looks for a specific service, repeating the process from that point. If the client does not have a new request, the process ends. The second way to start the process is with an order description, which is sent to the Shop Assistants' Team. The Shop Assistants' Team prepares the order. After preparing the order, the Shop Assistants' Team delivers the order and the process ends for them. Simultaneously, when a request assistant registers time, the request assistant registers the request and checks if there are enough requests to respond to customer demand. If there are enough requests, the request assistant sends the order request document to the Shop Assistants' Team. The request assistant sends the order request document. This is received as an order description at the shop assistants' team and triggers the process as described above. If there are not enough requests, the request registers the request and checks again until there are enough requests. Regardless of whether there are enough requests, when registration time is over for the request assistant, the process ends for them.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Look for a specific service",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Choose desired service in app",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Wait for turn (app)",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Wait physically in line",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Look for product meeting criteria",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Check tickets ahead",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Collect order",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Prepare order",
                        "type": "Manual"
                    },
                    {
                        "id": "task10",
                        "name": "Deliver order",
                        "type": "Manual"
                    },
                    {
                        "id": "task11",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Check if enough requests",
                        "type": "User"
                    },
                    {
                        "id": "task13",
                        "name": "Send order request document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Client enters store",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Order description received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "event3",
                        "name": "No new request",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Registration time over",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Request assistant registers time",
                        "type": "StartTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Need to take a ticket?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "App or physical line?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "New request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Client Actions",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "task5",
                                    "task6",
                                    "task7",
                                    "task8",
                                    "event1",
                                    "gateway1",
                                    "gateway2",
                                    "gateway3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Order Fulfillment",
                                "elemRefs": [
                                    "task9",
                                    "task10",
                                    "event2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Request Management",
                                "elemRefs": [
                                    "task11",
                                    "task12",
                                    "task13",
                                    "event4",
                                    "event5",
                                    "gateway4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway2",
                        "targetRef": "task2",
                        "condition": "App"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "task4",
                        "condition": "Physical Line"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task8",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway3",
                        "targetRef": "task1",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway3",
                        "targetRef": "event3",
                        "condition": "No"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "event2",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task10",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "event5",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "task11",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task12",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "gateway4",
                        "targetRef": "task13",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "task13",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "gateway4",
                        "targetRef": "task11",
                        "condition": "No"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "gateway1",
                        "targetRef": "task5",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process can start in two ways.  One way is when the timer for registering starts within the Request Assistant. In this case, the request is registered and then it is checked if there are enough requests to respond to customer demand. If there are enough requests, an order request document is sent to the Shop Assistants' Team.  The Shop Assistants' Team prepares the order. Once sent, the process ends for the Request Assistant. If there aren't enough requests, the process loops back to register the request.  The other way to start is when a client enters the store. The client looks for a specific service and then decides whether to take a physical or app ticket. If they take a physical ticket, the client waits for their turn, then asks for a specific request. This request is sent to the Request Assistant. If the client chooses the app, they choose a service and wait. After waiting, the client looks for the product and specific criteria, checks how many tickets are ahead, and then waits in line. Regardless of how the ticket was taken, once the client collects their order, which was delivered by the Shop Assistants' Team, they decide whether or not to make a new request. If not, the process ends for the Client. If so, the client looks for a specific service, and the process continues as described earlier.  When the Shop Assistants' Team receives an order request document from the Request Assistant or an order description message from a Client, they prepare the order, deliver the order to the client, and the process ends for the Shop Assistants' Team.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Register Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Enough Requests",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order Request Document",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Look for Specific Service",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Decide on Ticket Type",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Take Physical Ticket",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for Turn",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Ask for Specific Request",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Order Description Message",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Choose Service (App)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait (App)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Look for Product and Criteria",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Check Tickets Ahead",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Wait in Line",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Collect Order",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Decide on New Request",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Deliver Order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Timer Starts",
                        "type": "StartTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Client Enters Store",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Process Ends (Request Assistant)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Process Ends (Client)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Process Ends (Shop Assistants)",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Enough Requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Ticket Type?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "New Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Request Assistant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id19",
                                    "id21",
                                    "id24"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Client Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id20",
                                    "id22",
                                    "id25",
                                    "id26"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Shop Assistants Lane",
                                "elemRefs": [
                                    "id4",
                                    "id18",
                                    "id23"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id16"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id2",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id24",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id24",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id6",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id25",
                        "targetRef": "id7",
                        "condition": "Physical"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "App"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id17",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id26",
                        "targetRef": "id22",
                        "condition": "No"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id26",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id4",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id18",
                        "targetRef": "id23"
                    }
                ]
            }
        }
    },
    "10_ground_truth.json": {
        "0": {
            "text": "The Request Fulfillment process starts with sending the order for request handling to the Incident Manager. The order is then received by 1st Level Support who logs and categorizes the request. Next, the request is checked for authorization. If authorized, the process splits into two parallel paths.  In one path, request monitoring and escalation are handled by the Incident Manager and 1st Level Support.  In the other path, the request model is executed by the Service Request Fulfillment Group and 1st Level Support.  These paths converge, after which the request closure and evaluation is performed by 1st Level Support. Following this, it is determined whether there was a problem with request processing or the request record. If no problem is found, the request proceeds to Request Fulfilment Support by the Incident Manager and the process ends successfully. If a problem was encountered, the process ends with contacting the incident manager about the problem. If the request was not authorized, the Incident Manager verifies the request.  After verification, the request is sent back for request handling, restarting that portion of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Request Authorization",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Execute Request Model",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Fulfilment Support",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Contact Incident Manager about Problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Request Fulfilled Successfully",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem with Request Processing",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Incident Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager Lane",
                                "elemRefs": [
                                    "id9",
                                    "id6",
                                    "id8",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "1st Level Support",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "1st Level Support Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Service Request Fulfillment Group",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The request fulfillment process starts with the incident manager sending the order for request handling to 1st level support, who receives the order.  1st level support then logs and categorizes the request and checks if the request is authorized. If the request is not authorized, the incident manager verifies the request and sends it back for handling. This loop continues until the request is authorized.  Once authorized, the process splits into two parallel paths. In one path, request monitoring and escalation are handled by the incident manager and 1st level support.  In the other path, the request model is executed by the service request fulfillment group and 1st level support.  After both parallel paths are complete, they merge.  1st level support then performs request closure and evaluation and determines if there was a problem with the request processing or the request record. If there was a problem, 1st level support contacts the incident manager about the problem, ending the process.  If there was no problem, the request fulfillment support is performed by the incident manager, and the process ends successfully.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Request Authorization",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Execute Request Model",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Contact Incident Manager about Problem",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Perform Request Fulfillment Support",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Request Handled with Problem",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Request Fulfilled Successfully",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Incident Manager",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "1st Level Support",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "1st Level Support Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Service Request Fulfillment Group",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group Lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The Request Fulfillment process starts with the Incident Manager sending the order for request handling to 1st Level Support, who receives the order. The 1st Level Support then logs and categorizes the request and checks if the request is authorized. If the request is not authorized, the Incident Manager verifies the request, and it loops back to sending the order again, to be handled by 1st Level Support. If the request is authorized, it is split into two parallel paths. In one path, the Request Monitoring and Escalation is handled by the Incident Manager and 1st Level Support. In the other path, Request Model Execution is handled by the Service Request Fulfillment Group and 1st Level Support.  Both paths then converge. 1st Level Support proceeds with Request Closure and Evaluation, after which there is an evaluation whether there was a problem with the request processing or the Request Record. If there was a problem, the process ends, and the 1st Level Support contacts the incident manager about the problem. If there was no problem, the Request Fulfillment Support is done by the Incident Manager and the process ends successfully.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if Request is Authorized",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Problem with Request",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Request Fulfilled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Problem with Request or Record?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Incident Manager",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Incident Manager Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "1st Level Support",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "1st Level Support Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Service Request Fulfillment Group",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Service Request Fulfillment Group Lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "14_ground_truth.json": {
        "0": {
            "text": "The process starts with the seller displaying items on the webpage. A buyer can then purchase the item, which triggers the seller to receive the buyer's order. The seller then sends an order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company gets the item and can either deliver the item to the customer on time or not deliver the purchase.  If the item is delivered on time, eBay tracks the order and the process ends with the buyer closing the order. If the company does not deliver the purchase, the buyer can either ask for money reimbursement or ask for reshipment of the item. If the buyer asks for money reimbursement, the seller receives the buyer's decision and reimburses the money, after which, the process ends with the purchase not being continued. If the buyer asks for reshipment, this restarts the flow with the seller receiving an order and proceeds along the same path.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display Items on Webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Buyer's Order",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send Order Purchase Confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send Order to Shipping Company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Get Item",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver Item to Customer",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Track Order",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Close Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask for Money Reimbursement",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Ask for Reshipment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive Buyer's Decision",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Reimburse Money",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Purchase Not Continued",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Order Closed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Delivered on Time?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Not Deliver Purchase",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Delivery Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the seller displays items on the webpage.  A buyer can then purchase the item. The buyer's purchase, along with any subsequent requests for reshipment, are collected. Once collected, the seller receives the buyer's order.  The seller then sends the order purchase confirmation to the buyer and sends the order to the shipping company.  The shipping company gets the item and will either deliver the item to the customer on time or will not deliver the purchase. If the item is delivered on time, eBay tracks the order and the process ends with the buyer closing the order.  If the company does not deliver the purchase, the buyer will either ask for money reimbursement or ask for reshipment of the item. If the buyer asks for money reimbursement, the seller receives the buyer's decision and reimburses the money, leading to the purchase not being continued. If the buyer asks for reshipment, the process loops back to the point where the seller receives the buyer's order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display Items on Webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect Purchase and Reshipment Requests",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Receive Buyer's Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Order Purchase Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Order to Shipping Company",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Get Item",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver Item to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Track Order",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Close Order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request Money Reimbursement",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive Buyer's Decision",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Reimburse Money",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Request Reshipment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Purchase Not Continued",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Order Closed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Reimbursement or Reshipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2",
                                    "id10",
                                    "id11",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Reimbursement"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id14",
                        "condition": "Reshipment"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the seller displays items on the webpage.  A buyer can then purchase the item. The buyer's purchase and the seller's display of items converge, after which the seller receives the buyer's order. The seller then sends the order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company gets the item and will either deliver the item to the customer on time or not deliver the purchase. If the shipping company delivers the item to the customer on time, eBay tracks the order and the process ends with the buyer closing the order. However, if the company does not deliver the purchase, the buyer will either ask for money reimbursement or ask for reshipment of the item.  Both of these paths converge, and the seller receives the buyer's decision and reimburses the money, resulting in a non-continued purchase.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display Items on Webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Buyer's Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Order Purchase Confirmation to Buyer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Order to Shipping Company",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Get Item",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver Item to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Track Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Close Order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask for Money Reimbursement",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Ask for Reshipment of Item",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive Buyer's Decision",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Reimburse Money",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Non-Continued Purchase",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Reimbursement or Reshipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "17_ground_truth.json": {
        "0": {
            "text": "The process starts when an email account is needed within the Email Account Creation Portal.  The user logs on to the email provider website and chooses a package.  Next, a check is performed to determine whether a personal account is available. If a personal account is not available, the process ends. If it is available, the user proceeds to the private account welcome page, where personal information is provided.  After this, the user must enter their full name and simultaneously upload a photo ID. Once both actions are completed, the personal data is confirmed.  Finally, a new email ID and password are generated, concluding the process with the successful creation of a private email.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to email provider website and choose package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter full name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Personal account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a new email account is needed. The user logs on to the Email Account Creation Portal website and chooses a package.  Next, it is checked whether a personal account is available. If not, the process ends. If a personal account is available, the user enters the private account welcome page and provides personal information.  Then, in parallel, the user enters their full name and uploads a photo ID. Once both actions are complete, the personal data is confirmed.  A new email ID and password are generated, and finally, the process ends with the creation of the private email.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter private account welcome page",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter full name",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Need new email account",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Personal account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "parallel gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "parallel gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an email account is needed within the Email Account Creation Portal. The user logs on to the email provider website and chooses a package. Next, the process checks if a personal account is available. If not, the process ends. If a personal account is available, the user enters the private account welcome page and provides personal information. Subsequently, the user enters full names and uploads a photo ID, both happening in parallel. Once both actions are complete, personal data is confirmed. A new email ID and password are generated, and the process ends with the private email created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to email provider website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter private account welcome page",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Personal account not available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id_gw1",
                        "name": "Personal Account Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id_gw2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id_gw3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id_gw1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id_gw1",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id_gw1",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id_gw2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id_gw2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id_gw2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id_gw3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id_gw3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id_gw3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "61_ground_truth.json": {
        "0": {
            "text": "The process begins with an application for IMIS.  The first step is to go to the fh-swf website and define search criteria.  In parallel, the applicant selects \"Informatics and Digitalization\" as the subject area, \"Campus Soest\", and also selects the \"Master Study Course\" option.  These selections lead to clicking \"Find a Study Course\" which in turn leads to clicking \"Learn more on IMIS banner\". From there, the applicant clicks \"See how to apply here\". Next, the application procedure is checked. Based on whether the applicant is an EU applicant, the process forks.  If the applicant is not an EU applicant/international applicant, they apply via Uni-Assist and send the required documents to Uni-Assist, which leads to a timer event representing getting a decision within 10-12 weeks.  If they are an EU applicant, they may be an FH-SWF student/graduate. In this case, they apply via the FH-SWF Online Portal and contact the IMIS office. Afterward, a parallel gateway leads to a timer event: \"Get Decision Within 4-6 Weeks\".  If the applicant is not an FH-SWF student/graduate, they apply via the FH-SWF online portal, send the required documents, and contact the IMIS office. This also leads to the \"Get Decision Within 4-6 Weeks\" timer event. Finally, regardless of the applicant type, the process ends with the receipt of an admission/rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define Search Criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Subject Area",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Campus",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Study Course Option",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click 'Learn more on IMIS banner'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Application Procedure",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Required Documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Contact IMIS Office",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Required Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Get Decision Within 10-12 Weeks",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Get Decision Within 4-6 Weeks",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Receipt of Admission/Rejection Letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "EU Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "FH-SWF Student/Graduate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id20",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id20",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id20",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id19",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the application for IMIS. The first step is to go to the fh-swf website and define search criteria.  The undergraduate student selects \"Informatics and Digitalization\" as the subject area, \"Campus Soest\", and their desired study course level (Master). These actions can occur in any order. Once these selections are made, the student clicks \"Find a Study Course,\" then \"Learn more\" on the IMIS banner, and finally \"See how to apply here.\" Next, the application procedure is checked and the applicant is asked if they are an EU applicant. If yes, the applicant can be a current FH-SWF student/graduate or a prospective student from an EU country.  If they are an FH-SWF student/graduate, they should apply via the FH-SWF Online Portal and contact the IMIS office. These two steps can be performed concurrently. The process continues after 4-6 weeks with an intermediate timer event leading to \"Get Decision Within 4-6 Weeks\". If they are a prospective student from an EU country, they apply via the FH-SWF Online Portal and then send their required documents. Afterwards they contact the IMIS office as well. Again the steps happen concurrently after which an intermediate timer event starts and leads to the decision in 4-6 weeks. If the applicant is not an EU applicant, they are considered an international applicant. They apply via Uni-Assist, send the required documents to Uni-Assist, and then after 10-12 weeks, receive the admission/rejection letter.  Regardless of the application route, the process ends with the receipt of the admission or rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define Search Criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Subject Area",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Campus",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Study Course Level",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click 'Learn more'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Application Procedure",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Contact IMIS Office",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Required Documents",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send Required Documents to Uni-Assist",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Get Decision Within 4-6 Weeks",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Receive Admission/Rejection Letter",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Get Decision Within 10-12 Weeks",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "EU Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "FH-SWF Student/Graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id17",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with an application for IMIS. The first step is to go to the fh-swf website and define search criteria. In parallel, the subject area \"Informatics and Digitalization\" and \"Campus Soest\" should be selected. Once both selections are completed, click the button \"Find a Study Course,\" which leads to clicking \"Learn more\" on the IMIS banner. Next, the applicant should select \"Master Study Course\" and click \"See how to apply here.\"  This is followed by checking the application procedure. The process then branches based on whether the applicant is an EU applicant. If yes, the applicant can be a current FH-SWF student/graduate or a prospective student. FH-SWF students/graduates apply via the FH-SWF online portal and then contact the IMIS office. Afterward, there is a parallel split: a timer event starts for 4-6 weeks until a decision is received. Prospective EU applicants, as well as Non-EU/International applicants apply via the FH-SWF online portal or via Uni-Assist respectively. Non-EU applicants will send the required documents to Uni-Assist and subsequently a timer will start for 10-12 weeks waiting for a response. EU applicants send their required documents and contact the IMIS office. In both cases (EU, Non-EU) the process ends when the applicant receives an admission or rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select subject area \"Informatics and Digitalization\"",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select \"Campus Soest\"",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Click \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click \"Learn more\" on IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select \"Master Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via FH-SWF online portal",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send required documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "4-6 weeks",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id16",
                        "name": "10-12 weeks",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Receive admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Current FH-SWF student/graduate?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id20",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id20",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id21",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id19",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "53_ground_truth.json": {
        "0": {
            "text": "The process starts when travel details are fixed. The roadtrip participant prepares a checklist for preparations, then checks and completes necessary papers.  Next, it is determined whether a visa is required. If a visa is required, the participant applies for one (communicating with the embassy). Regardless of whether a visa is required or not, the participant clears unfinished business.  Following this, the participant considers whether pets need care. If yes, the participant arranges care for the pets and then unsubscribes post or asks a neighbour to fetch it. If no, the participant unsubscribes the post or asks the neighbour to retrieve it directly.  Concurrently, after checking and completing the necessary papers, and also after clearing any unfinished business, the participant checks insurance coverage and applies for further coverage if necessary (communicating with the insurance company). Also in parallel, the participant gathers travel documents and addresses, buys or lends guidebooks and city maps, and prepares a first-aid kit.  After gathering the necessary documents and addresses, as well as buying or lending the guidebooks and maps, and also after preparing the first-aid kit, and also after addressing pet care and post if necessary, the participant makes copies of ID cards and travel documents, gets necessary vaccinations, and then the process ends with the travel preparations complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear Unfinished Business",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange Care for Pets",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe Post/Ask Neighbour to Fetch It",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Insurance Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Apply for Further Insurance Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Buy/Lend Guidebooks and City Maps",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Prepare First-Aid Kit",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Get Necessary Vaccinations",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Travel Details Fixed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Pets Need Care?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id20",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id46",
                        "sourceRef": "id3",
                        "targetRef": "id47"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id8",
                        "targetRef": "id49"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when travel details are fixed. The roadtrip participant prepares a check-list for preparations, and checks and completes necessary papers. Next, it is determined whether a visa is required. If a visa is required, the participant applies for one (sending a message to the embassy). Regardless of whether a visa is required or not, the participant clears any unfinished business.  Following this, the participant decides whether any pets need to be taken care of.  If so, the participant arranges care for the pets and unsubscribes from postal services or arranges for neighbors to retrieve mail. If not, the participant unsubscribes from postal services or arranges for neighbors to retrieve mail directly. Concurrently, after checking insurance and potentially contacting the insurance company (sending a message to the insurance company)  and gathering travel documents and addresses, the participant gets necessary vaccinations, buys or lends guidebooks and city maps, and prepares a first-aid kit. Finally, the participant makes copies of ID cards and travel documents, after which the travel preparations are completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare check-list for preparations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check and complete necessary papers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear any unfinished business",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange care for pets",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe from postal services or arrange for neighbors to retrieve mail",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Contact insurance company",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Gather travel documents and addresses",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Get necessary vaccinations",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare first-aid kit",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Travel details fixed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Travel preparations completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Visa required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Pets need to be taken care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Insurance OK?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id20",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id47",
                        "sourceRef": "id3",
                        "targetRef": "Embassy"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id8",
                        "targetRef": "Insurance Company"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when travel details are fixed. The roadtrip participant prepares a check-list for preparations, then checks and completes necessary papers. Next, it is determined whether a visa is required. If a visa is required, the participant applies for one (sending a message to the embassy.) Regardless of whether a visa is required or not, and in parallel to potentially applying for a visa, any unfinished business is cleared.  After clearing unfinished business, the participant decides whether pets need to be taken care of.  If so, the participant arranges care for pets, and afterwards unsubscribes the post or asks a neighbor to fetch it.  In parallel, regardless of pet care arrangements, guidebooks and city maps are bought or lent, the necessary vaccination is received and insurance coverage is checked (sending a message to the insurance company, if necessary). After the necessary vaccination, further insurance coverage is applied for if necessary, leading into the gathering of travel documents and addresses along with preparing a first-aid kit and buying/lending guidebooks and city maps. Copies of ID cards and travel documents are then made. Finally, travel preparations are completed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Check-list",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Papers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Clear Unfinished Business",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Arrange Care for Pets",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Unsubscribe Post / Ask Neighbor",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Buy/Lend Guidebooks and City Maps",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Receive Necessary Vaccination",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Insurance Coverage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for Further Insurance",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare First-Aid Kit",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID and Travel Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Travel Details Fixed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Need Pet Care?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Need more Insurance?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id19",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id20",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id44",
                        "sourceRef": "id3",
                        "targetRef": "Embassy"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "Insurance Company"
                    }
                ]
            }
        }
    },
    "15_ground_truth.json": {
        "0": {
            "text": "The process at Hochschule Mainz starts when a ticket is received by support staff, initiating the \"Solve problems\" process.  The support staff then assesses if customer participation is necessary. If not, the support staff solves the problem without involving the customer. If customer participation is required, the support staff contacts the customer. This is followed by a detailed interview about the problem. Next, the support staff connects to the client of the customer.  After connecting to the client, or solving the issue without customer participation, the support staff works to solve the problem. Following this, if necessary, the support staff will ask for further information and loop back to solving the problem, this can loop until solved. When the problem is solved, the support staff creates notes for documentation. Finally, a confirmation ticket is sent to the customer, indicating the problem has been solved and concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Assess Customer Participation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Solve Problem (No Customer)",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact Customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Detailed Interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Connect to Client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Solve Problem",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for Further Information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create Notes for Documentation",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Confirmation Ticket",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Ticket Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem Solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Customer Participation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Further Info?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Hochschule Mainz",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Support Staff",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process at Hochschule Mainz starts with a support employee receiving a ticket to solve problems. Next, it is evaluated whether customer participation is necessary. If not, the support employee solves the problem without involving the customer. If customer participation is necessary, the support employee contacts the customer. This is followed by a detailed interview on the problem and connecting to the client of the customer. The customer then solves the problem. Independently of the path taken, the next step is to ask for further information. Based on the information received a decision is made whether the problem is solved. If yes, create notes for documentation, send a ticket completed confirmation and the process ends. If not, the customer attempts to solve the problem again in a loop until the problem is solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Solve problem without customer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Detailed interview on the problem",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to the client of the customer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create notes for documentation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send ticket completed confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Receive ticket",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Problem solved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hochschule Mainz",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Support Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Customer",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    }
                ]
            }
        },
        "2": {
            "text": "The process at Hochschule Mainz starts with a support ticket received.  Next, it is determined whether customer participation is necessary. If no, the problem is solved without customer involvement, the problem is marked solved and notes for documentation are created. A ticket completed confirmation is sent and the process ends with the problems being solved.  If customer participation is necessary, the support team contacts the customer. This is followed by a detailed interview about the problem. Next, the support team connects to the client of the customer.  The customer then solves the problem. After the customer solves the problem, support asks for further information. This is followed by a decision point.  If more information is needed, the process loops back to the customer solving the problem. Otherwise, support marks the problem as solved and creates notes for documentation. A ticket completed confirmation is sent, and the process ends with the problems solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Solve problem without customer involvement",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create notes for documentation",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct detailed interview about the problem",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Connect to customer's client",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Solve problem",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for further information",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Mark problem as solved",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Support ticket received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Ticket completed confirmation sent",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "More information needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id11",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "19_ground_truth.json": {
        "0": {
            "text": "The process starts with a risk manager performing a BKR check and, at the same time, performing a Jane Doe check.  Once both checks are completed, the risk manager performs a credibility check. Based on the Credibility Assessment, the process either continues or is rejected. If rejected, the senior risk manager is asked to confirm the credibility check.  If the senior risk manager confirms the rejection (Credibility Assessment rejected), the administrator sends a rejection letter and, once this is sent, the process ends. Alternatively, if the senior risk manager does not confirm the rejection (Credibility Assessment accepted) the process proceeds. Likewise, if the initial credibility check was accepted by the risk manager, the process also proceeds.  This leads to the customer relation department creating a loan offer. The offer is then checked. Next, the loan offer is sent to the client. After sending the loan offer, the process waits for the client to either accept the offer or for one hour to pass.  If after one hour the customer relation department has not received an accepted offer, they will remind the client and resend the offer, again waiting for the client's acceptance or one hour to pass. If the client accepts the loan offer, the administrator sends a welcome letter.  After sending the welcome letter, the finance department activates the loan application. The activation is validated, the initial payment is executed by finance, after which the documents are returned to the client by the administrator. Finally, the process ends. However, if the client does not pick up the documents after being called to complement information, a timer is started for one hour. After this hour has passed, the client is reminded again, and the flow continues as described earlier with sending the loan offer. If the client picks up the complemented documents, a loan offer is created, continuing with the previously described steps.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Remind Client & Resend Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Call to Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Remind and Resend Offer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id20",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Documents Picked Up?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id22",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Credibility Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Confirm Rejection?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id23",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id24",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id23",
                        "targetRef": "id6",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id15",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id21",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id21",
                        "targetRef": "id22",
                        "condition": "no"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id16",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a risk manager performing a BKR check and, concurrently, a Jane Doe check.  If the BKR assessment is accepted, the process continues.  If the Jane Doe assessment is accepted, the process also continues.  When both checks are complete, the risk manager performs a credibility check.  Based on the Credibility Assessment, the process either proceeds to the senior risk manager for confirmation if accepted or to a decision gateway if not. If the credibility check is confirmed by the senior risk manager, the process proceeds to the customer relation department. If the credibility check is rejected by the senior risk manager, the administrator sends a rejection letter to the client and the process ends when the Rejection Letter is sent. The customer relation department creates a loan offer, which is then checked. After checking the loan offer, the customer relation department sends the loan offer to the client. If the client accepts the offer within a given timeframe, the customer relation department sends a welcome letter which then goes to finance to activate the loan application. If the client does not accept the loan offer within one hour, an intermediate timer event is triggered, and the customer relation department reminds the client. The process then loops back to await the client's response, either acceptance or a second timeout. If the client does not react within the second one hour time frame, another intermediate timer event is triggered that leads to the client being called to complement the required information. At this point, the customer relation department again makes a decision depending on whether the client eventually picks up the phone call and sends the complemented information: if picked up, the customer relation department creates a loan offer; if not picked up, the process triggers a reminder after one hour. Regardless of the acceptance or reminders, if the loan offer is received,  the administrator sends a welcome letter. Following this, finance activates the loan application, validates the loan activation and executes the initial payment, upon which the process ends. After the initial payment, the administrator returns the documents to the client, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "task13",
                        "name": "Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "task14",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "task15",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "task16",
                        "name": "Return Documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Client Accepts Offer",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "event3",
                        "name": "1 Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Second 1 Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Client Completes Information",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "event6",
                        "name": "Reminder Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "event7",
                        "name": "Loan Offer Received",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "event8",
                        "name": "Rejection Letter Sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "BKR Assessment Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Jane Doe Assessment Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Credibility Assessment Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Confirmed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway5",
                        "name": "Client Pick Up?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "event1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task3",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task4",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway4",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task5",
                        "targetRef": "event8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task8",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "event2",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "event3",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task11",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "event4",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task12",
                        "targetRef": "gateway5"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "gateway5",
                        "targetRef": "task13"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "task13",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "gateway5",
                        "targetRef": "event6"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "event6",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "task10",
                        "targetRef": "task14"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "task14",
                        "targetRef": "task15"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "task15",
                        "targetRef": "task16"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "task16",
                        "targetRef": "event9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a risk manager performing a BKR check and, concurrently, a Jane Doe check.  After the BKR check, based on the BKR assessment, the process continues. If the BKR assessment is accepted, the process merges with the Jane Doe check at a parallel gateway. Similarly, after the Jane Doe check, based on the EVA assessment, if accepted, the process merges at the same parallel gateway.  After both checks have been performed or deemed acceptable, a credibility check is conducted. Depending on the outcome of the credibility check, the process proceeds. If the credibility assessment is \"accepted\", the check is confirmed by a senior risk manager.  If it is \"rejected\", the senior risk manager can decide whether further information is required. If so, the client is called to complement the information, and subsequently, information can be picked up or not. If information is picked up, a loan offer is created by a customer relation representative. If the information isn't picked up, a timer event starts, and after one hour, the decision point regarding information being picked up is reached again. If the senior risk manager determines that further information is not required, the process follows the \"rejected\" path of the initial credibility check decision. Following the confirmation of the credibility check (in case of \"accepted\"), the administrator sends a welcome letter and activates the loan application, after which the activation is validated. Then, an initial payment is executed, the documents are returned to the client, and the process ends. In the other branch where the credibility check confirmation is \"rejected,\" the administrator sends a rejection letter, and if sent successfully, the process ends. If the initial loan offer is created, it is then checked, after which it is sent to the client. Once sent, it enters a decision gateway where the offer can be either received or not. If the offer is received, a welcome letter is sent to the client by the administrator.  If the offer is not received, a timer is started. After one hour, the customer relation representative reminds the client.  After reminding the client, the offer is sent again, and the same decision gateway is reached again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Call Client to Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Pick up Information",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Validate Activation",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "task13",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "task14",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "task15",
                        "name": "Send Loan Offer to Client",
                        "type": "User"
                    },
                    {
                        "id": "task16",
                        "name": "Remind Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event6",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "BKR Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "EVA Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway4",
                        "name": "Credibility Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway5",
                        "name": "Further Information Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway6",
                        "name": "Information Picked Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway7",
                        "name": "Offer Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "event1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway3",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "gateway3",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway3",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task3",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway4",
                        "targetRef": "task4",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway4",
                        "targetRef": "gateway5",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task4",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway5",
                        "targetRef": "task5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task5",
                        "targetRef": "gateway6"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway6",
                        "targetRef": "task6",
                        "condition": "yes"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway6",
                        "targetRef": "event4",
                        "condition": "no"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "event4",
                        "targetRef": "gateway6"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "gateway5",
                        "targetRef": "task13",
                        "condition": "no"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "task10",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "task11",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "task12",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "task13",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "task7",
                        "targetRef": "task14"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "task14",
                        "targetRef": "task15"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "task15",
                        "targetRef": "gateway7"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "gateway7",
                        "targetRef": "task8",
                        "condition": "received"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "gateway7",
                        "targetRef": "event6",
                        "condition": "not received"
                    },
                    {
                        "id": "flow30",
                        "sourceRef": "event6",
                        "targetRef": "task16"
                    },
                    {
                        "id": "flow31",
                        "sourceRef": "task16",
                        "targetRef": "task15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_ground_truth.json": {
        "0": {
            "text": "The process at ACME AG starts when a need arises for procurement. The first step is to check stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends denoting the work equipment has been removed from the storeroom. If the work equipment is not in stock, the requirements are specified and quantified.  An order is then placed. Following this, an event gateway is used to handle subsequent events. If a \"Receipt of work equipment\" message is received from the supplier, the process continues by checking if all the work equipment has been received. If it has, the process ends, indicating that the work equipment has been procured.  If after placing the order, a 5-day timer expires, the order is placed by email to the supplier.  The supplier then sends a \"Receipt of  work equipment\" message. The process continues by checking if all work equipment has been received. If it has, the process ends, indicating that the work equipment has been procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by Email",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check if All Work Equipment Received",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Need for Procurement",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work Equipment Removed from Storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "5-Day Timer Expires",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Order Events",
                        "type": "EventBased"
                    },
                    {
                        "id": "id14",
                        "name": "All Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "In Stock"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Not in Stock"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a need for work equipment arises at ACME AG. The procurement department checks the stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends. If the work equipment is not in stock, the requirements are specified and quantified, and subsequently an order is placed. After the order is placed, either a \u201creceipt of work equipment\u201d message is received or a 5-day timer expires. If the message is received, the process checks if the work equipment is procured. If the equipment is procured, the process ends. If not, the process ends. If the 5-day timer expires, the order is placed by email to the supplier. When placing the order by e-mail, it will result in message being sent to the supplier. The supplier will return a message with the ordered equipment to ACME AG procurement department. After receiving the \"receipt of work equipment\" message, the process will again check if the work equipment is fully procured and ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check if Work Equipment is Procured",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Place Order by Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Need for Work Equipment Arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work Equipment Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work Equipment Not Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "5-Day Timer Expires",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Stock Check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Procurement Check",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "In Stock"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Not in Stock"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "Procured"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "Not Procured"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process at ACME AG starts when a need for work equipment arises. The procurement department first checks the stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends. If the work equipment is not in stock, the requirements are specified and quantified.  Next, an order is placed. After the order is placed, either a receipt of work equipment is received or a 5-day timer expires. If the receipt of work equipment is received, the process proceeds to check if all work equipment has been received. If a receipt of work equipment is received following an email order, the supplier receives the order by email and sends a receipt to procurement. If 5 days pass after placing an order, the procurement department places an order by email which is received by the supplier. The supplier subsequently sends a receipt for work equipment. Finally, after receiving the work equipment (either directly or after the 5-day timer and subsequent email order), procurement checks for complete receipt of the work equipment, and the process ends with work equipment procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check for Complete Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Place Order by Email",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Need for Work Equipment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work Equipment Retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "5 Days",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "In Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Order Placed?",
                        "type": "EventBasedGateway"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Procurement Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Procurement Staff",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Supplier",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "pool2",
                        "condition": "Email Order"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "pool2",
                        "targetRef": "id10",
                        "condition": "Receipt"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "pool2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "pool2",
                        "targetRef": "id10"
                    }
                ]
            }
        }
    },
    "81_ground_truth.json": {
        "0": {
            "text": "The process starts at Accentis when a sales enquiry request is received from a customer, creating a sales enquiry.  This enquiry can either be for an inbound or outbound customer. If the enquiry is for an outbound customer, a create enquiry task is performed. If the enquiry is for an inbound customer, a create contact task is executed.  Both paths converge to a check for qualified price and interest. If the price and interest are suitable, customer approval is sent to the customer and the process waits for the customer approval to be received. Once the customer approval is received, the process proceeds. If the price is not approved by the customer the enquiry status is updated, ending the process.  If the price is approved, a quote is created, followed by a qualified requirements analysis. After the requirements analysis, the enquiry status is updated and a job is created, finally ending the process with \"Job created\".\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create sales enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create contact",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Check for qualified price and interest",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send customer approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for customer approval",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update enquiry status",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create quote",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Qualified requirements analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Update enquiry status",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Sales enquiry request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Customer approval received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Price not approved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Job created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Price and interest suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with Accentis receiving a sales enquiry request from a customer.  Accentis checks if the enquiry relates to an outbound or inbound customer. For outbound customers, an enquiry is created. For inbound customers, a contact is created. In both cases, the process continues with a qualification check: \"Qualified Price OK and Interest?\". After the qualification, a message with the customer approval is sent to the customer. When customer approval is received, the process checks if the price is approved. If the price is not approved, the enquiry status is updated, leading to the process end with client not approving. If the price is approved, a quote is created. Subsequently, a requirements analysis is performed. Next, the enquiry status is updated, a job is created, and the process ends with job created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Qualification Check: Qualified Price OK and Interest?",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send Customer Approval Message",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Sales Enquiry Request Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Client Not Approving",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Customer Approval Received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Outbound or Inbound Customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with Accentis receiving a sales enquiry request from a customer.  Accentis checks if the enquiry is from an outbound or inbound customer. If it's an outbound customer, an enquiry is created.  If it's an inbound customer, a contact is created. After either creating an enquiry or a contact, a qualification check takes place to determine if the price is okay and there is interest. Accentis sends the customer a notification for approval. The customer can then send their approval.  If the customer does not approve the price, Accentis updates the enquiry status, ending the process. If the customer approves the price, Accentis creates a quote, which leads to a requirements analysis. After the requirements analysis, the enquiry status is updated again, after which a job is created, finally ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Qualification Check",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send Notification for Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receive Sales Enquiry Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Enquiry Status Updated",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Customer Approval",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Outbound or Inbound Customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Customer Approves Price?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Sales Enquiry Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Customer Representative",
                                "elemRefs": [
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ]
            }
        }
    },
    "8_ground_truth.json": {
        "0": {
            "text": "The process starts with a credibility check performed by risk management.  This check is then confirmed by senior risk management. Based on the confirmed credibility assessment, the process branches. If the assessment is rejected, a rejection letter is sent by Administration and the process ends. If the assessment is accepted, customer contact calls the client to complement information.  Simultaneously, risk management performs a BKR check and a Jane Doe check. These two checks are performed in parallel. After all three checks (credibility, BKR and Jane Doe) are completed, the process continues with customer contact creating a loan offer, which is then sent to the client. After sending the loan offer, the process waits for the client to either accept the offer or not. At the same time, a timer is started.  If the client accepts the offer, finance executes the initial payment and then activates the loan application.  Once validated, Administration sends a welcome letter, then finance returns the documents to the client, and the process ends. If the timer runs out (one hour) before the client accepts the offer, customer contact reminds the client. Following the reminder, if the client picks up, the loan offer is created and the process loops back to sending it. If the client does not pick up, another timer is started (one hour). If this second timer expires, the process goes back to calling the client to complement information.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Confirm Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Remind Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Offer Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Loan Application Activated",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Client Accepts Offer",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id17",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Client does not pick up",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Client Picks Up",
                        "type": "IntermediateMessageEventCatching"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Credibility Assessment Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Client Response",
                        "type": "EventBasedGateway"
                    },
                    {
                        "id": "id23",
                        "name": "Client Pick Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id25",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Administration",
                                "elemRefs": [
                                    "id3",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id4",
                                    "id7",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "Finance",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id34",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id7",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id16",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id24",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id22",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id17",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id12",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id23",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id20",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id23",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id19",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id24",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a none start event.  Three checks are performed in parallel by risk management: a credibility check, a BKR check, and a Jane Doe check.  After the credibility check, a confirmation of the check is performed by senior risk management. The results of the three checks and the confirmation are evaluated. If the credibility assessment is rejected, a rejection letter is sent by administration and the process ends. If the credibility assessment is accepted, the customer is contacted by customer contact to complement the information. If the information is picked up, a loan offer is created by customer contact, and subsequently sent. After sending the offer, if the offer is received as accepted by finance, a welcome letter is sent by administration, the loan application is activated, its activation validated, the initial payment is executed, and the documents are returned to the client by administration, after which the process ends. If the information is not picked up, a timer is triggered after one hour. Once the timer elapses, the client is reminded and this triggers to a decision which goes to another event based decision.  After sending the reminder, there's a check if the client picked up the information. If the information is picked up, a loan offer is created and the process continues as described before.  If after one hour again, the information is still not picked up, then the same activities will be performed again.  If the offer is received as accepted, then the process follows as above, or else, the process goes back to the reminder to pick up info after one hour step, again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Credibility Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "BKR Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Jane Doe Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Confirmation of Credibility Check",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate Check Results",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send Rejection Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Contact Customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Create Loan Offer",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Activation",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Remind Client",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "1 hour",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Information Picked Up?",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Offer Accepted?",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Exclusive Gateway 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Exclusive Gateway 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Exclusive Gateway 3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id22",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id22",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id22",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id2",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id23",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id23",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id24",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id24",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id19",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id20",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a credibility check performed by risk management. In parallel, a BKR check and a Jane Doe check are performed. Once all checks are completed, the confirm credibility check task is performed by senior risk management. Based on the Credibility Assessment, the process either continues with sending a rejection letter (if rejected) by Administration, after which the process ends, or if accepted, the customer is contacted to complement information.  If the client picks up, a loan offer is created and sent to the client.  If the client does not pick up, a timer is started. After one hour, the client is reminded, and again, a decision is made whether there was any contact. If the client did not pick up after the reminder, a timer is started. After another hour, and the client still hasn\u2019t picked up, the client is called again. Regardless of when contact is made, if there is contact (client has picked up), the process continues with the creation and sending of the loan offer, from which the process branches based on client response. If there is no client response, an event-based gateway triggers either the process\u2019 end with no acceptance, or a timer which after one hour reminds the client. If the offer is received by finance, the loan application is activated, and activation is validated. Next, initial payment is executed by finance. Documents are then returned by Administration to the client, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "BKR Check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Jane Doe Check",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Contact Customer to Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Call Client Again",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Validate Activation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Return Documents to Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process End - Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "No Acceptance",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process End - Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Client Pick Up?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Client Pick Up After Reminder?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id21",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Client Response?",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id23",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Credibility Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "type": "Parallel"
                    },
                    {
                        "id": "id26",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "type": "EventBased"
                    }
                ],
                "pools": [
                    {
                        "id": "id29",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "id31",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "Administration",
                                "elemRefs": [
                                    "id5",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id34",
                        "name": "Sales",
                        "lanes": [
                            {
                                "id": "id35",
                                "name": "Sales",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id36",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id37",
                                "name": "Finance",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id1",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id2",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id3",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id25",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id24",
                        "targetRef": "id6",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id18",
                        "targetRef": "id19",
                        "condition": "no"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id20",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "no"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id7",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id22",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id28",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id28",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id23",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id22",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ]
            }
        }
    },
    "54_ground_truth.json": {
        "0": {
            "text": "The process starts when someone wants to start a WoW subscription using the online tool for creating characters. The applicant receives a subscription form. The applicant then selects a payment method, either credit card or bank account. If the applicant selects credit card, they enter their credit card information. If the applicant selects bank account, they enter their IBAN and BIC numbers. After entering the payment information (credit card or IBAN/BIC) the applicant submits the information. The online tool activates the WoW subscription, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start WoW subscription process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "WoW subscription activated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Payment Method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id2",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id3",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when someone wants to start a WoW subscription using an online tool for creating characters. The first step is sending a subscription form. Then, the applicant selects a payment method. If the applicant selects \u201ccredit card\u201d, they must enter their credit card information and then submit all information. If the applicant selects \u201cbank account\u201d, they must enter their IBAN and BIC numbers and then submit all information. After submitting the information, the online tool activates the WoW subscription. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when someone wants to start a WoW subscription using the online tool for creating characters. The first step is sending the subscription form.  The applicant then selects the payment method.  If the applicant chooses to pay by credit card, they must enter their credit card information. If they select bank account, the applicant needs to enter their IBAN and BIC numbers. Regardless of which payment method is chosen, the applicant submits the information. The online tool then activates the WoW subscription and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start WoW character creation",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW subscription activated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "68_ground_truth.json": {
        "0": {
            "text": "The process starts when a warehouse supervisor in the FMCG Company requests sample products.  The warehouse supervisor then requests the supplier to provide sample products. The supplier checks stock availability. If the stock is available, the supplier sends the product to the warehouse supervisor and if it isn't, the supplier restocks the inventory, after which the supplier can send the product to the warehouse supervisor. The warehouse supervisor then receives the product and checks the products. Next, the warehouse supervisor checks if the order and physical product match. If they match, the warehouse supervisor sends a payment authorization to the department. If they don't, the warehouse supervisor requests the missing products from the supplier, and after the supplier sends the requested product, the warehouse supervisor will need to check them to see if they match the order. If the sample products provided by the supplier meet the requirements, the warehouse supervisor selects a product and sends a purchase order to the supplier. If they do not, the supplier adjusts product specifications and provides sample products again until they meet the requirements. After receiving the purchase order, the supplier again checks the stock. If available, the supplier then sends the products to the warehouse supervisor and if not, the supplier will need to restock inventory first before sending out the products. After receiving the products and confirming they match the order, the warehouse supervisor sends a payment authorization to the department.  The department processes the payment and notifies the supplier, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request sample products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request sample products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check stock availability",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send product",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Restock inventory",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive product",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check products",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check order and physical product match",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send payment authorization",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request missing products",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send requested product",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check products",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Select product",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Adjust product specifications",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Provide sample products",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Check stock",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Send products",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Restock inventory",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Receive products",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Confirm products match order",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Send payment authorization",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Process payment",
                        "type": "User"
                    },
                    {
                        "id": "id24",
                        "name": "Notify supplier",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id25",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id26",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id27",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Order and product match?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Sample products meet requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id30",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id31",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id20",
                                    "id21",
                                    "id22"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id11",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id35",
                        "name": "Department",
                        "lanes": [
                            {
                                "id": "id36",
                                "name": "Department Staff",
                                "elemRefs": [
                                    "id23",
                                    "id24"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id37",
                        "sourceRef": "id25",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id3",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id27",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id27",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id28",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id9",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id28",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id23",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id24",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id8",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id29",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id29",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id17",
                        "targetRef": "id30"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id30",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id18",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id30",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id19",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id68",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id69",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id70",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a warehouse supervisor in the FMCG Company requests sample products.  The supplier then provides sample products, which are checked by the warehouse supervisor to see if they meet the requirements. If the samples do not meet the requirements, the product specifications are adjusted by the supplier, and the supplier provides sample products again. This loop continues until the samples meet the requirements.  If the samples meet the requirements, the warehouse supervisor selects a product and sends a purchase order to the supplier, then awaits the products. Once received, the warehouse supervisor checks if the received products match the purchase order.  If they do not match, the warehouse supervisor requests the missing products from the supplier and, upon receipt, checks again for a match. This loop continues until the order and physical products match. If the received products match the order, the warehouse supervisor sends a payment authorization to the department. The department then processes the payment and notifies the supplier. The process ends when the supplier is notified. Concurrently, when the initial sample products are requested and sent to the warehouse supervisor, the supplier checks stock availability.  If the stock is available, the supplier sends the product to the FMCG Company.  If the stock is not available, the supplier restocks the inventory, after which available stock can be sent and the process continues.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Provide Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Await Products",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Received Products",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request Missing Products",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Payment Authorization",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process Payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Notify Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Check Stock Availability",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send Product",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Restock Inventory",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Samples meet requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Received products match order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id21",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Department",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Department Staff",
                                "elemRefs": [
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id15",
                        "condition": "No"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id15",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a warehouse supervisor in the FMCG Company receives a request for sample products. The warehouse supervisor then provides the products to the supplier, who checks the stock availability. If the stock is available, the supplier sends the products to the warehouse supervisor and if it is not, the supplier restocks the inventory and requests missing products, which starts the cycle again from checking stock availability. When the warehouse supervisor receives the product, they check whether the product meets the requirements. If it matches, the warehouse supervisor selects a product and sends a purchase order to the supplier and requests missing products which restarts the cycle from checking stock availability. Otherwise, the supervisor contacts the supplier to adjust the product specifications and again sends sample products starting that cycle. Once the supplier receives the purchase order, they send back the product to the warehouse, where it is checked if the physical product matches the order. If the product does not match, the supervisor requests the missing product and it restarts that cycle of requesting and providing products again. However, if the product matches, a payment authorization is sent to the department responsible for processing payments. After the department processes the payment, the supplier is notified, and the process ends with notification.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide sample products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check stock availability",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send products",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Restock inventory and request missing products",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check product requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select product and send purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Contact supplier to adjust product specifications",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send product back to warehouse",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check physical product against order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request missing product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send payment authorization",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Process payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Notify supplier of payment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Receive request for sample products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Supplier notified",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Product meets requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Physical product matches order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id21",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id8",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Payment Processing Department",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Payment Processor",
                                "elemRefs": [
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "63_ground_truth.json": {
        "0": {
            "text": "The process begins when the customer sends a booking request to the Taxi booking process.  The taxi system receives the booking request, and the customer service operator checks the data. If the data is not sent, a cancellation message is sent to the customer, and the process ends. If the data is complete, the customer service operator checks for available cars. If there is no available car in the next 30 minutes, a cancellation message is sent to the customer and the process ends.  If a car is available, the customer service operator displays a list of options to the customer.  The customer service operator then picks the nearest car with the client and calculates the time of arrival. Next, the customer service operator books the taxi. A booking confirmation is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive booking request",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Display list of options",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pick nearest car with client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Calculate time of arrival",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Book taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Booking request sent",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Cancellation message sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Booking confirmation sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Data complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Car available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Customer actions",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Taxi booking process",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the customer sends a booking request, which is received by the taxi system. The customer service operator then checks the data. If the data is not provided, a cancellation message is sent to the customer and the process ends. If the data is complete, the customer service operator checks for available cars. If no cars are available in the next 30 minutes, a cancellation message is sent to the customer and the process ends. If a car is available, the taxi system displays a list of options to the customer service operator who then picks the nearest car with the client. The system calculates the time of arrival, after which the customer service operator books the taxi. Finally, a booking confirmation is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Available Cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick Nearest Car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate Time of Arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Booking Request Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Cancellation Message Sent",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking Confirmation Sent",
                        "type": "EndMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Data Provided?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Car Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the customer sends a booking request which is received by the taxi system.  The customer service operator then checks the data. If the data is not provided, a cancellation message is sent to the customer and the process ends. If the data is provided, the customer service operator checks for available cars. If no car is available in the next 30 minutes, a cancellation message is sent to the customer and the process ends. If a car is available, the customer service operator displays a list of options to the customer. Then the operator picks the nearest car with the client and calculates the time of arrival. Following this, the customer service operator books the taxi. Finally, a booking confirmation is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Display list of options",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pick nearest car",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Calculate time of arrival",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Booking Request",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Cancellation Message Sent",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Booking Confirmation Sent",
                        "type": "EndMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Data Provided?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Car Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "0_ground_truth.json": {
        "0": {
            "text": "The process begins with the applicant submitting an application, which is received by the Human Resources Department of ACME AG.  A receipt confirmation is then sent to the applicant.  Next, the Human Resources Department verifies the applicant.  Based on the verification results, the Head of Human Resources makes a decision to either accept or reject the application. If the application is accepted, an invitation to a job interview is sent to the applicant.  ACME AG then prepares the employment agreement, followed by conducting the job interview.  After the interview, an employment contract is sent to the applicant. The applicant then sends a signed employment contract back to ACME AG, which concludes the process successfully. If the application is rejected after verification, a rejection is sent to the applicant.  This rejection is then communicated to the Human Resources Department, and the process ends with the applicant being rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Submit Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Receipt Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Verify Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare Employment Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Sign Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Signed Contract",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Rejection",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Application Received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Applicant Verified",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process End (Successful)",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process End (Rejected)",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Accept or Reject",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id18",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Human Resources",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Head of HR",
                                "elemRefs": [
                                    "id17"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Management",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Accept"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "Reject"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the applicant submits an application to the ACME AG Human Resources Department.  The Human Resources Department sends a receipt confirmation to the applicant.  Next, the applicant is verified by the Head of Human Resources. Based on the application status, the Head of Human Resources can either accept or reject the applicant. If the applicant is accepted, the Human Resources Department sends an invitation to a job interview to the applicant.  The Human Resources Department then prepares an employment agreement and conducts the job interview.  If the applicant is suitable, the Human Resources Department sends the employment contract to the applicant.  The applicant then sends the signed employment contract back to the Human Resources Department, upon which the process ends. If the applicant is not suitable after the job interview, the Head of Human Resources rejects the applicant. If the Head of Human Resources rejects the applicant based on the application, a rejection is sent to the applicant. Finally, if a rejection is sent, the process ends with the applicant being rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Receipt Confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Job Interview Invitation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Employment Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Signed Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Submit Application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Application Status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id9",
                                    "id7",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "ACME AG Human Resources Department",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Human Resources",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id2",
                                    "id8",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Accept"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Reject"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when an applicant submits an application to the ACME AG's Human Resources Department. The application is confirmed with a receipt confirmation sent back to the applicant.  The Human Resources Department then verifies the applicant. Based on the verification results, the Head of Human Resources either accepts or rejects the application. If the application is accepted, the Human Resources Department invites the applicant for a job interview, sending an invitation to the applicant. After the interview is conducted, the Human Resources Department prepares an employment agreement. Once prepared, the employment contract is sent to the applicant. Upon receiving the signed employment contract from the applicant, the process ends.  If the applicant is rejected, the Head of Human Resources sends a rejection to the applicant. After sending the rejection, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Invite Applicant for Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Employment Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Employment Contract",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Rejection",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Application Submitted",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Send Receipt Confirmation",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Signed Employment Contract",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Send Invitation",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Rejection Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Accept or Reject Application?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id7",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "ACME AG Human Resources Department",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Human Resources Staff",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id12",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "Accept"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Reject"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "22_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient registers in the hospital. The clerk first records the data of each patient. Then, three actions are performed concurrently: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered. Once all three registrations are complete, the clerk prints the referral document. Finally, the clerk archives the record in the file system, after which the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel gateway start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel gateway end",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a patient registers in the hospital. The clerk first records the data of each patient. Then, three actions are performed concurrently: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered.  Once these three registrations are complete, the clerk prints the referral document. Finally, the record is archived in the file system, and the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel gateway start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel gateway end",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a patient registers in the hospital. The clerk first records the data of each patient. Then, the SSN, name, and surname of the patient are registered in parallel. Once all three registrations are complete, the clerk prints the referral document. Finally, the record is archived in the file system, and the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel Registration Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel Registration End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "49_ground_truth.json": {
        "0": {
            "text": "The process starts with the Waiter in the Kitchen. The Waiter sends the order to the Sous Chef.  The customer orders food, which is sent to the Sous Chef as a message. The Sous Chef manages the order of cooking, after which the Chef cooks the food. The Chef then sends the food to the Sous Chef. The Sous Chef checks the food and then calls the waiter to grab it. The Waiter sends the food to the customer which is received as a message.  The customer enjoys the food and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage order of cooking",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Cook food",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check food",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Call waiter",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Customer enjoys food",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Waiter",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Waiter actions",
                                "elemRefs": [
                                    "id9",
                                    "id12",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Kitchen",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Sous Chef actions",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id13"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Chef actions",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Customer actions",
                                "elemRefs": [
                                    "id17",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with the Waiter in the Kitchen and the Customer. The Waiter begins by sending the order to the Sous Chef.  Simultaneously, the Customer orders food, which is sent as a message to the Sous Chef in the Kitchen. The Sous Chef manages the order of cooking and the Chef starts cooking. Once cooking is complete, the Chef sends the food to the Sous Chef who then checks the food.  After checking, the Sous Chef calls the waiter to grab the food. The Waiter sends the food to the customer who then enjoys the food, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage order of cooking",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Cook food",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check food",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to Sous Chef",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Grab food",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send food to Customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Customer enjoys food",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Kitchen",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Chef",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Sous Chef",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Dining Room",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Customer",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with the Waiter in the Kitchen and the Customer. The Waiter waits for an order and the Customer orders food.  The Customer sends the order to the waiter.  The Waiter sends the order to the Sous Chef. The Sous Chef manages the order of cooking and sends it to the Chef. The Chef cooks the food and sends it to the Sous Chef. The Sous Chef checks the food and calls the Waiter to grab the food. The Waiter sends the food to the customer. The customer enjoys the food, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Wait for order",
                        "type": "ReceiveTask"
                    },
                    {
                        "id": "id2",
                        "name": "Order food",
                        "type": "UserTask"
                    },
                    {
                        "id": "id3",
                        "name": "Send order to Sous Chef",
                        "type": "SendTask"
                    },
                    {
                        "id": "id4",
                        "name": "Manage order of cooking",
                        "type": "ManualTask"
                    },
                    {
                        "id": "id5",
                        "name": "Cook food",
                        "type": "ManualTask"
                    },
                    {
                        "id": "id6",
                        "name": "Check food",
                        "type": "ManualTask"
                    },
                    {
                        "id": "id7",
                        "name": "Call Waiter",
                        "type": "SendTask"
                    },
                    {
                        "id": "id8",
                        "name": "Grab food",
                        "type": "ReceiveTask"
                    },
                    {
                        "id": "id9",
                        "name": "Send food to customer",
                        "type": "SendTask"
                    },
                    {
                        "id": "id10",
                        "name": "Enjoy food",
                        "type": "UserTask"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Waiter",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "WaiterLane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "CustomerLane",
                                "elemRefs": [
                                    "id2",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Kitchen",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Sous Chef",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Chef",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ]
            }
        }
    },
    "21_ground_truth.json": {
        "0": {
            "text": "The process starts with a new order at MyMuffin.  The first phase consists of three parallel tasks: preparing the dough, preparing cooking paper, and setting up delivery. Once all three tasks are completed, the process moves to the next phase, preparing muffins. When muffin preparation is complete, cooking begins. After the muffins are cooked, the process splits into two parallel paths: payment and dispatching the muffins.  When both payment and dispatching are complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts at MyMuffin with a new order.  First, the dough, cooking paper, and delivery are prepared concurrently. Once these three tasks are completed, the muffins are prepared and then cooked.  After cooking, the payment and dispatch of the muffins happen at the same time.  Finally, when both the payment and dispatch are complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a new order at MyMuffin.  Phase 1 starts with the parallel tasks of preparing the dough, preparing cooking paper, and setting up delivery. Once these tasks are complete, phase 2 begins with preparing the muffins.  Next, the muffins are cooked. Phase 3 starts with two parallel tasks: payment and dispatching the muffins.  When both payment and dispatch are completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Phase 1 End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Phase 2 End",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Phase 3 End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "72_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient requests to book an appointment. The patient requests an appointment. Then the receptionist receives this request and verifies available dates. If no dates are available within 90 days, the process ends and a rejection message is sent to the patient. If dates are available, the receptionist proposes an appointment to the patient.  The patient checks the appointment information and confirms it. If the patient confirms, they send their personal data to the receptionist. An email with the data is sent to the patient, who then registers the appointment, leading to the process end. However, if the patient does not confirm the appointment details, the patient requests a new appointment and the verification of dates restarts.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Available Dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Propose Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check Appointment Information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Personal Data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Confirmation Email",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Register Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request New Appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Appointment Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Appointment Registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Dates Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Appointment Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "No Dates Available"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Dates Available"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Confirmed"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Not Confirmed"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process \"Oculist Check Appointment\" starts when a patient requests to book an appointment. The patient is then required to describe the reason for their appointment request to the receptionist. The receptionist verifies the dates and checks if there are any available dates within 90 days. If there are no available dates, the patient receives a message rejecting their appointment request, and the process ends. If there are available dates, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient then checks the appointment data and decides whether to confirm it. If the patient does not confirm, they are required to request another appointment, and the process loops back to the beginning. If the patient confirms, they send their personal data to the receptionist. The receptionist sends an email with data to the patient and registers the appointment, after which the process ends with the appointment being done.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe reason for appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates and check availability",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request another appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send personal data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send email with data",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Register appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Request appointment booking",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Appointment request rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process \"Oculist Check Appointment\" starts when a patient wants to start booking an appointment. The patient first requires an appointment. Then the patient sends a message with the problem description requesting an appointment to the receptionist. The receptionist verifies the dates and checks if there are any dates available in 90 days. If there are no available dates, the receptionist sends a reject appointment message back to the patient, ending the process. If there are available dates, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient checks the appointment data. If the patient does not confirm, they will require a new appointment and communicate that to the receptionist as before.  If the patient confirms, they send their personal data to the receptionist. The receptionist receives the patient's data and registers the appointment, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Require an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates and check availability",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Require a new appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send personal data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive patient's data and register appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start booking an appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Appointment registered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Available dates in 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Patient confirms?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ]
            }
        }
    },
    "69_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient shows their Medicare card and prescriptions to the pharmacist.  The pharmacist receives and checks the script details. If the script is not valid, the process ends and the prescription is unfilled. If the script is valid, the pharmacist opens and reviews the patient profile in the Pharmacy information system. The system then displays prescription information. The pharmacist checks if the patient looks suspicous. If yes, the pharmacist contacts the GP to ask for advice. Meanwhile, the patient has the option to show additional documents about their identity. If they do not, the process ends and the prescription is unfilled. If they do provide more information, the pharmacist shows them the actual drug to be dispensed including any allergy information, pregnancy warnings, and warnings based on their past history. The pharmacist asks the patients if they agree with the provided alternatives. If not, the process ends and the prescription is unfilled. If they agree, their decision is confirmed, and the process ends with the prescription being filled. Once the GP replies back to the pharmacist with advice/recommendations, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the prescribed drugs are out of stock, the pharmacist informs the patient about alternatives. If the patient does not agree, the process ends, and the prescription remains unfilled. If the patient agrees, the pharmacist adds a short memo, and prints and attaches labels with CMI. The label is sent to the patient. The pharmacist offers less doze level medicines, and the patient has to agree with this. If the patient does not agree the process ends and the prescription is unfilled. If the patient does agree, the pharmacist will complete medicare costs waivers and calculate total fees in the system. Following this, the print label is sent to the patient. The patient has consultation and receives recommendations, pays the prescription fees, and receives the filled prescription. After payment and handover, the dispensing process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Display prescription information",
                        "type": "Service"
                    },
                    {
                        "id": "task4",
                        "name": "Check if patient looks suspicious",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Show additional documents",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Show drug to be dispensed",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Ask for agreement on alternatives",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Select correct dosage",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "task13",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "task14",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "task15",
                        "name": "Send label to patient",
                        "type": "User"
                    },
                    {
                        "id": "task16",
                        "name": "Offer less doze level medicines",
                        "type": "User"
                    },
                    {
                        "id": "task17",
                        "name": "Complete Medicare costs waivers and calculate fees",
                        "type": "User"
                    },
                    {
                        "id": "task18",
                        "name": "Print label",
                        "type": "User"
                    },
                    {
                        "id": "task19",
                        "name": "Patient consultation and recommendations",
                        "type": "User"
                    },
                    {
                        "id": "task20",
                        "name": "Pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "task21",
                        "name": "Receive filled prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Prescription filled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "GP replies with advice",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Dispensing ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Script valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Patient looks suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Additional documents provided?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "name": "Patient agrees with alternatives?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway5",
                        "name": "Drugs in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway6",
                        "name": "Patient agrees with alternatives?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway7",
                        "name": "Patient agrees with less doze?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task5",
                        "targetRef": "event4"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "gateway3",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task8",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway4",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gateway4",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task9",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "event4",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task10",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "task11",
                        "targetRef": "gateway5"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "gateway5",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "task12",
                        "targetRef": "gateway6"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "gateway6",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "gateway6",
                        "targetRef": "task13"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "task13",
                        "targetRef": "task14"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "task14",
                        "targetRef": "task15"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "task15",
                        "targetRef": "task16"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "task16",
                        "targetRef": "gateway7"
                    },
                    {
                        "id": "flow30",
                        "sourceRef": "gateway7",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow31",
                        "sourceRef": "gateway7",
                        "targetRef": "task17"
                    },
                    {
                        "id": "flow32",
                        "sourceRef": "task17",
                        "targetRef": "task18"
                    },
                    {
                        "id": "flow33",
                        "sourceRef": "task18",
                        "targetRef": "task19"
                    },
                    {
                        "id": "flow34",
                        "sourceRef": "task19",
                        "targetRef": "task20"
                    },
                    {
                        "id": "flow35",
                        "sourceRef": "task20",
                        "targetRef": "task21"
                    },
                    {
                        "id": "flow36",
                        "sourceRef": "task21",
                        "targetRef": "event5"
                    },
                    {
                        "id": "flow37",
                        "sourceRef": "gateway5",
                        "targetRef": "task18"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient shows their Medicare card and prescriptions at NewTown Health Chemist. The patient is asked whether the prescriptions are for themselves. If not, the process ends as prescription unfilled. If the prescriptions are for the patient, they then provide their script details to the pharmacist. The pharmacist receives and checks the script details and asks if it is valid.  If the script is invalid, the process ends and the prescription is unfilled. If the script is valid, the pharmacist opens and reviews the patient's profile in the pharmacy information system. The patient's prescription information is then ready to view in the system. The pharmacist then checks if the patient appears suspicious. If the patient appears suspicious, the pharmacist contacts the patient's GP for advice. The GP then replies to the call or email, providing advice/recommendations to the pharmacist.  Meanwhile, the pharmacist also queries the patient's status, including any allergies, pregnancy, and past history. Based on the patient's status check, if the pharmacist decides to not proceed, they offer alternative medicines to the patient at a lower dose level and the process ends with the prescription going unfilled if the patient does not agree with the alternative. If the patient agrees with the alternative, they go to select the correct prescribed dosage and to check for prescription inventory. Regardless of GP advice or suspicious patient checks, if the status checks pass the prescribed dosage is selected and a prescription inventory check is performed by the pharmacist.  If the required prescription is out of stock, the pharmacist informs the patient about alternatives. If the patient doesn't agree with the alternatives the process ends with the prescription is unfilled.  If the patient agrees with the alternative, the correct prescribed dosage is selected. If the prescription is in stock, the pharmacist proceeds with the order. Next, the pharmacist double checks and collects the correct drugs and then prints and attaches labels with CMI. The printed labels with CMI are then provided to the patient, and the pharmacist consults with the patient about the prescription, including recommendations. After the consultation, Medicare costs, waivers, and total fees are calculated in the system. The patient pays the prescription fees, receives the prescription, and the process ends with the dispensing completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide script details",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Query patient status",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact patient's GP",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reply to call/email",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Offer alternative medicines",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select prescribed dosage",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Double check and collect drugs",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Provide labels and consult",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate costs/fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Show Medicare card and prescriptions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Prescription information ready",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Dispensing completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Prescriptions for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Script valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Proceed with prescription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Agree with alternative?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Prescription in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Agree with alternative?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id21",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id22",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id22",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id23",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id23",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id24",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id7",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id25",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id25",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id24",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id10",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id27",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id27",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id26",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id16",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process at Newtown Health Chemist begins when a patient shows their Medicare card and prescriptions. The patient is then asked if the prescriptions are for themselves. If not, the process ends as a prescription unfilled.  If the prescriptions are for the patient, they are received and checked by the pharmacist. If the script details are invalid, the process ends as a prescription unfilled. If valid, the patient's profile is opened and reviewed in the pharmacy information system, and prescription information becomes ready to view. This is followed by a suspicious patient check. If the patient is deemed suspicious, the pharmacist contacts the GP for advice. The doctor then replies via call or email, providing advice/recommendations to the pharmacist.  The pharmacist then makes a decision and the process ends as a prescription unfilled.  If the patient is not suspicious, the pharmacist checks the patient's status in person, including allergies, pregnancy, and past history. If the status check does not pass, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the required medication is out of stock, the pharmacist informs the patient about alternatives and the process ends with a prescription unfilled. If the patient does not agree, the process ends with a prescription unfilled. If the patient agrees, they are offered alternative medicines with a lower dosage. If the status check passes, the correct prescribed dosage is selected and the prescription inventory is checked.  If the medication is in stock, the pharmacist collects the correct drugs, prints and attaches labels with CMI. After this, there is a consultation and recommendation provided to the patient.  The patient then pays the prescription fees and receives their filled prescription, ending the dispensing process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive and check prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Suspicious patient check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide advice/recommendations",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Make decision",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select correct prescribed dosage",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Offer alternative medicines",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Collect correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Consultation and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Pay prescription fees",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Patient shows Medicare card and prescriptions",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Prescription information ready to view",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Receive filled prescription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Prescriptions for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Script details valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id20",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id20",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id21",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id22",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id23",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id24",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id23",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id24",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id10",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id25",
                        "targetRef": "id17",
                        "condition": "No"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}