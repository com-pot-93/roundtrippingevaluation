{
    "20_ground_truth.json": {
        "0": {
            "text": "The process starts when a customer wants to resolve an issue.  They first contact customer service, then describe the problem.  A service representative identifies the problem and finds a solution, which they then describe to the customer. The customer then tries to fix the problem.  Next, the customer determines if the solution was helpful. If yes, the service representative implements the solution, and the process ends with the problem resolved. If no, the customer requests a new solution and is asked whether this new solution is helpful. If yes, the customer again tries to fix the problem. If no, the service representative suggests further solutions, and the process ends with the problem (hopefully) resolved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Contact Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Describe Problem",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Identify Problem and Find Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Describe Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Fix Problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Implement Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Request New Solution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Suggest Further Solutions",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Customer Wants to Resolve Issue",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Problem Resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Solution Helpful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "New Solution Helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the desire to resolve an issue. The first step is to contact customer service, followed by describing the problem.  Then the problem is identified, and a solution is found, after which the solution is described to the user. The user then attempts to fix the problem and determines if the solution was helpful. If the solution is helpful, the user implements the solution, and the process ends with the problem resolved. If the solution is not helpful, the user requests a new solution.  The user then considers if the new solution is helpful. If yes, the user attempts to fix the problem again. If the new solution is not helpful, further solutions are suggested, and the user attempts to fix the problem once more.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Contact Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Describe Problem",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Identify Problem and Find Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Describe Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Fix Problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Implement Solution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request New Solution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Suggest Further Solutions",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Want to Resolve Issue",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Problem Resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Solution Helpful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "New Solution Helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the desire to resolve an issue. The first step is to contact customer service, followed by describing the problem.  A service representative then identifies the problem and finds a solution, which they describe to the user. The user then attempts to fix the problem and determines if the solution was helpful. If the solution is helpful, the user implements the solution, and the process ends with the problem resolved. If the solution is not helpful, the user requests a new solution.  If this new solution is helpful, the user attempts to fix the problem again. If the new solution is not helpful, the service representative suggests further solutions, and the user attempts to fix the problem based on these suggestions.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Contact Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Describe Problem",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Identify Problem and Find Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Describe Solution",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Fix Problem",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Implement Solution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request New Solution",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Suggest Further Solutions",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Want to Resolve Issue",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Problem Resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Solution Helpful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "New Solution Helpful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "14_ground_truth.json": {
        "0": {
            "text": "The process starts with displaying items on the webpage by the seller.  A buyer can then purchase an item. Upon purchase, the seller sends an order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company staff then gets the item and decides whether the item was delivered. If the item was delivered, the buyer tracks the order, closes the order, and the process ends. If the item was not delivered, the buyer chooses an action: either to reimburse or to reship. If the buyer chooses to reimburse, the seller reimburses the money, which triggers a reimbursement notification, and if the buyer chooses to reship, the seller sends the order to the shipping company again, and the shipping company staff gets the item and makes a decision about delivery again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order purchase confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to shipping company",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Get item and decide",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Track order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send order to shipping company",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start online selling process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Buyer closes order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Money reimbursed",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Item delivered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Choose action",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "eBay Data Stores",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Shipping Staff",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Reimburse"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Reship"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with the start of the online selling process. The seller displays items on a webpage. The buyer then purchases an item. The seller sends an order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company staff gets the item and decides on the next action. If the item is delivered within the proper timeframe, the order is tracked by the seller, and the process ends when the buyer closes the order. If the item is not delivered within the proper timeframe, the buyer decides whether to request a money reimbursement or reshipment of the item. If the buyer chooses money reimbursement, the seller reimburses the money, which triggers a money reimbursement escalation. If the buyer chooses reshipment, the seller sends the order to the shipping company, and the shipping company staff gets the item and decides on the next action, looping back into the delivery check.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order purchase confirmation to buyer",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Get item and decide on action",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Track order",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start online selling process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Buyer closes order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Money reimbursement",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Item delivered in proper dates?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Buyer decision?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "eBay Data Stores",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Shipping Staff",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "Money reimbursement"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "Reshipment of the item"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the seller displaying items on a webpage.  A buyer can then purchase an item. The seller receives the buyer's order and sends a confirmation. The seller then sends the order to the shipping company. The shipping company gets the item and decides on the next action. If the delivery is successful, the eBay system tracks the order, after which the buyer closes the order. If the delivery is not successful, the buyer decides whether they want a reimbursement or reshipment. If the buyer chooses reimbursement, the seller receives the buyer's decision and reimburses the money, and the process ends with the order reimbursed. If the buyer chooses reshipment, the seller sends the order to the shipping company, and the shipping company gets the item and decides on the next action, repeating the delivery check process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order & send confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to shipping company",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Get item & decide action",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Track order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Decide action (reimbursement/reshipment)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Receive buyer's decision & reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send order to shipping company",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start online selling process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Buyer closes order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Order reimbursed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Delivery successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Reimbursement/Reshipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "eBay Data Stores",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "eBay System",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id19",
                                "name": "Buyer Actions",
                                "elemRefs": [
                                    "id2",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Shipping Actions",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "72_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient requests an appointment. The receptionist then verifies the requested dates. Next, the receptionist checks if available dates are within 90 days. If yes, the receptionist makes the appointment and sends a message to the patient, who then checks the appointment data.  The patient then decides whether to confirm the appointment. If the patient confirms, the receptionist registers the appointment, and the process ends with the appointment done. If the patient rejects the appointment, the process loops back to the patient requesting a new appointment. If no dates are available within 90 days, the receptionist sends a rejection message to the patient, and the process ends with the appointment rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request for an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check the appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Register the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send rejection message",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start booking of an appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "no"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when a patient requests an appointment. The receptionist verifies the dates and checks if there are any available within 90 days. If there are available dates, the receptionist makes the appointment. The patient then checks the appointment data and confirms it. If the patient confirms, the receptionist receives an email with the patient's personal data, registers the appointment, and sends an email with the data for the patient. The process ends with the appointment done. If there are no available dates within 90 days, the appointment is rejected. If the patient does not confirm the appointment, the process loops back to the request for an appointment.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request for an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive email with personal data for the patient",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send email with data for patient",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start booking of an appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment Done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Appointment Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id8",
                                    "id10",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a patient wants to start booking an appointment. The patient intiates a request for appointment describing the problem. The receptionist verifies dates for availability within 90 days. If available dates are found, the receptionist makes the appointment. The patient checks the appointment data and confirms the appointment. If confirmed, the receptionist registers the appointment and the process ends. If the patient rejects the appointment, the process loops back to requesting an appointment, describing the problem. If no dates are available within 90 days, the process ends with the appointment being rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request for appointment describing the problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify dates for availability within 90 days",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Register appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start booking",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Require appointment",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "25_ground_truth.json": {
        "0": {
            "text": "The process starts when the SEC approval process is initiated.  Two parallel paths are then followed: the registration report is prepared and simultaneously, a check against Blue-Sky laws is performed. Once both tasks are complete, preparations for determining the issue price begin, while concurrently, the process waits for the company's registration approval.  After the information event is organized, and once the company's registration approval is received, the issue price is decided.  Next, a check is performed to determine if an obligation occurs. If an obligation occurs, a contract is concluded, and subsequently, stock is offered to the public. If no obligation occurs, the process is aborted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare for determining the issue price",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for company's registration approval",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Decide issue price",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if obligation occurs",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer stock to public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SEC approval process started",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Obligation occurs?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the SEC approval process is started.  Two tasks are performed in parallel: preparing a registration report and checking against Blue-Sky laws. Once both tasks are complete, the process continues with preparing for determining the issue price and concurrently waiting for the company's registration approval.  After preparing for the issue price, an information event is organized.  When the information event is finished and the company's registration approval is received, the issue price is decided.  Next, a check is performed to determine if an obligation occurs. If the obligation occurs, a contract is concluded, followed by offering the stock to the public, after which the process ends. If no obligation occurs, the process ends immediately.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare for determining the issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for company's registration approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Decide issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check if obligation occurs",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Offer stock to public",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SEC approval process started",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Obligation occurs?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id11",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the SEC approval process is initiated.  Two parallel paths are then followed: preparing a registration report and checking against Blue-Sky laws. Once both tasks are complete, two further parallel paths commence: preparing for determining the issue price and waiting for the company's registration approval.  After preparing for determining the issue price, an information event is organized.  The issue price is decided after both the information event and the company's registration approval are completed.  Next, a check is performed to see if an obligation occurs. If the obligation occurs, a contract is concluded, and subsequently, stock is offered to the public. If the obligation does not occur, the process is aborted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare registration report",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check against Blue-Sky laws",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare for determining the issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for company's registration approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize information event",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Decide issue price",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check if obligation occurs",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Conclude contract",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Offer stock to public",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SEC approval process started",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process aborted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Obligation occurs?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "43_ground_truth.json": {
        "0": {
            "text": "The process starts when an order is placed. The first step is to issue the order, followed by a feasibility check.  If the order is not feasible, the process ends. If the order is feasible, the process checks if an offer or repeat order is available. If not available, the price calculation is performed, and an offer is created and sent. Then, the process waits for the offer to be accepted. If the offer is not accepted, the customer is informed (no order confirmation), and the process ends. If the offer is accepted, or if an offer/repeat order was available initially, an order is created. The order is then entered into production planning, and an order confirmation is sent, after which the process ends with the dispatch of the order confirmation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Issue Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform Price Calculation",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Create and Send Offer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Create Order",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Enter into Production Planning",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Inform Customer (No Order Confirmation)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send Order Confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Not Feasible",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Offer Accepted?",
                        "type": "IntermediateConditionalEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Dispatch of Order Confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Order Feasible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Offer/Repeat Order Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an order is placed. The order is then issued and its feasibility checked. If the order is not feasible, the process ends and the customer is informed. If the order is feasible, a check is performed to determine if an offer is available or if it is a repeat order. If an offer is not available, the price calculation is performed, and an offer is created and sent. The process then waits for the offer to be accepted. If the offer is not accepted, the customer is informed, and the process ends. If the offer is accepted, or if it was a repeat order, the order is created. The order is then entered into production planning, the order confirmation is sent, and the process ends with the dispatch of the order confirmation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Issue Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform Price Calculation",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Create and Send Offer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Customer (No Order Confirmation)",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Create Order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter into Production Planning",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Order Confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Not Feasible",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Offer Accepted?",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Dispatch of Order Confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Order Feasible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Offer Available or Repeat Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an order is placed. The first step is to issue the order, followed by a feasibility check. If the order is not feasible, the process ends and notification is sent. If the order is feasible, a check is performed to determine if an offer is available or if it is a repeat order. If an offer is available or it's a repeat order, the order is created. Otherwise, the price calculation is performed, followed by the creation and sending of an offer. Subsequently, the process waits for a response to the offer. If the offer is not accepted, the customer is informed, and the process ends. If the offer is accepted, the order is created. Once the order is created, it is entered into production planning. Finally, the order confirmation is sent, which leads to dispatch, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Issue Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Feasibility",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform Price Calculation",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Create and Send Offer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Customer (No Order Confirmation)",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create Order",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Enter into Production Planning",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send Order Confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order Placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Order Not Feasible",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Offer Accepted?",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Dispatch of Order Confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Order Feasible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Offer Available or Repeat Order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_ground_truth.json": {
        "0": {
            "text": "The process starts with a BKR check performed by a risk analyst in Risk Management and simultaneously a Jane Doe check is also performed by the same risk analyst.  Both checks lead to a credibility check, which is confirmed by both the risk analyst and Senior Risk Management. Based on the assessment, the process branches. If the assessment is negative, a rejection event is triggered, leading to a rejection letter being sent by an admin staff member in Administration, after which the process ends. If the assessment is positive, an acceptance event is triggered, and a customer contact agent from Customer Contact calls the client. Based on the call status, the process branches again. If the call is picked up, the customer contact agent creates and sends a loan offer. A timer is then started for 2 hours. Once the timer expires, the customer contact agent reminds the client. If an accepted offer is received, a welcome letter is sent by an admin staff member in Administration.  This is followed by the activation of the loan application and validation of the activation by a finance officer in Finance. The finance officer then executes the initial payment, and finally, the admin staff returns the documents to the client, after which the process ends. If the call is not picked up, the customer contact agent calls the client again, creating a loop until the call is picked up.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Rejected",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Accepted",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Picked up",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id18",
                        "name": "Not picked up",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id19",
                        "name": "2 hours passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Accepted offer received",
                        "type": "IntermediateMessageEventCatching"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Assessment",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Call status",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id25",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Risk analyst",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Admin staff",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Customer contact agent",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "Finance officer",
                                "elemRefs": [
                                    "id9",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id5",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id17",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id22",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with a parallel split of two service tasks: a BKR check performed by a risk analyst in Risk Management and a Jane Doe check, also performed by a risk analyst in Risk Management.  After both checks are completed, they are joined, and the results are passed on to a senior risk manager in Risk Management for credibility confirmation. Based on the assessment outcome, the process either proceeds with rejection or acceptance. If rejected, an admin staff member in Administration sends a rejection letter to the client, and the process ends. If accepted, a customer service representative from Customer Contact calls the client. If the client does not pick up the call, the customer service representative calls again after one hour and checks the outcome again. This loop continues until the client picks up. Once the client picks up the call, the customer service representative creates and sends a loan offer to the client.  After sending the offer, a timer is started for two hours.  If the offer is accepted by the client before the timer runs out, an admin staff member in Administration sends a welcome letter. If the two-hour timer runs out before the client accepts the offer, a customer service representative reminds the client.  This reminder loop can occur multiple times until the client accepts the offer. After the welcome letter is sent, a finance officer in Finance activates the loan application.  The finance officer then validates the activation and executes the initial payment. Finally, an admin staff member in Administration returns the documents to the client, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call client again after one hour",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id17",
                        "name": "2 hours passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Call Picked Up",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Call Not Picked Up",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Client call outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id28",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Risk analyst",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Admin Staff",
                                "elemRefs": [
                                    "id4",
                                    "id9",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id34",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Finance Officer",
                                "elemRefs": [
                                    "id10",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id35",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Client",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id21",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id1",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id20",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id5",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id23",
                        "targetRef": "id19",
                        "condition": "Not picked up"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id23",
                        "targetRef": "id18",
                        "condition": "Picked up"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a BKR check performed by Risk Management and simultaneously a Jane Doe check, also performed by Risk Management.  Once both checks are complete, Senior Risk Management confirms the credibility check.  Based on the assessment outcome, the process branches. If the assessment is rejected, Administration sends a rejection letter, ending the process. If the assessment is accepted, Customer Contact calls the client.  If the call is not picked up, Customer Contact calls the client again after one hour and checks again if the call is picked up. If the call is picked up, Customer Contact creates and sends a loan offer. Two hours after the loan offer is sent, Finance reminds the client.  When an accepted offer is received, Finance sends a welcome letter and simultaneously activates the loan application.  After the welcome letter is sent and the loan application is activated, Finance validates the activation.  Following validation, Finance executes the initial payment. Finally, Administration returns the documents to the client, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call client again after one hour",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Assessment Rejected",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Assessment Accepted",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Call Not Picked Up",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Call Picked Up",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Two Hours Passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Accepted Offer Received",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Assessment outcome?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Call picked up?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id9",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Finance",
                                "elemRefs": [
                                    "id8",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id16",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id17",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id5",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id23",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id18",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id23",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id21",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ]
            }
        }
    },
    "11_ground_truth.json": {
        "0": {
            "text": "The process starts with the program starting in the UI selection.  The program then starts and asks the user if they want to start the tutorial. If yes, the tutorial on controller functions starts, followed by a question about standard key assignment. If no, the standard key assignment is applied. If the user chooses not to use the standard key assignment after the tutorial, or directly after skipping the tutorial, the menu selection is presented.  From the menu, the user can choose to continue, load a saved game, start a new game, or access game settings. If continuing, the game resumes. If loading a saved game, the saved game data is retrieved. If starting a new game, or if the user opted for standard key assignment after the tutorial, ambient noise is generated and background music plays in parallel.  After both are completed, the game loads.  Regardless of the menu selection, the game prompts for user input, after which the game begins.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start Program",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Ask to Start Tutorial",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Start Tutorial on Controller Functions",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Standard Key Assignment",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Continue Game",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Load Saved Game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Start New Game",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Access Game Settings",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Resume Game",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Retrieve Saved Game Data",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Ask to Start with Standard Key Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Generate Ambient Noise",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Play Background Music",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Load Game",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Prompt for User Input",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Program Start in UI Selection",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Game Begins",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Start Tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Menu Selection",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Standard Key Assignment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id20",
                        "targetRef": "id19",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the program starting in the UI selection.  The program starts for the player. The user is then asked if they want a tutorial. If the user answers yes, the tutorial on controller functions starts, followed by a guide through the tutorial. The user is then asked to start the game with the standard key assignment. If the user answers no to the tutorial, the program starts with the standard key assignment. Regardless of whether the tutorial is completed or skipped, the user is then asked if they want to use the standard key assignment. If not, the user is presented with the menu selection and can choose to continue the game, load a saved game, start a new game, or access game settings. If the user chooses to continue, the game resumes. If the user chooses to load a saved game, the saved game data is retrieved. If the user chooses to start a new game or accepts the standard key assignment after the tutorial or initial prompt, the game proceeds to load.  Concurrently, ambient noise is generated and background music plays. Once the ambient noise and background music are loaded, the game loads. Finally, the game prompts for user input, and the game begins.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start Program for Player",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Ask User About Tutorial",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Start Tutorial on Controller Functions",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Continue Game",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Load Saved Game",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Start New Game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Access Game Settings",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Resume Game",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Retrieve Saved Game Data",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Start with standard key assignment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Guide through tutorial",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Ask to Start Game with Standard Key Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Generate Ambient Noise",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Play Background Music",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Load Game",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Prompt for User Input",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Program Start in UI Selection",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Game Begins",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Menu Selection",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Standard Key Assignment?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id19",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id21",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id21",
                        "targetRef": "id22",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id20",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id20",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id22",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the program start in the UI selection. The program then starts and asks the user if they want to start the tutorial. If the user selects \"yes\", the tutorial on controller functions starts, followed by the service guiding the user through the tutorial. After the tutorial, the user is asked if they want to start with the standard key assignment. If the user selects \"yes\", the standard key assignment starts. If the user selects \"no\", the service returns to the menu selection, where the user is again asked to start the tutorial.  If the user initially selects \"no\" to the tutorial, the standard key assignment starts directly. After the standard key assignment, the user is presented with the game start selection, which includes options to continue the game, load a saved game, start a new game, or access game settings. If the user chooses to access game settings, they are returned to the menu selection. If the user chooses to continue the game, the service resumes the game. If the user chooses to load a saved game, the service retrieves the saved game data. If the user chooses to start a new game, no additional service is called before the next step. Regardless of the game start selection (continue, load, or new), the service generates ambient noise and plays background music in parallel. After the audio elements are initiated, the game is loaded, the service prompts for input, the game starts, and finally, the game begins, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start Program",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Ask to Start Tutorial",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Start Standard Key Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Start Tutorial on Controller Functions",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Continue Game",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Load Saved Game",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Start New Game",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Access Game Settings",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Resume Game",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Retrieve Saved Game Data",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Guide Through Tutorial",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Ask to Start with Standard Key Assignment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Return to Menu Selection",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Generate Ambient Noise",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Play Background Music",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Load Game",
                        "type": "Service"
                    },
                    {
                        "id": "id17",
                        "name": "Prompt for Input",
                        "type": "Service"
                    },
                    {
                        "id": "id18",
                        "name": "Start Game",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Program Start in UI Selection",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Game Begins",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Start Tutorial?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Game Start Selection",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Use Standard Keys?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id12",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id23",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id22",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id7",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id24",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id24",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id14",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id15",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id25",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id18",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "39_ground_truth.json": {
        "0": {
            "text": "The SoKnow process begins by securing personnel development needs.  Employee data is then analyzed, after which three parallel paths are followed: checking personnel capacity, determining capacity requirements, and identifying training opportunities. Once all three parallel paths are complete, an employee interview is conducted.  Following the interview, three more parallel paths are initiated: considering training requests, considering improvement suggestions, and allocating training.  These three paths converge and loop back to the parallel gateway if any of the three are still ongoing. Once all three are complete, a discussion with the department head takes place.  Training or continuing education is then organized, the competency profile is updated, and the process ends with personnel development needs secured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Secure personnel development needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze employee data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check personnel capacity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine capacity requirements",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Identify training opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider training request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consider improvement suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Allocate training",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Discuss with department head",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Organize training/continuing education",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update competency profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Personnel Development Needs Secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Gateway 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The SoKnow process begins with securing personnel development needs.  Employee data is then analyzed, after which three parallel paths are followed: checking personnel capacity, determining capacity requirements, and identifying training opportunities. Once all three parallel paths are complete, an employee interview is conducted.  Following the interview, three additional parallel paths are initiated: considering the training request, considering improvement suggestions, and allocating training.  After these parallel paths converge, a discussion with the department head takes place.  Training or continuing education is then organized, and finally, the competency profile is updated, concluding the process with personnel development needs secured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Secure personnel development needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze employee data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check personnel capacity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine capacity requirements",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Identify training opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider training request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consider improvement suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Allocate training",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Discuss with department head",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Organize training/continuing education",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update competency profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Personnel development needs secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id18",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The SoKnow process begins with securing personnel development needs.  Employee data is then analyzed, after which three parallel paths are followed: checking personnel capacity, determining capacity requirements, and identifying training opportunities. Once all three parallel paths are complete, an employee interview is conducted.  Following the interview, three more parallel paths are initiated: considering the training request, considering improvement suggestions, and allocating training.  These three paths converge, and the results are discussed with the department head.  Training or continuing education is then organized. Finally, the competency profile is updated, and the process ends with personnel development needs secured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Secure personnel development needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze employee data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check personnel capacity",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Determine capacity requirements",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Identify training opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct employee interview",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Consider training request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Consider improvement suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Allocate training",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Discuss with department head",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Organize training/continuing education",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Update competency profile",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Personnel development needs secured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Gateway 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "77_ground_truth.json": {
        "0": {
            "text": "The process starts with opening the datasheet.  First, click on \"Start\", then click on \"Format\". Next, select the option \"Show and hide\", followed by clicking on \"Show sheet\". Finally, press the Enter key, after which the datasheet is opened and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on \"Start\"",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Format\"",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select the option \"Show and hide\"",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Click on \"Show sheet\"",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Press the Enter key",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Opening the datasheet",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Datasheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts.  First, click on \"Start\". Then, click on \"Format\". Next, select the option \"Show and hide\". After that, click on \"Show sheet\". Finally, press the Enter key. The process ends with the datasheet opened.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on \"Start\"",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Format\"",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select the option \"Show and hide\"",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Click on \"Show sheet\"",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Press the Enter key",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Datasheet opened",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts.  First, click on \"Start\". Then, click on \"Format\". Next, select the option \"Show and hide\". After that, click on \"Show sheet\". Finally, press the Enter key. The process ends with the datasheet opened.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Click on \"Start\"",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Format\"",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select the option \"Show and hide\"",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Click on \"Show sheet\"",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Press the Enter key",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Datasheet opened",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "21_ground_truth.json": {
        "0": {
            "text": "The process starts when an order is received.  Three parallel tasks are then initiated: preparing the dough, setting up the delivery, and preparing the cooking paper. Once all three tasks are completed, the muffins are prepared.  Next, the muffins are cooked.  After cooking, two parallel tasks begin: initiating the payment process and dispatching the muffins.  Finally, after both of these tasks are finished, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate Payment Process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Phase 1 Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Phase 1 End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Phase 3 Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Phase 3 End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a new order is received. Three parallel paths are initiated: preparing the dough, setting up the delivery, and preparing the cooking paper. Once all three tasks are completed, the muffins are prepared.  Next, the muffins are cooked.  After cooking, two parallel paths begin: initiating the payment process and dispatching the muffins.  Finally, after both the payment process is initiated and the muffins are dispatched, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate Payment Process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Gateway Start Phase 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Gateway End Phase 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a new order is received. Three parallel paths are then initiated. The first path is to prepare the dough, the second is to set up the delivery, and the third is to prepare the cooking paper. Once all three parallel paths are completed, the muffins are prepared.  Next, the muffins are cooked. After the muffins are cooked, two parallel paths are initiated: initiating the payment process and dispatching the muffins. Once both of these parallel paths are completed, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate Payment Process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Start Phase 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel End Phase 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Start Phase 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel End Phase 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "47_ground_truth.json": {
        "0": {
            "text": "The process starts with the definition of requirements.  Next, licenses are selected, and the system execution is checked.  If the system executed successfully, the license is purchased. If not, a test license is purchased.  In either case, framework contracts are then agreed upon, and a license purchase agreement is created.  The next step provides license purchase contract data.  Following this, the contract information is updated and an order is placed. These two actions happen in parallel. Once both tasks are complete, final acceptance of the delivery takes place, and framework agreements are reviewed.  The system is then updated. Finally, the license is purchased, payment is executed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Licenses",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check System Execution",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Purchase License",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Purchase Test License",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Agree Framework Contracts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create License Purchase Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Provide License Purchase Contract Data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Update Contract Information",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Place Order",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Final Acceptance of Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Review Framework Agreements",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Update System",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Forward Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Execute Payment",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "License Purchased and Payment Executed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "System Executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with defining requirements, followed by selecting licenses. Then, a check of the system execution takes place. If the system is executed, the process continues with purchasing the license. If the system is not executed, a test license is purchased.  In both cases, the next step is to agree on framework contracts. Subsequently, a license purchase agreement is created, and the license purchase contract data is provided.  At this point, the process splits into three parallel paths. The first path updates the contract information and places the order. The second path reviews the framework agreements and updates the system. The third path forwards the payment and executes it.  After all parallel paths are completed, they converge. The final step is the final acceptance of delivery, after which the process ends with the license purchased and payment executed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Licenses",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check System Execution",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Purchase License",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Purchase Test License",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Agree Framework Contracts",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Create License Purchase Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Provide License Purchase Contract Data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Update Contract Information",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Place Order",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Final Acceptance of Delivery",
                        "type": "Manual"
                    },
                    {
                        "id": "id12",
                        "name": "Review Framework Agreements",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Update System",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Forward Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Execute Payment",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "License Purchased and Payment Executed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "System Executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the definition of requirements.  Next, licenses are selected, and system execution is checked.  If the system is executed, the process proceeds to purchase a license; otherwise, a test license is purchased.  After either license purchase, two parallel paths are followed: one involves agreeing on framework contracts and creating a license purchase agreement, while the other provides license purchase contract data and updates contract information.  These parallel paths converge, and an order is placed.  After the order is placed, two more parallel paths begin: one for final acceptance of delivery and review of framework agreements, and the other for forwarding and executing payment.  The process ends when the system is updated and the payment is executed, signifying that the license has been purchased and payment has been completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Licenses",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check System Execution",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Purchase License",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Purchase Test License",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Agree Framework Contracts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create License Purchase Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Provide License Purchase Contract Data",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Update Contract Information",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Place Order",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Final Acceptance of Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Review Framework Agreements",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Update System",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Forward Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Execute Payment",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "License Purchased and Payment Executed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "System Executed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "15_ground_truth.json": {
        "0": {
            "text": "The process starts when a request is received. The first step is to receive the ticket. Next, a decision is made whether customer participation is required. If customer participation is required, the customer is contacted, followed by a detailed interview. Subsequently, a connection to the client is established, and the problem is solved together.  After solving the problem together, it is checked if further information is needed. If further information is needed, it is requested, and the process loops back to solving the problem together. If no further information is needed, notes are created. If customer participation is not required, the problem is solved by support, and then notes are created. Finally, a confirmation is sent, and the process ends with the problem being solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request further information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem (support)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Customer participation required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Further information needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a request is received. The first step is to receive the ticket. Next, it is determined whether customer participation is necessary. If customer participation is necessary, the customer is contacted, followed by a detailed interview about the problem. Subsequently, a connection to the client of the customer is established, and the problem is solved together.  If further information is needed, it is requested, and the problem-solving continues. Once the problem is solved, notes for documentation are created. If customer participation is not necessary, the problem is solved directly. Regardless of customer participation, after creating the documentation notes, a confirmation of ticket completion is sent, and the process ends with the problem being marked as solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview on the problem",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client of customer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes for documentation",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation of ticket completion",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Solve problem",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a request received by the Hochschule Mainz Support staff. The support staff receives the ticket and checks whether customer participation is necessary. If so, the support staff contacts the customer, conducts a detailed interview on the problem, connects to the client of the customer, and solves the problem together.  The customer may be asked for further information, and this exchange can happen multiple times. Once the problem is solved, the support staff creates notes for documentation and sends a confirmation of ticket completion. If customer participation is not necessary, the support staff solves the problem without the customer, creates notes for documentation, and sends a confirmation of ticket completion, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview on the problem",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client of the customer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes for documentation",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation of ticket completion",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Solve problem (without customer)",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Hochschule Mainz Support",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Support Staff",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Customer",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ]
            }
        }
    },
    "73_ground_truth.json": {
        "0": {
            "text": "The process starts when a user comes to the library.  The user then logs in and determines their request.  If the user wants to extend a media loan, the process checks if it is extendable. If yes, the media is extended, and the process ends with a confirmation. If not, the medium is returned, and the process ends. If the user wants to borrow a medium, the desired medium is selected, and the system searches for it in the database. If the medium is available, the user is identified, the medium is lent out, and the lending process is completed. If the medium is not available, the process checks if the user is from HTW. If not, a message is sent to the external user, and the process ends. If the user is from HTW, the process checks if a loan can be confirmed. If yes, a reservation is started, and the process ends. If not, the lending process is aborted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log In",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Extend media process",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Return medium",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select desired medium",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Search medium in database",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Identify User",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Lend medium",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send message to external user",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Start reservation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Abort lending process",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "User comes to library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Media extended confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Lending completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "User request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Extendable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Medium available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "User from HTW?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Loan confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Extend Media"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Borrow a medium"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "Reserve"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a user comes to the library. The user logs in, and their request is determined.  If the user wants to extend media, the process checks if the media is extendable. If yes, the media is extended and the process ends. If not, the medium is returned, and the process ends. If the user wants to borrow a medium, they select the desired medium, and the system searches for it in the database. If the medium is available, the user is identified, the medium is lent, and the process ends. If the medium is not available, a message is sent to the library user, and the process waits for a loan confirmation. If the loan is confirmed, the reservation process starts, and the process ends. If the loan is rejected, the process also ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log In",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine User's Request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Initiate Process for Extending Media",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Desired Medium",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Search Medium in Database",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Identify User",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Lend Medium",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Message to Library User",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Start Reservation Process",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "User Comes to Library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Media Extended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Medium Returned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Loan Confirmed",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id16",
                        "name": "Loan Rejected",
                        "type": "IntermediateMessageEventCatching"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "User Request Type",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Extendable",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Medium Available",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Loan Confirmation",
                        "type": "EventBasedGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Extend Media"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "Borrow a Medium"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Available"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "Not Available"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id20",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id16",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a user comes to the library. The user then logs in and their request is determined. If the user wants to extend media, the process for extending media is initiated. If it is possible to extend the media, the process ends with the media extended. If it is not possible, the process ends with the medium returned. If the user's request is to borrow a medium, they select the desired medium. The system then searches for the medium in the database. If the medium is available, the user is identified, the medium is lent to them, and the loan process ends. If the medium is not available, a message is sent to the user (if they are not a HTW library user), and they are asked if they want to reserve the medium. If the user wants to reserve the medium, and the loan is confirmed, the reservation process is started, and the process ends. If the loan is not confirmed, or the user does not want to reserve the medium, the lending process is aborted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log in user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine user's request",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Initiate process for extending media",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Select desired medium",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Search medium in database",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Identify user",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Lend medium",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send message to non-HTW library user",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Start reservation process",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Abort lending process",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "User comes to library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Media extended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Medium returned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Loan process ended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "User request",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Extend media possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Medium available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "User wants to reserve?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Loan confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Extend media"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "Borrow a medium"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "24_ground_truth.json": {
        "0": {
            "text": "The process starts when the website is outdated. The marketing department analyzes the current content.  The development department then reviews the content. Subsequently, the development department designs new content and updates existing content, and the marketing department evaluates the content. These two tasks happen in parallel. The development department then permanently updates the content, after which the process ends with the website being up-to-date.  If the content evaluation by marketing is negative, the development department reviews the content again. If the content evaluation is positive, the process ends, indicating that the website currently needs no improvements.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Design new content and update existing content",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Permanently update content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate content",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Website outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Website up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Website currently needs no improvements",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Content positively evaluated?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Marketing Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Marketing",
                                "elemRefs": [
                                    "id1",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Development Department",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Development",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Management",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Management",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the marketing department notices that the website is outdated. The marketing team analyzes the current content and sends it to the development department for review.  After the review, the development department and the marketing team work in parallel. The development department designs new content and updates existing content, then permanently updates the content, after which the website is deemed up-to-date. Concurrently, the marketing team evaluates the content. If the evaluation is negative, the content is sent back to the development department for review. If the evaluation is positive, the process ends, and the website is considered as needing no further improvements.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review current content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Design new content and update existing content",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Permanently update content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate content",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Website outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Website up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Website currently needs no improvements",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Content Evaluation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Marketing Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Marketing",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Development Department",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Development",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Management",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Management",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Negative"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "Positive"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the marketing department notices that the website is outdated. The marketing team analyzes the current content and sends it to the development department for review.  The development department reviews the content.  In parallel, the development department designs new content and updates existing content, while simultaneously the marketing team evaluates the content.  After the new content is designed and existing content updated, the development department permanently updates the content, after which the website is deemed up-to-date and the process ends.  If the marketing team's evaluation reveals that the website currently needs no improvements, the process ends. Otherwise, the content is sent back to the development department for another review, and the process loops back to the parallel tasks of content design/update and evaluation.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze current content",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review content",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Design new content and update existing content",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Permanently update content",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate content",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Website outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Website up-to-date",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Website currently needs no improvements",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Content Evaluation?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Marketing Department",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Marketing",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Development Department",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Development",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Management",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": []
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "condition": "no",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_ground_truth.json": {
        "0": {
            "text": "The process begins with the opening of the application process by the Student. The Student then conducts the application. The Department of Admission and Enrollment accepts the application and provides applicant files. The WI Selection Committee checks the eligibility of the applicants. The Department of Admission and Enrollment evaluates the results of the admission test and selects applicants. The Student accepts admission. The Department of Admission and Enrollment enrolls students and sends enrollment documents. Finally, the application process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept applications and provide applicant files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check eligibility of applicants",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate results of admission test and select applicants",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept admission",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enroll students and send enrollment documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Opening of application process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Application process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id11",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Admission and Enrollment Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Selection Committee Lane",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the opening of the application process by the student. The student then conducts the application followed by submitting it to the Department of Admission and Enrollment, where the application is accepted, and the necessary files are provided. Next, the WI Selection Committee checks the eligibility of the applicant. Based on the eligibility check, the Department of Admission and Enrollment evaluates the results and selects a candidate. The selected student then accepts the admission. Finally, the Department of Admission and Enrollment enrolls the student and sends the required documents, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Opening of the application process",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Accept applications and provide files",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check eligibility",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Evaluate results and select",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept admission",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enroll student and send documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Department Lane",
                                "elemRefs": [
                                    "id3",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Committee Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the opening of the application process by the Student. The Student then conducts the application. The Department of Admission and Enrollment accepts the application and provides applicant files. The WI Selection Committee checks the eligibility of the applicants. The Department of Admission and Enrollment evaluates the results of the admission test and selects applicants. The Student accepts admission. The Department of Admission and Enrollment enrolls students and sends enrollment documents. Finally, the application process is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Accept applications and provide applicant files",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check eligibility of applicants",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Evaluate results of admission test and select applicants",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Accept admission",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enroll students and send enrollment documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Opening of the application process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Application process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id11",
                        "name": "Department of Admission and Enrollment",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Department Lane",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "WI Selection Committee",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Committee Lane",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_ground_truth.json": {
        "0": {
            "text": "The process starts with an initial start event. The first step is to verify the request.  Request handling follows and then the order is received. The request is logged and categorized. Next, a decision is made whether the request is authorized. If not, the request verification is performed again. If the request is authorized, the process splits into two parallel paths. One path involves request monitoring and escalation, while the other path handles the model execution request.  After both parallel paths are completed, they converge, and the closure and evaluation request is processed.  A final decision gateway checks if there is a problem with the request. If not, request fulfillment support is provided, leading to a successful end. If there's a problem with the request, the incident manager is contacted, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Handling",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Model Execution Request",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Closure and Evaluation Request",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Successful End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id15",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the start request fulfillment. The first step is to verify the request.  Request handling follows and then the order is received. The request is logged and categorized, and then checked for authorization. If the request is not authorized, it loops back to request verification. If it is authorized, it proceeds to request monitoring and escalation.  Concurrently, request model execution also takes place. These two paths converge at a join gateway.  Next, request closure and evaluation is performed.  Finally, a check is made to determine if there is a problem with the request. If there are no problems, request fulfillment support is provided, and the process ends with success. If there is a problem, the incident manager is contacted, and the process ends noting the problem.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Handling",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End - Success",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End - Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Join",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "Not Authorized"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Authorized"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "No Problem"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Problem"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the start request fulfillment. The first step is to verify the request.  The request is then handled automatically.  Next, the order is received, logged, and categorized.  Then, a decision is made whether the request is authorized. If not, the request verification is performed again. If the request is authorized, two parallel paths are initiated: request monitoring and escalation, and request model execution.  Once both parallel paths are completed, the request closure and evaluation takes place.  Finally, a decision is made if there was a problem with the request. If not, request fulfillment support is provided, and the process ends with the request fulfilled. If there was a problem, the incident manager is contacted, and the process ends with the request failed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Handling",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Request Fulfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Request Failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id15",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "38_ground_truth.json": {
        "0": {
            "text": "The process starts with selecting and buying goods online.  A check is performed to determine if a credit check is required. If a credit check is required, information for the credit check is requested and the creditworthiness is assessed.  Based on the creditworthiness assessment, the customer is either informed about a rejection, which ends the process, or the warehouse is informed about shipping. If no credit check is required, the warehouse is also informed about shipping.  After the warehouse is informed, the availability of the item is checked. If the item is not available, a reorder is triggered and the availability is checked again. If the item is available, it is packed and then shipped. Finally, a purchase and shipping confirmation is sent, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and buy goods online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if creditworthiness check is required",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Request information for credit check",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Assess creditworthiness",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Inform customer about rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Inform warehouse about shipping",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Check availability",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Trigger reorder",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Pack item",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Ship item",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Send purchase and shipping confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit check required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with selecting and buying goods online. Next, a check is performed to see if a creditworthiness check is required. If a credit check is required, necessary information is requested and creditworthiness is assessed.  Based on the creditworthiness assessment, the process either continues or the customer is informed about the rejection, ending the process. If no credit check is required, or if the customer is creditworthy, item availability is checked. If the item is not available, a reorder is triggered, after which the item availability is checked again. If the item is available, it is packed and then shipped. Finally, a purchase and shipping confirmation is sent to the customer, ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and Buy Goods Online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if Creditworthiness Check is Required",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Request Necessary Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess Creditworthiness",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Warehouse about Shipping",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Inform Customer about Rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check Item Availability",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Trigger Reorder",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pack Item",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Ship Item",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send Purchase and Shipping Confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit Check Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Item Available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with selecting and buying goods online. Next, a check is performed to see if a credit check is required. If a credit check is required, information for the credit check is requested, and the creditworthiness is assessed. Based on the creditworthiness assessment, if the customer is creditworthy, the warehouse is informed about shipping. If the customer is not creditworthy, the customer is informed about the rejection, and the process ends with a rejection. If no credit check is required, the warehouse is also informed about shipping.  After informing the warehouse, the item availability is checked. If the item is not available, a reorder is triggered, and the item availability is checked again. If the item is available, the item is packed, then shipped. Finally, a purchase and shipping confirmation is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select and buy goods online",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if creditworthiness check is required",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request information for credit check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess creditworthiness",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform warehouse about shipping",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Inform customer about rejection",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check item availability",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Trigger reorder",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Pack item",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Ship item",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Send purchase and shipping confirmation",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Rejection",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Credit check required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Creditworthy?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Item available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "22_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient registers. Patient data is recorded, after which three tasks happen in parallel: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered. Once these parallel tasks are completed, a referral document is printed. Finally, the record is archived in the file system, and the process ends with the registration being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register Patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel gateway start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel gateway end",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a patient registers. Patient data is then recorded.  Three tasks happen in parallel: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered. Once these three parallel tasks are complete, the referral document is printed. Finally, the record is archived in the file system, after which the registration is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a patient registers. Patient data is recorded, after which the patient's SSN, name, and surname are registered concurrently. Once all three registration tasks are complete, the referral document is printed. Finally, the record is archived in the file system, and the process ends with the registration being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "58_ground_truth.json": {
        "0": {
            "text": "The process starts with the upcoming annual meeting. Management sends invitations to employees.  Then, management leads the annual planning meeting, and the employees participate in this meeting. Subsequently, management reviews and discusses the current strategy.  Following the discussion, the strategy is reformulated by management.  Next, the employees align for the reformulated strategy. Management then communicates the reformulated strategy and pursues it. The process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to employees",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Lead annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Participate in annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review and discuss current strategy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate strategy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Align for strategy",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate reformulated strategy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue reformulated strategy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Annual meeting upcoming",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Management",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "ManagementLane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Employees",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "EmployeeLane",
                                "elemRefs": [
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with the upcoming annual meeting. Management sends invitations to employees.  Then, management leads the annual planning meeting, and employees participate in the meeting. Subsequently, management conducts a review and discussion of the current strategy. Based on this review, management reformulates the strategy.  Following this, the employees align with the reformulated strategy. Management then communicates the reformulated strategy and proceeds to pursue the reformulated strategy. The process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to employees",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Lead annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Participate in meeting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct review and discussion of current strategy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate strategy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Align for strategy",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate reformulated strategy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue reformulated strategy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Annual meeting upcoming",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Management",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "ManagementLane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Employees",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "EmployeeLane",
                                "elemRefs": [
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the upcoming annual meeting. Management sends invitations to employees.  Then, management leads the annual planning meeting, during which the employees participate.  Following the meeting, management reviews and discusses the current strategy, and then reformulates it.  The reformulated strategy is then communicated to the employees, who align with the new strategy. Finally, management pursues the strategy, and the process ends with the annual meeting being finished.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations to employees",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Lead annual planning meeting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Participate in meeting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review and discuss current strategy",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reformulate strategy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Align for strategy",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate reformulated strategy",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Pursue strategy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Annual meeting upcoming",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Annual meeting finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Management",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "ManagementLane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Employees",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "EmployeeLane",
                                "elemRefs": [
                                    "id3",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ]
            }
        }
    },
    "16_ground_truth.json": {
        "0": {
            "text": "The process starts.  Two actions can happen in parallel: activating learning progress and clicking on \"Learning Progress\".  After clicking on \"Learning Progress\", the process branches based on the learning progress setting mode. If the mode is manual, the learning progress is set manually. If the mode is automatic, the learning progress is set automatically.  Regardless of whether learning progress is activated, or how learning progress is set, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Learning Progress\"",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress (Manual)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Set learning progress (Automatic)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Learning progress setting mode?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id3",
                        "condition": "Manual"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Automatic"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts and immediately activates learning progress in selected objects or clicks on \"Learning Progress\". If \"Learning Progress\" is clicked, the user decides whether to set learning progress manually or automatically. If set manually, the learning progress is set manually. If set automatically, the learning progress is set automatically.  After activating learning progress, setting learning progress manually, or setting learning progress automatically, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Learning Progress\"",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress manually",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Set learning progress automatically",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Learning progress set manually or automatically?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id3",
                        "condition": "Manually"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Automatically"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts and immediately activates learning progress in selected objects and clicks on \"Learning Progress\".  Next, the process comes to a decision gateway: Learning progress set manually or automatically? If manual, the learning progress is set manually. If automatic, the learning progress is set automatically.  After either manual or automatic learning progress is set, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Activate learning progress in selected objects",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Click on \"Learning Progress\"",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Set learning progress (Manual)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Set learning progress (Automatic)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Learning progress set manually or automatically?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id3",
                        "condition": "Manual"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Automatic"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "70_ground_truth.json": {
        "0": {
            "text": "The process starts with a service staff member in the service department recording a customer application.  Next, the service staff member records the order. The order is then passed on to the finance department where a finance staff member checks the customer data. Based on the customer data check, the process branches. If the data is correct, the finance staff member releases the order. If the data is not correct, the service staff member informs the customer about the rejection, and the process ends with the order being rejected.  If the order is released, the service staff member receives and processes the order, prints the order, forwards the order, and informs the customer about the successful processing. The process ends with the order being forwarded.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record customer application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Record order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check customer data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Release order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform customer (reject)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive and process order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Print order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Forward order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform customer (success)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Order forwarded",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Data correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Service Staff",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Finance Staff",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a customer application being recorded by a service representative in the service department.  Next, the service representative records the order. The finance department then checks the customer data. Based on the data check, the process branches. If the data is correct, the finance officer releases the order and the service representative receives and processes the order.  The order is then printed, forwarded to the customer, and the customer is informed of the order completion. The process then ends. If the customer data is not correct, the service representative informs the customer of the rejection, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Customer Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Record Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Release Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Customer (Rejection)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Print Order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Forward Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform Customer (Completion)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Service Representative",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Finance Officer",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a customer application being recorded by a service staff member of the service department. Next, the service staff member records the order. The finance staff of the finance department then checks the customer data.  If the data is correct, the finance staff releases the order. The release of the order triggers a notification to the service staff, who then inform the customer with an order confirmation. Following this, the service staff receive and process the order, print the order, and forward the customer order, after which the process ends. If the customer data is not correct, the finance staff do not release the order, and instead, the service staff inform the customer of the rejection, after which the process ends.  The rejection notification triggers a message to forward the customer order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Customer Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Record Order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Release Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Inform Customer (Rejection)",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Print Order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Forward Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inform Customer (Confirmation)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Data Correct?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Service Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Service Staff",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Finance Department",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Finance Staff",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    }
                ]
            }
        }
    },
    "69_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient receives a prescription. The pharmacist at NewTown Health Chemist then checks if the prescription is for the patient. If not, the process ends, resulting in an unfilled prescription. If it is for the patient, the patient shows their Medicare card and prescriptions to the pharmacist, who receives and checks the script details. Next, the pharmacist checks if the prescription is valid. If not, the process ends with an unfilled prescription. If the prescription is valid, the pharmacist opens and reviews the patient's profile and views the prescription information. The pharmacist then determines if the patient is suspicious. If so, the pharmacist contacts the GP for advice. The GP replies to the pharmacist, and the pharmacist confirms the decision. If the decision is negative, the process ends with an unfilled prescription. If the patient is not suspicious, the pharmacist checks the patient's status. If the status check fails, the pharmacist offers alternatives to the patient. The patient then decides whether they agree to the alternatives. If they agree, the pharmacist adds a short memo and selects the correct dosage. If the patient does not agree, the process ends with an unfilled prescription. If the patient's status check passes, the pharmacist selects the correct dosage. The pharmacist then checks the prescription inventory. If the medication is not in stock, the pharmacist informs the patient about alternatives, and the process ends with an unfilled prescription. If the medication is in stock, the pharmacist double-checks and collects the drugs. The system then calculates the costs and fees. The pharmacist prints and attaches labels with CMI. The patient receives consultation, pays the fees, receives the prescriptions, and the process ends with the dispensing process completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "View prescription info",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reply to pharmacist",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Select correct dosage",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check prescription inventory",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Double-check and collect drugs",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Calculate costs and fees",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Receive counseltation and pay fees",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Receive prescriptions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Receive prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Dispensing process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Prescription for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id28",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Pharmacist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "GP (Doctor)",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id34",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id35",
                                "name": "System Lane",
                                "elemRefs": [
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id24",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id25",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id26",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id12",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id27",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id27",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id23",
                        "targetRef": "id20",
                        "condition": "No"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when a prescription is received by the NewTown Health Chemist. The pharmacist first checks if the prescription is for the patient. If not, the process ends as a prescription unfilled. If it is for the patient, the patient shows their Medicare card and prescriptions to the pharmacist, who receives and checks the script details. Next, the pharmacist checks if the prescription is valid. If not, the process ends as a prescription unfilled. If the prescription is valid, the pharmacist opens and reviews the patient's profile and views the prescription information. The pharmacist then assesses if the patient is suspicious. If so, the pharmacist contacts the GP for advice. The GP provides advice/recommendations via email or call, which the pharmacist receives. The pharmacist then confirms the decision. If the patient is not suspicious, the pharmacist checks the patient's status, including allergies, pregnancy, and medical history. Based on the status check, if the check does not pass, the pharmacist offers alternatives, such as a lower dosage. The patient is informed about the alternatives, and if they agree, a short memo is added, and the process continues to select the correct dosage and check inventory. If the patient does not agree, the process ends as a prescription unfilled. If the patient's status check passes, the pharmacist proceeds to select the correct dosage and check inventory. The pharmacist then checks if the medication is in stock. If not, the pharmacist informs the patient about alternatives, and the process ends as a prescription unfilled. If the medication is in stock, the pharmacist double-checks and collects the drugs. The system then calculates Medicare costs, waivers, and fees. The pharmacist prints and attaches labels with CMI and receives consultation and recommendations from the system. The patient then receives the consultation and recommendation from the pharmacist, pays the prescription fees, receives the prescriptions, and the process ends with the dispensing process completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "View prescription info",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Provide advice/recommendation (via email/call)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check patient status (allergies, pregnancy, history)",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternatives (lower dosage)",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Select correct dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate Medicare costs, waivers, and fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive consultation and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Receive prescriptions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Prescription received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Dispensing process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Prescription for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id28",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Patient Actions",
                                "elemRefs": [
                                    "id1",
                                    "id16",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "GP (Doctor)",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "Doctor Actions",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id34",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id35",
                                "name": "System Actions",
                                "elemRefs": [
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id23",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id24",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id25",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id26",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id11",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id27",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id27",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when a patient submits a prescription to NewTown Health Chemist. The pharmacist first checks if the prescription is for the patient. If not, the process ends, and the prescription is unfilled. If it is for the patient, the patient shows their Medicare card and prescriptions to the pharmacist, who receives and checks the script details. Next, the pharmacist checks if the prescription is valid. If not, the process ends, and the prescription is unfilled. If the prescription is valid, the pharmacist opens and reviews the patient's profile and views the prescription information. The pharmacist then assesses if the patient appears suspicious. If so, the pharmacist contacts the patient's GP for advice. The GP replies to the pharmacist, who then confirms the decision with the patient. If the patient does not agree with the decision, the process ends, and the prescription is unfilled. If the patient is not suspicious, the pharmacist checks the patient's status. If the status check fails, the pharmacist offers alternatives with a lower dosage, and the patient decides whether to accept the alternatives. If the patient agrees, the pharmacist adds a short memo and proceeds. If the patient disagrees, the process ends, and the prescription is unfilled. If the patient's status check passes, or if the patient agrees to the alternatives, the pharmacist selects the correct prescribed dosage and checks the inventory. If the medication is not in stock, the pharmacist informs the patient about alternatives, and the process ends with the prescription unfilled. If the medication is in stock, the pharmacist double-checks and collects the drugs. The system then calculates Medicare costs, waivers, and fees. The pharmacist prints and attaches labels with CMI and provides consultation and recommendations to the patient. The patient receives the consultation and recommendations, pays the prescription fees, receives the filled prescription, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "View prescription info",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reply to pharmacist",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternatives with lower dosage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Select correct prescribed dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate Medicare costs, waivers, and fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive counseltation and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Receive prescriptions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Receive prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Dispensing process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Prescription for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id28",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id16",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Pharmacist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "GP (Doctor)",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id34",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id35",
                                "name": "System Lane",
                                "elemRefs": [
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id22",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id23",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id24",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id25",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id26",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id25",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id11",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id27",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id27",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id68",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    }
                ]
            }
        }
    },
    "27_ground_truth.json": {
        "0": {
            "text": "The process starts when a conflict occurs. The first step is to seek out a mediator. Then, the employee is listened to, and an appointment is scheduled. The employee attends the appointment and describes the conflict. Next, a solution for the conflict is sought.  The process then checks if the conflict is resolved. If not, a new appointment is scheduled, and the process loops back to seeking a solution for the conflict. If the conflict is resolved, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek out mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Listen to employee and schedule appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Attend appointment and describe conflict",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Seek solution for conflict",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Schedule new appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Conflict occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Conflict resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Conflict resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a conflict occurs. The first step is to seek out a mediator. Then, the employee is listened to, and an appointment is scheduled. The employee attends the appointment and describes the conflict. Next, a solution for the conflict is sought.  The process then checks if the conflict is resolved. If not, a new appointment is scheduled, and the process loops back to seeking a solution for the conflict. If the conflict is resolved, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek out mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Listen to employee and schedule appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Attend appointment and describe conflict",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Seek solution for conflict",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Schedule new appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Conflict occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Conflict resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Conflict resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a conflict occurs. The employee seeks out a mediator. The HR department listens to the employee and schedules an appointment. The employee attends the appointment and describes the conflict to the mediator. The mediator seeks a solution for the conflict.  The mediator then checks if the conflict is resolved. If not, the HR department schedules a new appointment with the mediator, and the mediator continues seeking a solution. This loop continues until the conflict is resolved. Once the conflict is resolved, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Seek out mediator",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Listen to employee and schedule appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Attend appointment and describe conflict",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Seek solution for conflict",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Schedule new appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Conflict occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Conflict resolved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Conflict resolved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id2",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id12",
                                "name": "Mediator",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "Yes"
                    }
                ]
            }
        }
    },
    "41_ground_truth.json": {
        "0": {
            "text": "The process starts when a task arises.  The working time effort is estimated, and the availability of resources is checked.  Next, a field employee is selected and contacted, and a check is performed to see if the employee is reachable. If the employee is not reachable, the process loops back to check the availability of resources. If the employee is reachable, the task is assigned to the employee.  Following this, the procedure for task completion is specified, and the task is received and confirmed by the employee. The employee then processes the task and completes it. A completion report is made and documented. Finally, the task is processed, and the process ends with the task processed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check availability of resources",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select and contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if employee is reachable",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign task to employee",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive and confirm task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Process task",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Complete task",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Make completion report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Document completion report",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Process task",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Task not assigned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Is employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a task arises.  The working time effort is estimated, and the availability of resources is checked.  Next, a field employee is selected and contacted, and a check is performed to see if the employee is reachable. If the employee is not reachable, the process loops back to check the availability of resources. If the employee is reachable, the task is assigned.  Following this, the procedure for task completion is specified, and the task is received and confirmed by the employee. The employee then processes the task, makes a completion report, and documents the completion report. Finally, the task is processed again, and the process ends with the task processed. If no resources are available after checking, the process ends and the task is not assigned.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check availability of resources",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select and contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if employee is reachable",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign task",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive and confirm task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Process task",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Make completion report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Document completion report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process task",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Task not assigned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a task arises.  The working time effort is estimated, and the availability of resources is checked.  Next, a field employee is selected and contacted, and a check is performed to see if the employee is reachable. If the employee is not reachable, the process loops back to check the availability of resources. If the employee is reachable, the task is assigned.  Following this, the procedure for task completion is specified, and the task is received and confirmed by the employee. The employee then processes the task, makes a completion report, and documents the completion report. Finally, the task is processed again, and the process ends with the task processed. If no resources are available after checking, the process ends and the task is not assigned.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Estimate working time effort",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check availability of resources",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select and contact field employee",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if employee is reachable",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Assign task",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Specify procedure for task completion",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive and confirm task",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Process task",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Make completion report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Document completion report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process task",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Task arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Task not assigned",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Task processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Employee reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "13_ground_truth.json": {
        "0": {
            "text": "The process starts with the creation of a bill of materials by the Warehousing Department of Startup TUd-03.  Next, the goods are ordered.  Then, it is determined whether a supplier inquiry is necessary. If yes, a question is clarified with the Specialist Department, and the process continues by awaiting delivery. If no supplier inquiry is needed, the process proceeds directly to awaiting delivery. After awaiting delivery, a check is performed to see if the delivery is within 5 days. If yes, the quantity and quality are checked. If not, the supplier is contacted to check for immediate shipping.  If immediate shipping is possible, the process loops back to await delivery. If not, the process ends with an escalation of delivery issues.  If the quantity and quality meet standards, the goods are stored. If not, a replacement delivery is requested, communicated to the supplier, and the process loops back to await delivery. After the goods are stored, the order is transmitted by the Sales Department. Finally, the goods are prepared and packaged, then shipped or issued.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify question with specialist department",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Await delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Contact supplier to check immediate shipping",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Check quantity and quality",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request replacement delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate to supplier",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Store goods",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Transmit order",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Prepare and package goods",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Ship or issue goods",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Escalation of delivery issues",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Supplier inquiry?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Delivery within 5 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Immediate shipping possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Quantity and quality meet standards?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Startup TUd-03",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Warehousing Department",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id10"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Specialist Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the creation of a bill of materials by the Warehousing Department of Startup TUd-03.  Next, the Warehousing Department orders goods. A supplier inquiry follows, leading to the clarification of the question with the Specialist Department. Subsequently, the Warehousing Department awaits delivery.  If the delivery is not within five days, the Warehousing Department contacts the supplier to check for immediate shipping. If immediate shipping is not possible, the process ends with an escalation of delivery issues. If immediate shipping is possible, the process loops back to awaiting delivery. If the delivery is within five days, the Warehousing Department checks the quantity and quality of the goods. If the quantity and quality do not meet standards, a replacement delivery is requested, which is then communicated to the supplier, and the process loops back to awaiting delivery. If the quantity and quality meet standards, the Warehousing Department stores the goods. The Sales Department then transmits the order, prepares and packages the goods, and finally ships or issues the goods, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create bill of materials",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order goods",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Clarify question with specialist department",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Await delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Contact supplier to check immediate shipping",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Check quantity and quality",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request replacement delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate replacement request to supplier",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Store goods",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Transmit order",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Prepare and package goods",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Ship or issue goods",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Escalation of delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Supplier inquiry",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Delivery within five days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Immediate shipping possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Quantity and quality meet standards?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "Startup TUd-03",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Warehousing Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id10"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Specialist Department",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "75_ground_truth.json": {
        "0": {
            "text": "The process starts when the \"Grape harvest\" task is received. Then, field location information is received.  Tools are then loaded, followed by driving to the field.  At the field, the tools are unloaded. The grapes are then harvested.  After the harvest, the tools are loaded again, and the workers drive to the winery. Finally, the tools are unloaded at the winery, and the process ends with the task being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Load tools",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Drive to field",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Unload tools",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Grape harvest",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Load tools",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Drive to winery",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unload tools",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive \"Grape harvest\" task",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receive field location information",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Task completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the task \"Grape harvest\" is received. Then, information about the field location is received.  The tools are then loaded, followed by driving to the field.  Next, the tools are unloaded. The grapes are then harvested.  After the harvest, the tools are loaded again, and the worker drives to the winery. Finally, the tools are unloaded at the winery, and the process ends with the task being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Drive to field",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Grape harvest",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Drive to winery",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Unload tools",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive task \"Grape harvest\"",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Task completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Receive information about field location",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the grape harvest.  Tools are loaded, then they drive to the field.  Next, the tools are unloaded. The grapes are harvested by hand.  After the harvest, the tools are loaded again, and they drive to the winery. Finally, the tools are unloaded, and the process ends with the task completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Drive to field",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Unload tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Grape harvest by hand",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Load tools",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Drive to winery",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Unload tools",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Grape harvest",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Task completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "23_ground_truth.json": {
        "0": {
            "text": "The process starts when a patient enters short-term treatment. The doctor evaluates the patient's condition. Then, the technician performs laboratory tests.  The doctor then treats the patient and prescribes medicines. Finally, the patient receives the delivered prescription, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Doctor",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Technician",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Technician Lane",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient enters short-term treatment at the hospital. The doctor first evaluates the patient's condition.  A technician then performs laboratory tests. Based on the test results, the doctor treats the patient.  Following treatment, the doctor prescribes medicines. The pharmacist then delivers the prescription to the patient, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient enters short-term treatment at the hospital. The doctor first evaluates the patient's condition.  A technician then performs laboratory tests. Based on the test results, the doctor proceeds to treat the patient.  Following the treatment, the doctor prescribes medicine. Finally, the pharmacist delivers the prescription to the patient, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicine",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "17_ground_truth.json": {
        "0": {
            "text": "The process starts when an email account is needed. The user logs on to the email provider's website. Next, the user chooses a package, and then checks whether a personal account is available. If not, the process ends as a private account is unavailable. If a personal account is available, the user enters personal information. Then, the user enters full names and uploads a photo ID in parallel.  After both actions are completed, the service confirms the personal data and generates a new email ID and password. Finally, the process ends with the private email created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to the email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter personal information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an email account is needed. The user logs on to the email provider's website and chooses a package. Next, it is checked if a personal account is available. If not, the process ends as a private account is unavailable. If a personal account is available, the user is greeted with a private account welcome page and enters personal information.  Following this, the user enters full names and uploads a photo ID in parallel.  Then, the personal data is confirmed.  Finally, a new email ID and password are generated, and the process ends with the private email created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter personal information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1",
                        "name": "Log on to email provider's website"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes",
                        "name": "Private account welcome page"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an email account is needed. The user logs on to the email provider's website and chooses a package. Next, it is checked if a personal account is available. If not, the process ends. If a personal account is available, the user enters personal information. Then, the user enters full names and uploads a photo ID in parallel. After both actions are completed, the user confirms the personal data. Finally, the service generates a new email ID and password, after which the process ends with the creation of the private email.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to the email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter personal information",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm personal data",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid1",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gid2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gid2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "59_ground_truth.json": {
        "0": {
            "text": "The process starts when the customer fills out a credit application. The Mediation Agency receives the application and forwards it to both Bank A and Bank B. Bank B receives the loan request and checks the loan amount and income. If the customer's income is not between \u20ac2,000 and \u20ac100,000, Bank B sends a rejection to the Mediation Agency.  If the income is within the acceptable range, Bank B checks if the loan amount is greater than 20 times the monthly income. If it is, Bank B sends a rejection. If not, Bank B determines the interest rate and sends a credit report to the Mediation Agency. Concurrently, Bank A receives the loan request and checks the loan amount. Bank A then checks if the loan amount is greater than 20 times the monthly income. If it is, Bank A sends a rejection to the Mediation Agency. If not, Bank A estimates the interest rate and sends a credit report to the Mediation Agency. The Mediation Agency receives either rejections or credit reports from both banks and forwards the information to the customer. The customer then reviews the information, and the loan process is considered complete, regardless of whether the outcome is a rejection or a credit proposal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Forward application to Bank A",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Forward application to Bank B",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive loan request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check loan amount and income",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check loan amount",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Determine interest rate",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send credit report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Receive loan request",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check loan amount",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send rejection",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Estimate interest rate",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send credit report",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive rejection or credit reports",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Forward to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Income between \u20ac2,000 and \u20ac100,000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Loan amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Loan amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Rejection or credit proposal?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id25",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Mediation Agency Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id16",
                                    "id17"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Bank B Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Bank A Lane",
                                "elemRefs": [
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id22",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id12",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id23",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id24",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id24",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the customer filling out a credit application. The customer then sends the application to the mediation agency, who forwards it to both Bank A and Bank B.  At Bank B, the loan amount and the customer's income are checked. If the income is not between \u20ac2,000 and \u20ac100,000, a rejection is sent to the mediation agency. Otherwise, the loan amount is checked against the income. If the loan amount is greater than 20 times the monthly income, a rejection is sent.  If not, the interest rate is determined and a credit report is sent to the mediation agency.  Simultaneously, at Bank A, the loan amount is checked. If the loan amount is greater than 20 times the monthly income, a rejection is sent to the mediation agency. Otherwise, an estimated 20% interest is calculated, and a credit report is sent to the mediation agency. The mediation agency receives the reports/rejections from both banks and forwards them to the customer. The customer then receives either a rejection, ending the process, or a credit proposal, also ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Forward application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive loan request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check loan amount",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Income",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check loan amount vs. income",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Determine interest rate",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send credit report",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Receive loan request",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Check loan amount",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send rejection",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Estimate 20% interest",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Send credit report",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive reports/rejections",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Forward to customer",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Receive rejection",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Receive credit proposal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id20",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Income between \u20ac2,000 and \u20ac100,000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Loan amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Loan amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Rejection or credit proposal?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id18",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Mediation Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id16",
                                    "id17"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Bank B Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "Bank A Lane",
                                "elemRefs": [
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id6",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id23",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id23",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id24",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id24",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id25",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id25",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id10",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id17",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id26",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id26",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id19",
                        "targetRef": "id22"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when a customer starts a loan process. The customer fills out a credit application, which is received by a mediation agency. The mediation agency forwards the application to Bank B and Bank A.  At Bank B, the loan amount and the customer's income are checked. If the customer's income is not between 2000 and 100000, the application is forwarded back to the mediation agency. Otherwise, the loan amount is checked against the income. If the loan amount is greater than 20 times the monthly income, the application is forwarded back to the mediation agency. Otherwise, the interest rate is determined, and a credit report is sent to the mediation agency. Concurrently, Bank A receives the loan request, checks the loan amount, and if the loan amount is greater than 20 times the monthly income, the application is forwarded back to the mediation agency. Otherwise, the interest rate is estimated, and a credit report is sent to the mediation agency. The mediation agency receives the reports/rejections from both banks and forwards the information to the customer. The loan process is then completed, either with a rejection or a credit proposal.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fill out credit application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Forward application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive loan request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check loan amount",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check income",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check loan amount vs. income",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Determine interest rate",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send credit report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive loan request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check loan amount",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Estimate interest rate",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send credit report",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Receive reports/rejections",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Forward to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start loan process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Loan process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Income between 2000 and 100000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Loan amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Loan amount > 20 * monthly income?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Rejection or credit proposal?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "CustomerLane",
                                "elemRefs": [
                                    "id1",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id25",
                        "name": "Mediation Agency",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "MediationLane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Bank B",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "BankBLane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Bank A",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "BankALane",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id22",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id22",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id19",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    }
                ]
            }
        }
    },
    "71_ground_truth.json": {
        "0": {
            "text": "The process starts with the creation of a booking system, followed by starting the booking system.  Payment information is then read, and payment automation is initiated. Next, a check occurs to see if payment has been made. If payment has been made, the payment is booked, and the process ends with a payment made confirmation. If payment has not been made, a reminder is sent.  After the reminder, another check occurs to determine if the payment has been made. If the payment has been made, the payment is booked, and the process ends with a payment made confirmation. If payment has still not been made, a written dunning procedure is initiated. The reminder notice is then reviewed. If the review is successful, the reminder notice is sent, and the process ends with a reminder notice sent confirmation. If the review is not successful, the reminder notice is corrected, and the reminder notice is reviewed again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Read Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate payment automation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Book payment",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Initiate written dunning procedure",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Review Reminder Notice",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send reminder notice",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Correctly fill out reminder notice",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Payment Made Confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Reminder Notice Sent Confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Payment Made After Reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Review Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the creation of a booking system.  After the booking system is started, payment is read. Then, payment automation is initiated, and a check is performed to see if the payment has been made. If the payment has been made, the payment is booked, and the process ends with a payment made confirmation. If the payment has not been made, a reminder is sent. Subsequently, the payment is checked again after the reminder. If the payment has been made after the reminder, the payment is booked, and the process ends with a payment made confirmation. If the payment has still not been made, a written dunning procedure is initiated.  The reminder notice is then reviewed. If the review is successful, the reminder notice is sent, and the process ends with a reminder notice sent confirmation. If the review is not successful, the reminder notice is corrected, and the reminder notice is reviewed again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create booking system",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start booking system",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Read payment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate payment automation",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book payment",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Send reminder",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Check payment after reminder",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate written dunning procedure",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Review reminder notice",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send reminder notice",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Correctly fill out reminder notice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Payment made confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Reminder notice sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Payment made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Payment made after reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Review successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the creation of a booking system, followed by starting the booking system.  Next, payment is read, and payment automation is initiated.  The process then checks if payment has been made. If yes, the payment is booked, and the process ends with payment made confirmation. If no, a reminder is sent.  After the reminder, the process checks if payment has been made. If yes, the payment is booked, and the process ends with payment made confirmation. If no, a written dunning procedure is initiated.  The reminder notice is then reviewed. If the review is successful, the reminder notice is sent, and the process ends with the reminder notice sent confirmation. If the review is not successful, the reminder notice is corrected, and the review process is repeated.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Booking System",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Start Booking System",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Read Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Initiate Payment Automation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Book Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send Reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Initiate Written Dunning Procedure",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Review Reminder Notice",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send Reminder Notice",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Correctly Fill Out Reminder Notice",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Payment Made Confirmation",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Reminder Notice Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Payment Made After Reminder?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Review Successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "26_ground_truth.json": {
        "0": {
            "text": "The process starts when a late payment is received. Management is informed and a check is performed to see if a reminder has been sent. If a reminder has been sent, an inquiry is made with the customer, and an inquiry email is sent.  If a response is received, an online banking check is performed, and the payment is posted, ending the process. If no response is received, the lawyer is notified, and a request for legal assistance is sent. The reminder process is run, and the process ends. If no reminder has been sent, a reminder is created and sent. Then, a check is performed to see if the payment has been made. If the payment has been made, the reminder process is completed, the payment is posted, and the process ends. If the payment has not been made, another reminder is created. If the third reminder is unsuccessful, the finance department is notified, and the lawyer is notified, looping back to the legal assistance request.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Management",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Make Inquiry with Customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Send Inquiry Email",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Perform Online Banking Check",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Post Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Notify Lawyer",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send Request for Legal Assistance",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Run Reminder Process",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Create Reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Send Reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Complete Reminder Process",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Create Another Reminder",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Notify Finance Department",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Late Payment Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Payment Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Reminder Sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Response Received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Third Reminder Unsuccessful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a late payment is received. Management is informed and a check is performed to see if a reminder has already been sent. If a reminder has been sent, an inquiry is made with the customer, and an inquiry email is sent.  If a response is received, an online banking check is performed, and the payment is posted, ending the process. If no response is received, the lawyer is notified, and a request for legal assistance is sent. The reminder process is run, and the process ends. If no reminder has been sent, a reminder is created and sent. If the payment is subsequently made, the payment is posted and the process ends. If the payment is not made, another reminder is created. If sending this third reminder is unsuccessful, the finance department is notified, which leads to the lawyer being notified and a request for legal assistance being sent, after which the process ends. If the third reminder is successful, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Management",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Make Inquiry with Customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Inquiry Email",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Perform Online Banking Check",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Post Payment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify Lawyer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Request for Legal Assistance",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Run Reminder Process",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Create Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Reminder",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Create Another Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Notify Finance Department",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Late Payment Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Payment Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Reminder Sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Response Received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Third Reminder Unsuccessful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id18",
                        "targetRef": "id14",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a late payment is received. Management is informed and a check is performed to see if a reminder has already been sent. If a reminder has been sent, an inquiry is made with the customer, and an inquiry email is sent.  If a response is received, an online banking check is performed, and the payment is posted, ending the process. If no response is received, the lawyer is notified, and a request for legal assistance is sent. The reminder process is run, after which the process ends. If no reminder has been sent, a reminder is created and sent.  If the payment is subsequently made, the payment is posted, ending the process. If the payment is not made, another reminder is created. If sending this third reminder is unsuccessful, the finance department is notified, and the lawyer is subsequently notified, looping back to the legal assistance request.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Inform Management",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Make Inquiry with Customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Inquiry Email",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Perform Online Banking Check",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Post Payment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify Lawyer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Request for Legal Assistance",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Run Reminder Process",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Create Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Reminder",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Create Another Reminder",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Notify Finance Department",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Late Payment Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Payment Processed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Reminder Sent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Response Received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Payment Made?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Third Reminder Unsuccessful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "68_ground_truth.json": {
        "0": {
            "text": "The process starts with a request for sample products. The supplier provides sample products, which are then evaluated. If the samples meet the requirements, the product is selected. If not, the product specifications are adjusted, and the supplier provides new samples.  Once a product is selected, a purchase order is sent, and the supplier checks stock availability. If the stock is available, the product is sent and received. The received product is checked against the order. If they match, payment authorization is sent, and the payment is processed. The supplier is then notified, and the process is complete. If the order and product do not match, a request for missing products is sent, and the stock availability is checked again. If the stock was initially unavailable, inventory is restocked, and the stock availability is re-checked.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Purchase Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Product",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check Products against Order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Payment Authorization",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Process Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Request Missing Products",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Notify Supplier",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Request for Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a request for sample products. The supplier then provides sample products to the FMCG company. The warehouse supervisor evaluates the sample products. If the samples meet the requirements, the warehouse supervisor selects the product. If the samples do not meet the requirements, the warehouse supervisor adjusts the product specifications and the supplier provides new samples. Once a product is selected, the FMCG company sends a purchase order to the supplier. The supplier checks stock availability. If the stock is available, the supplier sends the product to the FMCG company. If the stock is not available, the supplier restocks inventory and checks availability again. After receiving the product, the warehouse supervisor checks the products. If the order and product match, the FMCG company sends a payment authorization. If they do not match, the FMCG company requests the missing products from the supplier, who then checks stock availability again.  After sending the payment authorization, the FMCG company processes the payment and notifies the supplier, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Purchase Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Product",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check Products",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Request Missing Products",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Send Payment Authorization",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Process Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Notify Supplier",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Request for Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Supplier Notified",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id11",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a request for sample products. The supplier then provides sample products to the warehouse supervisor at the FMCG company. The warehouse supervisor evaluates the sample products. If the samples meet the requirements, the warehouse supervisor selects the product and sends a purchase order to the supplier. If the samples do not meet the requirements, the warehouse supervisor adjusts the product specifications and the supplier provides new samples.  Upon receiving the purchase order, the supplier checks stock availability. If the stock is available, the supplier sends the product to the warehouse supervisor. If the stock is not available, the supplier restocks inventory and checks availability again.  After receiving the product, the warehouse supervisor checks the products against the order. If the order and product match, the warehouse supervisor sends a payment authorization to the supplier.  If they do not match, the warehouse supervisor requests the missing products from the supplier, who then checks stock availability again.  The supplier then processes the payment and notifies the FMCG company, after which the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Purchase Order",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Send Product",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Products against Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Payment Authorization",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Process Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Request Missing Products",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Notify Supplier",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Request for Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id23",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id11",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "40_ground_truth.json": {
        "0": {
            "text": "The process begins when an application is received by the Recruitment Department of ADOmoney Bank. The application documents are reviewed, and a preselection is conducted. If the applicant is rejected, a rejection letter is created, and the process ends. If the applicant passes the preselection, the application documents are examined in detail.  Next, it is determined whether the application is for a key position. If it is a key position, a telephone interview is conducted, followed by an attempt to communicate an appointment for a personal interview via email. If it is not a key position, the process directly proceeds to communicating the appointment for a personal interview via email. If a suitable date is found, the appointment and the applicant's documents are forwarded to the relevant department. If no suitable date is found, the process loops back to try and communicate an appointment again.  The relevant department then conducts the personal interview. After the interview, it is decided whether the applicant is suitable for the assessment center. If not, a vote on the applicant is taken by the relevant department. If the applicant is suitable for the assessment center, two parallel paths are initiated: scheduling an appointment with the applicant for the assessment center and planning/preparing the assessment center. Both paths converge to conduct the assessment center and take a vote on the applicant. The votes from both paths are then considered together for the final vote outcome. Based on the vote outcome, either an acceptance letter is drafted and sent, ending the process with the applicant being accepted, or a rejection letter is drafted and sent, ending the process with the applicant being rejected after the assessment center.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents and conduct preselection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Examine application documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward appointment and applicant's documents to the relevant department",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule appointment with applicant for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct assessment center and take vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Take vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Draft and send acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Draft and send rejection letter",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Applicant accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Applicant rejected after assessment center",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Preselection outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Suitable date found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Suitable for assessment center?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Vote outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "ADOmoney Bank",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id18",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Relevant Department",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id21",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Assessment Center",
                                "elemRefs": [
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id21",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id23",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process at ADOMoney Bank starts when an application is received by the Recruitment Department. The application documents are reviewed, and a preselection is conducted. If the applicant is rejected, a rejection is created, and the process ends with the applicant being rejected after preselection. If the applicant passes the preselection, the application documents are examined in detail.  Next, it is determined whether the application is for a key position. If it is a key position, a telephone interview is conducted, followed by an email to communicate an appointment for a personal interview. If it is not a key position, the process directly proceeds to communicate the appointment for a personal interview via email.  The Recruitment Department then checks if a suitable date is found for the interview. If not, the process loops back to communicate a new appointment. If a suitable date is found, the appointment and the applicant's documents are forwarded to the Relevant Department. The Relevant Department conducts the personal interview and determines if the applicant is suitable for the assessment center. If not, a vote is taken on the applicant. If the applicant is suitable, the Assessment Center Team schedules an appointment with the applicant for the assessment center and simultaneously plans and prepares the assessment center.  Both activities lead to conducting the assessment center and taking a vote on the applicant.  Regardless of whether the applicant went through a personal interview only or also an assessment center, the final vote on the applicant leads to a decision. If the applicant is accepted, an acceptance letter is drafted and sent, and the process ends with the applicant being accepted. If the applicant is rejected, a rejection letter is drafted and sent, and the process ends with the applicant being rejected after the assessment center.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents and conduct preselection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Examine application documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward appointment and applicant's documents to relevant department",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule appointment with applicant for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct assessment center and take vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Take vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Draft and send acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Draft and send rejection letter",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Applicant accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Applicant rejected after assessment center",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Preselection outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Key position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Suitable date found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Suitable for assessment center?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Applicant accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "ADOMoney Bank",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id14",
                                    "id18"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Relevant Department",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id21"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Assessment Center Team",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id2",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id22",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id11",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id23",
                        "targetRef": "id12",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id23",
                        "targetRef": "id13",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an application is received by the recruitment department of ADOMoney Bank. The application documents are reviewed, and a preselection is conducted. If the applicant is rejected, a rejection letter is created, and the process ends. If the applicant passes the preselection, the application documents are examined in detail.  Next, it is determined whether the applied position is a key position. If it is not a key position, a telephone interview is conducted by the relevant department, followed by an attempt to communicate an appointment for a personal interview via email. If a suitable date is not found, the attempt is repeated. Once a suitable date is found, the appointment and the applicant's documents are forwarded to the relevant department, and a personal interview is conducted. Regardless of whether the position is a key position or not, the relevant department determines if the applicant is suitable for the assessment center. If the applicant is not suitable, a vote on the applicant is taken by the relevant department. If the applicant is suitable for the assessment center, an appointment is scheduled. Concurrently, the assessment center team plans and prepares the assessment center. Once the appointment is scheduled and the assessment center is prepared, the assessment center is conducted, and a vote on the applicant is taken. The votes are then considered, and the overall applicant outcome is determined. If the applicant is accepted, an acceptance letter is drafted and sent, and the process ends. If the applicant is rejected, a rejection letter is drafted and sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Review application documents and conduct preselection",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create rejection",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Examine application documents in detail",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct telephone interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate appointment for personal interview via email",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Forward appointment and applicant's documents to relevant department",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct personal interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Schedule appointment for assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Plan and prepare assessment center",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Conduct assessment center and take vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Take vote on applicant",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Draft and send acceptance letter",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Draft and send rejection letter",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Application received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant rejected after preselection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Applicant accepted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Applicant rejected after assessment center",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Preselection Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Key Position?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Suitable Date Found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Suitable for Assessment Center?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Applicant Outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "ADOmoney Bank",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Recruitment Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id18",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id26",
                                "name": "Relevant Department",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id19",
                                    "id20",
                                    "id21",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id27",
                                "name": "Assessment Center Team",
                                "elemRefs": [
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id8",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id22",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id10",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id21",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id23",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "90_ground_truth.json": {
        "0": {
            "text": "The process starts with a claim revenue task. Next, a decision is made whether to ensure self-financing or receive funding amounts.  Both paths converge to a point where two parallel paths are initiated. One path is to gain a high market share in open-source solutions, the other is to generate revenue through additional services. Once both are completed, again, two parallel paths are initiated: organize training units and perform consulting services.  The performing consulting services path leads to generating follow-up projects. Finally, once the training units are organized and the follow-up projects are generated, the process ends with the revenue claimed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Claim revenue",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Gain high market share in open-source solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Generate revenue through additional services",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Organize training units",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Perform consulting services",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Generate follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id_start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id_end",
                        "name": "Revenue claimed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Ensure self-financing or receive funding amounts?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id9",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id_start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3",
                        "condition": "Ensure self-financing"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3",
                        "condition": "Receive funding amounts"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id_end"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id_end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a start event. The first step is to claim revenue.  Next, a decision is made based on whether self-financing needs to be ensured or if funding will be received. Regardless of the decision outcome, the process proceeds to gain a high market share in open-source solutions and generate revenue through additional services concurrently. Once both of these are complete, the process continues to organize training units and perform consulting services concurrently.  If consulting services are performed, follow-up projects are generated. Finally, once the training units are organized and any follow-up projects from consulting services are generated, the revenue is claimed and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Claim revenue",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Gain high market share in open-source solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Generate revenue through additional services",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Organize training units",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Perform consulting services",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Generate follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Revenue claimed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Self-financing or funding amounts?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3",
                        "condition": "Ensure self-financing"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3",
                        "condition": "Receive Funding"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a claim revenue. A financing decision is made to either ensure self-financing or receive funding amounts.  Following this decision, the process splits into two parallel paths. One path focuses on gaining a high market share in open-source solutions, while the other concentrates on generating revenue through additional services. These paths converge, and the process splits again into two parallel paths. One path involves organizing training units, while the other involves performing consulting services and generating follow-up projects. Finally, these two paths converge, and the process ends with the revenue claimed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Ensure Self-financing",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Funding Amounts",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Gain High Market Share in Open-Source Solutions",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Generate Revenue through Additional Services",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Organize Training Units",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Perform Consulting Services",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Generate Follow-up Projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Claim Revenue (Start)",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Revenue Claimed (End)",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Financing Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id1",
                        "condition": "Ensure Self-financing"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Receive Funding Amounts"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "74_ground_truth.json": {
        "0": {
            "text": "The process starts when a student enters the library. The student then searches for books.  Next, the library staff checks the student's ID.  Following this check, the validity of the ID is assessed. If the ID is valid, the student receives the books and then leaves the library. If the ID is not valid, the student leaves the library.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search for books",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive books",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id4",
                        "name": "Enter library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "ID valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Library Staff",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Staff Lane",
                                "elemRefs": [
                                    "id2",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id6",
                        "condition": "no"
                    }
                ]
            }
        },
        "1": {
            "text": "The student enters the library.  They then search for books on the PC, followed by searching for physical books.  Next, library staff checks the student's ID.  If the ID is valid, the student receives their books and leaves the library. If the ID is not valid, the student leaves the library without books.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search for books on PC",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Search for books",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student ID",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id4",
                        "name": "Enter library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id5",
                        "name": "Receive books and leave library",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Leave library without books",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "ID Valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id10",
                        "name": "Library Staff",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Library Staff Lane",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id6",
                        "condition": "No"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a student enters the library.  The student then searches for books.  Next, the student goes to the checkout counter where library staff checks the student's ID.  If the ID is valid, the student receives the books and then leaves the library. If the ID is not valid, the student also leaves the library.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Search for books",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Go to checkout counter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check student's ID",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive books",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Enter library",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Leave library",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "ID valid?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id9",
                        "name": "Student",
                        "lanes": [
                            {
                                "id": "id10",
                                "name": "Student Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id11",
                        "name": "Library Staff",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Library Staff Lane",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "no"
                    }
                ]
            }
        }
    },
    "49_ground_truth.json": {
        "0": {
            "text": "The process begins when the customer places an order. The waiter communicates the order to the kitchen staff, sending it to the sous chef. The sous chef manages the order of cooking and sends it to the chef. The chef cooks the food and sends it back to the sous chef for checking. After checking the food, the sous chef calls the waiter to grab the food. The waiter then sends the food to the customer, communicating any necessary details. Finally, the customer receives and enjoys the food, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate Order to Waiter",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order to Sous Chef",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Manage Order of Cooking",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send Food to Sous Chef for Checking",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Check Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Call Waiter to Grab Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Send and Communicate Food to Customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Waiter Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Sous Chef Lane",
                                "elemRefs": [
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Chef Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the customer placing an order. The waiter receives the order and sends it to the kitchen. The sous chef manages the order and passes it to the chef. The chef cooks the food and sends it to the sous chef. The sous chef checks the food and calls the waiter. The waiter sends the food to the customer, who receives and enjoys the food. The process then ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Send Order to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Manage Order and Pass to Chef",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Cook Food",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Send Food to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Check Food",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Call Waiter",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Send Food to Customer",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "task1",
                                    "task9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Waiter Lane",
                                "elemRefs": [
                                    "task2",
                                    "task8"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Kitchen Lane",
                                "elemRefs": [
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task9",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the customer placing an order. The waiter communicates the order to the kitchen and sends the order to the sous chef. The sous chef manages the order of cooking and the food is cooked. The cooked food is sent to the sous chef for checking. After checking, the sous chef calls the waiter. The waiter grabs the food and sends it to the customer. Finally, the customer receives and enjoys the food, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate Order to Waiter",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order to Sous Chef",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Manage Order of Cooking",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send Food to Sous Chef",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Check Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Call Waiter",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Grab Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Send and Communicate Food to Customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Process Begin",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Waiter Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Kitchen Lane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_ground_truth.json": {
        "0": {
            "text": "The process starts when parts are required in the department of ACME AG.  The 'Parts in stock?' gateway is checked. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are out of stock, the requirements are specified and quantified by the department. Next, a purchase order is completed, also by the department. The purchase order is then checked by Central Purchasing. Subsequently, the 'Vendor known?' gateway is checked. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created, after which the order template is created from the purchase order. The purchase order is then approved by the approver.  Following this, the receipt of goods takes place within Central Purchasing. If the receipt of goods is successful, the process ends. If a delivery problem occurs during the receipt of goods, the order status is adjusted by Central Purchasing, and the process ends indicating cancellation due to delivery problems.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Complete a purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve parts from storage",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Check purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Create order template from purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create vendor",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Receipt of goods",
                        "type": "CollapsedSubprocess"
                    },
                    {
                        "id": "id8",
                        "name": "Adjust order status",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Approve purchase order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Parts retrieved from  storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Cancelled due to  delivery problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Delivery  Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Vendor  known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id10",
                                    "id11",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Approver",
                                "elemRefs": [
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Parts in stock"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Parts out of stock"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when parts are required in the department of ACME AG.  The 'Parts in stock?' gateway is checked. If the parts are in stock, they are retrieved from storage, after which the process ends. If the parts are not in stock, the requirements are specified and quantified. A purchase order is then completed. Next, the purchase order is checked by Central Purchasing. Subsequently, the 'Vendor known?' gateway is checked. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created.  After either creating the order template or the vendor, the purchase order is approved by the Approver.  The receipt of goods then takes place, handled by Central Purchasing.  If a \"Delivery Problems\" event occurs during the receipt of goods, the order status is adjusted, leading to the process ending due to cancellation. Otherwise, the process ends successfully with the parts procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task_1",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task_2",
                        "name": "Complete a purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task_3",
                        "name": "Retrieve parts from storage",
                        "type": "Task"
                    },
                    {
                        "id": "task_4",
                        "name": "Check purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task_5",
                        "name": "Create order template from purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task_6",
                        "name": "Create vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task_7",
                        "name": "Receipt of goods",
                        "type": "Task"
                    },
                    {
                        "id": "task_8",
                        "name": "Adjust order status",
                        "type": "Task"
                    },
                    {
                        "id": "task_9",
                        "name": "Approve purchase order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event_1",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event_2",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_3",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_4",
                        "name": "Cancelled due to delivery problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_5",
                        "name": "Delivery Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway_1",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_2",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool_1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane_1",
                                "name": "Department",
                                "elemRefs": [
                                    "event_1",
                                    "task_1",
                                    "task_2",
                                    "task_3",
                                    "gateway_1",
                                    "event_2"
                                ]
                            },
                            {
                                "id": "lane_2",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "task_4",
                                    "task_5",
                                    "task_6",
                                    "task_7",
                                    "gateway_2",
                                    "event_5",
                                    "event_3"
                                ]
                            },
                            {
                                "id": "lane_3",
                                "name": "Approver",
                                "elemRefs": [
                                    "task_9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "event_1",
                        "targetRef": "gateway_1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "gateway_1",
                        "targetRef": "task_3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "task_3",
                        "targetRef": "event_2"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "gateway_1",
                        "targetRef": "task_1",
                        "condition": "no"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "task_1",
                        "targetRef": "task_2"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "task_2",
                        "targetRef": "task_4"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "task_4",
                        "targetRef": "gateway_2"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "gateway_2",
                        "targetRef": "task_5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "gateway_2",
                        "targetRef": "task_6",
                        "condition": "no"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "task_5",
                        "targetRef": "task_9"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "task_6",
                        "targetRef": "task_9"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "task_9",
                        "targetRef": "task_7"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "task_7",
                        "targetRef": "event_3"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "event_5",
                        "targetRef": "task_8"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "task_8",
                        "targetRef": "event_4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when parts are required in the department of ACME AG. The first step is to check if the parts are in stock. If they are, the parts are retrieved from storage, and the process ends. If the parts are not in stock, the department specifies and quantifies the requirements and completes a purchase order.  Central purchasing then checks the purchase order. Next, it is determined whether the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, vendor management creates a new vendor.  After the order template is created or the vendor is created, the approver approves the purchase order. Central purchasing then handles the receipt of goods. If the receipt of goods is successful, the process ends. However, if there are delivery problems, the order status is adjusted, and the process ends with the order being cancelled due to delivery issues.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check if parts are in stock",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Retrieve parts from storage",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Complete a purchase order",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Check purchase order",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Create order template from purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Create vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Receipt of goods",
                        "type": "Task"
                    },
                    {
                        "id": "task10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Order cancelled due to delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Delivery problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Department",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "task4",
                                    "event1",
                                    "event2",
                                    "gateway1"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "task5",
                                    "task9",
                                    "event3",
                                    "event5",
                                    "gateway2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Approver",
                                "elemRefs": [
                                    "task8"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Vendor Management",
                                "elemRefs": [
                                    "task7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task2",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "No"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task9",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task9",
                        "targetRef": "event5"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "event5",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task10",
                        "targetRef": "event4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "61_ground_truth.json": {
        "0": {
            "text": "The process starts with an application for IMIS. The applicant first defines search criteria, then selects the master study course.  Next, the applicant selects \"Informatics and Digitalisation\" as the subject area and \"Campus Soest\".  The applicant clicks on \"Find a Study Course\", followed by clicking \"Learn more\" on the IMIS banner. The master study course is then selected, and the applicant clicks on \"See how to apply here\".  At this point, a decision is made based on whether the applicant is an EU applicant. If not, the applicant applies via Uni-Assist, checks the application procedure, sends the required documents to Uni-Assist, waits 10-12 weeks, and finally receives an admission/rejection letter. If the applicant is an EU applicant, a further decision is made based on whether they are an FH-SWF student or graduate. Regardless of this second decision, the applicant applies via the FH-SWF Online Portal and sends the required documents. If they are an FH-SWF student or graduate, they then contact the IMIS office, wait 4-6 weeks, and finally receive an admission/rejection letter.  If they are not an FH-SWF student or graduate, they also receive an admission/rejection letter after applying via the FH-SWF Online Portal and sending the required documents.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on \"Learn more\" on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait 10-12 weeks",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait 4-6 weeks",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an application for IMIS. The first step is to define search criteria, followed by selecting a master study course.  Next, either Informatics and Digitalisation is selected as the subject area, Campus Soest is selected, or both, before clicking on \"Find a Study Course\". The user then clicks on \"Learn more\" on the IMIS banner and selects the Master Study Course.  After clicking on \"See how to apply here\", the process branches based on whether the applicant is an EU applicant. If not, the applicant applies via Uni-Assist, checks the application procedure, sends the required documents to Uni-Assist, and waits for a decision (10-12 weeks). The process then ends with the receipt of an admission/rejection letter. If the applicant is an EU applicant, a further check determines if they are an FH-SWF student or graduate. If so, they apply via the FH-SWF Online Portal, send the required documents, contact the IMIS office, wait for a decision (4-6 weeks), and the process ends. If not an FH-SWF student or graduate, the EU applicant applies via the FH-SWF Online Portal, contacts the IMIS office, waits for a decision (4-6 weeks), and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on \"Learn more\" on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure and send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send required documents and contact the IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Apply via the FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact the IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id14",
                        "condition": "No"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id13",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with an application for IMIS. First, the search criteria are defined.  Next, the master study course is selected.  In parallel, \"Informatics and Digitalisation\" is selected as the subject area and \"Campus Soest\" is selected. Then, the user clicks on \"Find a Study Course\".  Following this, the user clicks on \"Learn more\" on the IMIS banner and selects the master study course.  The user then clicks on \"See how to apply here\".  Next, the process branches based on whether the applicant is an EU applicant. If so, the user applies via Uni-Assist, checks the application procedure, sends the required documents to Uni-Assist, and waits 10-12 weeks for a decision. If not, the process further branches based on whether the applicant is an FH-SWF student or graduate. If so, the user applies via the FH-SWF Online Portal, sends the required documents, contacts the IMIS office, and waits 4-6 weeks for a decision. If not, the user applies via the FH-SWF Online Portal, contacts the IMIS office, and waits 4-6 weeks for a decision.  Finally, the process ends with the receipt of an admission/rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on \"Learn more\" on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait 10-12 weeks for decision",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Apply via the FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Contact the IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Wait 4-6 weeks for decision",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id18",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "33_ground_truth.json": {
        "0": {
            "text": "The SoKnow process begins with an analysis of technology needs.  Then, market analysis and idea generation happen in parallel. The generated ideas are reviewed.  Both the market analysis and the idea review inform a decision about whether the idea is approved. If the idea is not approved, the process ends with the idea being rejected. If the idea is approved, the approval is noted and the process ends with new technologies discovered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze technology needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct market analysis",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate ideas",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Decide on idea",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Note approval",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Idea rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New technologies discovered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Idea approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The SoKnow process begins with an analysis of technology needs.  This is followed by two parallel paths: conducting a market analysis and generating ideas. Once both the market analysis and the idea generation are complete, the ideas are reviewed.  After the review, a decision is made on the idea.  This decision is then subject to approval. If the idea is not approved, the process ends with the idea being rejected. If the idea is approved, the approval is noted, and the process ends with new technologies discovered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze technology needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct market analysis",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate ideas",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Decide on idea",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Note approval",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Idea rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New technologies discovered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Approve idea?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the SoKnow process beginning.  First, the technology needs are analyzed. Then, market analysis is conducted and ideas are generated, in parallel. The generated ideas are then reviewed.  Subsequently, the market analysis and the reviewed ideas are considered to decide on idea approval. If the idea is not approved, the process ends with the idea being rejected. If the idea is approved, the approval is noted, and the process ends with new technologies being discovered.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Analyze technology needs",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct market analysis",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Generate ideas",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review ideas",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Decide on idea approval",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Note approval",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Idea rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New technologies discovered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Idea approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "55_ground_truth.json": {
        "0": {
            "text": "The process starts. The first step is to complete a task.  Next, a decision is made on whether information needs passing. If no, the process proceeds to check if Jane Doe is reachable. If yes, the information is documented before proceeding to check if Jane Doe is reachable.  If Jane Doe is reachable, the completion report is submitted, and the process ends with the completion report submitted. If Jane Doe is not reachable, the process involves retrying to reach the contact, after which the process ends, indicating that the completion report cannot be submitted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Complete Task",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Document Information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Submit Completion Report",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Retry Reaching Contact",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id_start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Completion Report Submitted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Cannot Submit Completion Report",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id2",
                        "name": "Information Needs Passing",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id5",
                        "name": "Jane Doe Reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id_start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id2",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id5",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a Start event. The first step is to complete a task. Next, a decision is made whether information needs to be passed on. If yes, the information is passed on and then documented.  Regardless of whether information was passed on, the next step is to contact Jane Doe.  After attempting to contact Jane Doe, a decision is made whether Jane Doe was reachable. If Jane Doe was reachable, a completion report is submitted, and the process ends with \"Completion Report Submitted\". If Jane Doe was not reachable, attempts to reach Jane Doe are repeated, after which the process ends with \"Completion Report cannot be submitted\".\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Complete Task",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Pass on Information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Document Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact Jane Doe",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit Completion Report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Repeat attempts to reach Jane Doe",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Completion Report Submitted",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Completion Report cannot be submitted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Information needs to be passed on?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Jane Doe reachable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "64_ground_truth.json": {},
    "78_ground_truth.json": {
        "0": {
            "text": "The process starts with a requirement being recorded.  Next, offers are obtained and reviewed.  If an offer exceeds 2000, the offer is approved, and then the goods are ordered. If the offer is not greater than 2000, the goods are ordered directly.  After ordering, the delivery timeliness is checked. If the delivery is not on time, a new delivery deadline is set, and the delivery timeliness is checked again. If the delivery is on time, the final acceptance is conducted, and the goods are sent to receipt.  The delivery is then inspected. If the delivery is complete, the delivery is confirmed, payment is initiated, and the process is forwarded to accounting/controlling, after which the process ends. If the delivery is not complete, the supplier is contacted, a new delivery is requested, and the delivery timeliness is checked again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Requirement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain and Review Offers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Approve Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check Delivery Timeliness",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Set New Delivery Deadline",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Final Acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Goods to Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Inspect Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Initiate Payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Forward to Accounting/Controlling",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Contact Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Request New Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Purchase of Office Supplies",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Offer > 2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Delivery Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with recording the requirement. Next, offers are obtained and reviewed.  If the offer exceeds \\u20ac2000, the offer is approved. Otherwise, the goods are ordered. After offer approval, the goods are also ordered. Subsequently, the delivery timeliness is checked. If the delivery is not on time, a new delivery deadline is set, and the delivery timeliness is checked again. If the delivery is on time, the final acceptance is conducted. The goods are then sent to goods receipt, and the delivery is inspected. If the delivery is complete, the delivery is confirmed. Otherwise, the supplier is contacted, and a new delivery is requested, after which the delivery timeliness is checked again. After the delivery is confirmed, payment is initiated, and the process is forwarded to accounting/controlling, finally ending the process for purchasing office supplies.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Requirement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain and Review Offers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Approve Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order Goods",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check Delivery Timeliness",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Set New Delivery Deadline",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Final Acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send to Goods Receipt",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Inspect Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Initiate Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Forward to Accounting/Controlling",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Contact Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Request New Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Purchase of Office Supplies",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Offer > \u20ac2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery On Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Delivery Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a requirement being recorded.  Next, offers are obtained and reviewed. If the offer is greater than 2000, the offer is approved.  Otherwise, the goods are ordered. If the offer *was* greater than 2000, *then* after approval, the goods are ordered.  Following the order, the delivery timeliness is checked. If the delivery is not on time, a new delivery deadline is set, and the delivery timeliness is checked again. If the delivery *is* on time, the final acceptance is conducted. After the final acceptance, the goods are sent to receipt. The delivery is then inspected. If the delivery is complete, the delivery is confirmed. Otherwise, the supplier is contacted, and a new delivery is requested, after which the delivery timeliness is checked again.  After the delivery is confirmed, payment is initiated. The payment is then forwarded, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record Requirement",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain and Review Offers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Approve Offer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Order Goods",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check Delivery Timeliness",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Set New Delivery Deadline",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Final Acceptance",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Goods to Receipt",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Inspect Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Initiate Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Forward Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Contact Supplier",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Request New Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Purchase Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Offer > 2000?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Delivery on Time?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Delivery Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "36_ground_truth.json": {
        "0": {
            "text": "The SoKnow process begins with the formulation of a consulting service by the Consulting Team.  The Consulting Team then analyzes the results of workshops, develops new strategic opportunities, and formulates a report with results and objectives.  This report is then sent to the Management Team. The Management Team reads the report and checks if it is in order. If the report is not in order, it is sent back to the Consulting Team for correction, who then rechecks the report and sends it back to the Management Team for review. This loop continues until the Management Team determines the report is in order.  Once the report is deemed in order, the Management Team forwards the report and the Consulting Team formulates the consulting service, after which the process ends with the formulation of the consulting service.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Formulate consulting service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze results of workshops",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Develop new strategic opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Formulate report with results and objectives",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Read report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check if report is in order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send report back for correction",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Recheck report",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Forward report",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Formulate consulting service",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Formulation of consulting service",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Report in order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Consulting Team",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Consulting Team Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Management Team",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Management Team Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The SoKnow process begins within the Consulting Team.  First, the Consulting group formulates a consulting service.  Next, they analyze workshop results, followed by the development of new strategic opportunities.  The Consulting group then formulates a report, which is subsequently read by the Management Team. Management then decides if the report is in order. If not, the Consulting group corrects the report, which is then rechecked by Management. This correction and recheck loop continues until Management deems the report to be in order. Once the report is approved, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Formulate Consulting Service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze Workshop Results",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Develop New Strategic Opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Formulate Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Read Report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Correct Report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Recheck Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Formulate Consulting Service",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report in Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Consulting Team",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Consulting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Management Team",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Management",
                                "elemRefs": [
                                    "id5",
                                    "id7",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The SoKnow process begins with the Consulting Team formulating a consulting service.  Next, the Consulting Team analyzes workshop results and develops new strategic opportunities.  A report is then formulated by the Consulting Team and sent to the Management Team to read. The Management Team then decides if the report is in order. If not, the Consulting Team corrects the report, which is then rechecked by the Management Team. This correction and recheck cycle continues until the Management Team deems the report to be in order. Once the report is deemed in order by the Management Team, the process ends with the consulting service formulated.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Formulate Consulting Service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Analyze Workshop Results",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Develop New Strategic Opportunities",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Formulate Report",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Read Report",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Correct Report",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Recheck Report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Consulting Service Formulated",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Report in Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Consulting Team",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Consulting",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id13",
                        "name": "Management Team",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Management",
                                "elemRefs": [
                                    "id5",
                                    "id7",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "50_ground_truth.json": {
        "0": {
            "text": "The process starts with the initiation of a new marketing campaign at SoKnow. Management plans the focal points, which are then used by the marketing department to design ideas and define specifications.  Next, the external marketing agency creates drafts. The marketing department receives and evaluates these drafts and subsequently votes on them.  If the vote is negative, the external marketing agency is requested to create new drafts, which are then re-evaluated by the marketing department, leading back to the voting process. If the vote is positive, SoKnow's management is informed. Management re-evaluates the drafts and makes a decision. If management's evaluation is negative, the process loops back to requesting new drafts from the agency. If the evaluation is positive, management gives the green light. The marketing department then conducts the campaign and finally commissions the external marketing agency for execution, after which the marketing campaign is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan focal points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design ideas and define specifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create drafts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive and evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Vote on drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request new drafts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Give green light",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Conduct campaign",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Commission agency for execution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Initiate new marketing campaign",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Marketing campaign completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Vote result?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Management evaluation?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "External Marketing Agency",
                        "elemRefs": [
                            "id3",
                            "id6",
                            "id12"
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the initiation of a new marketing campaign at SoKnow. First, the management plans the focal points.  Then, the marketing department designs ideas and defines specifications. Next, the external marketing agency creates drafts. The marketing department receives and evaluates these drafts and votes on them. If the vote is negative, the external marketing agency is asked to create new drafts, which are then re-evaluated by the marketing department, leading back to the vote. If the vote is positive, the management re-evaluates the drafts. Management's evaluation can lead to asking the external marketing agency for new drafts, which are then re-evaluated by the marketing department and voted on again. Alternatively, if management's evaluation is positive, the marketing department conducts the campaign, after which the process ends with the marketing campaign completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan focal points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design ideas and define specifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create drafts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive and evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct campaign",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ask for new drafts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Initiation of new marketing campaign",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Marketing campaign completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Vote",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Management's Evaluation",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "External Marketing Agency",
                        "elemRefs": [
                            "id3",
                            "id8"
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the initiation of a new marketing campaign at SoKnow.  First, SoKnow management plans the focal points.  Next, the marketing department designs ideas and defines specifications.  The external marketing agency then creates drafts, which the marketing department receives and evaluates.  If the vote is positive, the marketing department informs management.  Otherwise, the external marketing agency is asked to create new drafts, which are then re-evaluated by the agency and sent back to the marketing department for evaluation.  After management is informed, they re-evaluate the drafts.  Depending on management's evaluation, either the external marketing agency is asked for new drafts, which are then re-evaluated by the agency and sent back to the marketing department for evaluation, or management gives the green light.  Finally, the marketing department conducts the campaign, after which the process ends with the marketing campaign completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Plan focal points",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design ideas and define specifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create drafts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive and evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Inform management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Re-evaluate drafts",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Give green light",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct campaign",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Ask for new drafts",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Initiation of new marketing campaign",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Marketing campaign completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Vote?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Management evaluation?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": [
                                    "id1",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id6",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "External Marketing Agency",
                        "elemRefs": [
                            "id3",
                            "id5",
                            "id10"
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "80_ground_truth.json": {
        "0": {
            "text": "The process starts with personnel administration. First, the personnel administrator manages personnel accounting. Then, the payroll system starts the payroll program.  The personnel administrator then controls the automated debits. Next, the payroll system calculates labor costs, pays salaries and social contributions, and then pays health insurance and additional costs. Following this, the personnel administrator enters bonuses. Financial accounting then controls the financial accounting. Finally, the invoicing system sends an invoice, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage personnel accounting",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start payroll program",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Control automated debits",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate labor costs",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Pay salaries and social contributions",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Pay health insurance and additional costs",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Enter bonuses",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Control financial accounting",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send invoice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Personnel accounting complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Personnel Administration",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Personnel Administrator",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Payroll System",
                                "elemRefs": [
                                    "id2",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Financial Accounting",
                                "elemRefs": [
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Invoicing System",
                                "elemRefs": [
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the SoKnow process begins event.  Personnel accounting is then managed.  Next, the payroll program is started. Automated debits are controlled.  Labor costs are calculated. Salaries and social contributions are paid. Health insurance and additional costs are paid. Bonuses are entered. Financial accounting is controlled. Finally, an invoice is sent, after which personnel accounting is complete, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage personnel accounting",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start payroll program",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Control automated debits",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate labor costs",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Pay salaries and social contributions",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Pay health insurance and additional costs",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Enter bonuses",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Control financial accounting",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send invoice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Personnel accounting complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the beginning of the SoKnow process.  Personnel accounting is managed, followed by starting the payroll program. Automated debits are then controlled.  Next, labor costs are calculated.  This calculation triggers two parallel paths: one where salaries and social contributions are paid and another where health insurance and additional costs are paid.  Once both payments are completed, bonuses are entered.  Following this, financial accounting is controlled. Finally, an invoice is sent, and the process ends with the completion of personnel accounting.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Manage personnel accounting",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Start payroll program",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Control automated debits",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate labor costs",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Pay salaries and social contributions",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Pay health insurance and additional costs",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Enter bonuses",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Control financial accounting",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send invoice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SoKnow process begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Personnel accounting complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "48_ground_truth.json": {
        "0": {
            "text": "The process starts with an order intake.  A knowledge management system is purchased, after which adjustment requests are received. Adjustments are then made and a notification is sent.  Next, a search for a test group is conducted, followed by the execution of tests. The test results are then evaluated. If the test results are negative, adjustments are made again. If the test results are positive, test group workshops are conducted, and employees are trained. Following the training, adjustment requests are received. Information about these adjustment requests is then sent. If there are adjustment requests, adjustments are made, and the customer is informed about the finished product. If there are no adjustment requests, the customer is also informed about the finished product.  Finally, if the adjustments are satisfactory, the knowledge management system is implemented, and the order is completed. If the adjustments are not satisfactory, further adjustments are made.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Purchase knowledge management system",
                        "type": "ServiceTask"
                    },
                    {
                        "id": "id2",
                        "name": "Make adjustments",
                        "type": "UserTask"
                    },
                    {
                        "id": "id3",
                        "name": "Send notification",
                        "type": "ServiceTask"
                    },
                    {
                        "id": "id4",
                        "name": "Search for test group",
                        "type": "UserTask"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct tests",
                        "type": "UserTask"
                    },
                    {
                        "id": "id6",
                        "name": "Evaluate test results",
                        "type": "UserTask"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct test group workshops",
                        "type": "UserTask"
                    },
                    {
                        "id": "id8",
                        "name": "Train employees",
                        "type": "UserTask"
                    },
                    {
                        "id": "id9",
                        "name": "Inform about adjustment requests",
                        "type": "ServiceTask"
                    },
                    {
                        "id": "id10",
                        "name": "Make adjustments",
                        "type": "UserTask"
                    },
                    {
                        "id": "id11",
                        "name": "Inform customer about finished product",
                        "type": "ServiceTask"
                    },
                    {
                        "id": "id12",
                        "name": "Implement knowledge management system",
                        "type": "ServiceTask"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Receive adjustment requests",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Receive adjustment requests",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Test results?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id18",
                        "name": "Adjustment requests?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id19",
                        "name": "Adjustments satisfactory?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Negative"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "Positive"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The SoKnow process begins with order intake.  Next, the purchase knowledge management system is used.  Following this, adjustment requests are received. Adjustments are then made. A notification is sent, and a search for a test group is conducted. Tests are conducted, and the test results are evaluated. If the test results are negative, adjustments are made again. If the test results are positive, test group workshops are conducted.  After the workshops, employees are trained, and information about adjustment requests is shared. If there are adjustment requests, adjustments are made. If there are no adjustment requests, the adjustments are checked for satisfaction. If the adjustments are not satisfactory, adjustments are made again. If the adjustments are satisfactory, the knowledge management system is implemented, and the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order Intake",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Knowledge Management System",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Adjustment Requests",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Make Adjustments",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Notification",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Search for Test Group",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Tests",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate Test Results",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct Test Group Workshops",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Train Employees",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Inform about Adjustment Requests",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Check Adjustments Satisfactory",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Implement Knowledge Management System",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Test Results?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Adjustment Requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Adjustments Satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Negative"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "Positive"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The SoKnow process begins with an order intake.  Next, the purchase knowledge management system is used.  Following this, adjustment requests are received. Adjustments are then made and a notification is sent.  A search for a test group is conducted, followed by the conducting of tests. The test results are then evaluated. If the test results are negative, adjustments are made again. If the test results are positive, test group workshops are conducted. After the workshops, employees are trained.  Then, information about adjustment requests is shared. If there are adjustment requests, further adjustments are made. If there are no adjustment requests, the customer is informed about the finished product. The customer then checks if the adjustments are satisfactory. If they are not satisfactory, adjustments are made again. If the adjustments are satisfactory, the knowledge management system is implemented, and the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order Intake",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase Knowledge Management System",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Adjustment Requests",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Make Adjustments",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Notification",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Search for Test Group",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Tests",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Evaluate Test Results",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Conduct Test Group Workshops",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Train Employees",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Inform about Adjustment Requests",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Inform Customer about Finished Product",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Check Adjustments Satisfactory",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Implement Knowledge Management System",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Test Results?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Adjustment Requests?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Adjustments Satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "Negative"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "Positive"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id13",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "60_ground_truth.json": {
        "0": {
            "text": "The process starts with introducing change processes.  Next, new strategies and opportunities are received. These new strategies are then communicated.  Suitable systems are selected and implemented. The implemented systems are then communicated.  Following this, the change processes within the project are coordinated. Finally, consultations about the change processes take place in working groups, and the process ends with the change process being introduced.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Introduce change processes",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Receive new strategies and opportunities",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Communicate new strategies",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Select suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Implement suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate implemented systems",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Coordinate change processes within the project",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Consult about change processes (working groups)",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Change process introduced",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the introduction of change processes. New strategies and opportunities are received. Then, the new strategies are communicated. Suitable systems are selected and implemented. The implemented systems are then communicated.  Following this, change processes within the project are coordinated. Finally, consultation about the change processes takes place, and the process ends with the change process being introduced.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new strategies and opportunities",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate new strategies",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Select suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Implement suitable systems",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate implemented systems",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate change processes within the project",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Consult about change processes",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Introduction of change processes",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Change process introduced",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the introduction of change processes.  New strategies and opportunities are received. Then, the new strategies are communicated. Suitable systems are selected and implemented. The implemented systems are then communicated.  Following this, change processes within the project are coordinated. Finally, there are consultations about the change processes with working groups, after which the change process is considered introduced.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive new Strategies and Opportunities",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate New Strategies",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Select Suitable Systems",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Implement Suitable Systems",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate Implemented Systems",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Coordinate Change Processes within Project",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Consult about Change Processes (Working Groups)",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Introduction of Change Processes",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Change Process Introduced",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "32_ground_truth.json": {
        "0": {
            "text": "The process starts with the planning of a patient's discharge. The first step is to set the discharge date.  Following this, three tasks are carried out in parallel: discuss further course with patient/relatives, determine medical care needs, and assess nursing care needs. Once all three parallel tasks are completed, the supply facility is defined. Subsequently, two further parallel tasks are initiated: create doctor's letter and check if social services are required.  Based on whether social services are required or not, the process branches. If social services are required, further care services are initiated, followed by the creation of discharge documentation. If social services are not required, the discharge documentation is created directly.  After the doctor's letter is created and the discharge documentation is completed, these parallel tasks converge. Finally, advanced tasks for discharge are carried out, and the process ends with the patient's discharge.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set Discharge Date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Discuss Further Course with Patient/Relatives",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine Medical Care Needs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess Nursing Care Needs",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create Doctor's Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Define Supply Facility",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if Social Services Required",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate Further Care Services",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create Discharge Documentation",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Carry Out Advanced Tasks for Discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Plan Discharge",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Discharge",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Split 2",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Social Services Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Parallel Join 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the start of discharge planning. The first step is to set the discharge date.  After the discharge date is set, the next step is to discuss the further course of action with the patient and their relatives.  Concurrently, the medical care needs and nursing care needs are assessed. Once the discussion with the patient and relatives is complete, and the medical and nursing care needs have been assessed, the supply facility is defined.  Following this, the doctor's letter is created.  Next, a check is performed to determine if social services are required. If social services are required, further care services are initiated. Regardless of whether social services are required, the discharge documentation is created. Finally, advanced tasks for discharge are carried out, and the process ends with the discharge of the patient.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set discharge date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Discuss further course of action with patient and relatives",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if social services are required",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create discharge documentation",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Carry out advanced tasks for discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Discharge planning starts",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Discharge",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Social services required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the planning of a patient's discharge. The first step is to set the discharge date.  Then, further course of action is discussed with the patient and their relatives. Concurrently, the medical care needs and nursing care needs are assessed.  After discussing the course of action and assessing the care needs, the supply facility is defined.  Next, a doctor's letter is created and it is determined whether social services are required. If social services are required, further care services are initiated, and discharge documentation is created. If social services are not required, discharge documentation is created directly.  Regardless of whether social services are required, the next step is to carry out advanced tasks for the discharge. Finally, another doctor's letter is created after the first one, and the process ends with the patient's discharge.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set discharge date",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Discuss further course of action with patient and relatives",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine medical care needs",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assess nursing care needs",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Define supply facility",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create doctor's letter",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Initiate further care services",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create discharge documentation",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create discharge documentation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Carry out advanced tasks for discharge",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Plan Discharge",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Discharge",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Social services required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Parallel"
                    },
                    {
                        "id": "id17",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id15",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "54_ground_truth.json": {
        "0": {
            "text": "The process starts with the initiation of a World of Warcraft subscription.  The user then sends a subscription form. Next, the user selects a payment method. Based on the chosen payment method, the process branches. If the user selects \"Credit Card\", they are prompted to enter their credit card information. If the user selects \"Bank Account\", they are prompted to enter their IBAN and BIC.  After providing the respective payment information, the user submits it.  Finally, the World of Warcraft subscription is activated, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Active WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Initiate WoW subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a none start event. First, a subscription form is sent. Next, the user selects a payment method. Based on the payment method chosen, the process branches. If the payment method is \"Credit Card\", the user enters their credit card information. If the payment method is \"Bank Account\", the user enters their IBAN and BIC.  Following either path, the user submits their payment information.  The WoW subscription is then activated. Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Payment Method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter Credit Card Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit Payment Information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW Subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW Subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the initiation of a WoW subscription.  The user then sends a subscription form. Next, the user selects a payment method. Based on the chosen payment method, the process branches. If the user selects \"Credit Card\", they are prompted to enter their credit card information. If the user selects \"Bank Account\", they are prompted to enter their IBAN and BIC.  After providing the respective payment information, the user submits it.  Finally, the WoW subscription is activated, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Subscription Form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Payment Method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter Credit Card Information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit Payment Information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW Subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Initiate WoW Subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW Subscription Ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "65_ground_truth.json": {
        "0": {
            "text": "The process starts with the realization that corporate designs are outdated within SoKnow's marketing department. A brainstorming session is conducted by the marketing department.  Next, the designers design a new element. The reviewers then review the design. If the design is satisfactory, the designers create templates. If not, the designers revise the design and the review process repeats. Once templates are created, the marketing department reviews them. If the templates are satisfactory, the marketing department communicates with management.  Otherwise, the design is revised, and the process loops back to template creation and review. After communicating with management, if management is satisfied, the process ends with the new corporate designs being used. If management is not satisfied, the design is revised, and the process cycles back to the designers.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Brainstorming Session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design New Element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review Templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with Management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Revise Design",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Corporate Designs Outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New Corporate Designs Used",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Design Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Templates Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Management Satisfactory?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designers",
                                "elemRefs": [
                                    "id2",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Reviewers",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Management",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the corporate designs are outdated at SoKnow. The marketing department starts by conducting a brainstorming session.  Next, the designers design a new element. The reviewer then reviews the design. If the design is satisfactory, the template creator creates templates. If not, the designers revise the design and the review process repeats. Once templates are created, the marketing department reviews them. If the templates are satisfactory, they are sent to management for communication and approval. If not, the design is revised again, restarting the design, review, and template creation cycle. After communicating with management, they decide whether to approve the designs. If management approves, the process ends, and the new corporate designs are used. If management does not approve, the design is revised, and the process loops back to the design phase.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Brainstorming Session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design New Element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review Templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with Management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Revise Design",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Corporate Designs Outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New Corporate Designs Used",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Design Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Templates Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Management Approval?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Designers",
                                "elemRefs": [
                                    "id2",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Management",
                                "elemRefs": [
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Reviewer",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Template Creator",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when the corporate designs are outdated. The marketing department conducts a brainstorming session.  Next, the designers design a new element. The design is then reviewed. If the design is satisfactory, templates are created. If not, the design is revised and reviewed again. Once the templates are created, the marketing department reviews them. If the templates are satisfactory, the marketing department communicates with management.  If not, the design is revised and the process loops back to the review stage. After communicating with management, a decision on management approval is made. If management approves, the process ends with new corporate designs being used. If management does not approve, the design is revised, and the process loops back to the review stage.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Conduct Brainstorming Session",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Design New Element",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Review Design",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Templates",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Review Templates",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Communicate with Management",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Revise Design",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Corporate Designs Outdated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "New Corporate Designs Used",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Design Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Templates Satisfactory?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Management Approval?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "SoKnow",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Marketing Department",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Designers",
                                "elemRefs": [
                                    "id2",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Management",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "37_ground_truth.json": {
        "0": {
            "text": "The SoKnow process begins with the HR Representative organizing employee interviews.  Appointment suggestions are then sent to the Interviewee.  Following this, two parallel paths are initiated. The HR Representative conducts the employee interview and subsequently assigns training.  Concurrently, the HR Representative makes regular inquiries. These two paths converge when the assigned training is complete and regular inquiries have concluded.  Meanwhile, after receiving the appointment suggestions, the Interviewee confirms the appointment, participates in the interview, and completes the training. The Interviewee's path also merges with the HR Representative's path at the same convergence point. Finally, the HR Representative marks the employee interview as conducted, and the process ends with the training completed and the interview conducted.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Appointment Suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Employee Interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign Training",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Make Regular Inquiries",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in Interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Training",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Mark Employee Interview as Conducted",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Training Completed and Interview Conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Post-Suggestion Activities",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Process Completion",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "HR Department",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "HR Representative",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Employee",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Interviewee",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with \"SoKnow Process Begins\".  First, employee interviews are organized, followed by sending appointment suggestions.  Then, the process forks into two parallel paths: one where the employee interview is conducted, and another where regular inquiries are made.  After the interview, training is assigned.  Both the training assignment and the regular inquiries converge, after which the employee interview is marked as conducted.  Concurrently, after the appointment suggestions are sent, the appointment is confirmed, leading to participation in the interview, and finally, completion of the training. The completed training and the marked interview then converge, and the process ends with \"Training Completed and Interview Conducted\".\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Appointment Suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Employee Interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign Training",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Make Regular Inquiries",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in Interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Training",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Mark Employee Interview as Conducted",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Training Completed and Interview Conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Interview and Inquiries",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Complete Process",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The SoKnow process begins by organizing employee interviews.  Appointment suggestions are then sent, after which the process branches in two parallel paths. In the first path, the employee interview is conducted, and subsequently, training is assigned. In the second parallel path, regular inquiries are made.  The two paths converge after the training has been assigned and the inquiries have been made.  Concurrently, after the appointment suggestions are sent, the appointment is confirmed, and the employee participates in the interview.  Following the interview, the employee completes the training. Finally, the employee interview is marked as conducted, after which the training is considered completed and the interview conducted, thus ending the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize Employee Interviews",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Appointment Suggestions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct Employee Interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Assign Training",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Make Regular Inquiries",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Participate in Interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Training",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Mark Employee Interview as Conducted",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "SoKnow Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Training Completed & Interview Conducted",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Branch after Sending Suggestions",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Join after Interview and Inquiries",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "79_ground_truth.json": {
        "0": {
            "text": "Frank's lunch break begins with selecting lunch.  Frank decides between Pizza or Noodles. If Frank chooses Pizza, he then decides to order Online or by Phone. If ordering Online, Frank places the order online and waits for the pizza. If ordering by Phone, Frank calls the Pizza Delivery and the Pizza Delivery receives the order. The Pizza Delivery then prepares the pizza, delivers it, and hands it over to Frank.  Frank receives the pizza and pays for it, and the Pizza Delivery accepts the payment.  Frank's lunch break then ends. If Frank chooses Noodles, he prepares the noodles by boiling water and preparing the sauce.  He adds the noodles to the boiling water and cooks them while simultaneously cooking the sauce. When both the noodles and sauce are cooked, he mixes them.  Frank then eats his meal, and his lunch break ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Lunch",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order Online",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Call Pizza Delivery",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Handover Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Pay for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Accept Payment",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Boil Water",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Add Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Cook Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Cook Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Mix Noodles and Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Eat Meal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id21",
                        "name": "Lunch Break Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Lunch Break Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Pizza or Noodles?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Online or Phone?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Noodles and Sauce Cooked?",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id26",
                        "name": "Frank",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Frank's Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id10",
                                    "id11",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id21",
                                    "id22",
                                    "id23",
                                    "id24",
                                    "id25"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Pizza Delivery",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Pizza Delivery Lane",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id23",
                        "targetRef": "id24",
                        "condition": "Pizza"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id2",
                        "condition": "Online"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id24",
                        "targetRef": "id3",
                        "condition": "Phone"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id23",
                        "targetRef": "id13",
                        "condition": "Noodles"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id17",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id18",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id25",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id20",
                        "targetRef": "id22"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with the beginning of the lunch break.  The first step is choosing lunch. Then, a decision is made between pizza or noodles. If pizza is chosen, the next step is to select an order method.  Another decision follows, choosing between ordering online or by phone. If ordering online is chosen, the order is placed online, and the customer waits for the pizza.  Concurrently, after the online order is placed, the order is received, the pizza is prepared, and then delivered. The pizza is then handed over to the customer, who receives the pizza and pays for it. Finally, the payment is accepted. If ordering by phone is chosen after selecting pizza, the order is made by phone, and the process continues with the handover of the pizza. If noodles are chosen instead of pizza, noodles are prepared.  This involves boiling water and preparing the sauce concurrently.  Once the water is boiled, noodles are added and cooked for 8 minutes.  At the same time, the sauce is cooked for 10 minutes. After the noodles and sauce are cooked, they are mixed. Finally, the meal is eaten. The process ends when the lunch break ends, regardless of whether pizza or noodles were chosen.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose Lunch",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Order Method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Place Order Online",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver Pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Handover Pizza",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Pay for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Accept Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Order by Phone",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Boil Water",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Add Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Cook Noodles (8 min)",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Cook Sauce (10 min)",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Mix Noodles and Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Eat Meal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id21",
                        "name": "Lunch Break Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Lunch Break Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Pizza or Noodles?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Online or Phone?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id25",
                        "sourceRef": "id21",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id23",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id24",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id24",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id11",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id23",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id20",
                        "targetRef": "id22"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the beginning of the lunch break.  The first step is to choose a preferred lunch. Then, a decision is made between pizza or noodles. If pizza is chosen, the next step is to select an order method.  Another decision follows, choosing between ordering online or by phone. If ordering online, the order is placed online, and the person waits for the pizza.  Concurrently, the restaurant receives the order, prepares the pizza, delivers it, and hands it over.  Once the pizza arrives, or the waiting time is over, the pizza is received, payment is made, the restaurant accepts the payment, and the lunch break ends. If the phone order option is chosen, the order is placed by phone, and the lunch break ends. If noodles are chosen instead of pizza, the noodles are prepared.  This involves boiling water and preparing the sauce concurrently. Once the water is boiled, the noodles are added and cooked for 8 minutes.  The sauce is cooked for 10 minutes. When both the noodles and the sauce are cooked, they are mixed. Finally, the meal is eaten, and the lunch break ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose preferred lunch",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Order Method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order Online",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Order",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare Pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver Pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Handover Pizza",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Receive Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Pay for Pizza",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Accept Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Order by Phone",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Boil Water",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Prepare Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Add Noodles",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Cook Noodles (8 mins)",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Cook Sauce (10 mins)",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Mix Noodles and Sauce",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Eat Meal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id22",
                        "name": "Lunch Break Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Lunch Break Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Pizza or Noodles?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Online or Phone?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Noodles and Sauce Cooked?",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id22",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id24",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id25",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id25",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id24",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id18",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id19",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id26",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id21",
                        "targetRef": "id23"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "51_ground_truth.json": {
        "0": {
            "text": "The process starts with retrieving the activity representation. Then, two tasks are performed in parallel: creating a requirement profile and creating a job posting. Once both parallel tasks are completed, the documents are filed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with retrieving the activity representation. Then, two parallel paths are initiated: creating a requirement profile and creating a job posting.  Once both the requirement profile and the job posting are created, the documents are filed.  Finally, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id8",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with retrieving the activity representation. Then, two parallel paths are initiated: creating a requirement profile and creating a job posting. Once both tasks are completed, the documents are filed, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve activity representation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create job posting",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "File documents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "id8",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id9",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id1",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "81_ground_truth.json": {
        "0": {
            "text": "The process starts when Accentis sales receives a sales enquiry. An enquiry is then created, and a decision is made whether the enquiry is inbound or outbound. If the enquiry is inbound, a contact is created. If it is outbound, the enquiry is updated.  In both cases, customer approval is then sent and received. Next, a decision is made on whether the price is approved. If the price is not approved, the enquiry status is updated to \"Not Approved\", and the process ends with the enquiry not being approved. If the price is approved, a quote is created. Following this, a qualified requirements analysis is performed, and the enquiry status is updated. Finally, a job is created, and the process ends with the job created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Update Enquiry Status (Not Approved)",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Qualified Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Receive Sales Enquiry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Enquiry Not Approved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Sales",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id11",
                                    "id14",
                                    "id4",
                                    "id5",
                                    "id15",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a sales enquiry is received.  If the enquiry is inbound, a contact is created, and if it is outbound, the enquiry is updated.  Regardless of whether the enquiry is inbound or outbound, the enquiry is also created. After the enquiry is created, the price is qualified. Next, customer approval is sent and received. The process then checks if the price is approved. If the price is not approved, the enquiry status is updated to \"Not Approved\", and the process ends with the client not approving. If the price is approved, a quote is created.  After the quote is created, a qualified requirements analysis is performed.  Then, the enquiry status is updated. Finally, a job is created, and the process ends with the job created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Qualify Price",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update Enquiry Status (Not Approved)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Qualified Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Receive Sales Enquiry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Client Does Not Approve",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Not Approved"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "Approved"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a sales enquiry is received. An enquiry is then created and the process branches based on whether it's inbound or outbound. If inbound, a contact is created. If outbound, the enquiry is updated.  Both branches converge to check if the price is approved. If not approved, the enquiry status is updated (Not Approved) and the process ends with the client not approving. If the price is approved, a quote is created.  Following this, a qualified requirements analysis is performed, and the enquiry status is updated. Finally, a job is created, and the process ends with the job created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Qualify Price - OK & Interest",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update Enquiry Status (Not Approved)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Qualified Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Receive Sales Enquiry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Client Does Not Approve",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Not Approved"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "Approved"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "0_ground_truth.json": {
        "0": {
            "text": "The process begins with the receipt of an application at the ACME AG Human Resources Department. A receipt confirmation is sent to the applicant.  The Human Resources Department verifies the applicant and determines the application status. If the application is rejected, a rejection is sent to the applicant, and the process ends. If the application is not rejected, an invitation to interview is sent to the applicant. The Human Resources Department prepares an employment agreement and carries out the job interview.  Following the interview, the applicant's suitability is determined. If the applicant is not suitable, a rejection is sent to the applicant, and the process ends. If the applicant is suitable, an employment contract is sent to the applicant, and the process ends when the signed employment contract is received.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "SendTask"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "UserTask"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "SendTask"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to interview",
                        "type": "SendTask"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "UserTask"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "SendTask"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Application rejected?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id14",
                        "name": "Applicant suitable?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id10",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of an application at the ACME AG Human Resources Department.  A receipt confirmation is sent to the applicant, after which the applicant is verified by the Human Resources Department. Next, the Head of Human Resources determines the application status.  A decision is made whether the application is rejected. If the application is rejected, a rejection is sent to the applicant, and the process ends. If the application is not rejected, an invitation to interview is sent to the applicant by the Human Resources Department.  In preparation for the interview, an employment agreement is prepared. The job interview is then carried out.  Following the interview, the applicant's suitability is determined.  If the applicant is not suitable, a rejection is sent to the applicant, and the process ends. If the applicant is suitable, an employment contract is sent to the applicant. The process ends when the signed employment contract is received.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Application rejected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Applicant suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Applicant",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of an application by the Human Resources Department of ACME AG. A receipt confirmation is sent to the applicant, and the applicant is then verified by the Human Resources Department. Next, the Head of Human Resources determines the application status. Based on the application status, the process proceeds to an exclusive gateway where the decision is made whether the application is rejected or accepted. If the application is rejected, a rejection is sent to the applicant, and the process ends. If the application is accepted, an invitation to a job interview is sent to the applicant. The Human Resources Department then prepares an employment agreement and carries out the job interview. Following the interview, the applicant determines their suitability for the position. Another exclusive gateway is reached where, if the applicant is not suitable, a rejection is sent, and the process ends. If the applicant is suitable, an employment contract is sent to the applicant. Upon receipt of the signed employment contract by the applicant, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "SendTask"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "UserTask"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "SendTask"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "SendTask"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "UserTask"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "UserTask"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "UserTask"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "SendTask"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract present",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Receipt of signed employment contract",
                        "type": "IntermediateMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Application rejected?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant suitable?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id9",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ]
            }
        }
    },
    "63_ground_truth.json": {
        "0": {
            "text": "The process begins with a booking request received by the Taxi Booking System. The customer service operator checks the data provided by the user. If the data is not complete, a cancellation message is sent to the customer. If the data is complete, the customer service operator checks for available cars. If no car is available within 30 minutes, a cancellation message is sent to the customer. If a car is available within 30 minutes, the customer service operator picks the nearest car with the client. The taxi system then calculates the time of arrival. Finally, the customer service operator books the taxi, and a booking confirmation is sent to the customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check data provided by user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick nearest car with client",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Booking request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Cancellation message sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking confirmation sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Data complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Car available in 30 mins?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": []
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when a booking request is received. The Taxi System checks the data. If the data is not complete, a cancellation message is sent to the customer. If the data is complete, the Taxi System checks for available cars. If no car is available within 30 minutes, a cancellation message is sent to the customer. If a car is available within 30 minutes, the Taxi System picks the nearest car.  The Taxi System then calculates the time of arrival.  A Customer Service Operator then books the taxi. Finally, a booking confirmation is sent to the customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Available Cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick Nearest Car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate Time of Arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Booking Request Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Cancellation Message Sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking Confirmation Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Data Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Car Available in 30 Minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "id12",
                        "name": "Taxi System",
                        "lanes": []
                    },
                    {
                        "id": "id13",
                        "name": "Customer Service Operator",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The taxi booking process starts when a booking request is received by the taxi system. The customer service operator checks the data provided by the user. If the data is not complete, a cancellation message is sent to the customer, and the process ends. If the data is complete, the customer service operator checks for available cars. If no car is available in the next 30 minutes, a cancellation message is sent to the customer, ending the process. If a car is available, the customer service operator and the customer pick the nearest car. The taxi system then calculates the time of arrival.  Finally, the customer service operator books the taxi, a booking confirmation is sent to the customer, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check the data provided by the user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Pick the nearest car with the client",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Calculate the time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Book the taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Booking request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Cancellation message sent to customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Booking confirmation sent to customer",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id3",
                        "name": "Data complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Car available in next 30 minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Taxi Booking",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id5",
                                    "id7",
                                    "id9",
                                    "id8",
                                    "id11"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id6",
                                    "id4",
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Customer",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "19_ground_truth.json": {
        "0": {
            "text": "The process starts with a BKR check and a Jane Doe check happening at the same time.  Both checks are followed by a credibility check.  The credibility check is reviewed. If the review is negative, a rejection letter is sent, and the process ends. If the review is positive, the client is called. After the call, if the client accepts the offer, the process continues. If not, a timer is started to wait for one hour, after which the client is reminded and the call is made again. This loop continues until the client accepts the offer. Once the client accepts the offer, a loan offer is created and subsequently checked.  After the check, the loan offer is sent to the client.  In parallel, a welcome letter is sent to the client, and the loan application is activated.  The loan activation is then validated, the initial payment is executed, the documents are returned to the client, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Wait 1 hour",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Remind client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Loan Application Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Client Accepts Offer",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id23",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "name": "Exclusive Gateway 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Exclusive Gateway 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Exclusive Gateway 3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id25",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id25",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id26",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id6",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id27",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id21",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id27",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id21",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id23",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id16",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id28",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a parallel gateway.  Two checks, a BKR check and a Jane Doe check, are performed concurrently. Once both checks are completed, a credibility check is performed.  If the credibility check is accepted, a credibility assessment review is conducted. If the review is accepted, the client is called. If the review is rejected, a rejection letter is sent, and the process ends. If the call is picked up by the client, a loan offer is created, checked, and sent to the client.  If the call is not picked up, the process waits for one hour, after which the client is called again.  If the client accepts the offer, a welcome letter is sent, the loan application is activated, the activation is validated, the initial payment is executed, the documents are returned to the client, and the process ends. If the client rejects the offer, the client is reminded and the process waits for the client to accept the offer. If the credibility check is not accepted initially, a rejection letter is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Credibility Assessment Review",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait One Hour",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Offer to Client",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Remind Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Offer Rejected",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id21",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Client Picked Up",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Client Did Not Pick Up",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id26",
                        "name": "Credibility Check Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Review Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Call Picked Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id24",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id25",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id26",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id4",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id27",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id27",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id28",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id28",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id23",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id21",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id19",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id29",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id29",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a BKR check and a Jane Doe check performed in parallel by a Risk Manager at DLL. Once both checks are completed, the process proceeds based on the assessment result. If further assessment is needed, a credibility check is conducted. The result of the credibility check is then reviewed by a Senior Risk Manager.  Following the review, if the offer is to be made, the Customer Relation Team calls the client. If the client picks up, a loan offer is created, checked, and sent to the client.  If the client accepts the offer, a welcome letter is sent by an Administrator, the loan application is activated by the Finance Department, the activation is validated, the initial payment is executed, and finally, the documents are returned to the client, marking the end of the process. If the client rejects the offer, the Customer Relation Team reminds the client, and the process loops back to await offer acceptance or rejection. If the client does not pick up the initial call, the process waits for 1 hour, after which the client is called again. If the initial assessment result does not require further assessment, a rejection letter is sent by an Administrator, and the process ends. Similarly, if the credibility assessment result leads to rejection, a rejection letter is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Wait 1 hour",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Remind Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id20",
                        "name": "1 hour timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Offer Rejected",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Client Picked up call",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id23",
                        "name": "Client did not pick up call",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id24",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "name": "Assessment Result",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Credibility Assessment Result",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id28",
                        "name": "Offer Result",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id29",
                        "name": "Call Result",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id17"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Administrator",
                                "elemRefs": [
                                    "id5",
                                    "id10",
                                    "id14"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Customer Relation Team",
                                "elemRefs": [
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Client",
                        "lanes": []
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id24",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id27",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id25",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id3",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id26",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id28",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id29"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id29",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id29",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id23",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id20",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id22",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id19",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id19",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    }
                ]
            }
        }
    },
    "57_ground_truth.json": {
        "0": {
            "text": "The process starts when an application arrives. A receipt confirmation is sent and the application is reviewed.  If the application is in order, it is evaluated. Otherwise, a rejection notice is sent, the application documents are archived, and the process ends with the applicant rejected. If the application is evaluated as suitable, the interview is prepared and conducted.  The applicant is then decided upon. If the applicant is considered good, they are put on the list, and an applicant is selected. Board approval is then obtained. If board approval is granted, the applicant is confirmed.  A contract is prepared and signed. The applicant is placed in the position, the position is occupied in the system, and the process ends with the applicant hired. If the applicant is not considered good, or board approval is not granted, a rejection notice is sent, the application documents are archived, and the process ends with the applicant rejected. If the invitation is declined or the position is declined, the application documents are archived, and the process ends with the applicant rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "SendTask"
                    },
                    {
                        "id": "id2",
                        "name": "Review application",
                        "type": "UserTask"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate application",
                        "type": "UserTask"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare interview",
                        "type": "UserTask"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct interview",
                        "type": "UserTask"
                    },
                    {
                        "id": "id6",
                        "name": "Decide on applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id7",
                        "name": "Put applicant on list",
                        "type": "UserTask"
                    },
                    {
                        "id": "id8",
                        "name": "Select applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id9",
                        "name": "Obtain board approval",
                        "type": "UserTask"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id11",
                        "name": "Prepare contract",
                        "type": "UserTask"
                    },
                    {
                        "id": "id12",
                        "name": "Sign contract",
                        "type": "UserTask"
                    },
                    {
                        "id": "id13",
                        "name": "Place applicant in position",
                        "type": "UserTask"
                    },
                    {
                        "id": "id14",
                        "name": "Occupy position in system",
                        "type": "UserTask"
                    },
                    {
                        "id": "id15",
                        "name": "Send rejection notice",
                        "type": "SendTask"
                    },
                    {
                        "id": "id16",
                        "name": "Archive application documents",
                        "type": "UserTask"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Applicant hired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Invitation declined",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Position declined",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Application in order?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id23",
                        "name": "Applicant suitable?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id24",
                        "name": "Applicant good?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id25",
                        "name": "Board approval granted?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id22",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id22",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id23",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id23",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id6",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id24",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id9",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id25",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id24",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id25",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an application arrives. A receipt confirmation is sent and the application is reviewed.  If the application is not in order, a rejection notice is sent, and the process ends with the applicant rejected. If the application is in order, it is evaluated. If the applicant is not suitable, a rejection notice is sent, and the process ends with the applicant rejected. If the applicant is suitable, the applicant is invited. An invitation is prepared and the interview is conducted. If the invitation is not accepted, the application is escalated, the application documents are archived, and the process ends with the applicant rejected. If the invitation is accepted, the applicant is evaluated. If the applicant is not good, a rejection notice is sent, the application documents are archived, and the process ends with the applicant rejected. If the applicant is good, the applicant is put on the list and an applicant is selected. Approval from the board of directors is obtained. If board approval is not granted, a rejection notice is sent, the application documents are archived, and the process ends with the applicant rejected. If board approval is granted, the applicant is confirmed. The contract is prepared and signed. The applicant is placed in the position, and the position is occupied in the system. If the position is not accepted, the application documents are archived, and the process ends with the applicant rejected. If the position is accepted, the process ends with the applicant hired.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Receipt Confirmation",
                        "type": "SendTask"
                    },
                    {
                        "id": "id2",
                        "name": "Review Application",
                        "type": "UserTask"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate Application",
                        "type": "UserTask"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Interview",
                        "type": "UserTask"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Interview",
                        "type": "UserTask"
                    },
                    {
                        "id": "id6",
                        "name": "Put Applicant on List",
                        "type": "UserTask"
                    },
                    {
                        "id": "id7",
                        "name": "Select Applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain Approval from Board of Directors",
                        "type": "UserTask"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm Applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare Contract",
                        "type": "UserTask"
                    },
                    {
                        "id": "id11",
                        "name": "Sign Contract",
                        "type": "UserTask"
                    },
                    {
                        "id": "id12",
                        "name": "Place Applicant in Position",
                        "type": "UserTask"
                    },
                    {
                        "id": "id13",
                        "name": "Occupy Position in System",
                        "type": "UserTask"
                    },
                    {
                        "id": "id14",
                        "name": "Send Rejection Notice",
                        "type": "SendTask"
                    },
                    {
                        "id": "id15",
                        "name": "Archive Application Documents",
                        "type": "UserTask"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Application Arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Applicant Hired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Applicant Invited",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Application Escalated",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Application in Order?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id22",
                        "name": "Applicant Suitable?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id23",
                        "name": "Invitation Accepted?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id24",
                        "name": "Applicant Good?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id25",
                        "name": "Board Approval Granted?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id26",
                        "name": "Position Accepted?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id14",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id22",
                        "targetRef": "id14",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id22",
                        "targetRef": "id19",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id23",
                        "targetRef": "id20",
                        "condition": "No"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id23",
                        "targetRef": "id24",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id24",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id8",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id25",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id24",
                        "targetRef": "id14",
                        "condition": "No"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id25",
                        "targetRef": "id14",
                        "condition": "No"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id13",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id26",
                        "targetRef": "id15",
                        "condition": "No"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id26",
                        "targetRef": "id17",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an application arrives. A receipt confirmation is sent and the application is reviewed.  Next, it is checked if the application is in order. If the application is not in order, a rejection notice is sent, the application documents are archived, and the process ends with the applicant being rejected. If the application is in order, the application is evaluated and it is determined whether the applicant is suitable. If the applicant is not suitable, a rejection notice is sent, the application documents are archived, and the process ends with the applicant being rejected. If the applicant is suitable, an interview is prepared and conducted. During the interview, the applicant may decline the invitation, in which case the application documents are archived, and the process ends with the applicant being rejected. After the interview, it is determined whether the applicant is good. If the applicant is not good, a rejection notice is sent, the application documents are archived, and the process ends with the applicant being rejected. If the applicant is good, the applicant is put on a list and then selected. Next, approval from the board of directors is obtained. If approval is not granted, a rejection notice is sent, the application documents are archived, and the process ends with the applicant being rejected. If approval is granted, the applicant is confirmed, and a contract is prepared and signed.  It is then checked if the applicant declines the position. If the applicant declines the position, the application documents are archived, and the process ends with the applicant being rejected. If the applicant accepts the position, the applicant is placed in the position, the position is occupied in the system, and the application process is completed. Finally, the process ends with the applicant being hired.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Review application",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Evaluate application",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare interview",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Put applicant on list",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Select applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain approval from board of directors",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Confirm applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare contract",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Sign contract",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Place applicant in position",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Occupy position in system",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Send rejection notice",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Archive application documents",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Application arrives",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Applicant hired",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Applicant declines invitation",
                        "type": "IntermediateEscalationEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Application process completed",
                        "type": "IntermediateNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Application in order?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Applicant suitable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Applicant good?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Approval granted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Applicant declines position?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id21",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id22",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id22",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id23",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id23",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id8",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id24",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id24",
                        "targetRef": "id14",
                        "condition": "no"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id11",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id25",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id25",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id13",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id20",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "28_ground_truth.json": {
        "0": {
            "text": "The process starts with an order intake.  The first step is to describe the requirements, followed by a workshop.  Next, a project sketch is created, after which an appointment confirmation is received.  A customer conversation is then conducted, leading to the writing and sending of a specification sheet to the customer.  Customer feedback is received, and project and capacity planning is performed.  Standard open-source products are checked, and use cases are defined.  Costs are calculated, and a decision is made whether to develop new products or use existing ones.  If existing products are used, knowledge management systems are adjusted. If new products are developed, they are created. In either case, product acceptance is performed, followed by obtaining customer feedback. Finally, follow-up projects are identified, and the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct workshop",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create project sketch",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct customer conversation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Write specification sheet",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send specification sheet to customer",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Receive customer feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Perform project and capacity planning",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check standard open-source products",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Define use cases",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Calculate costs",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Adjust knowledge management systems",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Develop new product",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Perform product acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Obtain customer feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id16",
                        "name": "Identify follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Appointment confirmation received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Develop new products or use existing ones?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id20",
                        "targetRef": "id12",
                        "condition": "Use existing products"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "Develop new products"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an order intake.  The first step is to describe the requirements, followed by a workshop.  Next, a project sketch is created and an appointment confirmation is received.  A customer conversation is then conducted, and a specification sheet is written and sent to the customer.  After receiving feedback, project and capacity planning are performed.  Standard open-source products are checked, and use cases are defined.  Costs are calculated, and a decision is made whether to develop a new product or use existing ones.  If existing products are used, the knowledge management systems are adjusted.  If a new product is developed, it is created from scratch.  In either case, product acceptance is performed, and customer feedback is obtained.  Finally, follow-up projects are identified, and the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct workshop",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create project sketch",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct customer conversation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Write specification sheet",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send specification sheet to customer",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Perform project and capacity planning",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Check standard open-source products",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Define use cases",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Calculate costs",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Adjust knowledge management systems",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Develop new product",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Perform product acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Obtain customer feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Identify follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Appointment confirmation received",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id18",
                        "name": "Feedback received",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id19",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Develop new product or use existing ones?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id20",
                        "targetRef": "id11",
                        "condition": "Use existing products"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id12",
                        "condition": "Develop new product"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with an order intake. The first step is to describe the requirements, followed by a workshop.  Next, a project sketch is created and an appointment confirmation is awaited. Once the appointment confirmation is received, a customer conversation is conducted, and a specification sheet is written and sent to the customer.  After receiving customer feedback, project and capacity planning are performed.  The next step is to check standard open-source products and define use cases.  Costs are then calculated, and a decision is made whether to develop a new product or use an existing one. If the decision is to use an existing product, the knowledge management systems are adjusted. If the decision is to develop a new product, a new product is developed. In either case, product acceptance is performed next, followed by obtaining customer feedback. Finally, follow-up projects are identified, and the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Conduct workshop",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create project sketch",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct customer conversation",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Write specification sheet",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send specification sheet to customer",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Perform project and capacity planning",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Check standard open-source products",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Define use cases",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Calculate costs",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Adjust knowledge management systems",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Develop new product",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Perform product acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Obtain customer feedback",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Identify follow-up projects",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Order intake",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Appointment confirmation received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Customer feedback received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Develop new product or use existing?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id17",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id20",
                        "targetRef": "id11",
                        "condition": "Use existing"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id12",
                        "condition": "Develop new"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "66_ground_truth.json": {
        "0": {
            "text": "The process starts when a customer is hungry. The customer chooses a pizza from the menu and orders it by phone.  Then, the customer decides whether they have waited for 60 minutes. If yes, they check if the pizza has arrived. If no, they call the pizzeria to inquire about their order. Eventually, regardless of whether the customer waited 60 minutes or not, they check if the pizza has arrived. If the pizza has arrived, the customer pays the delivery boy and eats the pizza, finally satisfying their hunger. If the pizza has not arrived, the customer calls the pizzeria again to inquire.  This loop of checking for the pizza and calling the pizzeria continues until the pizza arrives.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a pizza from the menu",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order the pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait 60 minutes",
                        "type": "Timer"
                    },
                    {
                        "id": "id4",
                        "name": "Call the pizzeria to inquire",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay the delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat the pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Customer is hungry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Pizza arrived",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id9",
                        "name": "Hunger satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Waited 60 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Pizza arrived?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a customer is hungry.  The customer chooses a pizza from the menu and then orders the pizza by phone.  The customer then decides whether to wait 60 minutes or call the pizzeria to inquire. After 60 minutes of waiting, the customer checks if the pizza has arrived. If the pizza has arrived, the process continues; otherwise, the customer calls the pizzeria to inquire and checks again if the pizza has arrived. This loop continues until the pizza arrives. Once the pizza arrives, the customer pays the delivery boy and eats the pizza. Finally, the customer's hunger is satisfied, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a pizza from the menu",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order the pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait 60 minutes",
                        "type": "Timer"
                    },
                    {
                        "id": "id4",
                        "name": "Call the pizzeria to inquire",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay the delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat the pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Customer is hungry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Pizza arrived",
                        "type": "IntermediateMessageEventCatching"
                    },
                    {
                        "id": "id9",
                        "name": "Hunger satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Wait or call?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Has the pizza arrived?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a customer is hungry. The customer chooses a pizza from the menu and then orders the pizza by phone.  After ordering, the customer checks if they have waited for 60 minutes. If not, they wait for 60 minutes and then check if the pizza has arrived. If the pizza has arrived, the process continues. If not, the customer calls the pizzeria to inquire about the order status, and waits for the pizza to arrive. If the customer has already waited 60 minutes after ordering, they call the pizzeria to inquire about the order status. Once the pizza arrives, the customer pays the delivery boy and eats the pizza. Finally, the customer's hunger is satisfied, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a pizza from the menu",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order the pizza by phone",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait 60 minutes",
                        "type": "Timer"
                    },
                    {
                        "id": "id4",
                        "name": "Call the pizzeria to inquire about the order status",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Pay the delivery boy",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Eat the pizza",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Customer is hungry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Pizza arrived",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Hunger satisfied",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Waited 60 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Pizza arrived?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "34_ground_truth.json": {
        "0": {
            "text": "The process starts with generating the software and document draft.  Next, an overview of the machine is obtained.  Then, three parallel paths begin. The first is to complete the SPS project by station. The second is to complete the HMI project in stages.  The third is to complete the safety project. Once all three parallel paths are complete, the software is tested. Following this, a software design review is conducted. Finally, the process ends with the software ready for commissioning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain overview of the machine",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project by station",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project in stages",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel End",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with generating the software and document draft by Production / Design and Development at Harro H\u00f6fliger Verpackungsmaschinen GmbH.  Next, Software Development obtains an overview of the machine.  The process then splits into three parallel paths: completing the SPS project by station, completing the HMI project in stages, and completing the safety project.  Once all three parallel paths are complete, the software is tested.  Finally, a software design review is conducted, and the process ends with the software ready for commissioning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain overview of the machine",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project by station",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project in stages",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Programs Ready?",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Software Development",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with generating the software and document draft within Production / Design and Development at Harro H\u00f6fliger Verpackungsmaschinen GmbH.  Next, an overview of the machine is obtained, also within Production / Design and Development.  Then, three parallel paths are initiated. In the first path, the SPS project is completed by station by Software Development. In the second parallel path, the HMI project is completed in stages, also by Software Development.  The third parallel path consists of completing the safety project by Software Development. Once all three parallel paths are complete, the software is tested by Software Development. Finally, a software design review is conducted by Software Development, after which the process ends, indicating the software is ready for commissioning.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Generate software and document draft",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Obtain overview of the machine",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Complete SPS project by station",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete HMI project in stages",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Complete safety project",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test software",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct software design review",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Software ready for commissioning",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Harro H\u00f6fliger Verpackungsmaschinen GmbH",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Production / Design and Development",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Software Development",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "52_ground_truth.json": {
        "0": {
            "text": "The process starts with retrieving the requirement profile. Next, the job posting is retrieved. A co-signature note is then created and forwarded for review.  If there are comments on the co-signature note, a new co-signature note is created and forwarded, and the previous step is repeated. If there are no comments, the co-signature note is reviewed. If there are no further comments after this review, the process ends. If there are comments, a new co-signature note is created and forwarded for review, returning to the previous review step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create and forward co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with retrieving the requirement profile. Next, the job posting is retrieved. A co-signature note is created and forwarded for review. If there are comments on the co-signature note, a new co-signature note is created and forwarded, and the previous step is repeated. This loop continues until there are no further comments. If there are no comments on the co-signature note, the co-signature note is reviewed.  If there are no comments after this review, the process ends. If there are comments, a new co-signature note is created and forwarded for review, returning to the previous review step. This second loop also continues until there are no further comments.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create and forward co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with retrieving the requirement profile. Next, the job posting is retrieved. A co-signature note is created and forwarded for review.  If there are comments on the co-signature note, a new co-signature note is created and forwarded, and the previous reviewer reviews it again. This loop continues as long as there are comments. If there are no comments on the co-signature note, the co-signature note is reviewed. If there are no further comments, the process ends. If there are comments, a new co-signature note is created and forwarded for review, returning to the earlier review step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Retrieve requirement profile",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve job posting",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create and forward co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Review co-signature note",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and forward new co-signature note",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Comments?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Comments?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_ground_truth.json": {
        "0": {
            "text": "The process starts when a need arises. The first step is to check the stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being removed from the storeroom. If the work equipment is not in stock, the requirements are specified and quantified.  An order is then placed.  After the order is placed, the process waits for the receipt of the work equipment.  Concurrently, a timer for 5 days is started.  Both the receipt of the work equipment and the timer event lead to a check if the receipt has been received. If the receipt has been received, the process ends with the work equipment procured. If the receipt has not been received, an order is placed by email, after which the process waits again for the receipt of the work equipment.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need Arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of work equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "5 days passed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work equipment in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipt received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a need arises at ACME AG Procurement Department. The stock is checked. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends when the work equipment is removed from the storeroom. If the work equipment is not in stock, the requirements are specified and quantified, and an order is placed. After the order is placed, two paths are possible. Either the receipt of work equipment is received, or, after 5 days have passed, there is still no receipt. Both paths lead to a check if the receipt has been received. If the receipt has been received, the process ends with the work equipment procured. If no receipt has been received, the order is placed by e-mail, which leads to the receipt of work equipment, and the process continues by checking if the receipt has been received.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place order",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Place order by e-mail",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Receipt of work equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "5 days passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work equipment in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipt received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG Procurement Department",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a need arises.  Stock is then checked. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment removed from the storeroom. If the work equipment is not in stock, the requirements are specified and quantified. An order is then placed.  After the order is placed, two paths are possible: either the receipt of work equipment is received, or 5 days elapse.  Both paths lead to a check if a receipt has been received. If a receipt has been received, the process ends with the work equipment procured. If no receipt has been received, an order is placed by e-mail, after which the receipt of work equipment is awaited.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve Work Equipment from Storeroom",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by E-mail",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need Arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work Equipment Removed from Storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "5 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work Equipment in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipt Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "30_ground_truth.json": {
        "0": {
            "text": "The process starts with the initiation of a new service. The first step is to enter the store and look for the service.  Next, a check is performed to determine if a ticket has been taken in the app. If not, the process ends with the service not found. If a ticket was taken, the next step is to take a ticket. The request is then communicated to a request assistant, after which the request is registered.  Following this, a check is performed to see if enough requests exist. If enough requests exist, the order request document is sent. Otherwise, the request is registered again. Once the order request document is sent, the order is prepared, then delivered, and finally collected. The process ends once the order has been collected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store and look for service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for waiting time",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Look for product and specific criteria",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check how many tickets are ahead",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Communicate request to request assistant",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check if enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Collect order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Initiate new service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id3",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Registering over",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Order delivered",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Ticket taken in app?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts.  First, the store is entered and a service is looked for. If no service is found, the process ends. If a service is found, a ticket is taken.  The process then diverges based on where the ticket was taken.  In one branch, the user waits for a waiting time, looks for a product and specific criteria, checks tickets ahead, and then waits for their turn. In the other branch, the user directly waits for their turn. Both branches converge, and the user asks for a specific request. The request is communicated to a request assistant. After this, a timer event starts. When the timer expires, the request is registered. The user then checks for enough requests. If there are not enough requests, the user registers the request again. This loop continues until there are enough requests. Once there are enough requests, an order request document is sent. The order is then prepared. After the order is prepared, an order description is received. Finally, the order is delivered and collected, at which point the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store and look for service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Look for product and specific criteria",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check tickets ahead",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate request to request assistant",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check for enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Collect order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Register time expired",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Order description received",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id19",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Service found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Ticket taken where?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id20",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id21",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id21",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id18",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a client initiates a new service. The client enters the store and looks for a specific service. If the service is not found, the process ends. If the service is found, the client takes a ticket. If the ticket was taken in the app, the client waits for the waiting time, looks for the product and specific criteria, and checks how many tickets are ahead. If the ticket was taken physically, the client waits for their turn.  Next, the client asks for a specific request. After that, a timer starts for the registration time. When the timer expires, the request is registered. Then, a check is performed to see if there are enough requests. If there are not enough requests, the client is sent back to register the request again. If there are enough requests, an order request document is sent. The order is then prepared and the order description is received. Finally, the order is delivered and collected, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter the store and look for a specific service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take a ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time, look for product and specific criteria, and check how many tickets are ahead",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Ask for a specific request",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if there are enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Collect order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Client initiates new service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Register time expired",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Order description received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Service found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Ticket taken where?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id17",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "In app"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id4",
                        "condition": "Physically"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id19",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "56_ground_truth.json": {
        "0": {
            "text": "The process starts with a customer request at The Bike Zone, which is then sent to the Sales Department (SD) at GBI.  In SD, the customer master data is created, updated, and the request is accepted and processed.  Next, an offer is processed and copied to an order, which is then sent back to the customer. The customer accepts and processes the offer and places an order for bicycles, sending the order to GBI's SD.  GBI's SD accepts and processes the order and checks the inventory in the Material Management (MM) department. If the product is in stock, MM requests the product. If not, they procure/order the goods.  In either case, the customer order is then processed by SD.  Next, a delivery note is created by SD and sent to MM for inventory control.  MM then picks the material, packs, and sends the goods to the customer.  The customer registers the goods receipt and informs GBI's MM.  Concurrently, after shipping, SD creates an invoice based on the checked inventory. The invoice is sent from the Finance Department (FI) to the customer. The customer receives the invoice and settles it, sending the payment to GBI's FI.  FI processes the incoming payment. Finally, SD edits and displays the document flow, after which the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Customer Master Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Accept and Process Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Copy Offer to Order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept and Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order Bicycles",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Accept and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request Product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Procure/Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Process Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Create Delivery Note",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Inventory Control",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Pick Material, Pack, and Send Goods",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Register Goods Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Receive Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Settle Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Process Incoming Payment",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Edit and Display Document Flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id24",
                        "name": "Customer Request",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Product in Stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "The Bike Zone",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Customer",
                                "elemRefs": [
                                    "id24",
                                    "id6",
                                    "id7",
                                    "id16",
                                    "id20",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Sales Department (SD)",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id15",
                                    "id23"
                                ]
                            },
                            {
                                "id": "id31",
                                "name": "Material Management (MM)",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id14",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id32",
                                "name": "Finance Department (FI)",
                                "elemRefs": [
                                    "id18",
                                    "id19",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id26",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id23",
                        "targetRef": "id25"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when a customer of The Bike Zone initiates a customer request, which is then accepted and processed by the Sales Department (SD) at GBI.  Simultaneously, the Sales Department creates the customer master data and updates it.  Next, the Sales Department processes the offer and copies it to an order. The customer then accepts and processes the offer and orders bicycles, which is accepted and processed by the Sales Department.  The Sales Department checks the inventory. If the product is in stock, a request is made to Material Management (MM). If it's not in stock, MM procures/orders the goods.  In either case, the customer order is then processed by SD.  A delivery note is created, and inventory control is performed by MM.  The Sales Department picks the material, packs, and sends the goods, after which the customer registers the goods receipt.  Concurrently, the goods receipt is followed by the customer settling the invoice, while the Sales Department performs inventory control and creates an invoice. The Finance Department (FI) sends the invoice, which the customer receives. The customer's invoice settlement is received and processed by the Finance Department. Finally, the Sales Department edits and displays the document flow, completing the order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Customer Master Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Accept and Process Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Copy Offer to Order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept and Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order Bicycles",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Accept and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request Product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Procure/Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Process Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Create Delivery Note",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Perform Inventory Control",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Pick Material, Pack, and Send Goods",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Register Goods Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Receive Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Settle Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Process Incoming Payment",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Edit and Display Document Flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id24",
                        "name": "Customer Request Initiated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Product in Stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "The Bike Zone",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Customer",
                                "elemRefs": [
                                    "id24",
                                    "id6",
                                    "id7",
                                    "id16",
                                    "id20",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Sales Department (SD)",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id15",
                                    "id23"
                                ]
                            },
                            {
                                "id": "id31",
                                "name": "Material Management (MM)",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id14",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id32",
                                "name": "Finance Department (FI)",
                                "elemRefs": [
                                    "id18",
                                    "id19",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id39",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id26",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id16",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id23",
                        "targetRef": "id25"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with a customer request at The Bike Zone, which is received and processed by the Sales Department (SD) at GBI.  GBI creates customer master data, updates it, and then accepts and processes the request.  SD then processes an offer and copies it to an order, which is then accepted and processed by the customer. The customer then orders bicycles, which is accepted and processed by SD.  Next, GBI's Material Management (MM) checks the inventory. If the product is in stock, MM requests the product. If it is not in stock, MM procures/orders the goods.  In either case, SD then processes the customer order.  Following this, SD creates a delivery note, and MM performs inventory control.  SD then picks the material, packs, and sends the goods, which are received and registered by the customer.  Concurrently, after picking, packing, and sending, MM checks the inventory and GBI's Finance Department (FI) creates and sends an invoice, which is received by the customer. The customer settles the invoice, and FI processes the incoming payment. Finally, SD edits and displays the document flow, after which the order is completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Customer Master Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Customer Data",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Accept and Process Request",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Copy Offer to Order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Accept and Process Offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order Bicycles",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Accept and Process Order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request Product",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Procure/Order Goods",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Process Customer Order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Create Delivery Note",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Perform Inventory Control",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Pick Material, Pack, and Send Goods",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Register Goods Receipt",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Create Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id19",
                        "name": "Send Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id20",
                        "name": "Receive Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id21",
                        "name": "Settle Invoice",
                        "type": "User"
                    },
                    {
                        "id": "id22",
                        "name": "Process Incoming Payment",
                        "type": "User"
                    },
                    {
                        "id": "id23",
                        "name": "Edit and Display Document Flow",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id24",
                        "name": "Customer Request Initiated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id25",
                        "name": "Order Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id26",
                        "name": "Product In Stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "The Bike Zone",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Customer",
                                "elemRefs": [
                                    "id24",
                                    "id6",
                                    "id7",
                                    "id16",
                                    "id20",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "GBI",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Sales Department (SD)",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id15",
                                    "id23"
                                ]
                            },
                            {
                                "id": "id31",
                                "name": "Material Management (MM)",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id14",
                                    "id17"
                                ]
                            },
                            {
                                "id": "id32",
                                "name": "Finance Department (FI)",
                                "elemRefs": [
                                    "id18",
                                    "id19",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id33",
                        "sourceRef": "id24",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id38",
                        "sourceRef": "id24",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id26",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id26",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id16",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id15",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id18",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id22",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id23",
                        "targetRef": "id25"
                    }
                ]
            }
        }
    },
    "18_ground_truth.json": {
        "0": {
            "text": "The process starts.  First, the workplace is prepared. Next, the motherboard is placed on the mat.  Then, the CPU is inserted.  After that, thermal paste is applied.  Next, it is checked if the installation is possible. If so, the process ends. If the installation is not possible, troubleshooting is initiated.  The reason for troubleshooting is determined.  If the reason is \"No Image\", \"No Image\" troubleshooting is performed. If the reason is \"Hard Drive Not Recognized\", \"Hard Drive Not Recognized\" troubleshooting is performed. If the reason is \"No Power\", \"No Power\" troubleshooting is performed. If the reason is \"Boot Loop\", \"Boot Loop\" troubleshooting is performed. After troubleshooting, it is checked again if the installation is possible.  This check is repeated after each troubleshooting step.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place Motherboard on Mat",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Insert CPU",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Apply Thermal Paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Troubleshoot: No Image",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Troubleshoot: Hard Drive Not Recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Troubleshoot: No Power",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Troubleshoot: Boot Loop",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Installation Possible",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Installation Not Possible",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Installation Possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Troubleshooting Reason",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "No Image"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Hard Drive Not Recognized"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "No Power"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Boot Loop"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts. First, the workplace is prepared. Next, the motherboard is placed on an anti-static mat. Then, the CPU is inserted. After that, thermal paste is applied. Next, it is checked if the installation is possible. If so, the process ends. If not, the troubleshooting reason is determined. If the reason is \"No image\", the \"Troubleshoot: No image displayed\" task is performed. If the reason is \"Hard drive not recognized\", the \"Troubleshoot: Hard drive not recognized\" task is performed. If the reason is \"No power\", the \"Troubleshoot: No power\" task is performed. If the reason is \"Boot loop\", the \"Troubleshoot: Boot loop\" task is performed. After any troubleshooting task, it is checked again if the installation is possible.  This check is repeated after each troubleshooting attempt until the installation is possible.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place motherboard on anti-static mat",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Insert CPU",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Apply thermal paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Troubleshoot: No image displayed",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Troubleshoot: Hard drive not recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Troubleshoot: No power",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Troubleshoot: Boot loop",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Installation possible",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Installation possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Troubleshooting reason?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No image"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Hard drive not recognized"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No power"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Boot loop"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The PC assembly process starts with preparing the workplace. Next, the motherboard is placed, followed by inserting the CPU. Thermal paste is then applied. Subsequently, it is checked if the installation is possible. If yes, the process ends. If not, a troubleshooting decision is made based on the encountered problem. If there is no image, troubleshooting for \"No Image\" is performed. If the hard drive is not recognized, troubleshooting for \"Hard Drive Not Recognized\" is performed. If there is no power, troubleshooting for \"No Power\" is performed. If there is a boot loop, troubleshooting for \"Boot Loop\" is performed. After each troubleshooting step, the installation possibility is checked again.  This loop continues until the installation is possible, at which point the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Workplace",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Place Motherboard",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Insert CPU",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Apply Thermal Paste",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Troubleshoot - No Image",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Troubleshoot - Hard Drive Not Recognized",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Troubleshoot - No Power",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Troubleshoot - Boot Loop",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start PC Assembly",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Installation Possible",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Installation Possible?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Troubleshooting Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No Image"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "Hard Drive Not Recognized"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No Power"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Boot Loop"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "4_ground_truth.json": {
        "0": {
            "text": "The process begins with the receipt of an application at the ACME AG HR department. An acknowledgement of receipt is sent to the applicant, after which the applicant is checked by HR. The application status is then determined. If the application status leads to rejection, a rejection is sent to the applicant, and the process ends with the rejection of the applicant.  If the application status is positive, an invitation to a job interview is sent to the applicant. In preparation for the interview, HR prepares an employment contract. The job interview is then conducted with the applicant, after which the applicant's suitability is determined. If the applicant is not suitable, a rejection is sent, and the process ends as before. If the applicant is suitable, the employment contract is sent to the applicant. Once the signed contract is received by HR, the process ends with a signed employment contract available.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgement of receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Rejection of applicant",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Signed contract received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Application status?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id10",
                                    "id14"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Applicant",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of an application at the ACME AG HR department. An acknowledgement of receipt is sent to the applicant. Next, the applicant is checked by HR, and the application status is determined. If the application is rejected, a rejection is sent to the applicant, and the process ends with the rejection of the applicant. If the application is accepted, an invitation to a job interview is sent to the applicant.  The HR department prepares an employment contract. The job interview is conducted with the applicant, after which the applicant's suitability is determined. If the applicant is not suitable, a rejection is sent to the applicant, and the process ends as before. If the applicant is suitable, the employment contract is sent to the applicant. Once the signed employment contract is received by HR, the process ends with the signed employment contract available.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgement of receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Rejection of applicant",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Signed employment contract received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Application status?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id18",
                        "name": "Applicant",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "rejected"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "accepted"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of an application at the ACME AG HR department. An acknowledgement of receipt is sent to the applicant, and the applicant is checked by HR. The application status is then determined. If the application is rejected, a rejection is sent to the applicant, and the process ends with the applicant being rejected. If the application is accepted, an invitation to a job interview is sent to the applicant. The HR department prepares an employment contract and conducts a job interview with the applicant with the HR manager. The HR manager determines the applicant's suitability. If the applicant is not suitable, a rejection is sent to the applicant, and the process ends with the applicant being rejected. If the applicant is suitable, the HR department sends the employment contract to the applicant. Once a signed contract is received from the applicant, the process ends with the signed employment contract being available.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send acknowledgement of receipt",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection to applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract to applicant",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Signed contract received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Application status?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "HR Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id13"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "HR Manager",
                                "elemRefs": [
                                    "id8",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ]
            }
        }
    },
    "29_ground_truth.json": {
        "0": {
            "text": "The process starts when an order is received.  An order ticket is created and forwarded. Then, the preparation of meals, the preparation of the cart and non-alcoholic beverages, and the question of whether wine is desired are handled concurrently. If wine is desired, it is fetched from the cellar. Afterward, it is determined whether other alcoholic beverages are desired. If so, these are prepared.  The prepared meals, cart and non-alcoholic beverages, and any alcoholic beverages are then consolidated.  Finally, the order is delivered to the hotel guest. If there are no other orders to process, the customer account is debited, and the process ends with the customer order completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cart and non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Consolidate prepared items",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order to hotel guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "No other orders to process?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an order is received.  An order ticket is created and forwarded. Then, the preparation of the order is split into parallel flows. Meals are prepared, a cart and non-alcoholic beverages are prepared, and it is determined whether wine is desired. If wine is desired, it is fetched from the cellar. Afterward, it is determined whether other alcoholic beverages are desired. If so, they are prepared. Regardless of whether wine or other alcoholic beverages are desired, these flows synchronize.  The prepared items are then consolidated. Next, the order is delivered to the hotel guest. Finally, it is checked if there are other orders to process. If yes, the customer account is debited, and the process ends marking the customer order as completed. If no, the process ends immediately, also marking the customer order as completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cart and non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Consolidate prepared items",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order to hotel guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "Other orders to process?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Synchronization",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id11",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id12",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an order is received.  An order ticket is created and forwarded. Then, the preparation of meals, the preparation of the cart and non-alcoholic beverages, and the question of whether wine is desired are handled concurrently. If wine is desired, it is fetched from the cellar, and then the question of whether other alcoholic beverages are desired is addressed. If other alcoholic beverages are desired, they are prepared. If no wine is desired, the process continues. If no other alcoholic beverages are desired, the process also continues. Once the meals, cart/non-alcoholic beverages, and any alcoholic beverages (if desired) are ready, the prepared items are consolidated. The order is then delivered to the hotel guest. Finally, if there are no other orders to process, the customer account is debited, and the process ends, marking the customer order as completed. If there are other orders to process, the process ends immediately after delivering the order.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create and forward order ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare meals",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cart and non-alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Fetch wine from cellar",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Consolidate prepared items",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver order to hotel guest",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Debit customer account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Customer order completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Wine desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Other alcoholic beverages desired?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id14",
                        "name": "No other orders to process?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "53_ground_truth.json": {
        "0": {
            "text": "The process starts with preparing a checklist for preparations. Next, necessary papers are checked and completed. Then, it is determined whether a visa is required. If a visa is required, the next steps are applying for the visa and communicating the visa application to the embassy.  Regardless of whether a visa is required, the next step is clearing unfinished business.  After that, it is determined whether there are pets to take care of. If so, pet care arrangements are made, followed by unsubscribing from post or arranging for a neighbor to collect it. If no pet care is needed, the process proceeds directly to unsubscribing from post or arranging for a neighbor.  The next steps are obtaining necessary vaccinations and checking insurance coverage.  Then, it is determined whether additional insurance is required. If additional insurance is required, the process continues with applying for additional coverage and communicating the insurance application to the company. Regardless of whether additional insurance is needed, the following steps happen in parallel: gathering travel documents and addresses, buying or lending guidebooks and city maps, and preparing a first-aid kit.  Once these parallel tasks are complete, copies of ID cards and travel documents are made. Finally, the process ends, indicating that travel preparations are complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Visa application to Embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make Pet Care Arrangements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from post or arrange neighbor",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain Necessary Vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for Additional Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate insurance application to company",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy or Lend Guidebooks and City Maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare First-Aid Kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to take care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional Insurance Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with fixing the travel details.  A checklist for preparations is prepared followed by checking and completing necessary papers. Next, it is determined whether a visa is required. If a visa is required, the next steps are applying for the visa and communicating the visa application to the embassy.  Regardless of whether a visa is required, any unfinished business is cleared.  Then, it is determined whether there are pets to take care of. If so, pet care arrangements are made. Regardless, the next step is to unsubscribe from post or arrange for a neighbor to collect it.  Following this, necessary vaccinations are obtained, and insurance coverage is checked. If additional insurance is needed, it is applied for, and the application is communicated to the insurance company.  Regardless of whether additional insurance is needed, the next steps are to gather travel documents and addresses, buy or lend guidebooks and city maps, and prepare a first-aid kit. These three tasks can be done in parallel. Finally, copies of ID cards and travel documents are made, and the process ends with travel preparations complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Visa application to Embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make Pet Care Arrangements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from Post or Arrange Neighbor",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain Necessary Vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for Additional Insurance",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate additional insurance application to insurance company",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy or Lend Guidebooks and City Maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare First-Aid Kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Fix Travel Details",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to Take Care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional Insurance Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with preparing a checklist for preparations. Next, necessary papers are checked and completed.  Then, it is determined whether a visa is required. If a visa is required, the next steps are to apply for the visa and communicate the visa application to the embassy. Regardless of whether a visa is required, the next step is to clear any unfinished business.  After that, it is determined whether there are pets to take care of. If so, pet care arrangements are made, followed by unsubscribing from post or arranging for a neighbor to collect it. If no pet care is needed, the process proceeds directly to unsubscribing from post or arranging for a neighbor. The next step is to obtain necessary vaccinations, followed by checking insurance coverage.  Then, it is determined whether additional insurance is needed. If additional insurance is needed, the process continues with applying for additional insurance and communicating the insurance application. Regardless of whether additional insurance is needed, the following three tasks are performed concurrently: gather travel documents and addresses, buy/lend guidebooks and city maps, and prepare a first-aid kit. Once these three parallel tasks are completed, copies of ID and travel documents are made. Finally, the process ends with travel preparations complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Visa Application to Embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make Pet Care Arrangements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from Post or Arrange Neighbor",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain Necessary Vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for Additional Insurance",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate Insurance Application",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID and Travel Documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy/Lend Guidebooks and City Maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare First-Aid Kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to Take Care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional Insurance Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Parallel Split 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "name": "Parallel Join 1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}