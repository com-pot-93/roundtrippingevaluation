{
    "17_ground_truth.txt": {
        "0": {
            "text": "The process starts when an email account is needed. The user chooses a package, and then checks if a personal account is available. If not, the process ends as a private account is unavailable. If a personal account is available, the user enters their personal information. Then, in parallel, the user enters their full name and uploads a photo ID.  After both actions are completed, the service confirms the personal data. Finally, the service generates a new email ID and password, and the process ends with the private email created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter personal information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1",
                        "condition": null
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10",
                        "condition": null
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id11",
                        "condition": null
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": null
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": null
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5",
                        "condition": null
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5",
                        "condition": null
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": null
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9",
                        "condition": null
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an email account is needed. The user chooses a package, and then checks if a personal account is available. If not, the process ends with a private account unavailable. If a personal account is available, the user enters personal information. Then, in parallel, the user enters full names and uploads a Photo ID. After both actions are completed, the user confirms personal data. Finally, the service generates an email ID and password, and the process ends with a private email created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter personal information",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload Photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm personal data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Generate Email ID and Password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1",
                        "condition": null
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id10",
                        "condition": null
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id11",
                        "condition": null
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": null
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": null
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id5",
                        "condition": null
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5",
                        "condition": null
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": null
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id9",
                        "condition": null
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when an email account is needed. The user first logs on to the email provider's website. Next, the user chooses a package, after which it is checked whether a personal account is available. If a personal account is not available, the process ends. If a personal account is available, the user enters personal information. Then, the user enters full names and uploads a photo ID in parallel.  After both actions are completed, the service confirms the personal data and generates a new email ID and password. Finally, the process ends with the private email created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to the email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter personal information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload Photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and Password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Personal account available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "61_ground_truth.txt": {
        "0": {
            "text": "The process starts with an application for IMIS. The first step is to define search criteria, followed by selecting the Master Study Course.  Next, the applicant selects \"Informatics and Digitalisation\" as the subject area and \"Campus Soest\". Regardless of which subject area or campus was selected, the applicant clicks on \"Find a Study Course\".  Then, the applicant clicks on \"Learn more\" on the IMIS banner and selects the Master Study Course.  After clicking on \"See how to apply here\", the process branches based on whether the applicant is an EU applicant.  If not, the applicant applies via Uni-Assist, checks the application procedure, sends the required documents to Uni-Assist, and waits for a decision (10-12 weeks).  The process then ends with the receipt of an admission/rejection letter. If the applicant is an EU applicant, a further check determines if they are an FH-SWF student or graduate.  If so, they apply via the FH-SWF Online Portal, send the required documents, contact the IMIS office, wait for a decision (4-6 weeks), and the process ends with the receipt of an admission/rejection letter. If they are not an FH-SWF student or graduate, they also apply via the FH-SWF Online Portal, send the required documents, contact the IMIS office, wait for a decision (4-6 weeks), and the process ends with the receipt of an admission/rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on \"Learn more\" on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "Yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with an application for IMIS. The first step is to define search criteria, followed by selecting a master study course.  Next, the applicant checks if they are an EU applicant. If they are, they are further checked if they are an FH-SWF student or graduate. If so, they apply via the FH-SWF Online Portal, send the required documents, contact the IMIS office, wait 4-6 weeks for a decision, and finally receive an admission/rejection letter. If they are not an FH-SWF student or graduate, they apply via Uni-Assist, check the application procedure, send the required documents to Uni-Assist, wait 10-12 weeks for a decision, and finally receive an admission/rejection letter. If the applicant is not an EU applicant, they proceed by selecting Informatics and Digitalization as the subject area, followed by selecting Campus Soest. They then click on \"Find a Study Course\", followed by clicking on \"Learn more\" on the IMIS banner. Next, they select the Master Study Course and click on \"See how to apply here\". From there, they follow the same path as EU applicants, checking if they are an FH-SWF student or graduate and proceeding accordingly.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on \"Learn more\" on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with an application for IMIS. The first step is to define search criteria, followed by selecting a Master Study Course. Next, it is determined whether the applicant is an EU applicant. Regardless of the outcome, the next step checks if the applicant is an FH-SWF student or graduate.\n\nIf the applicant is an FH-SWF student or graduate, they can either apply via the FH-SWF Online Portal and then contact the IMIS office, or directly contact the IMIS office. In both cases, the applicant then waits 4-6 weeks for a decision.\n\nIf the applicant is not an FH-SWF student or graduate, and after selecting Informatics and Digitalisation as the subject area and selecting Campus Soest, the applicant clicks on \"Find a Study Course\".  The applicant then clicks on \"Learn more\" on the IMIS banner and selects the Master Study Course.  After clicking on \"See how to apply here\", the applicant applies via Uni-Assist. The application procedure is checked, and the required documents are sent to Uni-Assist. The applicant then waits 10-12 weeks for a decision.\n\nFinally, regardless of the application path, the process ends with the receipt of an admission/rejection letter.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on \"Find a Study Course\"",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on \"Learn more\" on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on \"See how to apply here\"",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait 10-12 weeks for decision",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Apply via the FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Contact the IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id18",
                        "name": "Wait 4-6 weeks for decision",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id19",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "EU applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "FH-SWF student or graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id17",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id18",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "19_ground_truth.txt": {
        "0": {
            "text": "The process starts with a BKR check and a Jane Doe check executing in parallel.  Once both checks are complete, a credibility check is performed.  If the credibility check is accepted, a review of the credibility assessment takes place. If the review is accepted, the client is called. If the client picks up, a loan offer is created. If the client does not pick up, the process waits for one hour, after which the client is called again.  Once the loan offer is created, it is checked and then sent to the client.  If the offer is accepted by the client, a welcome letter is sent, the loan application is activated, the activation is validated, the initial payment is executed, and the documents are returned to the client, after which the process ends. If the offer is rejected or not accepted within one hour, the client is reminded and the process waits for the client to accept the offer. If the credibility check is not accepted, a rejection letter is sent, and the process ends.  If the review of the credibility assessment is not accepted, a rejection letter is also sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait One Hour",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Remind Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id20",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Offer Rejected",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Client call answered",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id24",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "name": "Credibility Check Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Review Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id28",
                        "name": "Client Picked up?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id29",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id23",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id25",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id4",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id26",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id26",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id28"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id28",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id28",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id19",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id27",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id27",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id25",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id22",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a BKR check and a Jane Doe check executing in parallel.  Once both checks are complete, a credibility check is performed.  Following the credibility check, a review of the credibility assessment takes place.  This review determines the next step. If the review is negative, a rejection letter is sent, and the process ends. If the review is positive, the client is called. After the call, a decision is made whether to create a loan offer or to wait one hour. If the decision is to wait, after one hour the client is called again, and the same decision point is reached. If the decision is to create a loan offer, the offer is then checked and sent to the client.  The process then waits for the client's response. If the offer is accepted, the process continues in parallel with sending a welcome letter and activating the loan application.  Once both the welcome letter is sent and the loan application is activated, the loan activation is validated.  After validation, the initial payment is executed, the documents are returned to the client, and the process ends. If the offer is rejected, the process ends.  If one hour passes after the offer is sent without a response, the client is reminded, the loan offer is sent again, and the process waits for a response.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait One Hour",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Remind Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id20",
                        "name": "One Hour Timer",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Offer Rejected",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Exclusive Gateway 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Exclusive Gateway 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Exclusive Gateway 3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Parallel Gateway 2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id1",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id22",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id3",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id23",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id4",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id24",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id24",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id6",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id25",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id25",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id20",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id26",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id26",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id15",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a parallel gateway.  The BKR check and the Jane Doe check are performed concurrently. Once both checks are completed, a credibility check is performed.  If the credibility check is accepted, a review of the credibility assessment takes place. If the review is accepted, the client is called. If the client picks up, a loan offer is created, then checked, and finally sent to the client. If the client does not pick up, the process waits for one hour, after which the client is called again.  After the loan offer is sent, the process waits for the offer to be accepted by the client. If the offer is accepted, a welcome letter is sent, the loan application is activated, the activation is validated, the initial payment is executed, and finally, the documents are returned to the client, after which the process ends. If the offer is not accepted, the client is reminded, and the process waits again for offer acceptance. If the credibility check is not accepted, or if the review of the credibility assessment is not accepted, a rejection letter is sent, and the process ends.  If the client does not pick up the phone after the reminder, the process will wait another hour and then call the client again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review Credibility Assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate Loan Activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return Documents to Client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Wait 1 hour",
                        "type": "Service"
                    },
                    {
                        "id": "id16",
                        "name": "Remind client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Offer Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Client Called",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id21",
                        "name": "One Hour Passed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id24",
                        "name": "Credibility Check Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Review Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Client Picked up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id27",
                        "name": "Offer Accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id22",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id22",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id23",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id3",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id24",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id24",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id25",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id25",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id6",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id20",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id26",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id26",
                        "targetRef": "id15",
                        "condition": "no"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id15",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id21",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id9",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id19",
                        "targetRef": "id27"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id27",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id27",
                        "targetRef": "id16",
                        "condition": "no"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_ground_truth.txt": {
        "0": {
            "text": "The process starts with a parallel execution of a BKR check by a Risk Analyst in Risk Management and a Jane Doe check by the same Risk Analyst. Once both checks are completed, the results are passed to Senior Risk Management for credibility confirmation.  Based on the assessment outcome, the process either proceeds with rejection or acceptance. If rejected, the Admin Staff in Administration sends a rejection letter, ending the process. If accepted, the Customer Service Representative in Customer Contact calls the client. If the call isn't picked up, the representative tries again. If the call is successful, a loan offer is created and sent to the client. If the offer is not accepted, the representative reminds the client and checks again for acceptance. This loop continues until the offer is accepted. Upon acceptance, the Admin Staff sends a welcome letter.  Next, the Finance Officer in Finance activates the loan application, validates the activation, and executes the initial payment. Finally, the Admin Staff returns the documents to the client, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Assessment rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Call picked up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Offer accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Parallel"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id21",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Risk Analyst",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id23",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id24",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Admin Staff",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Customer Service Representative",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Finance Officer",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id13",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id12",
                        "targetRef": "id15"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts with a BKR check performed by Risk Management and simultaneously a Jane Doe check, also performed by Risk Management.  Both checks lead to a credibility check confirmation by Senior Risk Management. Based on the assessment outcome, the process either ends with rejection, triggering a rejection letter sent by Administration, or it proceeds to the accepted path. In case of acceptance, Customer Contact calls the client. If the call isn't picked up, the process waits for 1 hour and then Customer Contact calls again. This loop continues until the call is picked up. Once the call is picked up, Customer Contact creates and sends a loan offer. After sending the offer, the process waits for 2 hours. If no response is received within 2 hours, Customer Contact reminds the client.  When an accepted offer is received, Customer Contact sends a welcome letter and simultaneously activates the loan application. Administration then executes the initial payment after the welcome letter is sent and the loan application activation is validated by Finance. Finally, Administration returns the documents to the client, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Credibility Check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send Rejection Letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and Send Loan Offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Welcome Letter",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate Loan Application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate Activation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute Initial Payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Return Documents to Client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Accepted",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id17",
                        "name": "2 hours passed?",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id18",
                        "name": "1 hour passed?",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Picked up",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Not picked up",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Accepted Offer Received",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Call Picked Up?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Customer Contact",
                        "lanes": []
                    },
                    {
                        "id": "id30",
                        "name": "Finance",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id22",
                        "targetRef": "id15",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id22",
                        "targetRef": "id16",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id5",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id23",
                        "targetRef": "id20",
                        "condition": "Not picked up"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id23",
                        "targetRef": "id19",
                        "condition": "Picked up"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id20",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id21",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id21",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a BKR check and a Jane Doe check performed by a risk analyst in Risk Management.  Both checks lead to a credibility check confirmation by Senior Risk Management. Based on the assessment outcome, the process either proceeds with rejection or acceptance. If rejected, a rejection letter is sent by Admin Staff in Administration, ending the process. If accepted, a contact agent in Customer Contact calls the client.  Depending on the call outcome, if not picked up, the client is called again. If picked up, a loan offer is created and sent by the contact agent. After 2 hours, the client is reminded by the contact agent. Upon receiving the accepted offer, a welcome letter is sent by Admin Staff.  A finance officer in Finance then activates the loan application and validates the activation.  The initial payment is executed by the finance officer, and finally, the documents are returned to the client by Admin Staff, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Accepted",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Picked up",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Not picked up",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id19",
                        "name": "2 hours passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Accepted offer received",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Assessment outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Call outcome",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Risk analyst",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Admin Staff",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Contact agent",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Finance officer",
                                "elemRefs": [
                                    "id9",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id3",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id21",
                        "targetRef": "id15",
                        "condition": "Rejected"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id5",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id22",
                        "targetRef": "id18",
                        "condition": "Not picked up"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id22",
                        "targetRef": "id6",
                        "condition": "Picked up"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id6",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id7",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id20",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ]
            }
        }
    },
    "53_ground_truth.txt": {
        "0": {
            "text": "The process starts with preparing a checklist for preparations. Next, necessary papers are checked and completed.  Then, it is determined whether a visa is required. If a visa is required, the next steps are to apply for the visa and communicate the visa application to the embassy. Regardless of whether a visa is required, the next step is to clear unfinished business.  After clearing unfinished business, it is determined whether there are pets to take care of. If so, pet care arrangements are made, followed by unsubscribing from post or arranging for a neighbor to collect it. If there are no pets to take care of, the next step is to unsubscribe from post or arrange for a neighbor to collect it directly after clearing unfinished business.  The next step is to obtain necessary vaccinations, followed by checking insurance coverage.  Next, it is determined whether additional coverage is needed. If additional coverage is needed, the next steps are to apply for additional coverage and communicate the insurance application. Regardless of whether additional coverage is needed, the following three tasks occur in parallel: gather travel documents and addresses, buy/lend guidebooks and city maps, and prepare a first-aid kit. Once these three parallel tasks are complete, copies of ID cards and travel documents are made. Finally, the process ends, indicating that travel preparations are complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Visa application to Embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make Pet Care Arrangements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from post or arrange neighbor",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain necessary vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check insurance coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for additional coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate insurance application",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather travel documents and addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy/Lend guidebooks and city maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare first-aid kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to take care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional Coverage Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with fixing the travel details.  A checklist for preparations is prepared, followed by checking and completing the necessary papers. Next, it is determined whether a visa is required. If a visa is required, the visa application is submitted and communicated to the embassy. Regardless of whether a visa is required, any unfinished business is cleared.  Then, it is determined whether pets need to be taken care of. If so, pet care arrangements are made, followed by unsubscribing from post or arranging for a neighbor to collect it. If no pets need care, the post/neighbor arrangements are handled directly. Next, necessary vaccinations are obtained, and insurance coverage is checked. If additional coverage is needed, it is applied for and the application is communicated to the insurance company. Regardless of additional coverage, three parallel paths are initiated: gathering travel documents and addresses, buying or lending guidebooks and city maps, and preparing a first-aid kit. Once all three parallel paths are complete, copies of ID cards and travel documents are made. Finally, the process ends with travel preparations complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Visa application to Embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make Pet Care Arrangements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from Post or Arrange Neighbor",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain Necessary Vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for Additional Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate application to insurance company",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy or Lend Guidebooks and City Maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare First-Aid Kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Fix Travel Details",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to Take Care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional Coverage Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with fixing the travel details.  A checklist for preparations is then prepared, followed by checking and completing the necessary papers. Next, it is determined whether a visa is required. If so, the visa application is submitted and communicated to the embassy. Regardless of visa requirements, any unfinished business is cleared.  The next step involves determining if there are pets to take care of. If yes, pet care arrangements are made.  In either case, arrangements are made for post during the travel period.  Following this, necessary vaccinations are obtained, and insurance coverage is checked. If additional insurance is needed, it is applied for and communicated to the company.  At this point, three parallel paths are initiated: gathering travel documents and addresses, buying or lending guidebooks and city maps, and preparing a first-aid kit. Once these three parallel paths are complete, copies of ID cards and travel documents are made. Finally, the process ends with all travel preparations complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Checklist for Preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and Complete Necessary Papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for Visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate Visa Application to Embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear Unfinished Business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make Pet Care Arrangements",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from Post or Arrange Neighbor to Fetch It",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain Necessary Vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for Additional Insurance Coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate Additional Insurance to Company",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather Travel Documents and Addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make Copies of ID Cards and Travel Documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy or Lend Guidebooks and City Maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare First-Aid Kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id16",
                        "name": "Fix Travel Details",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "All Travel Preparations Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Pets to Take Care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Additional Insurance Needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id21",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id21",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id22",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "69_ground_truth.txt": {
        "0": {
            "text": "The process starts when a patient receives a prescription. The pharmacist first checks if the prescription is for the patient. If not, the process ends as \"Prescription unfilled\". Otherwise, the patient shows their Medicare card and prescriptions to the pharmacist, who receives and checks the script details. Next, the pharmacist checks if the prescription is valid. If not, the process ends, also with the status \"Prescription unfilled\". If the prescription is valid, the pharmacist opens and reviews the patient's profile and views the prescription information. The pharmacist then determines if the patient is suspicious. If so, the pharmacist contacts the GP for advice. The GP replies to the pharmacist, who then confirms the decision. If the decision is to not fill the prescription, the process ends with \"Prescription unfilled\". If the patient is not suspicious, the pharmacist checks the patient's status. If the status check does not pass, the pharmacist offers alternatives to the patient. If the patient agrees, a short memo is added, and the correct dosage is selected, and inventory is checked. If the patient does not agree, the process ends with \"Prescription unfilled\". If the status check passes, the pharmacist selects the correct dosage and checks the inventory. If the medication is not in stock, the pharmacist informs the patient about alternatives, and the process ends with \"Prescription unfilled\". If the medication is in stock, the pharmacist double-checks and collects the drugs. The system then calculates the costs and fees. The pharmacist prints and attaches labels with CMI. The patient receives consultation and pays the fees, receives the prescriptions, and the process ends with \"Dispensing process end\".\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "View prescription info",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reply to pharmacist",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Select correct dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate costs and fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive counseltation and pay fees",
                        "type": "User"
                    },
                    {
                        "id": "id17",
                        "name": "Receive prescriptions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id18",
                        "name": "Receive prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Dispensing process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Prescription for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id26",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id27",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id16",
                                    "id17",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Pharmacist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "GP (Doctor)",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "System Lane",
                                "elemRefs": [
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id35",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id37",
                        "sourceRef": "id18",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id21",
                        "targetRef": "id19",
                        "condition": "no"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id22",
                        "targetRef": "id19",
                        "condition": "no"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id4",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id23",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id5",
                        "targetRef": "id35"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id35",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id6",
                        "targetRef": "id36"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id36",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id23",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id8",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id24",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id9",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id25",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id25",
                        "targetRef": "id19",
                        "condition": "no"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id24",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id11",
                        "targetRef": "id26"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id26",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id12",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id26",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id67",
                        "sourceRef": "id16",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id68",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    }
                ]
            }
        },
        "1": {
            "text": "The process starts when a patient submits a prescription to NewTown Health Chemist. The pharmacist first checks if the prescription is for the patient. If not, the process ends, and the prescription is unfilled. If the prescription is for the patient, the patient shows their Medicare card and prescriptions to the pharmacist. The pharmacist receives and checks the script details and then checks if the prescription is valid. If not, the process ends, and the prescription is unfilled. If the prescription is valid, the pharmacist opens and reviews the patient's profile and views the prescription information. Next, the pharmacist assesses if the patient is suspicious. If so, the pharmacist contacts the patient's GP for advice. The GP replies to the pharmacist, and the pharmacist confirms the decision with the patient. If the patient does not agree with the decision, the process ends, and the prescription is unfilled. If the patient is not suspicious, the pharmacist checks the patient's status. If the status check fails, the pharmacist offers alternative medications to the patient. If the patient agrees, the pharmacist adds a short memo and selects the dosage and checks the inventory. If the patient does not agree, the process ends, and the prescription is unfilled. If the status check passes, the pharmacist proceeds to select the dosage and check the inventory. If the medication is not in stock, the pharmacist informs the patient about the alternatives, and the process ends with the prescription unfilled. If the medication is in stock, the pharmacist double-checks and collects the drugs, calculates the costs and fees, prints and attaches labels with CMI, and the patient receives consultation and pays the fees. Finally, the process ends with the patient receiving their prescriptions.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and review patient profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "View prescription info",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reply to pharmacist",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check patient status",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Select dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-check and collect drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate costs and fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and attach labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive counseltation and pay fees",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Receive prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Prescription unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Receive prescriptions",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Prescription for patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Status check pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Medication in stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id26",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id16",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Pharmacist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "Doctor",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id34",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id20",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id20",
                        "targetRef": "id1",
                        "condition": "yes"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id21",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id4",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id22",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id5",
                        "targetRef": "id32"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id32",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id6",
                        "targetRef": "id33"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id33",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id22",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id8",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id23",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id9",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id24",
                        "targetRef": "id10",
                        "condition": "yes"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id24",
                        "targetRef": "id18",
                        "condition": "no"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id23",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id11",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id25",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id25",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts when a patient submits a prescription to NewTown Health Chemist. The pharmacist first checks if the prescription is for the patient. If not, the process ends with the prescription unfilled. If it is for the patient, the patient shows their Medicare card and prescriptions. The pharmacist receives and checks the script details and then checks if the prescription is valid. If not, the process ends. If the prescription is valid, the pharmacist opens and reviews the patient's profile and views the prescription information. Next, the pharmacist assesses if the patient appears suspicious. If so, the pharmacist contacts the GP for advice. The GP replies to the pharmacist, and the pharmacist confirms the decision. If the decision is to not fill the prescription, the process ends. If the patient does not appear suspicious, the pharmacist checks the patient's status. If the status check fails, the pharmacist offers alternative medications, perhaps with a lower dosage. The patient then decides whether to accept the alternatives. If the patient agrees, the pharmacist adds a short memo and selects the correct dosage of the alternative, checking the inventory. If the patient disagrees, the process ends. If the patient's status check passes, the pharmacist proceeds directly to selecting the correct dosage and checking inventory. The pharmacist then checks if the medication is in stock. If not, the pharmacist informs the patient about alternatives, and the process ends. If the medication is in stock, the pharmacist double-checks and collects the drugs. The system calculates Medicare costs and fees. The pharmacist prints and attaches labels with CMI. Finally, the patient receives the consultation and pays the fees, and the process ends with the prescription dispensed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Show Medicare Card and Prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive and Check Script Details",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Open and Review Patient Profile",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "View Prescription Info",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Contact GP for Advice",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reply to Pharmacist",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Confirm Decision",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check Patient Status",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Offer Alternatives (Lower Dosage)",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Add Short Memo",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Select Correct Dosage and Check Inventory",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Inform Patient about Alternatives",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Double-Check and Collect Drugs",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Calculate Medicare Costs and Fees",
                        "type": "Service"
                    },
                    {
                        "id": "id15",
                        "name": "Print and Attach Labels with CMI",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Receive Consultation and Pay Fees",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Receive Prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Prescription Unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Prescriptions Dispensed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Prescription for Patient?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Prescription Valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Patient Suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Status Check Pass?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Patient Agree?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id25",
                        "name": "Medication In Stock?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id26",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id16",
                                    "id17",
                                    "id19"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Pharmacist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id8",
                                    "id9",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id15"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id30",
                        "name": "GP (Doctor)",
                        "lanes": [
                            {
                                "id": "id31",
                                "name": "Doctor Lane",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id32",
                        "name": "System",
                        "lanes": [
                            {
                                "id": "id33",
                                "name": "System Lane",
                                "elemRefs": [
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id18",
                        "condition": "No"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id20",
                        "targetRef": "id1",
                        "condition": "Yes"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id18",
                        "condition": "No"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id4",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id22",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id5",
                        "targetRef": "id34"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id34",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id6",
                        "targetRef": "id35"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id35",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id7",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id22",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id8",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id53",
                        "sourceRef": "id23",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id54",
                        "sourceRef": "id9",
                        "targetRef": "id24"
                    },
                    {
                        "id": "id55",
                        "sourceRef": "id24",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "id56",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id57",
                        "sourceRef": "id24",
                        "targetRef": "id18",
                        "condition": "No"
                    },
                    {
                        "id": "id58",
                        "sourceRef": "id23",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id59",
                        "sourceRef": "id11",
                        "targetRef": "id25"
                    },
                    {
                        "id": "id60",
                        "sourceRef": "id25",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id61",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id62",
                        "sourceRef": "id25",
                        "targetRef": "id13",
                        "condition": "Yes"
                    },
                    {
                        "id": "id63",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id64",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id65",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id66",
                        "sourceRef": "id16",
                        "targetRef": "id19"
                    }
                ]
            }
        }
    },
    "72_ground_truth.txt": {
        "0": {
            "text": "The process starts with a request for an appointment describing the problem.  The request is then followed by a verification of the dates. Next, it is checked if available dates are within 90 days. If yes, the appointment is made, and the appointment data is checked.  If the appointment is confirmed, an email with the personal data for the patient is received, and the appointment is registered. Finally, an email with data for the patient is sent, and the process ends with the appointment done. If the available dates are not within 90 days, the process ends with the appointment rejected. If the appointment is not confirmed, the process loops back to the request for an appointment describing the problem.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request for an appointment describing the problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify the dates",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Make the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check the appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive an email with the personal data for the patient",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Register the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send an email with data for the patient",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start booking of an appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a patient requests an appointment. The receptionist verifies available dates. If there are available dates within 90 days, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient checks the appointment data and confirms or rejects the appointment. If the patient confirms, the receptionist receives an email with patient data, registers the appointment, and sends an email with patient data back to the patient, finalizing the appointment. If the patient rejects the appointment, the process loops back to the request for an appointment. If there are no available dates within 90 days, the appointment is rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request for an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify available dates",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send appointment time and date",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm appointment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive email with patient data",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Register appointment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send email with patient data",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start booking",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "No"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a patient requests an appointment, describing the problem. The receptionist verifies the dates. If available dates exist within 90 days, the receptionist makes the appointment and informs the patient about the appointment details. The patient then checks the appointment data and decides whether to confirm the appointment. If confirmed, the patient informs the receptionist, who registers the appointment, completing the process. If the patient rejects the appointment, they submit a new request, restarting the process from the beginning. If no dates are available within 90 days, the process ends with the appointment being rejected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Request for an appointment describing the problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify the dates",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Make the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Register appointment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start booking of an appointment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Available dates within 90 days?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "Pool1",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "Lane1",
                                "name": "Patient Lane",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Pool2",
                        "name": "Receptionist",
                        "lanes": [
                            {
                                "id": "Lane2",
                                "name": "Receptionist Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id1",
                        "condition": "No"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ]
            }
        }
    },
    "1_ground_truth.txt": {
        "0": {
            "text": "The process starts when a need arises.  The first step is to check the stock. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment removed from the storeroom. If the work equipment is not in stock, the requirements are specified and quantified.  Then, an order is placed.  After placing the order, there are two paths: either the receipt of work equipment is received, or 5 days elapse. Both paths lead to a check if a receipt has been received. If a receipt has been received, the process ends with the work equipment procured. If no receipt has been received, an order is placed by email, after which the receipt of work equipment is awaited again, and the receipt check is performed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need Arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work Equipment Removed from Storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "5 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work Equipment in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipt Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a need arises.  The stock is then checked. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment removed from the storeroom. If the work equipment is not in stock, the requirements are specified and quantified.  An order is then placed. Following this, there is a check for receipt of work equipment.  Concurrently, after five days elapse, there is also a check for receipt of work equipment. If a receipt has been received, the process ends with the work equipment procured. If no receipt has been received, an order is placed by email, after which the receipt of work equipment is checked again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve from Storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and Quantify Requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Place Order by Email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need Arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work Equipment Removed from Storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work Equipment Procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of Work Equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "5 Days Elapsed",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work Equipment in Stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Receipt Received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a need arises. The first step is to check the stock for the required work equipment. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends. If the work equipment is not in stock, the requirements are specified and quantified, and an order is placed.  After placing the order, the process waits for the receipt of the work equipment.  Concurrently, a timer for 5 days is started.  When either the work equipment is received or the 5 days have passed, the process checks if the work equipment has been received. If the work equipment has not been received, an order is placed by email, after which the process again waits for the receipt of work equipment. If the work equipment has been received, the process ends with the work equipment procured.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Place order by email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Work equipment retrieved from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Receipt of work equipment",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "5 days passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Work equipment in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Work equipment received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "Yes"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "49_ground_truth.txt": {
        "0": {
            "text": "The process starts with the customer placing an order. The customer communicates the order to the waiter, who then sends the order to the sous chef. The sous chef manages the order and passes it to the chef to cook the food.  After cooking, the food is sent back to the sous chef for checking. Once checked, the sous chef calls the waiter to grab the food. The waiter then sends the food to the customer. Finally, the customer receives and enjoys the food, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate Order to Waiter",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Send Order to Sous Chef",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Manage Order and Pass to Chef",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send Food to Sous Chef for Checking",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Check Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Call Waiter to Grab Food",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Send and Communicate Food to Customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "Pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "Lane1",
                                "name": "CustomerLane",
                                "elemRefs": [
                                    "id1",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Pool2",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "Lane2",
                                "name": "WaiterLane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id9"
                                ]
                            },
                            {
                                "id": "Lane3",
                                "name": "KitchenLane",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the customer places an order. The waiter receives the order and sends it to the kitchen. The kitchen staff manages the order and passes it to the chef. The chef cooks the food and sends it to the sous chef. The sous chef checks the food and calls the waiter. The waiter grabs the food and sends it to the customer. The customer receives and enjoys the food, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Manage Order and Pass to Chef",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Cook Food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Food to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check Food",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Call Waiter",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Grab Food",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send Food to Customer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process Ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Waiter Lane",
                                "elemRefs": [
                                    "id2",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Kitchen Lane",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a customer placing an order. The waiter receives the order and sends it to the kitchen.  The kitchen staff manages the order and passes it to the chef. The chef cooks the food and sends it back to the sous chef. The sous chef checks the food and then calls the waiter. The waiter grabs the food and sends it to the customer. Finally, the customer receives and enjoys the food, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Place Order",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Send Order to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Manage Order and Pass to Chef",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Cook Food",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Send Food to Sous Chef",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Check Food",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Call Waiter",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Grab Food",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Send Food to Customer",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Receive and Enjoy Food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Process Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "task1",
                                    "task10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Waiter Lane",
                                "elemRefs": [
                                    "task2",
                                    "task8",
                                    "task9"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Kitchen Lane",
                                "elemRefs": [
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task10",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "15_ground_truth.txt": {
        "0": {
            "text": "The process starts with a request to support.  A ticket is received and then the question is asked: \"Customer participation necessary?\". If yes, the customer is contacted, followed by a detailed interview on the problem. Next, a connection to the client of the customer is established, and the problem is solved together. After this, the process loops back to the \"Customer participation necessary?\" gateway. If at the gateway \"Customer participation necessary?\" the answer is that further information is needed, further information is asked for, and the problem is solved. If the answer to \"Customer participation necessary?\" is no, the problem is solved without the customer or notes for documentation are created.  From both solving the problem and solving the problem without the customer, the next step is creating notes for documentation. Finally, a confirmation of ticket completion is sent, and the process ends with the problem solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Detailed interview on the problem",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client of customer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes for documentation",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation of ticket completion",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Solve problem without customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Request to support",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "further information needed"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a request is received. The first step is to receive the ticket. Next, it is determined whether customer participation is required. If so, the customer is contacted, a detailed interview is conducted, and a connection to the customer's client is established.  Together, they work to solve the problem.  Afterward, it is checked if further information is needed. If yes, further information is requested, and the process loops back to solving the problem together with the customer's client. If no further information is needed, notes are created. If customer participation is not required, the problem is solved by support, and then notes are created. Finally, a confirmation is sent, and the process ends with the problem being solved.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to customer's client",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request further information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem (support)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Customer participation required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Further information needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a request is received. The first step is to receive the ticket. Next, it is determined whether customer participation is necessary. If so, the customer is contacted, followed by a detailed interview on the problem. Subsequently, a connection to the client of the customer is established, and the problem is solved together. If further information is needed, it is requested, and the problem-solving continues. Once the problem is solved, notes for documentation are created, and a confirmation of ticket completion is sent, after which the process ends. If customer participation is not necessary, the problem is solved without the customer, notes for documentation are created, a confirmation is sent, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Detailed interview on the problem",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client of customer",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create notes for documentation",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send confirmation of ticket completion",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Solve problem (without customer)",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "Further Information needed"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "21_ground_truth.txt": {
        "0": {
            "text": "The process starts when a new order is received. Three parallel paths are then initiated. The first path involves preparing the dough, the second involves setting up the delivery, and the third involves preparing the cooking paper. Once all three parallel paths are completed, the muffins are prepared.  Next, the muffins are cooked.  After cooking, two parallel paths begin. One path is to initiate the payment process, and the other is to dispatch the muffins.  Once both the payment and dispatch processes are finished, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate Payment Process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Start Phase 1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel End Phase 1",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Start Phase 3",
                        "type": "ParallelGateway"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel End Phase 3",
                        "type": "ParallelGateway"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when an order is received.  Three parallel paths are then initiated. The first path is to prepare the dough. The second is to set up the delivery.  The third is to prepare the cooking paper. Once all three parallel paths are complete, the muffins are prepared.  Next, the muffins are cooked.  After the muffins are cooked, two parallel paths begin. The first is to initiate the payment process. The second is to dispatch the muffins.  Once both parallel paths are complete, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate Payment Process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Parallel Start Phase 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Parallel End Phase 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Parallel Start Phase 3",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Parallel End Phase 3",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a new order is received. Three tasks are then carried out in parallel: preparing the dough, setting up the delivery, and preparing the cooking paper. Once these three tasks are completed, the muffins are prepared.  Next, the muffins are cooked.  After the muffins are cooked, two parallel tasks begin: initiating the payment process and dispatching the muffins.  Finally, after both the payment process is initiated and the muffins are dispatched, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare Dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set Up Delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Cooking Paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook Muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate Payment Process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch Muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receive New Order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Process End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Phase 1 Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "Phase 1 End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "Phase 3 Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id13",
                        "name": "Phase 3 End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id13",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_ground_truth.txt": {
        "0": {
            "text": "The process starts with the start request fulfillment. The first step is to verify the request.  Next, the process checks if the request is authorized. If the request is not authorized, the request is verified again. If the request is authorized, the request handling is performed, followed by receiving the request. After receiving the request, the request is logged and categorized, and the authorization check is performed again. Once authorized, the process splits into two parallel paths. One path involves request monitoring and escalation, while the other involves request model execution. After both parallel paths are completed, they converge, and the request closure and evaluation takes place. Finally, the process checks if there is a problem with the request. If there is no problem, request fulfillment support is provided, and the process ends with successful request fulfillment. If there is a problem with the request, the incident manager is contacted, and the process ends with request fulfillment failed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Handling",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Request",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Successful Request Fulfillment",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Request Fulfillment Failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Parallel Gateway Start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Parallel Gateway End",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a request fulfillment. The first step is to verify the request.  If the request is authorized, the process proceeds with request handling, followed by receiving the order. The received order is then logged and categorized, after which the request authorization is checked again. If the request is not authorized after logging and categorization, the verification step is repeated. Once the request is authorized, the process forks into two parallel paths: request monitoring and escalation, and model execution. When both parallel paths are complete, they converge, and the process continues with request closure and evaluation.  Finally, a decision is made based on whether there is a problem. If there is no problem, the process proceeds with request fulfillment support and ends with success. If there is a problem, the process involves contacting the incident manager and ends due to the problem.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request Handling",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Model Execution",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fullfillment Support",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End - Success",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End - Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "No Problem?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a request fulfillment. The first step is to verify the request.  The order is then sent for request handling, and subsequently received. The request is logged and categorized, and then checked for authorization. If the request is not authorized, the verification step is repeated. If the request is authorized, it proceeds to request monitoring and escalation.  Concurrently, the request model is executed. These two parallel paths converge, and the request closure and evaluation takes place. Finally, a check is performed to determine if there was a problem with the request. If no problem occurred, request fulfillment support is provided, leading to successful request fulfillment. If there was a problem, the incident manager is contacted, resulting in request fulfillment with a problem.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order for Request Handling",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request Closure and Evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager about Problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start Request Fulfillment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Successful Request Fulfillment",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Request Fulfillment with Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Problem with Request?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "0_ground_truth.txt": {
        "0": {
            "text": "The process begins when the ACME AG's Human Resources Department receives an application. A receipt confirmation is sent to the applicant, and the applicant is verified. The Head of Human Resources then determines the application status. If the application is rejected, a rejection is sent to the applicant, and the process ends. If the application is accepted, a job interview invitation is sent to the applicant.  Following this, the Human Resources Department prepares an employment agreement and conducts a job interview.  The Human Resources Department then determines the applicant's suitability. If the applicant is not suitable, a rejection is sent to the applicant, and the process ends. If the applicant is suitable, an employment contract is sent to the applicant. The process ends when a signed employment contract is received by the Human Resources Department.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send Receipt Confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Verify Applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine Application Status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send Rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Job Interview Invitation",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare Employment Agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Conduct Job Interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine Applicant Suitability",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send Employment Contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receive Application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed Employment Contract Received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Signed Employment Contract Present",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Application Accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id10",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id11",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the receipt of an application at the Human Resources Department of ACME AG. A receipt confirmation is sent to the applicant and the applicant is verified. The Head of Human Resources then determines the application status. If the application is rejected, a rejection is sent to the applicant, and the process ends. If the application is not rejected, an invitation to a job interview is sent to the applicant.  In the Human Resources Department, preparations for the employment agreement are made, and the job interview is carried out. Subsequently, the applicant's suitability is determined. If the applicant is not suitable, a rejection is sent, and the process ends. If the applicant is suitable, an employment contract is sent to the applicant. The process ends when ACME AG receives the signed employment contract from the applicant.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "SendTask"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "UserTask"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "UserTask"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "SendTask"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "SendTask"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "UserTask"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "UserTask"
                    },
                    {
                        "id": "id8",
                        "name": "Determine applicant suitability",
                        "type": "UserTask"
                    },
                    {
                        "id": "id9",
                        "name": "Send employment contract",
                        "type": "SendTask"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Receipt of application",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Signed employment contract present",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Receipt of signed employment contract",
                        "type": "IntermediateMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Application rejected?",
                        "type": "ExclusiveGateway"
                    },
                    {
                        "id": "id15",
                        "name": "Applicant suitable?",
                        "type": "ExclusiveGateway"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id10",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id11",
                                    "id13",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id13",
                        "targetRef": "id12"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the receipt of an application at the Human Resources Department of ACME AG. A receipt confirmation is sent to the applicant.  The application is then verified by the Human Resources Department. Next, the Head of Human Resources determines the application status.  Based on the status, the process branches: If the application is rejected, a rejection is sent to the applicant, and the process ends. If the application is not rejected, the Human Resources Department sends an invitation to a job interview.  Following this, the Human Resources Department prepares an employment agreement, and carries out the job interview.  The applicant's suitability is then determined.  Again, the process branches based on suitability: If the applicant is not suitable, a rejection is sent, and the process ends. If the applicant is suitable, an employment contract is sent to the applicant. Once a signed employment contract is received, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine Application Status",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send Invitation to Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare Employment Agreement",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Carry out Job Interview",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Determine Applicant Suitability",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send Employment Contract",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Receipt of Application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Send Receipt Confirmation",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Send Rejection",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Send Rejection",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Send Employment Contract",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Receipt of Signed Employment Contract",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Signed Employment Contract Present",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Application Rejected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Applicant Suitable?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id2",
                                    "id17"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id18",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "30_ground_truth.txt": {
        "0": {
            "text": "The process starts with entering the store and looking for a service. If the service is not found, the process ends. If the service is found, the user takes a ticket.  If the ticket was taken in the app, the user waits for the waiting time, looks for the product and specific criteria, checks how many tickets are ahead, and waits for their turn. If the ticket was taken physically, the user directly waits for their turn.  When the turn arrives, the user asks for the specific request and communicates it to the request assistant. The request assistant then registers the request. A timer starts, and when it expires, the user checks if enough requests have been made. If not, the user registers the request again. If enough requests have been made, the user sends the order request document and prepares the order. Once the order description is received, the order is delivered. Finally, the user collects the order, and the process ends.  There is an alternative end event if the delivery is cancelled before the order can be collected.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store and look for service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Look for product and specific criteria",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check how many tickets are ahead",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate request to request assistant",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Collect order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Registering over",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Register time expired",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Order description received",
                        "type": "IntermediateMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Service found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Ticket taken where?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id21",
                        "targetRef": "id16",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id21",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id22",
                        "targetRef": "id3",
                        "condition": "In app"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id22",
                        "targetRef": "id6",
                        "condition": "Physically"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id19",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id23",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id23",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id14",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id13",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with entering the store and looking for service. If the service is not found, the process ends. If the service is found, a ticket is taken.  Depending on where the ticket was taken, the customer either waits for a waiting time and then looks for the product and criteria, or directly waits for their turn. After checking tickets ahead, the customer waits for their turn.  The customer then asks for their specific request and communicates it to the service provider. The service provider then communicates the request, and the customer registers the request. The customer checks if enough requests have been made. If not, the customer registers another request. If enough requests have been made, the customer sends an order request document. The order is then prepared, and after preparation is finished, the order is delivered and collected. Finally, after registering is over, the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store and look for service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Look for product and criteria",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check tickets ahead",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate request",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check if enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Collect order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Registering over",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Order description received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Preparation finished",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Service found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Ticket taken where?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id21",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id22",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id22",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id23",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id23",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id18",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id19",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts.  First, the customer enters the store and looks for the desired service. If the service is not found, the process ends. If the service is found, the customer takes a ticket.  Depending on where the ticket was taken, the customer either waits for a period of time and then looks for the desired product and specific criteria, or the customer directly waits for their turn. After checking the tickets ahead, the customer waits for their turn. Once their turn arrives, the customer asks for their specific request and communicates it to the service provider. The service provider then communicates the request. After a certain waiting time, the customer registers the request. The customer then checks if there are enough requests. If not, the customer registers the request again. This loop continues until there are enough requests. Once there are enough requests, the customer sends an order request document. The order is then prepared and delivered.  If the delivery is successful, the customer collects the order and the process ends. If the delivery is not successful for some reason, the process ends when the preparation is finished.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store and look for service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Look for product and specific criteria",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check tickets ahead",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Communicate request",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check for enough requests",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send order request document",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Deliver order",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Collect order",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Registering over",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Preparation finished",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Process ended",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Register time expired",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "Service found?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Ticket taken where?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Enough requests?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id21",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id22",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id22",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id10",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id23",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id23",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id14",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "81_ground_truth.txt": {
        "0": {
            "text": "The process starts when a sales enquiry is received.  An enquiry is then created, and a decision is made whether the enquiry is inbound or outbound. If the enquiry is inbound, a contact is created. If it's outbound, the enquiry is updated.  Next, a decision is made regarding price approval and interest. If the price is OK and there is interest, customer approval is sent and then received. The process loops back to the price approval decision based on the customer's response. If the price is not approved, the enquiry status is updated to \"Not Approved,\" and the process ends with the client not approving. If the price is approved, a quote is created. Following this, a qualified requirements analysis is performed, the enquiry status is updated, a job is created, and the process ends with the job created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Receive Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Update Enquiry Status (Not Approved)",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Qualified Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Receive Sales Enquiry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Client Does Not Approve",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "Price OK and Interest"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "Price Not Approved"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "Price Approved"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a sales enquiry is received. An enquiry is then created, and a decision is made whether the enquiry is inbound or outbound. If the enquiry is inbound, a contact is created. If the enquiry is outbound, the enquiry is updated.  Next, the price is checked. If the price is OK and there is interest, the process continues to qualify the price.  If the price is not approved, the enquiry status is updated to \"Not Approved\", and the process ends with the client not approving. If the price is approved, a quote is created. Following this, a qualified requirements analysis is performed, and the enquiry status is updated. Finally, a job is created, and the process ends with the job created. If after receiving customer approval, the price is still not approved, the enquiry status is updated to \"Not Approved\", and the process ends. If after receiving customer approval, the price is now approved, the process continues with creating a quote.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Qualify Price",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update Enquiry Status (Not Approved)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Qualified Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Receive Sales Enquiry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Client Does Not Approve",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Price OK and Interest"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Price Not Approved"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "Price Approved"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a sales enquiry is received. An enquiry is then created. Next, it is determined whether the enquiry is inbound or outbound. If inbound, a contact is created. If outbound, the enquiry is updated.  Following either of these actions, the price is checked. If the price is ok and there is interest, the process moves forward to send a customer approval request. After the customer approval is received, the price is checked again. If the price is not approved, the enquiry status is updated to reflect the non-approval, and the process ends with the client not approving. If the price is approved, a quote is created. After the quote is created, a qualified requirements analysis is performed. The enquiry status is then updated. Finally, a job is created, and the process ends with the job created.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Qualify Price",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Receive Customer Approval",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Update Enquiry Status (Not Approved)",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create Quote",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Qualified Requirements Analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Update Enquiry Status",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Create Job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Receive Sales Enquiry",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Client Does Not Approve",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "OK and interest"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "Not Approved"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id8",
                        "condition": "Approved"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id11",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "68_ground_truth.txt": {
        "0": {
            "text": "The process starts with a request for sample products. The supplier then provides sample products to the FMCG company. The warehouse supervisor evaluates the sample products. If the samples meet the requirements, the warehouse supervisor selects the product. If the samples do not meet the requirements, the warehouse supervisor adjusts the product specifications and the supplier provides new samples.  Once a product is selected, the FMCG company sends a purchase order to the supplier. The supplier checks stock availability. If the stock is available, the supplier sends the product to the FMCG company. If the stock is not available, the supplier restocks inventory and checks availability again. After receiving the product, the warehouse supervisor checks the products. If the order and product match, the FMCG company sends a payment authorization to the supplier. If the order and product do not match, the FMCG company requests the missing products from the supplier, who then checks stock availability again.  After receiving payment authorization, the supplier processes the payment and notifies the FMCG company, after which the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Purchase Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Product",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Check Products",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Payment Authorization",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Request Missing Products",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Process Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Notify Supplier",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Request for Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id22",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "id23",
                                "name": "Supplier Staff",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id9",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with a request for sample products. The supplier then provides sample products, which are subsequently evaluated. If the samples meet the requirements, a product is selected. If the samples do not meet the requirements, the product specifications are adjusted, and the supplier provides new sample products, which are then evaluated again.  Once a product is selected, a purchase order is sent. The supplier then checks stock availability. If the stock is available, the product is sent to the customer, who then receives the product. If the stock is not available, the supplier restocks inventory and checks stock availability again. After receiving the product, the customer checks the products against the order. If the order and product match, payment authorization is sent, and the payment is processed. If the order and product do not match, the customer requests the missing products, and the supplier checks stock availability again. Finally, after the payment is processed, the supplier is notified, concluding the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate Sample Products",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Adjust Product Specifications",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Select Product",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send Purchase Order",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Check Stock Availability",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Restock Inventory",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send Product",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Product",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Check Products against Order",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Request Missing Products",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Send Payment Authorization",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Process Payment",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Notify Supplier",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Request for Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Supplier Notified",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with a request for sample products. The Supplier provides sample products to the FMCG Company. The Warehouse Supervisor at the FMCG Company evaluates the sample products. If the samples meet the requirements, the Warehouse Supervisor selects the product. If the samples do not meet the requirements, the Warehouse Supervisor adjusts the product specifications and the Supplier provides new samples based on the adjusted specifications. Once a product is selected, the FMCG Company sends a purchase order to the Supplier. The Supplier checks stock availability. If the stock is available, the Supplier sends the product to the FMCG Company. If the stock is not available, the Supplier restocks inventory and checks availability again.  After receiving the product, the Warehouse Supervisor checks the products against the order. If the order and product match, the FMCG Company sends a payment authorization to the Supplier. If they do not match, the FMCG Company requests the missing products from the Supplier, who then checks stock availability again.  Upon receiving payment authorization, the Supplier processes the payment and notifies the FMCG Company, after which the process is complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Product",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send Purchase Order",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Send Product",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check Products against Order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Payment Authorization",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Request Missing Products",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Process Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Notify Supplier",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Request for Sample Products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Process Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Order and Product Match?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "FMCG_Company",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "Warehouse_Supervisor",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Supplier",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "Supplier_Lane",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id20",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id17",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id18",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id19",
                        "targetRef": "id11",
                        "condition": "Yes"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "22_ground_truth.txt": {
        "0": {
            "text": "The process starts when a patient registers. Patient data is recorded, after which three tasks happen in parallel: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered. Once these parallel tasks are completed, a referral document is printed. Finally, the record is archived in the file system, and the process ends with the registration being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel gateway start",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Parallel gateway end",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when a patient registers. Patient data is then recorded.  After recording the data, the registration process forks into three parallel paths: registering the patient's SSN, registering the patient's name, and registering the patient's surname. Once all three registration tasks are complete, the process joins back together.  A referral document is then printed. Finally, the record is archived, and the process ends, marking the registration as complete.\n",
            "model": {
                "tasks": [
                    {
                        "id": "record_data",
                        "name": "Record Patient Data",
                        "type": "User"
                    },
                    {
                        "id": "register_ssn",
                        "name": "Register Patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "register_name",
                        "name": "Register Patient Name",
                        "type": "User"
                    },
                    {
                        "id": "register_surname",
                        "name": "Register Patient Surname",
                        "type": "User"
                    },
                    {
                        "id": "print_referral",
                        "name": "Print Referral Document",
                        "type": "User"
                    },
                    {
                        "id": "archive_record",
                        "name": "Archive Record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "patient_registers",
                        "name": "Patient Registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "registration_complete",
                        "name": "Registration Complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "registration_fork",
                        "name": "Registration Fork",
                        "type": "Parallel"
                    },
                    {
                        "id": "registration_join",
                        "name": "Registration Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "patient_registers",
                        "targetRef": "record_data"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "record_data",
                        "targetRef": "registration_fork"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "registration_fork",
                        "targetRef": "register_ssn"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "registration_fork",
                        "targetRef": "register_name"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "registration_fork",
                        "targetRef": "register_surname"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "register_ssn",
                        "targetRef": "registration_join"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "register_name",
                        "targetRef": "registration_join"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "register_surname",
                        "targetRef": "registration_join"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "registration_join",
                        "targetRef": "print_referral"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "print_referral",
                        "targetRef": "archive_record"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "archive_record",
                        "targetRef": "registration_complete"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts when a patient registers. Patient data is then recorded.  After the patient data is recorded, three tasks happen in parallel: the patient's SSN is registered, the patient's name is registered, and the patient's surname is registered. Once all three parallel tasks are complete, a referral document is printed. Finally, the record is archived, and the process ends with the registration being completed.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Parallel gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Converging gateway",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "54_ground_truth.txt": {
        "0": {
            "text": "The process starts with a none start event. First, a subscription form is sent. Next, the user selects a payment method. Based on the selected payment method, the process branches into two paths. If the user selects \"Credit Card\", they are prompted to enter their credit card information. If the user selects \"Bank Account\", they are prompted to enter their IBAN and BIC numbers.  Regardless of the chosen path, the user then submits their payment information.  After submitting the payment information, the WoW subscription is activated. Finally, the process ends when the WoW subscription ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Active WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts with the initiation of a World of Warcraft subscription. The user then sends a subscription form. Next, the user selects a payment method. Based on the chosen payment method, the process branches. If the user selects \"Credit Card\", they are prompted to enter their credit card information. If the user selects \"Bank Account\", they are prompted to enter their IBAN and BIC.  After providing the respective payment information, the user submits the information. Finally, the WoW subscription is activated, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Initiate WoW subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW subscription ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the initiation of a WoW subscription. The user then sends a subscription form. Next, the user selects a payment method. Based on the chosen payment method, the process branches. If the user selects \"Credit Card\", they are prompted to enter their credit card information. If the user selects \"Bank Account\", they are prompted to enter their IBAN and BIC.  After providing the respective payment information, the user submits the information.  Finally, the WoW subscription is activated, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Active WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Initiate WoW subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "WoW subscription end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment Method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "23_ground_truth.txt": {
        "0": {
            "text": "The process begins when a patient enters short-term treatment at the hospital. The doctor first evaluates the patient's condition. Then, a technician performs laboratory tests. Based on the test results, the doctor proceeds to treat the patient.  Following the treatment, the doctor prescribes medicines. The pharmacist then delivers the prescription to the patient, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient enters short-term treatment at the hospital. The doctor first evaluates the patient's condition. Then, the technician performs laboratory tests. Based on the test results, the doctor treats the patient.  Next, the doctor prescribes medicines. Finally, the pharmacist delivers the prescription to the patient, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id8",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id9",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id10",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id11",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient enters short-term treatment at the hospital. The doctor first evaluates the patient's condition.  A technician then performs laboratory tests. Based on the test results, the doctor treats the patient.  Following treatment, the doctor prescribes medicines. The pharmacist then delivers the prescription to the patient, marking the end of the process.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate patient condition",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe medicines",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Deliver prescription",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Patient enters short-term treatment",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Prescription delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "63_ground_truth.txt": {
        "0": {
            "text": "The process starts when the Taxi Booking System receives a booking request message. The customer service operator checks the data. If the data is not complete, a cancellation message is sent to the customer. If the data is complete, the customer service operator checks for available cars. If no car is available within 30 minutes, a cancellation message is sent to the customer. If a car is available within 30 minutes, the customer service operator picks the nearest car. The Taxi System then calculates the time of arrival.  Finally, the customer service operator books the taxi and a booking confirmation is sent to the customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick Nearest Car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate Time of Arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Booking Request Received",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Cancellation Message Sent",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking Confirmation Sent",
                        "type": "EndMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Data Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Car Available in 30 Minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the Taxi Booking System receives a booking request from a Customer. The Taxi Booking System checks the data. If the data is not complete, the system sends a cancellation message to the Customer. If the data is complete, the system checks for available cars. If no car is available within 30 minutes, the system sends a cancellation message to the Customer. If a car is available within 30 minutes, the system picks the nearest car, calculates the time of arrival, books the taxi, and sends a booking confirmation to the Customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Available Cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick Nearest Car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate Time of Arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Receive Booking Request",
                        "type": "StartMessageEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Send Cancellation Message",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Send Cancellation Message",
                        "type": "EndMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Send Booking Confirmation",
                        "type": "EndMessageEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Data Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Car Available in 30 Minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Customer",
                        "lanes": []
                    },
                    {
                        "id": "id13",
                        "name": "Taxi Booking System",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with a booking request received by the Taxi System. The Customer Service Operator then checks the data. If the data is not complete, a cancellation message is sent to the customer. If the data is complete, the Customer Service Operator checks for available cars. If no car is available within 30 minutes, a cancellation message is sent to the customer. If a car is available within 30 minutes, the Customer Service Operator picks the nearest car. The Taxi System then calculates the time of arrival. Finally, the Customer Service Operator books the taxi and a booking confirmation is sent to the customer.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check Data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for Available Cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick Nearest Car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate Time of Arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book Taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Booking Request Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Cancellation Message Sent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Booking Confirmation Sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Data Complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Car Available in 30 Minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id13",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id10"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_ground_truth.txt": {
        "0": {
            "text": "The process starts when parts are required in the department of ACME AG.  It is first checked if parts are in stock. If yes, the parts are retrieved from storage, ending the process. If parts are not in stock, the requirements are specified and quantified by the department. Next, a purchase order is completed, which is then checked by central purchasing.  Central purchasing then checks if the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created, after which an order template is created from the purchase order. The purchase order is then approved by the approver.  Following approval, the receipt of goods takes place by central purchasing.  If the receipt of goods is successful, the process ends. If there are delivery problems during the receipt of goods, the order status is adjusted, and the process ends indicating cancellation due to delivery problems.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Complete a purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Retrieve parts from storage",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Check purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Create order template from purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Create vendor",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Receipt of goods",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Adjust order status",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Approve purchase order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Parts retrieved from  storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Cancelled due to  delivery problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Delivery  Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Vendor  known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id10",
                                    "id11",
                                    "id15"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id16"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Approver",
                                "elemRefs": [
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when parts are required in the department of ACME AG.  It is first checked if the parts are in stock. If they are, the parts are retrieved from storage, ending the process. If the parts are not in stock, the requirements are specified and quantified by the department.  A purchase order is then completed by the department and checked by central purchasing. Next, it is determined if the vendor is known. If the vendor is known, an order template is created from the purchase order by central purchasing. If the vendor is not known, central purchasing creates a new vendor.  In either case, the purchase order is then approved by the approver.  Following approval, central purchasing handles the receipt of goods.  The process normally ends at this point. However, if there are delivery problems during the receipt of goods, the order status is adjusted by central purchasing, and the process ends with a cancellation due to delivery problems.\n",
            "model": {
                "tasks": [
                    {
                        "id": "task_1",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task_2",
                        "name": "Complete a purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task_3",
                        "name": "Retrieve parts from storage",
                        "type": "Task"
                    },
                    {
                        "id": "task_4",
                        "name": "Check purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task_5",
                        "name": "Create order template from purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task_6",
                        "name": "Create vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task_7",
                        "name": "Receipt of goods",
                        "type": "Task"
                    },
                    {
                        "id": "task_8",
                        "name": "Adjust order status",
                        "type": "Task"
                    },
                    {
                        "id": "task_9",
                        "name": "Approve purchase order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event_start",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event_end_1",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_end_2",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_end_3",
                        "name": "Cancelled due to delivery problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event_intermediate",
                        "name": "Delivery Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway_1",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway_2",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool_1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane_1",
                                "name": "Department",
                                "elemRefs": [
                                    "event_start",
                                    "task_1",
                                    "task_2",
                                    "task_3",
                                    "gateway_1",
                                    "event_end_1"
                                ]
                            },
                            {
                                "id": "lane_2",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "task_4",
                                    "task_5",
                                    "task_6",
                                    "task_7",
                                    "event_end_2",
                                    "gateway_2",
                                    "event_intermediate"
                                ]
                            },
                            {
                                "id": "lane_3",
                                "name": "Approver",
                                "elemRefs": [
                                    "task_9"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "event_start",
                        "targetRef": "gateway_1"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "gateway_1",
                        "targetRef": "task_3",
                        "condition": "yes"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "task_3",
                        "targetRef": "event_end_1"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "gateway_1",
                        "targetRef": "task_1",
                        "condition": "no"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "task_1",
                        "targetRef": "task_2"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "task_2",
                        "targetRef": "task_4"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "task_4",
                        "targetRef": "gateway_2"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "gateway_2",
                        "targetRef": "task_5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "task_5",
                        "targetRef": "task_9"
                    },
                    {
                        "id": "flow_10",
                        "sourceRef": "gateway_2",
                        "targetRef": "task_6",
                        "condition": "no"
                    },
                    {
                        "id": "flow_11",
                        "sourceRef": "task_6",
                        "targetRef": "task_9"
                    },
                    {
                        "id": "flow_12",
                        "sourceRef": "task_9",
                        "targetRef": "task_7"
                    },
                    {
                        "id": "flow_13",
                        "sourceRef": "task_7",
                        "targetRef": "event_end_2"
                    },
                    {
                        "id": "flow_14",
                        "sourceRef": "task_7",
                        "targetRef": "event_intermediate"
                    },
                    {
                        "id": "flow_15",
                        "sourceRef": "event_intermediate",
                        "targetRef": "task_8"
                    },
                    {
                        "id": "flow_16",
                        "sourceRef": "task_8",
                        "targetRef": "event_end_3"
                    }
                ]
            }
        },
        "2": {
            "text": "The process starts with the event \"Parts required\" within the department of ACME AG.  A check is performed to see if parts are in stock. If the parts are in stock, they are retrieved from storage, ending the process with \"Parts retrieved from storage\". If the parts are out of stock, the department specifies and quantifies the requirements.  Next, a purchase order is completed and sent to Central Purchasing, where the purchase order is checked.  Then, a check is performed to see if the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, Central Purchasing creates a new vendor, after which an order template is created from the purchase order. The order template is then sent to the Approver, who approves the purchase order.  Central Purchasing then handles the receipt of goods.  If the \"Receipt of goods\" step is successful, the process ends with \"Parts procured\". If a \"Delivery Problems\" event occurs during \"Receipt of goods\", the order status is adjusted, and the process ends with \"Cancelled due to delivery problems\".\n",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "task2",
                        "name": "Complete a purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task3",
                        "name": "Retrieve parts from storage",
                        "type": "Task"
                    },
                    {
                        "id": "task4",
                        "name": "Check purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task5",
                        "name": "Create order template from purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "task6",
                        "name": "Create vendor",
                        "type": "Task"
                    },
                    {
                        "id": "task7",
                        "name": "Receipt of goods",
                        "type": "CollapsedSubprocess"
                    },
                    {
                        "id": "task8",
                        "name": "Adjust order status",
                        "type": "Task"
                    },
                    {
                        "id": "task9",
                        "name": "Approve purchase order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Parts required",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Cancelled due to delivery problems",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Delivery Problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Department",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "event1",
                                    "event2",
                                    "gateway1"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Central Purchasing",
                                "elemRefs": [
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7",
                                    "task8",
                                    "event3",
                                    "event4",
                                    "event5",
                                    "gateway2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Approver",
                                "elemRefs": [
                                    "task9"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "Parts in stock"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task3",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task1",
                        "condition": "Parts out of stock"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task2",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task5",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "no"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task9",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task7",
                        "targetRef": "event3"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "event5",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task8",
                        "targetRef": "event4"
                    }
                ]
            }
        }
    },
    "64_ground_truth.txt": {
        "0": {
            "text": "The process starts with the applicant creating an application. The loan provider then receives the application and controls the provided documents.  If the documents are complete, the loan provider accepts the documents and provides the loan, after which the process ends. If the documents are not complete, the applicant is asked to complete the missing information.  After the applicant completes the missing information, the loan provider admits the document and then provides the loan, after which the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Accept Document",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Provide",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Admit Document",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Document Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts when the Applicant creates an application. The Loan Provider receives the application and controls the document.  Next, the Loan Provider checks if the document is complete. If the document is complete, the Loan Provider accepts the document, and the process ends. If the document is incomplete, the Applicant completes the missing information.  The Loan Provider then admits the document, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Accept Document",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Admit Document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Document Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "Pool1",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "Lane1",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "Pool2",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "Lane2",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Complete"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "Incomplete"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with the applicant creating an application. The loan provider then receives the application and controls the provided documents.  Next, the loan provider checks if the document is complete. If the document is complete, the loan provider accepts the document, and the process ends. If the document is not complete, the loan provider returns the document to the applicant. The applicant then completes the missing information and submits the document to the loan provider. Finally, the loan provider admits the document, and the process ends.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive Application",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Control Document",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Accept Document",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Return Document to Applicant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Complete Missing Information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Admit Document",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Providing Completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Document Complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Applicant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Loan Provider",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Loan Provider Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "14_ground_truth.txt": {
        "0": {
            "text": "The online selling process starts when the seller displays items on a webpage. A buyer can then purchase an item. The seller receives the buyer's order and sends a confirmation. The seller then sends the order to the shipping company. The shipping company staff gets the item and checks if delivery was successful. If delivery was successful, the item is delivered to the customer. The seller tracks the order, and the process ends when the buyer closes the order. If delivery was not successful, the order is not delivered. The buyer then decides whether they want a reimbursement or reshipment. If the buyer chooses reimbursement, the seller reimburses the money, and the process ends. If the buyer chooses reshipment, the seller requests reshipment from the shipping company, looping back to the point where the seller sends the order to the shipping company.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order and send confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to shipping company",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Get item and decide on action",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Deliver item to customer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Track order",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Decide on action (reimbursement/reshipment)",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Request reshipment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start online selling process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Buyer closes order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Order not delivered",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Money reimbursed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Delivery successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Reimbursement or reshipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "eBay Data Stores",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id20",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Shipping Staff",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id13",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process starts on eBay when initiated. The seller then displays items on the webpage.  Next, the buyer purchases an item. The seller receives the buyer's order and sends an order purchase confirmation. The seller then sends the order to the shipping company. The shipping company gets the item and checks if the item was delivered on the proper date. If yes, eBay tracks the order, and the buyer closes the order, ending the process. If no, the buyer decides whether to request a money reimbursement or reshipment of the item. If the buyer chooses money reimbursement, the seller reimburses the money, which triggers an escalation event for money reimbursed. If the buyer chooses reshipment, the seller sends the order to the shipping company, and the shipping company gets the item again.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send order purchase confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Get item",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Track order",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id0",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Buyer closes order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Money reimbursed",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Item delivered on proper date?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id_a",
                        "name": "Buyer decision?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Seller",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Seller Lane",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id10",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id15",
                        "name": "Buyer",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Buyer Lane",
                                "elemRefs": [
                                    "id2",
                                    "id9"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id17",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "eBay Lane",
                                "elemRefs": [
                                    "id0",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Shipping Company",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Shipping Company Lane",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id0",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id8",
                        "condition": "yes"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id_a",
                        "condition": "no"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id_a",
                        "targetRef": "id10",
                        "condition": "Money reimbursement"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id_a",
                        "targetRef": "id12",
                        "condition": "Reshipment of the item"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process starts with displaying items on a webpage by the Seller.  The Buyer then purchases an item. The Seller sends an order purchase confirmation and sends the order to the shipping company. The shipping company gets the item and checks the delivery status. If the item is delivered, the shipping company delivers the item and tracks the order, after which the process ends. If the item is not delivered, the Buyer decides whether to request a money reimbursement or reshipment. If the Buyer chooses money reimbursement, the Seller reimburses the money, and the process ends. If the Buyer chooses reshipment, the Seller sends the order to the shipping company, and the process loops back to the shipping company getting the item.\n",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order purchase confirmation",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Get item",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Deliver item",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Track order",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Order closed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Money reimbursed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Delivery status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Buyer decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "eBay data stores",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Shipping company",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Shipping department",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Delivered"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id14",
                        "targetRef": "id15",
                        "condition": "Not delivered"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Money reimbursement"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id10",
                        "condition": "Reshipment"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    }
                ]
            }
        }
    }
}