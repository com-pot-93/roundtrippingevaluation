{
    "logistics_signavio_2.txt": {
        "0": {
            "text": "The process begins with the receipt of a customer order. Once the order is received, stock items are picked. These items are then packed into parcels. The parcels are weighed, and shipping labels are printed.\n\nAfter printing the shipping labels, the process splits into three parallel tasks: moving the parcels to the loading dock, checking the parcel count, and inspecting the packing quality. Once all three tasks are completed, the process converges and proceeds to the next set of parallel tasks.\n\nIn the next parallel tasks, the parcels are loaded onto the truck, and the order status is updated. After loading the parcels, delivery instructions are sent to the transporter. Simultaneously, stock levels are updated. Once both tasks are completed, the process converges again and concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Weigh parcels",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Inspect packing quality",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1End",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2End",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a7",
                        "targetRef": "PG1End"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a8",
                        "targetRef": "PG1End"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a10",
                        "targetRef": "PG1End"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "PG1End",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "a13",
                        "targetRef": "PG2End"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "a15",
                        "targetRef": "PG2End"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "PG2End",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of a customer order. Once the order is received, stock items are picked. These items are then packed into parcels. The parcels are weighed, and shipping labels are printed.\n\nAfter printing the shipping labels, the process splits into three parallel tasks: moving the parcels to the loading dock, checking the parcel count, and inspecting the packing quality. Once all three tasks are completed, the process converges and proceeds to the next set of parallel tasks.\n\nIn the next parallel tasks, the parcels are loaded onto the truck, and the order status is updated. After the parcels are loaded onto the truck, delivery instructions are sent to the transporter. Simultaneously, the stock levels are updated. Once both the delivery instructions are sent and the stock levels are updated, the process converges again and concludes with the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Weigh parcels",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Inspect packing quality",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1join",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2join",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "PG1join"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a8",
                        "targetRef": "PG1join"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "PG1join"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "PG1join",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "a13",
                        "targetRef": "PG2join"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a15",
                        "targetRef": "PG2join"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "PG2join",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a customer order. Once the order is received, stock items are picked. These items are then packed into parcels. The parcels are weighed, and shipping labels are printed.\n\nAfter printing the shipping labels, the process splits into three parallel tasks: moving the parcels to the loading dock, checking the parcel count, and inspecting the packing quality. Once these three tasks are completed, they converge, and the process continues.\n\nNext, the process splits again into two parallel tasks: loading the parcels onto the truck and updating the order status. After the parcels are loaded onto the truck, delivery instructions are sent to the transporter. Meanwhile, the stock levels are updated.\n\nFinally, the process converges again, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Pick stock items",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Pack items into parcels",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Weight parcels",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Print shipping labels",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Move parcels to loading dock",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Check parcel count",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Inspect packing quality",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Load parcels on truck",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send delivery instructions to transporter",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Update order status",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Update stock levels",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG2_Join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "PG1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a8",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "PG1_Join",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "PG2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "PG2",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "a13",
                        "targetRef": "PG2_Join"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a15",
                        "targetRef": "PG2_Join"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "PG2_Join",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_aris_3.txt": {
        "0": {
            "text": "The process begins with the start event, where a production order is received. Following this, materials are prepared for the production. Once the materials are ready, the door is assembled. \n\nAfter assembling the door, the process reaches a decision point. If the door needs further assembly, it loops back to the assembly step. Otherwise, an inquiry for a quality check is sent. \n\nThe inquiry is received, and the quality of the door is checked. After the quality check, a quality report is sent back. The quality report is then received, leading to another decision point. \n\nIf the door requires fixing based on the quality report, it is fixed. If the door does not require fixing, it is released. \n\nFinally, the process ends after either fixing the door or releasing it.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materials",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "loopGateway",
                        "type": "Exclusive"
                    },
                    {
                        "id": "d1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "loopGateway"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "loopGateway",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "loopGateway",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a6",
                        "targetRef": "d1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "d1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "d1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a10",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the receipt of a production order. Once the production order is received, materials are prepared for the assembly. Following the preparation of materials, the door is assembled. After the door assembly, an inquiry for a quality check is sent.\n\nThe inquiry is then received, and the quality of the door is checked. After the quality check, a quality report is sent. Upon receiving the quality report, a decision is made at an exclusive gateway.\n\nIf the decision leads to Branch 1, the door is fixed, and the process ends. If the decision leads to Branch 2, the door is released, and the process also ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materials",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a10",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D1",
                        "targetRef": "a8",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which a production order is received. Following this, materials are prepared for the production. Once the materials are ready, the door is assembled. \n\nAfter assembling the door, an inquiry for a quality check is sent. This inquiry is then received, and the quality of the door is checked. Once the quality check is completed, a quality report is sent back. The quality report is then received and a decision is made based on the report.\n\nIf the door needs fixing, it is sent back for fixing, and the process loops back to the quality check step. If the door is released, it proceeds to the final step where the door is released, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive production order",
                        "type": "Manual"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare materials",
                        "type": "Manual"
                    },
                    {
                        "id": "a3",
                        "name": "Assemble door",
                        "type": "Manual"
                    },
                    {
                        "id": "a5",
                        "name": "Send inquiry for quality check",
                        "type": "Manual"
                    },
                    {
                        "id": "a11",
                        "name": "Receive inquiry for quality check",
                        "type": "Manual"
                    },
                    {
                        "id": "a12",
                        "name": "Check quality",
                        "type": "Manual"
                    },
                    {
                        "id": "a13",
                        "name": "Send quality report",
                        "type": "Manual"
                    },
                    {
                        "id": "a6",
                        "name": "Receive quality report",
                        "type": "Manual"
                    },
                    {
                        "id": "a10",
                        "name": "Fix door",
                        "type": "Manual"
                    },
                    {
                        "id": "a8",
                        "name": "Release door",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "decision_D1",
                        "name": "Quality check decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "loop",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a3",
                        "targetRef": "loop"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "loop",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a5",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a13",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a6",
                        "targetRef": "decision_D1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "decision_D1",
                        "targetRef": "a10",
                        "condition": "Door needs fixing"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "decision_D1",
                        "targetRef": "a8",
                        "condition": "Door is released"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a10",
                        "targetRef": "loop"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_cimino_3.txt": {
        "0": {
            "text": "The process begins with the receipt of a shipment request. Once the request is received, two parallel tasks are initiated: packaging the goods and selecting the kind of shipment. \n\nAfter the kind of shipment is selected, a decision is made. If the shipment requires requesting quotes from carriers, quotes are requested, a carrier is assigned, and the necessary paperwork is prepared. \n\nSimultaneously, if the shipment involves filling in a post label, the label is filled in, and the insurance is checked. If additional insurance is needed, it is taken out. \n\nBoth the completion of the paperwork and the packaging of the goods converge at a parallel gateway. \n\nOnce all tasks are completed, the paperwork is added to the package, and the package is moved to the pickup area. \n\nThe process concludes when the package is moved to the pickup area.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Check insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insuarance",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D2",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a0",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a8",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a14",
                        "targetRef": "PG1_Join"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "PG1_Join",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "a17",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the receipt of a shipment request. Once the shipment request is received, two parallel tasks are initiated: packaging the goods and selecting the kind of shipment.\n\nAfter the kind of shipment is selected, a decision is made. If the condition for requesting quotes from carriers is met, quotes are requested from carriers, a carrier is assigned, and the necessary paperwork is prepared. This paperwork preparation then synchronizes with the packaging task.\n\nIf the condition for filling in a post label is met instead, the post label is filled in, and the insurance is checked. Depending on the insurance check, if extra insurance is needed, it is taken out, and the process loops back to the insurance check. If no extra insurance is needed, the process continues.\n\nOnce the paperwork is prepared and the insurance check is complete, the process synchronizes again. The paperwork is added to the package, and the package is moved to the pickup area. Finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Check insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "condition": "condition1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D1",
                        "condition": "condition2",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D2",
                        "condition": "condition1",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a0",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "D2",
                        "condition": "condition2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "D2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "PG1",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "a17",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a shipment request. Once the request is received, the process splits into two parallel paths. In the first path, the goods are packaged. In the second path, the kind of shipment is selected. \n\nAfter selecting the kind of shipment, a decision is made. If the decision leads to requesting quotes from carriers, the next steps are to assign a carrier and then prepare the necessary paperwork. \n\nAlternatively, if the decision leads to filling in a post label, the next step is to check the insurance. Following the insurance check, another decision is made. If extra insurance is needed, it is taken out. \n\nAfter the goods are packaged, the process converges back to a single path where the paperwork is added to the package. Finally, the package is moved to the pickup area, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Package goods",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select kind of shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Request quotes from carriers",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assign a carrier",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Prepare paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Fill in a post label",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Check insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Take out extra insurance",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Add paperwork",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Move package to pickup area",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision 2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D2",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D2",
                        "targetRef": null
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "D1",
                        "targetRef": null
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a14",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "PG1",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "a16",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "a17",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_fouad_3.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the task of getting a travel request. Once the travel request is obtained, the next step is to prepare the tour plan. After the tour plan is prepared, it is sent to the relevant party. Upon sending the tour plan, a response is received, which leads to a decision point.\n\nAt this decision point, if the conditions are met, the tour is booked. Following the booking of the tour, the customer is charged. This leads to another decision point where two branches are possible.\n\nIn the first branch, the customer is contacted, and then a booking confirmation is sent. In the second branch, the bill is sent directly to the customer, followed by the booking confirmation. After the booking confirmation is sent, the process loops back to charging the customer again, and finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Charge customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "d1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "d2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "d1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "d1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a6",
                        "targetRef": "d2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "d2",
                        "targetRef": "a9",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "d2",
                        "targetRef": "a13",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a11",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a6",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the task of getting a travel request. Once the travel request is obtained, the next step is to prepare the tour plan. After the tour plan is prepared, it is sent to the relevant party. Upon sending the tour plan, a response is received, leading to a decision point.\n\nAt this decision point, if the response is positive, the tour is booked. Following the booking, the customer is charged. After charging the customer, another decision point is reached.\n\nFrom this decision point, there are two possible branches. In the first branch, the customer is contacted directly. In the second branch, the bill is sent to the customer. If the bill is sent, a booking confirmation is subsequently sent. This leads back to the decision point, where the process can either loop back to the initial decision point or proceed to the end event, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Charge customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "EndEvent",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sid-2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sid-3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sid-4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sid-5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-6",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sid-7",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sid-8",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-9",
                        "sourceRef": "D2",
                        "targetRef": "a9",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sid-10",
                        "sourceRef": "D2",
                        "targetRef": "a13",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sid-11",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sid-12",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sid-13",
                        "sourceRef": "D2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sid-14",
                        "sourceRef": "D1",
                        "targetRef": "EndEvent"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the task of getting a travel request. Once the travel request is obtained, the next step is to prepare the tour plan. After the tour plan is prepared, it is sent out. The process then waits to receive a response.\n\nUpon receiving the response, a decision is made. If the decision is to proceed, the tour is booked. Following the booking, the customer is charged. Another decision point is reached after charging the customer. \n\nIf the process follows Branch 1, the customer is contacted. If it follows Branch 2, the bill is sent to the customer. After sending the bill, a booking confirmation is sent. The process then loops back to the decision point after charging the customer.\n\nFinally, the process ends after the decision point following the receipt of the response.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get travel request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Prepare the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive response",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Book the tour",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Charge customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision 2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a7",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D2",
                        "targetRef": "a9",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D2",
                        "targetRef": "a13",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a13",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_web_5.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the request for a booking. This request is then received and processed. The next step is to check the availability of the requested booking time.\n\nIf there is no availability, an alternative time is proposed. Regardless of whether there is availability or an alternative time is proposed, a notification is sent out. The process then waits for a response to this notification.\n\nUpon receiving a response, the process evaluates the response. If the response is negative, the bill is sent, and the process ends. If the response is positive, the booking is confirmed, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "d1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "d2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a1",
                        "targetRef": "d1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "d1",
                        "targetRef": "a4",
                        "name": "No availability"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "d1",
                        "targetRef": "a5",
                        "name": "Availability"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a6",
                        "targetRef": "d2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "d2",
                        "targetRef": "a10",
                        "name": "Negative response"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "d2",
                        "targetRef": "a8",
                        "name": "Positive response"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, where a booking request is initiated. The request is then sent to the appropriate user to get the booking request. Following this, the availability of the requested booking is checked.\n\nAn exclusive decision is made based on the availability. If the booking is not available, an alternative time is proposed. If the booking is available, a notification is sent to the user.\n\nAfter the notification is sent, a response is awaited. Once the response is received, another exclusive decision is made. If a response is received, the bill is sent to the user, and then the booking is confirmed. If no response is received, the booking is directly confirmed.\n\nThe process concludes with the end event, marking the completion of the booking process.",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow5a",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "not available"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "available"
                    },
                    {
                        "id": "flow5b",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow9a",
                        "sourceRef": "D2",
                        "targetRef": "a10",
                        "condition": "response received"
                    },
                    {
                        "id": "flow9b",
                        "sourceRef": "a10",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "no response"
                    },
                    {
                        "id": "flow11a",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow11b",
                        "sourceRef": "a10",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers a request for booking. This request is then received and processed. The next step involves checking the availability of the requested booking time.\n\nIf the availability check is successful, a notification is sent. If the availability check is not successful, an alternative time is proposed, and then a notification is sent.\n\nAfter the notification is sent, a response is awaited. Depending on the response, the process follows one of two paths. If a confirmation is received, the bill is sent, and the booking is confirmed. The process then ends.\n\nIf a cancellation is received, the process ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a12",
                        "name": "Request booking",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Get booking request",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check availability",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Propose alternative time",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send notification",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Get response",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Confirm booking",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Propose alternative"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "Check availability successful"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D2",
                        "targetRef": "a10",
                        "condition": "Confirmation received"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a10",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D2",
                        "targetRef": "end",
                        "condition": "Cancellation received"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_2_consent_to_use_the_data.txt": {
        "0": {
            "text": "The process begins with the start event. Immediately, several tasks are initiated in parallel. These tasks include adding information about the logic involved, significance, and envisaged consequences of processing, checking if it is possible to determine the period for which personal data will be stored, adding the existence of the right to rectify personal data, adding the existence of the right to access personal data, adding the existence of the right to erase personal data, adding the existence of the right to data portability, adding the existence of the right to withdraw, adding the existence of the right to lodge a complaint to a supervisory authority, checking if data has been obtained from the data subject, checking if personal data can be transferred internationally, checking if recipients are present, checking if legitimate interests are present, retrieving the processing legal basis, and retrieving the processing purposes.\n\nIf it is possible to determine the period for which personal data will be stored, the process checks if the criteria used to determine the period can be retrieved or if the period itself can be retrieved. If either the criteria or the period is retrieved, the process continues.\n\nIf data has been obtained from the data subject, the source from which personal data originated is retrieved.\n\nIf personal data can be transferred internationally, the information that personal data will be transferred internationally is added.\n\nIf recipients are present, the recipients are retrieved.\n\nIf legitimate interests are present, the legitimate interests are retrieved.\n\nIn parallel, the identity and contact details are retrieved, and the details of the Data Protection Officer (DPO) are requested. Once the DPO details are received, the process continues.\n\nAfter all parallel tasks are completed, consent information is collected, and consent is asked. Depending on the response, if consent is received, the process ends. If consent is negated, the process also ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are present",
                        "type": "Task"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "Task"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "Task"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposes",
                        "type": "Task"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "Task"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "Task"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "Task"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "Task"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "Task"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "Task"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf_start_PG1",
                        "sourceRef": "start",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_PG1_a2",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf_PG1_a4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf_PG1_a9",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf_PG1_a10",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf_PG1_a11",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf_PG1_a12",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf_PG1_a13",
                        "sourceRef": "PG1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf_PG1_a14",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf_PG1_a15",
                        "sourceRef": "PG1",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf_PG1_a19",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf_PG1_a23",
                        "sourceRef": "PG1",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf_PG1_a27",
                        "sourceRef": "PG1",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf_PG1_a31",
                        "sourceRef": "PG1",
                        "targetRef": "a31"
                    },
                    {
                        "id": "sf_PG1_a32",
                        "sourceRef": "PG1",
                        "targetRef": "a32"
                    },
                    {
                        "id": "sf_PG1_PG2",
                        "sourceRef": "PG1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_PG2_a33",
                        "sourceRef": "PG2",
                        "targetRef": "a33"
                    },
                    {
                        "id": "sf_PG2_a35",
                        "sourceRef": "PG2",
                        "targetRef": "a35"
                    },
                    {
                        "id": "sf_a35_a38",
                        "sourceRef": "a35",
                        "targetRef": "a38"
                    },
                    {
                        "id": "sf_a38_PG2",
                        "sourceRef": "a38",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf_PG2_PG1",
                        "sourceRef": "PG2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_a4_D1",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf_D1_a6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf_D1_a7",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf_a6_PG1",
                        "sourceRef": "a6",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_a7_PG1",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_a15_D2",
                        "sourceRef": "a15",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf_D2_a17",
                        "sourceRef": "D2",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf_a17_PG1",
                        "sourceRef": "a17",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_a19_D3",
                        "sourceRef": "a19",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf_D3_a21",
                        "sourceRef": "D3",
                        "targetRef": "a21"
                    },
                    {
                        "id": "sf_a21_PG1",
                        "sourceRef": "a21",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_a23_D4",
                        "sourceRef": "a23",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf_D4_a25",
                        "sourceRef": "D4",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf_a25_PG1",
                        "sourceRef": "a25",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_a27_D5",
                        "sourceRef": "a27",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf_D5_a29",
                        "sourceRef": "D5",
                        "targetRef": "a29"
                    },
                    {
                        "id": "sf_a29_PG1",
                        "sourceRef": "a29",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf_PG1_a39",
                        "sourceRef": "PG1",
                        "targetRef": "a39"
                    },
                    {
                        "id": "sf_a39_a37",
                        "sourceRef": "a39",
                        "targetRef": "a37"
                    },
                    {
                        "id": "sf_a37_D6",
                        "sourceRef": "a37",
                        "targetRef": "D6"
                    },
                    {
                        "id": "sf_D6_a41",
                        "sourceRef": "D6",
                        "targetRef": "a41"
                    },
                    {
                        "id": "sf_D6_a40",
                        "sourceRef": "D6",
                        "targetRef": "a40"
                    },
                    {
                        "id": "sf_a41_end",
                        "sourceRef": "a41",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf_a40_end",
                        "sourceRef": "a40",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to add information about the logic involved, significance, and envisaged consequences of processing. Simultaneously, it is checked if it is possible to determine the period for which personal data will be stored. If it is possible to determine the period, the criteria used to determine the period are retrieved, and if not, the period itself is retrieved.\n\nNext, several tasks are performed in parallel: adding the existence of the right to rectify personal data, adding the existence of the right to access personal data, adding the existence of the right to erase personal data, adding the existence of the right to data portability, adding the existence of the right to withdraw, and adding the existence of the right to lodge a complaint to a supervisory authority. Additionally, it is checked if the data has been obtained from the data subject. If the data has not been obtained from the data subject, the source from which personal data originated is retrieved.\n\nFollowing this, it is checked if personal data can be transferred internationally. If it can, the information that personal data will be transferred internationally is added. Then, it is checked if recipients are present. If recipients are present, they are retrieved. Next, it is checked if legitimate interests are present. If legitimate interests are present, they are retrieved.\n\nSubsequently, the processing legal basis and processing purposes are retrieved. In parallel, the identity and contact details are retrieved, and the details of the Data Protection Officer (DPO) are requested. Once the DPO details are received, the process continues.\n\nThe next step is to collect consent information and then ask for consent. Depending on the response, either a negation or consent is received. The process ends after receiving either the negation or the consent.",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are present",
                        "type": "Task"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "Task"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "Task"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposes",
                        "type": "Task"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "Task"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "Task"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details from DPO",
                        "type": "Task"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "Task"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "Task"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "Task"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "sid-start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "sid-end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "type": "Parallel"
                    },
                    {
                        "id": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_start_PG1",
                        "sourceRef": "sid-start",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a2",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow_PG1_a4",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow_a4_D1",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow_D1_a6",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow_D1_a7",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow_a6_PG1",
                        "sourceRef": "a6",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_a7_PG1",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a9",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow_PG1_a10",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow_PG1_a11",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow_PG1_a12",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow_PG1_a13",
                        "sourceRef": "PG1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow_PG1_a14",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow_PG1_a15",
                        "sourceRef": "PG1",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow_a15_D2",
                        "sourceRef": "a15",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow_D2_a17",
                        "sourceRef": "D2",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow_a17_PG1",
                        "sourceRef": "a17",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a19",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "flow_a19_D3",
                        "sourceRef": "a19",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow_D3_a21",
                        "sourceRef": "D3",
                        "targetRef": "a21"
                    },
                    {
                        "id": "flow_a21_PG1",
                        "sourceRef": "a21",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a23",
                        "sourceRef": "PG1",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow_a23_D4",
                        "sourceRef": "a23",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow_D4_a25",
                        "sourceRef": "D4",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow_a25_PG1",
                        "sourceRef": "a25",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a27",
                        "sourceRef": "PG1",
                        "targetRef": "a27"
                    },
                    {
                        "id": "flow_a27_D5",
                        "sourceRef": "a27",
                        "targetRef": "D5"
                    },
                    {
                        "id": "flow_D5_a29",
                        "sourceRef": "D5",
                        "targetRef": "a29"
                    },
                    {
                        "id": "flow_a29_PG1",
                        "sourceRef": "a29",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a31",
                        "sourceRef": "PG1",
                        "targetRef": "a31"
                    },
                    {
                        "id": "flow_PG1_a32",
                        "sourceRef": "PG1",
                        "targetRef": "a32"
                    },
                    {
                        "id": "flow_PG1_PG2",
                        "sourceRef": "PG1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_PG2_a33",
                        "sourceRef": "PG2",
                        "targetRef": "a33"
                    },
                    {
                        "id": "flow_PG2_a35",
                        "sourceRef": "PG2",
                        "targetRef": "a35"
                    },
                    {
                        "id": "flow_a35_a38",
                        "sourceRef": "a35",
                        "targetRef": "a38"
                    },
                    {
                        "id": "flow_a38_PG2",
                        "sourceRef": "a38",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "flow_PG2_PG1",
                        "sourceRef": "PG2",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow_PG1_a39",
                        "sourceRef": "PG1",
                        "targetRef": "a39"
                    },
                    {
                        "id": "flow_a39_a37",
                        "sourceRef": "a39",
                        "targetRef": "a37"
                    },
                    {
                        "id": "flow_a37_D6",
                        "sourceRef": "a37",
                        "targetRef": "D6"
                    },
                    {
                        "id": "flow_D6_a41",
                        "sourceRef": "D6",
                        "targetRef": "a41"
                    },
                    {
                        "id": "flow_D6_a40",
                        "sourceRef": "D6",
                        "targetRef": "a40"
                    },
                    {
                        "id": "flow_a41_end",
                        "sourceRef": "a41",
                        "targetRef": "sid-end"
                    },
                    {
                        "id": "flow_a40_end",
                        "sourceRef": "a40",
                        "targetRef": "sid-end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a parallel gateway that initiates multiple tasks simultaneously. The first task is to add information about the logic involved, significance, and envisaged consequences of processing. Concurrently, it is checked if it is possible to determine the period for which personal data will be stored. If it is possible, the criteria used to determine the period are retrieved, and if not, the period itself is retrieved.\n\nSimultaneously, several other tasks are performed: adding information about the existence of the right to rectify personal data, the right to access personal data, the right to erase personal data, the right to data portability, the right to withdraw, and the right to lodge a complaint to a supervisory authority.\n\nAnother task checks if the data has been obtained from the data subject. If it has, the source from which the personal data originated is retrieved.\n\nIn parallel, it is checked if personal data can be transferred internationally. If it can, information about the international transfer is added.\n\nAdditionally, it is checked if recipients are present. If they are, the recipients are retrieved.\n\nAnother check is made to see if legitimate interests are present. If they are, the legitimate interests are retrieved.\n\nSimultaneously, the processing legal basis and processing purposes are retrieved.\n\nA second parallel gateway then initiates the retrieval of identity and contact details and the task of asking for DPO details. Once the DPO details are asked for, they are received from the DPO.\n\nIn parallel, consent information is collected, and consent is asked for. Depending on the response, either a negation or consent is received, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Add \"profiling about logic involved, significance and envisaged consequences of processing\"",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Check if it is possible to determine the period for which personal data will be stored",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Retrieve the criteria used to determine the period",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Retrieve the period",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Add \"existence of the right to rectify of personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Add \"existence of the right to access personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Add \"existence of the right to erase personal data\"",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Add \"existence of the right to data portability\"",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add \"existence of the right to withdraw\"",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Add \"existence of the right to lodge a complaint to a supervisory authority\"",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Check if data has been obtained from Data Subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Retrieve the source from which personal data are originated",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Check if personal data can be transferred internationally",
                        "type": "Task"
                    },
                    {
                        "id": "a21",
                        "name": "Add \"personal data will be transferred internationally\"",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Check if recipients are present",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Retrieve recipients",
                        "type": "Task"
                    },
                    {
                        "id": "a27",
                        "name": "Check if legitimate interests are present",
                        "type": "Task"
                    },
                    {
                        "id": "a29",
                        "name": "Retrieve legitimate interests",
                        "type": "Task"
                    },
                    {
                        "id": "a31",
                        "name": "Retrieve processing legal basis",
                        "type": "Task"
                    },
                    {
                        "id": "a32",
                        "name": "Retrieve processing purposes",
                        "type": "Task"
                    },
                    {
                        "id": "a33",
                        "name": "Retrieve identity and contact details",
                        "type": "Task"
                    },
                    {
                        "id": "a35",
                        "name": "Ask DPO details",
                        "type": "Task"
                    },
                    {
                        "id": "a38",
                        "name": "Receive details From DPO",
                        "type": "Task"
                    },
                    {
                        "id": "a39",
                        "name": "Collect consent information",
                        "type": "Task"
                    },
                    {
                        "id": "a37",
                        "name": "Ask consent",
                        "type": "Task"
                    },
                    {
                        "id": "a41",
                        "name": "Receive negation",
                        "type": "Task"
                    },
                    {
                        "id": "a40",
                        "name": "Receive consent",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a4",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "PG1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "PG1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "PG1",
                        "targetRef": "a15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a15",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "D2",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a19",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "D3",
                        "targetRef": "a21"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "PG1",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "a23",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "D4",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "PG1",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "a27",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "D5",
                        "targetRef": "a29"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "PG1",
                        "targetRef": "a31"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "PG1",
                        "targetRef": "a32"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "PG1",
                        "targetRef": "PG2"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "PG2",
                        "targetRef": "a33"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "PG2",
                        "targetRef": "a35"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "a35",
                        "targetRef": "a38"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "PG1",
                        "targetRef": "a39"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "PG1",
                        "targetRef": "a37"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "a37",
                        "targetRef": "D6"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "D6",
                        "targetRef": "a41"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "D6",
                        "targetRef": "a40"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_klessascheck_1.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the diagnosis of non-specific low back pain. Following the diagnosis, a decision is made at the first decision point.\n\nIf the decision is to apply superficial heat or other nonpharmacological treatments, this treatment is applied. After this, another decision is made.\n\nIf the decision is to prescribe NSAIDs or SMRs, the prescription is made, and the process loops back to the previous decision point for further evaluation.\n\nIf the initial decision is to apply exercise or other nonpharmacological treatments, this treatment is applied, leading to another decision point.\n\nIf the decision is to prescribe NSAIDs, the prescription is made, leading to yet another decision point.\n\nIf the decision is to prescribe opioids, the prescription is made, and the process loops back to the previous decision point for further evaluation.\n\nThe process continues to loop through these decision points and treatments until the final decision is made to end the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non-Specific Low Back Pain",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Apply Superficial Heat or other Nonpharmocol Treatments",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe NSAID or SMR",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise or other Nonpharmacol Treatments",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe NSAID",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe Opioid",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "branch 1"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "branch 1"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "D2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "branch 2"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "D3",
                        "targetRef": "a10",
                        "condition": "branch 1"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "D4",
                        "targetRef": "a14",
                        "condition": "branch 1"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "a14",
                        "targetRef": "D4"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "D4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "D3",
                        "targetRef": "D1"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the diagnosis of non-specific low back pain. Following the diagnosis, a decision is made at the first decision point. \n\nIf the decision leads to Branch 1, superficial heat or other non-pharmacological treatments are applied. After this treatment, another decision is made. If the decision again leads to Branch 1, NSAIDs or SMRs are prescribed. If the decision leads to Branch 2, the process loops back to the first decision point.\n\nIf the initial decision leads to Branch 2, exercise or other non-pharmacological treatments are applied. After this treatment, another decision is made. If this decision leads to Branch 1, NSAIDs are prescribed. Following the prescription of NSAIDs, another decision is made. If this decision leads to Branch 1, opioids are prescribed. If the decision leads to Branch 2, the process loops back to the previous decision point. If the decision at the previous decision point leads to Branch 2, the process loops back to the first decision point.\n\nFinally, if the initial decision at the first decision point leads to the end event, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non-Specific Low Back Pain",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Apply Superficial Heat or other Nonpharmocol. Treatments",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe NSAID or SMR",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise or other Nonpharmacol. Treatments",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe NSAID",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe Opioid",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D3",
                        "targetRef": "a10",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D4",
                        "targetRef": "a14",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "D2",
                        "targetRef": "D1",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "D4",
                        "targetRef": "D3",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "D3",
                        "targetRef": "D1",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "D1",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the diagnosis of non-specific low back pain. Following the diagnosis, a decision is made at the first decision point.\n\nIf the decision leads to Branch 1, superficial heat or other nonpharmacological treatments are applied. After this treatment, another decision is made.\n\nIf the second decision also leads to Branch 1, NSAIDs or SMRs are prescribed, and the process ends.\n\nIf the first decision leads to Branch 2, exercise or other nonpharmacological treatments are applied. Following this, a third decision is made.\n\nIf the third decision leads to Branch 1, NSAIDs are prescribed. After prescribing NSAIDs, a fourth decision is made.\n\nIf the fourth decision leads to Branch 1, opioids are prescribed, and the process ends.\n\nIn all other cases, the process ends after the respective treatments or prescriptions.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Diagnose Non-Specific Low Back Pain",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Apply Superficial Heat or other Nonpharmacological Treatments",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Prescribe NSAID or SMR",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Apply Exercise or other Nonpharmacological Treatments",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prescribe NSAID",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Prescribe Opioid",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a7",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D3",
                        "targetRef": "a10",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D4",
                        "targetRef": "a14",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a14",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_7_right_to_be_forgotten.txt": {
        "0": {
            "text": "The process begins with the receipt of a data subject request. Upon receiving the request, the data is retrieved. Next, it is checked whether the received data is still relevant. \n\nIf the data is still relevant, an explanation is provided as to why the data remains relevant, and the process ends.\n\nIf the data is not relevant, the data is eliminated. Following the elimination of the data, a notification about the elimination is sent, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about elimination",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check Relevance",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "data is still relevant"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "data is not relevant"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a7",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of a data subject request. Following this, the data is retrieved. Once the data is retrieved, it is checked to determine if it is still relevant. \n\nIf the data is found to be relevant, an explanation is provided as to why the data is still relevant, and the process ends.\n\nIf the data is not relevant, it is eliminated. After the data is eliminated, a notification about the elimination is sent, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about elimination",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start_event",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end_event",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Check data relevance",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start_event",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "Relevant"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "Not Relevant"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a3",
                        "targetRef": "end_event"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a7",
                        "targetRef": "end_event"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a data subject request. Following this, the data is retrieved. Once the data is retrieved, it is checked to determine if the received data is still relevant. \n\nIf the data is still relevant, an explanation is provided as to why the data is still relevant, and the process ends.\n\nIf the data is not relevant, the data is eliminated. After the data is eliminated, a notification about the elimination is sent, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a9",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Retrieve data",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if received data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Explain why data is still relevant",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Eliminate data",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send notification about elimination",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a9",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": "received data is still relevant"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "targetRef": "a6",
                        "condition": "received data is not relevant"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a7",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_klessascheck_5.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to package the product. Once the product is packaged, it is shipped. \n\nAfter shipping, a decision is made at the first decision point. If the product is to be delivered directly to the door, it is delivered to the door. Following this, another decision is made. If the process follows the first branch of this second decision point, a pick-up receipt is printed. The pick-up receipt is then posted, and the product is rerouted to the closest station. This leads back to the second decision point.\n\nIf the product is not delivered directly to the door, it is delivered to a station. This leads back to the first decision point, where another decision is made. If the process follows the second branch of the third decision point, the product is received back, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Manual"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Manual"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Manual"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Manual"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Manual"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Manual"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Manual"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 1 of D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "Branch 1 of D2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "Branch 2 of D1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D1",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D3",
                        "targetRef": "a13",
                        "condition": "Branch 2 of D3"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to package the product. Once the product is packaged, it is shipped. \n\nAfter shipping, a decision is made at the first gateway. If the first branch is chosen, the product is delivered to the door. If the second branch is chosen, the product is delivered to the station.\n\nIf the product is delivered to the door, another decision is made at the second gateway. If the first branch is chosen, a pick-up receipt is printed, and then the pick-up receipt is posted. After posting the pick-up receipt, the product is rerouted to the closest station, and the process returns to the second gateway for another decision.\n\nIf the product is delivered to the station, the process returns to the first gateway for another decision. If the product is rerouted to the closest station, the process also returns to the first gateway for another decision.\n\nAt the first gateway, if the process is finished, it moves to the third gateway. At the third gateway, if the second branch is chosen, the product is received back. If the process is finished, it ends with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "first branch"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "second branch"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "first branch"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a4",
                        "targetRef": "D2",
                        "condition": "finished"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a5",
                        "targetRef": "D1",
                        "condition": "finished"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a12",
                        "targetRef": "D1",
                        "condition": "finished"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "D1",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "D3",
                        "targetRef": "a13",
                        "condition": "second branch"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "D3",
                        "targetRef": "end",
                        "condition": "finished"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first task is to package the product. Once the product is packaged, it is shipped. After shipping, a decision is made at Decision D1. \n\nIf the decision follows Branch 1, the product is delivered to the door. After the door delivery, another decision is made at Decision D2. If this decision follows Branch 1, a pick-up receipt is printed. The printed pick-up receipt is then posted, and the process continues to reroute the product to the closest station. \n\nIf the decision at Decision D2 follows Branch 2, the product is directly rerouted to the closest station. \n\nIf the decision at Decision D1 follows Branch 2, the product is delivered to a station. After delivery to the station, a decision is made at Decision D3. If this decision follows Branch 1, the process ends. If the decision follows Branch 2, the product is received back, and the process ends. \n\nAdditionally, after rerouting to the closest station, the process reaches Decision D3 again, where it can either end or proceed to receive the product back, depending on the branch taken.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Package product",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Ship product",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Deliver to door",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Deliver to station",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Print pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Post pick-up receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Reroute to the closest station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive the product back",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Decision D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a5",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a4",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "D2",
                        "targetRef": "a12",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a8",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a5",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D3",
                        "targetRef": "a13",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a12",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "D3",
                        "targetRef": "end",
                        "condition": "Branch 1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_4_right_of_portability.txt": {
        "0": {
            "text": "The process begins with the receipt of a data subject request. Once the request is received, it is sent to a third party. The third party then processes the request and sends it back. Upon receiving the third party's request, the process splits into two parallel tasks: retrieving elaborations and retrieving the available data of the data subject. Once both tasks are completed, the process converges, and the data and elaborations are communicated to the third party. Following this, the data and elaborations are communicated to the data subject, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "pg1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "pg1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a3",
                        "targetRef": "pg1_join"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "pg1_join"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "pg1_join",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of a data subject request. Once the request is received, it is sent to a third party. The third party then sends a request back, which is received and triggers parallel activities. \n\nIn parallel, the process retrieves elaborations and the available data of the data subject. Once both the elaborations and the data are retrieved, they are communicated to the third party. \n\nFinally, the data and elaborations are communicated to the data subject, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party request",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a8",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "pg1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "pg1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a3",
                        "targetRef": "pg1_merge"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a4",
                        "targetRef": "pg1_merge"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "pg1_merge",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a data subject request. Upon receiving the request, it is sent to a third party. The process then waits for a response from the third party. Once the third party response is received, two parallel tasks are initiated: retrieving elaborations and retrieving the available data of the data subject. \n\nAfter both the elaborations and the available data are retrieved, they are communicated to the third party. Subsequently, the data and elaborations are communicated to the data subject. The process concludes once the data and elaborations have been communicated to the data subject.",
            "model": {
                "tasks": [
                    {
                        "id": "a6",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Send request to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive third party response",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Retrieve elaborations",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Retrieve available data of the data subject",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Communicate data and elaborations to the third party",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Communicate data and elaborations to the data subject",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a3",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1_join",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a2",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_5_right_to_withdraw.txt": {
        "0": {
            "text": "The process begins with the receipt of a data subject request. The next step is to check if the withdrawn data are relevant. Based on this check, there are two possible paths.\n\nIf the withdrawn data are relevant, the process proceeds to stop using the withdrawn data. After stopping the use of the withdrawn data, the next step is to communicate the withdrawal.\n\nIf the withdrawn data are not relevant, the user is informed that the withdrawal will stop all running business processes. Following this, a notification about the continuation is received. This leads to another decision point.\n\nIf the decision is to stop the running business processes using the withdrawn data, the process proceeds to stop these running business processes. After stopping the running business processes, the process again stops using the withdrawn data and then communicates the withdrawal.\n\nIf the decision is not to stop the running business processes, the process loops back to the initial decision point to check if the withdrawn data are relevant.\n\nFinally, the process ends after communicating the withdrawal.",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "d1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "d2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a1",
                        "targetRef": "d1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "d1",
                        "targetRef": "a9",
                        "condition": "Branches_1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "d1",
                        "targetRef": "a0",
                        "condition": "Branches_2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a7",
                        "targetRef": "d2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "d2",
                        "targetRef": "a8",
                        "condition": "Branches_1"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "d2",
                        "targetRef": "d1",
                        "condition": "Branches_2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a5",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of a data subject request. The next step is to check if the withdrawn data are relevant. If the data are deemed relevant, the process proceeds to stop using the withdrawn data. Following this, the withdrawal is communicated, and the process ends.\n\nIf the withdrawn data are not relevant, the user is informed that the withdrawal will stop all running business processes. The process then waits to receive a notification about whether to continue. If the continuation is confirmed, the running business processes using the withdrawn data are stopped, and the process proceeds to stop using the withdrawn data. The withdrawal is then communicated, and the process ends.\n\nIf the continuation is denied, the process ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision 2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "Relevant"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a5",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "Not Relevant"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "Continuation Confirmed"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a5",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "D2",
                        "targetRef": "end",
                        "condition": "Continuation Denied"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a data subject request. The next step is to check if the withdrawn data are relevant. Based on the outcome of this check, two paths can be taken.\n\nIf the withdrawn data are relevant, the process proceeds to stop using the withdrawn data. After stopping the use of the withdrawn data, the next step is to communicate the withdrawal, and the process ends.\n\nIf the withdrawn data are not relevant, the user is informed that the withdrawal will stop all running business processes. The process then waits to receive a notification about whether to continue. Based on this notification, two paths can be taken.\n\nIf the notification indicates to continue, the process stops the running business processes that are using the withdrawn data. After stopping these processes, the use of the withdrawn data is stopped, and the withdrawal is communicated, ending the process.\n\nIf the notification indicates not to continue, the process ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive data subject request",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Check if withdrawn data are relevant",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stop using withdrawn data",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Communicate the withdraw",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Inform the user that the withdraw will stop all running BPs",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Receive the notification about continuation",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Stop running BPs using withdrawn data",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a11",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "branch1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a0",
                        "condition": "branch2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a0",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "branch1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a9",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "endEvent",
                        "condition": "branch2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a5",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_bpmai_2.txt": {
        "0": {
            "text": "The process begins when a patient arrives at the hospital. The patient first comes to the hospital and stays at the front. Then, the patient visits the nurse, who checks their insurance. \n\nIf the insurance is valid, the patient's state is checked. Depending on the patient's condition, there are three possible outcomes. If the patient is in good condition, they are sent home. If the patient needs further examination, they are examined by a doctor. After the examination, the doctor decides whether to hospitalize the patient, send them to the pharmacy, or send them home. If the patient is hospitalized, they are booked for a doctor. If the patient is sent to the pharmacy, they visit the pharmacy, order medicine, pay for the medicine, and receive the medicine. \n\nIf the insurance is not valid, it is checked whether the patient is registered in the hospital. If the patient is not registered, they are registered and then pay the fee. After paying the fee, the patient is booked for a doctor and examined. Following the examination, the doctor decides whether to hospitalize the patient, send them to the pharmacy, or send them home. If the patient is hospitalized, they are booked for a doctor. If the patient is sent to the pharmacy, they visit the pharmacy, order medicine, pay for the medicine, and receive the medicine. \n\nThe process ends when the patient is either sent home, hospitalized, or has received their medicine from the pharmacy.",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "Manual"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "Manual"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "Manual"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a19"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D1",
                        "targetRef": "a1",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "D2",
                        "targetRef": "a3",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D2",
                        "targetRef": "a18",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "D3",
                        "targetRef": "a15",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D3",
                        "targetRef": "a12",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "D3",
                        "targetRef": "a13",
                        "condition": "Branch 3"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "D4",
                        "targetRef": "a5",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "a21",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "a18",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "D5",
                        "targetRef": "a15",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "D5",
                        "targetRef": "a12",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "D5",
                        "targetRef": "a13",
                        "condition": "Branch 3"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "D5",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "D4",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "D2",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "D3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient arrives at the hospital. Upon arrival, the patient stays at the front and then visits the nurse. The nurse checks the patient's insurance, leading to a decision point.\n\nIf the patient is already registered in the hospital, the patient's state is checked. Depending on the patient's state, there are three possible outcomes. If the patient's condition is not serious, the patient is sent home. If the patient's condition requires further examination, the patient is examined by a doctor. After the examination, another decision is made. If hospitalization is required, the patient is hospitalized and then booked for a doctor. If the patient needs medication, they are sent to the pharmacy. At the pharmacy, the patient orders the medicine, pays for it, and receives the medicine. If the patient's condition does not require hospitalization or medication, the patient is sent home.\n\nIf the patient is not registered in the hospital, the patient's registration status is checked. If the patient is not registered, they are registered. If the patient is already registered, they pay the fee. After paying the fee, the process continues as described above, depending on the patient's condition.\n\nThe process ends when the patient is either sent home or after receiving the necessary treatment and medication.",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "User"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a19"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a1",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "D2",
                        "targetRef": "a3",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D2",
                        "targetRef": "a18",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D3",
                        "targetRef": "a15",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D3",
                        "targetRef": "a12",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "D3",
                        "targetRef": "a13",
                        "condition": "Branch 3"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "D4",
                        "targetRef": "a5",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "D1",
                        "targetRef": "a21",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "a21",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "a10",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "a18",
                        "targetRef": "D5"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "D5",
                        "targetRef": "a15",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "D5",
                        "targetRef": "a12",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "flow30",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "flow31",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow32",
                        "sourceRef": "D5",
                        "targetRef": "a13",
                        "condition": "Branch 3"
                    },
                    {
                        "id": "flow33",
                        "sourceRef": "D2",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow34",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient arrives at the hospital. The patient first comes to the hospital and then stays at the front. Next, the patient visits the nurse, who checks the patient's insurance. \n\nAt this point, there are two possible paths. If the insurance check leads to the first branch, the patient's state is checked. Depending on the patient's state, there are two further branches. If the patient is in a condition to be sent home, they are sent home, and the process ends. If the patient needs further examination, they are examined by a doctor. After the examination, there are three possible outcomes. If the patient needs to be hospitalized, they are hospitalized and then booked for a doctor. If the patient needs medication, they are sent to the pharmacy. At the pharmacy, the patient visits the pharmacy, orders the medicine, pays for the medicine, and receives the medicine. If the patient can be sent home after the examination, they are sent home, and the process ends.\n\nIf the insurance check leads to the second branch, the process checks if the patient is registered in the hospital. If the patient is not registered, they are registered, and then they pay the fee. After paying the fee, the process enters an infinite branch, indicating a potential loop or continuation not detailed in the model. \n\nThe process ends when the patient is either sent home or receives the necessary treatment or medication.",
            "model": {
                "tasks": [
                    {
                        "id": "a19",
                        "name": "Come to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a22",
                        "name": "Stay the front",
                        "type": "User"
                    },
                    {
                        "id": "a24",
                        "name": "Visit the nurse",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Check insurance",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Check patients state",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a18",
                        "name": "Examine the patient",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Hospitalize",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book patient for doctor",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send patient to pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a23",
                        "name": "Visit pharmacy",
                        "type": "User"
                    },
                    {
                        "id": "a26",
                        "name": "Order medicine",
                        "type": "User"
                    },
                    {
                        "id": "a27",
                        "name": "Pay medicine",
                        "type": "User"
                    },
                    {
                        "id": "a25",
                        "name": "Receive medicine",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send patient home",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Check if patient is registered in hospital",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Register patient",
                        "type": "User"
                    },
                    {
                        "id": "a21",
                        "name": "Pay fee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a19"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a19",
                        "targetRef": "a22"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a22",
                        "targetRef": "a24"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a24",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D1",
                        "targetRef": "a1",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "D2",
                        "targetRef": "a3",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D2",
                        "targetRef": "a18",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a18",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D3",
                        "targetRef": "a15",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a15",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D3",
                        "targetRef": "a12",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a12",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a23",
                        "targetRef": "a26"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a26",
                        "targetRef": "a27"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a27",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "D3",
                        "targetRef": "a13",
                        "condition": "Branch 3"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "a4",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "D4",
                        "targetRef": "a5",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "a5",
                        "targetRef": "a21"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "D4",
                        "targetRef": "infinite_branch",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "a21",
                        "targetRef": "infinite_branch"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_corradini_2.txt": {
        "0": {
            "text": "The process begins with searching for a customer. Once a customer is found, an offer is made to the customer. \n\nAt this point, there is a decision to be made. If the customer has additional requests, these requests are received and details are provided accordingly. \n\nAfter providing the necessary details, another decision is made. If the customer decides to proceed, a booking request is received. \n\nFollowing the receipt of the booking request, the bill is sent to the customer. Once the bill is sent, payment is received from the customer. \n\nAfter receiving the payment, there is another decision point. If there is a need to contact the customer, the customer is contacted. Otherwise, the travel is booked, and a booking confirmation is sent to the customer.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "User"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flowBranch1_D1",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flowBranch2_D2",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flowBranch1_D3",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flowBranch2_D3",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, where a search for a customer is initiated. Once a customer is found, an offer is made to the customer. Following this, there is a decision point. If the customer has additional requests, these requests are received and details are provided accordingly. After providing the details, another decision point is reached. If the customer proceeds with a booking request, the booking request is received, and the bill is sent to the customer. Upon receiving the payment, there is another decision point. If further contact with the customer is required, the customer is contacted. Alternatively, if the booking is confirmed, the travel is booked, and a booking confirmation is sent to the customer. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Exclusive",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a13",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "D3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a14",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to search for a customer. Once a customer is found, an offer is made to the customer. \n\nAt this point, there is a decision to be made. If the customer has additional requests, these requests are received and details are provided. After providing the details, another decision is made. If the customer decides to proceed, a booking request is received. \n\nFollowing the booking request, the bill is sent to the customer, and then the payment is received. After receiving the payment, there is another decision point. \n\nIf further contact with the customer is needed, the customer is contacted. Alternatively, the travel is booked, and a booking confirmation is sent to the customer. The process then ends.\n\nIf at any decision point the process does not proceed further, it ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Search for a customer",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Make customer an offer",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Receive additional request",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Provide details",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Receive booking request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the bill",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive payment",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Contact customer",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book travel",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Send booking confirmation",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "e_start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e_end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "d1",
                        "name": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "d2",
                        "name": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "d3",
                        "name": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e_start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "d1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "d1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a6",
                        "targetRef": "d2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "d2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a8",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a13",
                        "targetRef": "d3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "d3",
                        "targetRef": "a17"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "d3",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a10",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a14",
                        "targetRef": "e_end"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "d2",
                        "targetRef": "e_end"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "d1",
                        "targetRef": "e_end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_bpmai_1.txt": {
        "0": {
            "text": "The process begins with the start event.\n\nFirst, a production plan and process order are created.\n\nNext, the Material Requirements Planning (MRP) is executed.\n\nFollowing the execution of MRP, the capacity is evaluated.\n\nAfter evaluating the capacity, a proposal is scheduled and released.\n\nThe process order is then confirmed.\n\nSubsequently, a transfer order or good issue is created.\n\nThe good issue is then confirmed.\n\nFollowing the confirmation of the good issue, a good receipt is processed.\n\nFinally, the order is settled, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to create a production plan and process order. Once the production plan and process order are created, the next step is to execute the Material Requirements Planning (MRP). After executing the MRP, the capacity is evaluated. Following the capacity evaluation, the proposal is scheduled and released. The process order is then confirmed. After confirming the process order, a transfer order or goods issue is created. The goods issue is then confirmed. Following the confirmation of the goods issue, a goods receipt is processed. Finally, the order is settled, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to create a production plan and process order. Once the production plan and process order are created, the next step is to execute the Material Requirements Planning (MRP). After executing the MRP, the capacity is evaluated. Following the capacity evaluation, the proposal is scheduled and released. The process order is then confirmed. After confirming the process order, a transfer order or good issue is created. The good issue is then confirmed. Following the confirmation of the good issue, the goods are received. Finally, the order is settled, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Create production plan and process order",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Execute MRP",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Evaluate Capacity",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Schedule and release proposal",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Confirm process order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Create transfer order or good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Confirm good issue",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Good Receipt",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Order Settlement",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a9",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_redeker_5.txt": {
        "0": {
            "text": "The process begins with the start event, after which the patient arrives at the hospital. Once the patient has arrived, the room is prepared for the surgery. Following the preparation, the surgery is performed. \n\nAfter the surgery, two parallel tasks are initiated: the patient is discharged, and the room is sanitized for the next surgery. Both tasks must be completed before the process can continue. \n\nOnce the patient is discharged and the room is sanitized, the report is filled out. \n\nAfter the report is filled, a decision is made. If the first branch condition is met, the bill is paid, and the process ends. If the second branch condition is met, the process ends without paying the bill.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "PG1Join"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "PG1Join"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1Join",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D1",
                        "targetRef": "a2",
                        "condition": "FirstBranchCondition"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a2",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D1",
                        "targetRef": "end",
                        "condition": "SecondBranchCondition"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the patient arriving at the hospital. Once the patient has arrived, the room is prepared for the surgery. After the room is prepared, the surgery is performed. \n\nFollowing the surgery, two tasks occur in parallel: the patient is discharged, and the room is sanitized for the surgery. Once both tasks are completed, the process continues with filling the report.\n\nAfter the report is filled, a decision is made. If a certain condition is met, the patient pays the bill before the process ends. If the condition is not met, the process ends directly without the patient paying the bill.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "d1",
                        "name": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "pg1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "pg1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "pg1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "d1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "d1",
                        "targetRef": "a2",
                        "condition": "condition1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "d1",
                        "targetRef": "end",
                        "condition": "condition2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a2",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the patient arriving at the hospital. Once the patient has arrived, the room is prepared for the surgery. After the room is ready, the surgery is performed. \n\nFollowing the surgery, two tasks occur in parallel: the patient is discharged, and the room is sanitized for the next surgery. Once both tasks are completed, the process continues with filling out the report.\n\nAfter the report is filled out, a decision is made. If the patient needs to pay the bill, the process continues with the patient paying the bill. Once the bill is paid, the process ends. If there is no need to pay the bill, the process ends directly after the report is filled out.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "arrive to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "prepare room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "perform surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "discharge patient",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "sanitize room for the surgery",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "fill the report",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "pay the bill",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1Join",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a6",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a8",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "PG1Join"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a12",
                        "targetRef": "PG1Join"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1Join",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a7",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a2",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_tomaskova_4.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the production planning. Once the production planning is completed, workers are assigned to the tasks. Following the assignment of workers, the production design is carried out. After the production design, the product is delivered. \n\nUpon delivery, the production logout is performed. Next, quality control is conducted. If the quality control is successful, the process loops back to production planning for continuous improvement. \n\nAlternatively, after quality control, a decision point is reached. If the decision is to proceed with Branch 1, the product is registered to the finished stock and then stocked as finished goods, leading to the end of the process. \n\nIf the decision is to proceed with Branch 2, the product is registered to the semi-finished stock and then loaded to the semi-finished stock, which also leads to the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision point",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a12",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the production planning. Once the production planning is completed, workers are assigned to the tasks. Following the assignment of workers, the production design is carried out. After the production design, the product is delivered. \n\nSubsequently, the production logout is performed. After logging out, quality control is conducted. If the quality control needs to be repeated, it loops back to itself until it is satisfactory. \n\nOnce the quality control is completed, an exclusive decision is made. If the product is to be registered to the finished stock, it is registered and then stocked to the finished goods, concluding the process. If the product is to be registered to the semi-finished stock, it is registered and then loaded to the semi-finished stock, also concluding the process. The process ends with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a6",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "to finished stock"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "to semi-finished stock"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a12",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the production planning. Once the production planning is completed, workers are assigned to the tasks. Following the assignment of workers, the production design is carried out. After the production design, the product is delivered. \n\nSubsequently, the production logout occurs, followed by quality control. After the quality control, a decision point is reached. If the decision leads to Branch 1, the product is registered to the finished stock and then stocked to the finished goods. If the decision leads to Branch 2, the product is registered to the semi-finished stock and then loaded to the semi-finished stock. \n\nFinally, the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Production planning",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Assign workers",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Production design",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Product delivery",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Production logout",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Quality control",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Register to the finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Stock to the finished goods",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Register to the semi-finished stock",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Load to the semi-finished stock",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a4",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a6",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a11",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D1",
                        "targetRef": "a10",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a10",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a12",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_bpmai_1.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the receipt of a shipment request. Following this, the product availability is checked. Based on the outcome of this check, the process diverges at an exclusive decision point.\n\nIf the process follows branch1, the shipment address is checked next. After verifying the shipment address, the process reaches another decision point. If the condition for branch1 is met, the inbound shipment is assembled and then sent. The inbound shipment is then received, followed by a check of the inbound shipment. Subsequently, the products are prepared for shipment to a particular service station. The process then loops back to the first decision point to check for any further conditions.\n\nIf the process follows branch2 from the first decision point, the products are prepared for regional shipment. This leads to the second decision point, where the process condition for branch2 is met, and the process proceeds to the end event, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a12",
                        "condition": "branch1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "branch1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a13",
                        "targetRef": "D2",
                        "condition": "branch2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a3",
                        "targetRef": "D1",
                        "condition": "branch2"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D2",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of a shipment request. The next step is to check the availability of the product. Based on the product availability, the process diverges.\n\nIf the product is available, the shipment address is checked. Following this, the process diverges again.\n\nIf the shipment is to a particular service station, the inbound shipment is assembled and then sent. The inbound shipment is then received, checked, and the products are prepared for shipment to the particular service station.\n\nIf the shipment is for a regional shipment, the products are prepared for regional shipment.\n\nIf the product is not available, the products are prepared for shipment to the particular service station.",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "D1",
                        "targetRef": "a12",
                        "condition": ""
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": ""
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D2",
                        "targetRef": "a13",
                        "condition": ""
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "D1",
                        "targetRef": "a3",
                        "condition": ""
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the receipt of a shipment request. Following this, the product availability is checked. \n\nIf the product is available, the shipment address is checked. Depending on the outcome of this check, the process diverges. If the shipment is to a particular service station, the products are prepared for shipment to that service station. If the shipment is regional, the products are prepared for regional shipment.\n\nIf the shipment address is valid, the inbound shipment is assembled. Once assembled, the inbound shipment is sent. Upon receipt of the inbound shipment, it is checked. After checking, the products are prepared for shipment to the particular service station.\n\nThis concludes the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a11",
                        "name": "Receive shipment request",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Check product availability",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Check shipment address",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Assemble inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Send inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Receive inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Check inbound shipment",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Prepare products for shipment to particular service station",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Prepare products for regional shipment",
                        "type": "User"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "a11",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a10",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "D1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a12",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a8",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_bpmai_1.txt": {
        "0": {
            "text": "The process begins with the receipt of a customer request. The request is then checked. Following this, a decision is made at Decision Point D1. If a notification is required, a notification is sent to the customer, and the process ends.\n\nIf no notification is required, the process moves to Decision Point D2. Here, it is determined whether manual registration is required or if automatic registration is possible. If manual registration is required, it is performed, and then the process proceeds to search for an attraction provider. If automatic registration is possible, it is performed, and then the process also proceeds to search for an attraction provider.\n\nAfter searching for an attraction provider, the process reaches Decision Point D3. If the attraction is available, the attraction is booked. Following the booking, the process reaches Decision Point D4. If a rejection is received, the rejection is processed, and a confirmation is sent to the customer. If the booking is confirmed, the booking confirmation is processed, and a confirmation is sent to the customer. Finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Decision Point D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision Point D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Decision Point D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "name": "Decision Point D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "Manual registration required"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D2",
                        "targetRef": "a4",
                        "condition": "Automatic registration possible"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D3",
                        "targetRef": "a10",
                        "condition": "Attraction available"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D4",
                        "targetRef": "a13",
                        "condition": "Rejection received"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D4",
                        "targetRef": "a12",
                        "condition": "Booking confirmed"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a16",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "Notification required"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, where a customer request is received. The request is then checked. Based on the outcome of this check, the process follows one of two paths. \n\nIn the first path, the process proceeds to another decision point. If the first branch of this decision is taken, the request undergoes manual registration. If the second branch is taken, the request undergoes automatic registration. After either type of registration, the process moves to searching for an attraction provider. \n\nOnce an attraction provider is found, another decision is made. If the first branch of this decision is taken, the attraction is booked. Following the booking, another decision is made. If the booking is rejected, a rejection is received, and a confirmation is sent to the customer. If the booking is confirmed, the confirmation is received, and a confirmation is sent to the customer. After sending the confirmation, the process loops back to searching for an attraction provider.\n\nIn the second path from the initial decision, a notification is sent to the customer, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Manual"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Service"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "D1",
                        "targetRef": "D2",
                        "condition": "First branch of D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "First branch of D2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "D2",
                        "targetRef": "a4",
                        "condition": "Second branch of D2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a5",
                        "targetRef": "loopStart"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a4",
                        "targetRef": "loopStart"
                    },
                    {
                        "id": "loopStart",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D3",
                        "targetRef": "a10",
                        "condition": "First branch of D3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "D4",
                        "targetRef": "a13",
                        "condition": "First branch of D4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D4",
                        "targetRef": "a12",
                        "condition": "Second branch of D4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a13",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a16",
                        "targetRef": "loopEnd"
                    },
                    {
                        "id": "loopEnd",
                        "sourceRef": "D3",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "Second branch of D1"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, where a customer request is received. The request is then checked. Based on the check, the process follows one of two branches. \n\nIn the first branch, the process checks another condition. If this condition is met, manual registration is performed. If not, automatic registration is carried out. Regardless of the type of registration, the next step is to search for an attraction provider.\n\nAfter searching for an attraction provider, the process checks another condition. If the condition is met, an attraction is booked. Following the booking, another condition is checked. If the booking is rejected, a rejection is received, and a confirmation is sent to the customer. If the booking is confirmed, the booking confirmation is received, and a confirmation is sent to the customer. After sending the confirmation, the process loops back to the condition check after searching for an attraction provider.\n\nIn the second branch, a notification is sent to the customer, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive customer request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Check customer request",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Manual registration",
                        "type": "Manual"
                    },
                    {
                        "id": "a4",
                        "name": "Automatic registration",
                        "type": "Service"
                    },
                    {
                        "id": "a14",
                        "name": "Search for attraction provider",
                        "type": "Service"
                    },
                    {
                        "id": "a10",
                        "name": "Book attraction",
                        "type": "Service"
                    },
                    {
                        "id": "a13",
                        "name": "Receive rejection",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Receive booking confirmation",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Send confirmation to the customer",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Send notification to the customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "D2",
                        "condition": "branch 1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D2",
                        "targetRef": "a5",
                        "condition": "branch 1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "D2",
                        "targetRef": "a4",
                        "condition": "branch 2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a5",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a14",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D3",
                        "targetRef": "a10",
                        "condition": "branch 1"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a10",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D4",
                        "targetRef": "a13",
                        "condition": "branch 1"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D4",
                        "targetRef": "a12",
                        "condition": "branch 2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a12",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "D3",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "branch 2"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "logistics_ferreira_4.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the task to get temperature values. After obtaining the temperature values, a decision is made at the first decision point. If the decision leads to generating a standard notification, that task is performed. Otherwise, the process continues in parallel with three branches.\n\nIn the first branch, the container status is retrieved, followed by estimating the container status. Another decision point determines whether to generate a container change request.\n\nIn the second branch, the client location is obtained, followed by estimating the distance. A decision point then leads to estimating the delivery time, which is followed by another decision point to determine if a route change request should be generated.\n\nIn the third branch, the goods status is retrieved, followed by estimating the goods status. A decision point then leads to evaluating damages. Another decision point determines whether to generate a removal request or a price change request.\n\nFinally, all generated messages are sent, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Task"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "PG1",
                        "targetRef": "a19"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the task to get temperature values. After obtaining the temperature values, a decision is made. If the decision leads to generating a standard notification, that task is performed. Otherwise, the process continues in parallel.\n\nIn the parallel branch, the container status is retrieved, followed by estimating the container status. Another decision is made based on the estimated container status. If a container change request is needed, it is generated. If not, the process continues in parallel.\n\nSimultaneously, the client location is obtained, and the distance is estimated. Based on the estimated distance, a decision is made. If the delivery time needs to be estimated, that task is performed. If not, the process loops back to the parallel gateway. If a route change request is needed, it is generated. If not, the process loops back to the parallel gateway.\n\nIn another parallel branch, the goods status is retrieved, followed by estimating the goods status. A decision is made based on the estimated goods status. If damages need to be evaluated, that task is performed. Based on the evaluation, another decision is made. If a removal request is needed, it is generated. If a price change request is needed, it is generated. If neither is needed, the process loops back to the previous decision point.\n\nAfter all parallel branches are completed, the process loops back to the initial decision point. If no further actions are required, the generated messages are sent, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Task"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "D1",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "D2",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D2",
                        "targetRef": "PG1",
                        "condition": "default"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "PG1",
                        "targetRef": "a11",
                        "condition": "branch 2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D3",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "D4",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "D4",
                        "targetRef": "D3",
                        "condition": "default"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "D3",
                        "targetRef": "PG1",
                        "condition": "default"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "PG1",
                        "targetRef": "a19",
                        "condition": "branch 3"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "D5",
                        "targetRef": "a23"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "D6",
                        "targetRef": "a25"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "D6",
                        "targetRef": "a26"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "D6",
                        "targetRef": "D5",
                        "condition": "default"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "D5",
                        "targetRef": "PG1",
                        "condition": "default"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "PG1",
                        "targetRef": "D1",
                        "condition": "default"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "D1",
                        "targetRef": "a28",
                        "condition": "default"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "a28",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with obtaining temperature values. Based on the temperature values, a decision is made. If the first branch condition is met, a standard notification is generated. If the second branch condition is met, the process continues in parallel.\n\nIn the parallel path, the first branch involves getting the container status, followed by estimating the container status. Another decision is made here. If the second branch condition is met, a container change request is generated.\n\nSimultaneously, in the second branch of the parallel path, the client location is obtained, followed by estimating the distance. Another decision is made. If the first branch condition is met, the delivery time is estimated. This leads to another decision. If the second branch condition is met, a route change request is generated.\n\nIn the third branch of the parallel path, the goods status is obtained, followed by estimating the goods status. Another decision is made. If the first branch condition is met, damages are evaluated. This leads to another decision. If the first branch condition is met, a removal request is generated. If the second branch condition is met, a price change request is generated.\n\nFinally, all generated messages are sent.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Get temperature values",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Generate standard notification",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Get container status",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Estimate container status",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Generate container change request",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Get client location",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Estimate distance",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Estimate delivery time",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Generate route change request",
                        "type": "Task"
                    },
                    {
                        "id": "a19",
                        "name": "Get goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a20",
                        "name": "Estimate goods status",
                        "type": "Task"
                    },
                    {
                        "id": "a23",
                        "name": "Evaluate damages",
                        "type": "Task"
                    },
                    {
                        "id": "a25",
                        "name": "Generate removal request",
                        "type": "Task"
                    },
                    {
                        "id": "a26",
                        "name": "Generate price change request",
                        "type": "Task"
                    },
                    {
                        "id": "a28",
                        "name": "Send generated messages",
                        "type": "Task"
                    }
                ],
                "events": [],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "D1",
                        "targetRef": "a4",
                        "condition": "First Branch"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "D1",
                        "targetRef": "PG1",
                        "condition": "Second Branch"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "PG1",
                        "targetRef": "a5",
                        "condition": "First Branch"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a5",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a9",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D2",
                        "targetRef": "a7",
                        "condition": "Second Branch"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "PG1",
                        "targetRef": "a11",
                        "condition": "Second Branch"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a11",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a16",
                        "targetRef": "D3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "D3",
                        "targetRef": "a12",
                        "condition": "First Branch"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a12",
                        "targetRef": "D4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "D4",
                        "targetRef": "a15",
                        "condition": "Second Branch"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "PG1",
                        "targetRef": "a19",
                        "condition": "Third Branch"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a19",
                        "targetRef": "a20"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a20",
                        "targetRef": "D5"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "D5",
                        "targetRef": "a23",
                        "condition": "First Branch"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "a23",
                        "targetRef": "D6"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "D6",
                        "targetRef": "a25",
                        "condition": "First Branch"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "D6",
                        "targetRef": "a26",
                        "condition": "Second Branch"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "PG1",
                        "targetRef": null
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_lodhi_5.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the receipt of a production order. Once the production order is received, it is prepared for execution. Following the preparation, raw materials are collected. \n\nThe process then moves to the cutting phase, where the raw materials are cut as required. After cutting, the process splits into two parallel tasks: stitching and printing. Both stitching and printing occur simultaneously. \n\nOnce both stitching and printing are completed, the process converges back to a single flow and proceeds to complete the production. \n\nAfter production is completed, a quality check is performed. If the quality check is successful, a quality report is created. \n\nAt this point, an exclusive decision is made. If adjustments are needed, settings are adjusted, and the process ends. If no adjustments are needed, data is sent to the warehouse, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "a9",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "a10",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "seq17",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the receipt of a production order. Once the production order is received, it is prepared. After preparation, raw materials are collected. The process then moves to the cutting stage.\n\nFollowing the cutting stage, the process reaches a parallel gateway, where two tasks are performed concurrently: stitching and printing. Once both stitching and printing are completed, the process converges back at the parallel gateway.\n\nNext, the process proceeds to complete the production. After production is completed, a quality check is performed. Following the quality check, a quality report is created.\n\nThe process then reaches an exclusive gateway. If adjustments are needed based on the quality report, settings are adjusted, and the process ends. If no adjustments are needed, data is sent to the warehouse, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "User"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust settings",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Exclusive Gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a16",
                        "targetRef": "a16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a9",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a10",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "PG1",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the receipt of a production order. Once the production order is received, it is prepared. Following the preparation, raw materials are collected. The collected raw materials are then sent to the cutting stage.\n\nAfter cutting, the process splits into two parallel tasks: stitching and printing. Both stitching and printing occur simultaneously. Once both stitching and printing are completed, the process converges again.\n\nThe next step is to complete the production. After production is completed, a quality check is performed. Following the quality check, a quality report is created.\n\nAn exclusive decision is then made. If adjustments are needed, settings are adjusted. If no adjustments are needed, data is sent to the warehouse.\n\nFinally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a5",
                        "name": "Receive production order",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Prepare production order",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect raw materials",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Cutting",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Stitching",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Printing",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Complete production",
                        "type": "Task"
                    },
                    {
                        "id": "a0",
                        "name": "Check quality",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Create quality report",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Adjust settings",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Send data to warehouse",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_join",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a5",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a16",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a7",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "PG1",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "PG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a9",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a10",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "PG1_join",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a12",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a1",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "D1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a13",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_bpmai_3.txt": {
        "0": {
            "text": "The process begins with a call to the hospital. Following this, a decision is made about whether to accept the patient. If the decision is to accept the patient, they are added to the list of patients. The patient then undergoes a control check, which may be repeated as necessary. After the control checks, the patient is called to the hospital and subsequently hospitalized. During hospitalization, the patient gives birth. After childbirth, there is a decision point. If the first branch is chosen, the patient undergoes post-hospitalization care, and the process ends. If the second branch is chosen, the patient receives special treatment, and the process ends. If the initial decision about patient acceptance is not to accept the patient, the process ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "User"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a13",
                        "condition": "First Branch"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a13",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a4",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D2",
                        "targetRef": "a16",
                        "condition": "First Branch"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "Second Branch"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a16",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "D1",
                        "targetRef": "end",
                        "condition": "Second Branch"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with a call to the hospital. Following this, a decision is made about patient acceptance. If the patient is accepted, they are added to the list of patients. The patient is then controlled, and if necessary, this control step may be repeated. After the control, the patient is called to the hospital. Upon arrival, the patient is hospitalized. This is followed by the childbirth process. After childbirth, there is a decision point. If the patient requires post-hospitalization care, they receive it, and the process ends. Alternatively, if the patient requires special treatment, they receive it, and the process ends. If the patient is not accepted during the initial decision, the process ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a13",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a4",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a16"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D2",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a16",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "D1",
                        "targetRef": "end"
                    },
                    {
                        "id": "flowLoop1",
                        "sourceRef": "a4",
                        "targetRef": "a4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a call to the hospital. Following this, a decision is made about patient acceptance. If the patient is accepted, they are added to the list of patients. The process then enters a loop where the patient is controlled repeatedly. Once the loop is exited, the patient is called to the hospital and subsequently hospitalized. After hospitalization, the patient undergoes childbirth. \n\nPost-childbirth, a decision is made regarding the next steps. If the patient requires post-hospitalization care, they receive it, and the process ends. If the patient requires special treatment, they receive it, and the process ends. If the patient is not accepted initially, the process ends immediately.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Call to the hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Decision about patient acceptance",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Add to list of patients",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Patient control",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Call patient to hospital",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Patient hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Child birth",
                        "type": "Task"
                    },
                    {
                        "id": "a16",
                        "name": "Patient post-hospitalization",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Special treatment",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "name": "Patient acceptance decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Post childbirth decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "loop",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a2",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "D1",
                        "targetRef": "a13",
                        "condition": "accept"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a13",
                        "targetRef": "loop"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "loop",
                        "targetRef": "a4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a4",
                        "targetRef": "loop"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "loop",
                        "targetRef": "a14",
                        "condition": "exit loop"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a14",
                        "targetRef": "a15"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "a15",
                        "targetRef": "a6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a6",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a16",
                        "condition": "post-hospitalization"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D2",
                        "targetRef": "a8",
                        "condition": "special treatment"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a16",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a8",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "D1",
                        "targetRef": "end",
                        "condition": "reject"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "healthcare_pufahl_4.txt": {
        "0": {
            "text": "The process begins with the start event, after which the patient's conditions are assessed. Following this assessment, a parallel gateway splits the process into two concurrent paths. One path involves performing a physical examination, while the other involves drawing blood samples. \n\nOnce the blood samples are drawn, they are sent to the lab for analysis. After the analysis is completed, the results are received from the lab, and this path converges back at the parallel gateway. Similarly, after the physical examination is performed, this path also converges back at the parallel gateway.\n\nAfter both paths have converged, a diagnosis is made. An exclusive decision is then made based on the diagnosis. If surgical intervention is required, the surgery is planned and then performed. If surgery is not required, the patient is directly discharged. \n\nIn both cases, whether surgery is performed or not, the process concludes with the patient being discharged, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "name": "Parallel Gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "d1",
                        "name": "Exclusive Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "pg1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "pg1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a13",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a3",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "pg1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a5",
                        "targetRef": "d1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "d1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "d1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a7",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a14",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a9",
                        "targetRef": "e2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event, where the initial step is to assess the patient's conditions. Following this assessment, two parallel activities are initiated: performing a physical examination and drawing blood samples. \n\nOnce the blood samples are drawn, they are sent to the lab for analysis. After the analysis is completed, the results are received from the lab. Both the physical examination and the receipt of lab analysis converge at a parallel gateway, after which a diagnosis is made.\n\nBased on the diagnosis, a decision is made. If a surgical intervention is required, the process proceeds with the surgical intervention. Alternatively, if surgery needs to be planned, the process moves to planning the surgery. \n\nAfter either the surgical intervention or the planning of surgery, the process converges again at an exclusive gateway. The final step is to discharge the patient, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_join",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D1_join",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "s1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "s2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "s3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "s4",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "s5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "s6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "s7",
                        "sourceRef": "a13",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s8",
                        "sourceRef": "a3",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "s9",
                        "sourceRef": "PG1_join",
                        "targetRef": "a5"
                    },
                    {
                        "id": "s10",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "s11",
                        "sourceRef": "D1",
                        "targetRef": "a7",
                        "condition": "Surgical intervention"
                    },
                    {
                        "id": "s12",
                        "sourceRef": "D1",
                        "targetRef": "a14",
                        "condition": "Plan surgery"
                    },
                    {
                        "id": "s13",
                        "sourceRef": "a7",
                        "targetRef": "D1_join"
                    },
                    {
                        "id": "s14",
                        "sourceRef": "a14",
                        "targetRef": "D1_join"
                    },
                    {
                        "id": "s15",
                        "sourceRef": "D1_join",
                        "targetRef": "a9"
                    },
                    {
                        "id": "s16",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the start event, where the patient's conditions are assessed. Following this, two parallel activities are initiated: performing a physical examination and drawing blood samples. \n\nOnce the blood samples are drawn, they are sent to the lab for analysis. After the analysis is completed, the results are received from the lab. \n\nBoth the physical examination and the lab analysis results converge, and a diagnosis is made. \n\nBased on the diagnosis, a decision is made. If surgical intervention is required, the surgery is planned. If not, the patient is directly discharged. \n\nIf surgery is planned, the surgical intervention is performed, and then the patient is discharged. \n\nFinally, the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Assess patient conditions",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Perform physical examination",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Draw blood samples",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Send analysis to the lab",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Receive analysis from the lab",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Make diagnosis",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Surgical intervention",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Plan surgery",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Discharge patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "PG1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "a11",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a13",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "D1",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a7",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a14",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a9",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "gdpr_1_data_breach.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to retrieve the breached data. Once the breached data is retrieved, the next step is to retrieve the breached subjects. After retrieving the breached subjects, the process splits into two parallel paths.\n\nIn the first parallel path, data loss limitation is performed, and this path ends there.\n\nIn the second parallel path, the national authority is notified. Following this, the stolen data is evaluated. Based on the evaluation of the stolen data, a decision is made. If the decision leads to Branch 1, the security standard is evaluated. After evaluating the security standard, another decision is made. If this decision leads to Branch 1, a request is made to determine if the breached data has to be communicated to the data subject. The request is then received, and a final decision is made. If this final decision leads to Branch 2, a notification is sent. If the initial decision after evaluating the stolen data leads to Branch 2, the notification is sent directly. Similarly, if the decision after evaluating the security standard leads to Branch 2, the notification is sent directly.\n\nThe process ends after the notification is sent.",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "name": "Parallel Gateway 1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "name": "Decision 1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "name": "Decision 2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "name": "Decision 3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a7",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D1",
                        "targetRef": "a11",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D1",
                        "targetRef": "a18",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a13",
                        "condition": "Branch 1"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D2",
                        "targetRef": "a18",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "D3",
                        "targetRef": "a18",
                        "condition": "Branch 2"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a18",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the retrieval of breached data. Once the breached data is retrieved, the next step is to retrieve the breached subjects. \n\nFollowing this, the process splits into two parallel paths. One path involves limiting data loss, which, once completed, leads directly to the end of the process. \n\nThe other parallel path involves notifying the national authority. After the notification, the stolen data is evaluated. \n\nAn exclusive decision is then made. If the decision leads to evaluating the security standard, this evaluation is carried out. Another exclusive decision follows. If the decision is to request whether the breached data has to be communicated to the data subject, this request is made. The process then waits to receive a notification for the request. \n\nAnother exclusive decision is made based on the received notification. If the decision is to send a notification, the notification is sent, leading to the end of the process. \n\nIf the initial decision after evaluating the stolen data is to send a notification directly, the notification is sent, leading to the end of the process. \n\nSimilarly, if the decision after evaluating the security standard is to send a notification, the notification is sent, leading to the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Task"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Task"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a7",
                        "targetRef": "end"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a3",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "a18",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to retrieve the breached data. Once the breached data is retrieved, the next step is to retrieve the breached subjects. After retrieving the breached subjects, the process splits into two parallel paths.\n\nIn the first path, data loss limitation is performed. Following this, the stolen data is evaluated. Based on the evaluation of the stolen data, a decision is made. If the decision leads to evaluating the security standard, this evaluation is carried out. After evaluating the security standard, another decision is made. If it is determined that the breached data has to be communicated to the data subject, a request is made. This request is then followed by receiving a notification for the request. Based on this notification, a final decision is made. If the decision is to send a notification, the notification is sent. The process then converges back to the parallel gateway.\n\nIn the second parallel path, the national authority is notified. This path also converges back to the parallel gateway.\n\nAfter both parallel paths converge, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a0",
                        "name": "Retrieve breached data",
                        "type": "Manual"
                    },
                    {
                        "id": "a1",
                        "name": "Retrieve breached subjects",
                        "type": "Manual"
                    },
                    {
                        "id": "a7",
                        "name": "Data loss limitation",
                        "type": "Manual"
                    },
                    {
                        "id": "a3",
                        "name": "Notify national authority",
                        "type": "Manual"
                    },
                    {
                        "id": "a8",
                        "name": "Evaluate stolen data",
                        "type": "Manual"
                    },
                    {
                        "id": "a11",
                        "name": "Evaluate security standard",
                        "type": "Manual"
                    },
                    {
                        "id": "a13",
                        "name": "Request if breached data has to be communicated to the data subject",
                        "type": "Manual"
                    },
                    {
                        "id": "a17",
                        "name": "Receive notification for the request",
                        "type": "Manual"
                    },
                    {
                        "id": "a18",
                        "name": "Send notification",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "a0"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a0",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "PG1",
                        "targetRef": "a7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "PG1",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a7",
                        "targetRef": "a8"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "a8",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow8a",
                        "sourceRef": "D1",
                        "targetRef": "a11"
                    },
                    {
                        "id": "flow8b",
                        "sourceRef": "D1",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow9a",
                        "sourceRef": "a11",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow9b",
                        "sourceRef": "a18",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow10a",
                        "sourceRef": "D2",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow10b",
                        "sourceRef": "D2",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow11a",
                        "sourceRef": "a13",
                        "targetRef": "a17"
                    },
                    {
                        "id": "flow11b",
                        "sourceRef": "a18",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "a17",
                        "targetRef": "D3"
                    },
                    {
                        "id": "flow13a",
                        "sourceRef": "D3",
                        "targetRef": "a18"
                    },
                    {
                        "id": "flow13b",
                        "sourceRef": "D3",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a18",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "PG1",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "manufacturing_bpmai_2.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the receipt of a customer order. Once the customer order is received, the customer demand is processed. Following this, the demanded components are determined according to planning.\n\nAt this point, an exclusive decision is made. If the first branch is taken, missing parts are purchased and put on stock. After this, production is performed. If the second branch is taken, production is performed directly without purchasing missing parts.\n\nAfter production, quality checks are performed. Another exclusive decision is made following the quality checks. If the second branch is taken, follow-up production is performed. After follow-up production, the product is filled into packaging. If the first branch is taken, the product is filled into packaging directly without follow-up production.\n\nOnce the product is filled into packaging, it is then packed and labeled. The packed and labeled product is transported to the warehouse. Finally, the product is sent to the customer, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "Task"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "Task"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "Task"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Perform quality checks",
                        "type": "Task"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "Task"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into a packaging",
                        "type": "Task"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "Task"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a8",
                        "condition": "first branch"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "second branch"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D2",
                        "targetRef": "a15",
                        "condition": "second branch"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "D2",
                        "targetRef": "a12",
                        "condition": "first branch"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the receipt of a customer order. Once the order is received, the customer demand is processed. Following this, the demanded components are determined according to planning.\n\nAt this point, an exclusive decision is made. If the first branch is taken, the process proceeds directly to performing production. If the second branch is taken, the missing parts are purchased and put on stock before moving on to production.\n\nAfter production is performed, quality checks are conducted. Another exclusive decision is made here. If the second branch is taken, follow-up production is performed. Otherwise, the process continues with filling the product into packaging.\n\nThe product is then packed and labeled, followed by transporting the product to the warehouse. Finally, the product is sent to the customer, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Perform quality checks",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into packaging",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "D1",
                        "targetRef": "a8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "D2",
                        "targetRef": "a15",
                        "condition": "second branch"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "D2",
                        "targetRef": "a12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "first branch"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the receipt of a customer order. Once the order is received, the customer demand is processed. Following this, the demanded components are determined according to planning.\n\nAt this point, a decision is made based on the availability of parts. If parts are missing, they are purchased and put into stock. Once the missing parts are acquired, production is performed. If the parts are already available, production is performed directly.\n\nAfter production, quality checks are conducted. If there are quality issues, follow-up production is performed to address these issues. If there are no quality issues, the product is filled into packaging.\n\nNext, the product is packed and labeled. Following this, the product is transported to the warehouse. Finally, the product is sent to the customer, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a2",
                        "name": "Receive customer order",
                        "type": "User"
                    },
                    {
                        "id": "a1",
                        "name": "Processing customer demand",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Determine demanded components according to planning",
                        "type": "User"
                    },
                    {
                        "id": "a8",
                        "name": "Purchase missing parts and put on stock",
                        "type": "User"
                    },
                    {
                        "id": "a9",
                        "name": "Perform production",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Perform quality checks",
                        "type": "User"
                    },
                    {
                        "id": "a15",
                        "name": "Perform follow-up production",
                        "type": "User"
                    },
                    {
                        "id": "a12",
                        "name": "Fill product into packaging",
                        "type": "User"
                    },
                    {
                        "id": "a13",
                        "name": "Pack and label product",
                        "type": "User"
                    },
                    {
                        "id": "a14",
                        "name": "Transport product to the warehouse",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Send product to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "D1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "D2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "a2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "a2",
                        "targetRef": "a1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "a1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "a5",
                        "targetRef": "D1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "D1",
                        "targetRef": "a8",
                        "condition": "missing parts"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "a8",
                        "targetRef": "a9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "D1",
                        "targetRef": "a9",
                        "condition": "parts available"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "a9",
                        "targetRef": "a10"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "a10",
                        "targetRef": "D2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "D2",
                        "targetRef": "a15",
                        "condition": "quality issues"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "a15",
                        "targetRef": "a12"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "D2",
                        "targetRef": "a12",
                        "condition": "no issues"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "a12",
                        "targetRef": "a13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "a13",
                        "targetRef": "a14"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "a14",
                        "targetRef": "a3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "a3",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "tourism_milanovic_4.txt": {
        "0": {
            "text": "The process begins with the receipt of a trip request. Once the trip request is received, two parallel activities are initiated. \n\nFirst, a price request is sent to the airlines. The responses from the airlines are then collected, and an airline is selected. \n\nSimultaneously, a price request is sent to the hotels. The responses from the hotels are collected, and a hotel is selected. \n\nAfter both the airline and hotel have been selected, the process converges, and the tour plan is prepared. \n\nFinally, the tour plan is sent to the customer, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "joinPG1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a4",
                        "targetRef": "joinPG1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a7",
                        "targetRef": "joinPG1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "joinPG1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, where a trip request is received. \n\nFollowing this, two parallel tasks are initiated. The first task involves sending a price request to the airlines. Once the price request is sent, responses from the airlines are collected. After collecting the responses, an airline is selected.\n\nSimultaneously, the second task involves sending a price request to the hotels. Once the price request is sent, responses from the hotels are collected. After collecting the responses, a hotel is selected.\n\nOnce both the airline and hotel have been selected, the process continues with preparing the tour plan. \n\nAfter the tour plan is prepared, it is sent to the customer. \n\nThe process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "Task"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "Task"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "Task"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "Task"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "Task"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "Task"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "PG1",
                        "type": "Parallel"
                    },
                    {
                        "id": "PG1_join",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "PG1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "PG1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "PG1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a4",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a7",
                        "targetRef": "PG1_join"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "PG1_join",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the receipt of a trip request. Once the trip request is received, two parallel activities are initiated. \n\nThe first parallel path involves sending a price request to the airlines. After sending the request, responses from the airlines are collected. Once all responses are gathered, an airline is selected. \n\nSimultaneously, the second parallel path involves sending a price request to the hotels. After sending the request, responses from the hotels are collected. Once all responses are gathered, a hotel is selected. \n\nAfter both the airline and hotel have been selected, the two parallel paths converge. Following this, the tour plan is prepared. Once the tour plan is ready, it is sent to the customer. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "a1",
                        "name": "Receive trip request",
                        "type": "User"
                    },
                    {
                        "id": "a2",
                        "name": "Send price request to the airlines",
                        "type": "User"
                    },
                    {
                        "id": "a3",
                        "name": "Collect responses from the airlines",
                        "type": "User"
                    },
                    {
                        "id": "a4",
                        "name": "Select airline",
                        "type": "User"
                    },
                    {
                        "id": "a5",
                        "name": "Send price request to the hotels",
                        "type": "User"
                    },
                    {
                        "id": "a6",
                        "name": "Collect responses from the hotels",
                        "type": "User"
                    },
                    {
                        "id": "a7",
                        "name": "Select hotel",
                        "type": "User"
                    },
                    {
                        "id": "a10",
                        "name": "Prepare the tour plan",
                        "type": "User"
                    },
                    {
                        "id": "a11",
                        "name": "Send the tour plan to the customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "pg1",
                        "type": "Parallel"
                    },
                    {
                        "id": "join_pg1",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start",
                        "targetRef": "a1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "a1",
                        "targetRef": "pg1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "pg1",
                        "targetRef": "a2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "a2",
                        "targetRef": "a3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "a3",
                        "targetRef": "a4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "a4",
                        "targetRef": "join_pg1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "pg1",
                        "targetRef": "a5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "a5",
                        "targetRef": "a6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "a6",
                        "targetRef": "a7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "a7",
                        "targetRef": "join_pg1"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "join_pg1",
                        "targetRef": "a10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "a10",
                        "targetRef": "a11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "a11",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}