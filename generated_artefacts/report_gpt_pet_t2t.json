{
    "9_2.txt": {
        "0": {
            "text": "The process begins when a Customer Service Representative sends a mortgage offer to the customer. The process then diverges based on the customer's response. If the customer sends the completed offer documents, the process continues to an exclusive decision point. If the documents are complete, the case is moved to administration for completion. If the documents are not complete, a message is generated to the customer requesting the outstanding documents. \n\nIf no reply is received from the customer after two weeks, the process moves to another exclusive decision point. If the case is to be canceled, the case details are updated and archived prior to cancellation. Finally, the process ends.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "5",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "9",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "4",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Customer Service Representative sends mortgage offer",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "case details updated and work archived prior to cancellation",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "move case to administration for completion",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "update and archive case details prior to cancellation",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "customer sends completed offer documents",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "generate message to customer for outstanding documents",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "no reply received after 2 weeks",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a Customer Service Representative sends a mortgage offer to the customer. Following this, the process reaches a decision point where three possible paths can be taken. \n\nIf the case details are updated and archived prior to cancellation, the process moves directly to the customer declining the mortgage, which then leads to the end of the process.\n\nAlternatively, if the customer is messaged requesting outstanding documents, the process moves to another decision point. If the customer sends back the completed offer documents and prerequisite documents, the case is moved to administration for completion. If no answer is received, the case details are updated and archived prior to cancellation, and the process moves to the customer declining the mortgage, which then leads to the end of the process.\n\nThe third path involves moving the case to administration for completion directly from the initial decision point.\n\nIn summary, the process involves sending a mortgage offer, potentially requesting additional documents, waiting for a response, and either completing the case or updating and archiving it prior to cancellation, depending on the customer's actions. The process concludes when the customer declines the mortgage.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "17",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "15",
                        "targetRef": "17"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Customer Service Representative sends mortgage offer to customer",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Case details are updated and archived prior to cancellation",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Move case to administration for completion",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Message customer requesting outstanding documents",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Wait for 2 weeks",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Customer sends back completed offer documents and prerequisite documents",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Move case to administration for completion",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "No answer is received",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Case details are updated and archived prior to cancellation",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "Customer declines mortgage",
                        "type": "User"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a mortgage offer is sent to the customer. Following this, the process waits for a reply from the customer. Upon receiving the customer's reply, the process reaches a decision point. If the case details need to be updated, the case details are updated, and then the work is archived prior to cancellation. Alternatively, if the case needs to be moved to administration for completion, it is moved accordingly, leading to the end of the process. If the decision is to request outstanding documents from the customer, a message is generated and sent to the customer requesting these documents. The process then waits again for the customer's reply. If the case details need to be updated again, they are updated, and the work is archived prior to cancellation, leading to the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "send mortgage offer to customer",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "wait for customer reply",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "update case details",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "archive work prior to cancellation",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "move case to administration for completion",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "generate message to customer requesting outstanding documents",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "update case details",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "archive prior to cancellation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "10",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "10",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "11",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "2",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "12",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "8",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_1.txt": {
        "0": {
            "text": "The process begins when the Sales Department receives an order. The order is then evaluated to determine if it is for a customized bike. If the order is accepted, the Sales Department informs both the storehouse and the engineering department. If the order is rejected, the process ends.\n\nUpon receiving the information, the storehouse processes the part list while the engineering department prepares for assembling the bicycle. These two tasks occur in parallel. Once both tasks are completed, the process converges, and the bicycle is assembled.\n\nAfter the bicycle is assembled, it is shipped to the customer, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Sales receives order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Accept order for customized bike",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Reject order",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Inform storehouse and engineering department",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Storehouse processes part list",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Prepare for assembling",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Assemble bicycle",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Ship bicycle to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Parallel"
                    },
                    {
                        "id": "11",
                        "type": "Parallel"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Small Company",
                        "Lanes": [
                            {
                                "id": "lane1",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "14",
                                    "15"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Storehouse",
                                "elemRefs": [
                                    "6",
                                    "7",
                                    "8",
                                    "11"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Engineering Department",
                                "elemRefs": [
                                    "6",
                                    "10",
                                    "11",
                                    "13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the Sales Department receives an order. The order is then either rejected or accepted. If the order is accepted, the process continues to an exclusive decision point. From this point, the process can either proceed directly to shipping the bicycle or move to a parallel gateway where two tasks are initiated simultaneously. \n\nIn the Storehouse, the part list is processed, and the availability of parts is checked. If parts are available, they are reserved or back-ordered. Meanwhile, in the Engineering Department, preparations for assembling the bicycle are made. Once the parts are reserved or back-ordered and the preparations are complete, the process converges at another parallel gateway.\n\nAfter the parallel tasks are completed, the process continues to the task of shipping the bicycle. Finally, the process ends when the bicycle is shipped.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "type": "Parallel"
                    },
                    {
                        "id": "12",
                        "type": "Parallel"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Small Company",
                        "Lanes": [
                            {
                                "id": "l1",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "3",
                                    "4",
                                    "13",
                                    "14"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Storehouse",
                                "elemRefs": [
                                    "6",
                                    "7",
                                    "8"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Engineering Department",
                                "elemRefs": [
                                    "9",
                                    "11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "10",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "10",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "14"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "receive order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "reject order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "accept order",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "process part list",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "check part availability",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "reserve or back-order parts",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "prepare for assembling bicycle",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "assemble bicycle",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "ship bicycle",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the sales department receives an order. The order is then evaluated to either be rejected or accepted. If the order is accepted, the process continues with the order being marked as accepted. If the order is rejected, the process ends there. \n\nOnce the order is accepted, the storehouse and engineering department are informed. Following this, the part list is processed. The process then splits into parallel tasks where the required quantity of each part is checked and preparations for assembly are made simultaneously. \n\nAfter both tasks are completed, the process converges, and the bicycle is assembled. Finally, the assembled bicycle is shipped to the customer, concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Parallel"
                    },
                    {
                        "id": "11",
                        "type": "Parallel"
                    },
                    {
                        "id": "14",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "sales department receives order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "reject or accept order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "order accepted",
                        "type": "Manual"
                    },
                    {
                        "id": "5",
                        "name": "reject order",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "inform storehouse and engineering department",
                        "type": "Manual"
                    },
                    {
                        "id": "7",
                        "name": "process part list",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "check required quantity of each part",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "prepare for assembly",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "assemble the bicycle",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "ship bicycle to customer",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "1_3.txt": {
        "0": {
            "text": "The process begins when a guest calls room service. The room-service manager takes down the order and then submits the order ticket to the kitchen, the sommelier, and assigns the order to a waiter. The kitchen staff prepares the food, while the sommelier fetches the wine and prepares the beverages. Simultaneously, the waiter readies the cart and prepares nonalcoholic drinks. Once the food, beverages, and cart are ready, the waiter delivers the order to the guest's room. After the delivery, the guest's account is debited, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Guest calls room service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Room-service manager takes down order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Submit order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Submit order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Kitchen prepares food",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Sommelier fetches wine and prepares beverages",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Waiter readies cart",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Waiter prepares nonalcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Deliver order to guest's room",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Debit guest's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gf1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "The Evanstonian",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Kitchen Staff",
                                "elemRefs": [
                                    "6"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "7"
                                ]
                            },
                            {
                                "id": "l4",
                                "name": "Waiter",
                                "elemRefs": [
                                    "8",
                                    "9",
                                    "10",
                                    "11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a guest calls room service to place an order. The room service manager takes down the order and then submits the order tickets. The kitchen prepares the food, while the sommelier fetches wine and other alcoholic beverages. Simultaneously, the waiter readies the cart, gathers silverware, and puts a tablecloth on the cart. The waiter also gathers non-alcoholic drinks. Once the food, wine, and cart are ready, the waiter delivers the order to the guest's room. After the delivery, the waiter debits the guest\u2019s account, and the process concludes.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "13",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "1",
                        "name": "Guest",
                        "Lanes": [
                            {
                                "id": "1.1",
                                "name": "Guest Lanes",
                                "elemRefs": [
                                    "0",
                                    "5",
                                    "13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "2",
                        "name": "Hotel",
                        "Lanes": [
                            {
                                "id": "2.1",
                                "name": "Room Service Manager",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4"
                                ]
                            },
                            {
                                "id": "2.2",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "6"
                                ]
                            },
                            {
                                "id": "2.3",
                                "name": "Sommelier",
                                "elemRefs": [
                                    "7"
                                ]
                            },
                            {
                                "id": "2.4",
                                "name": "Waiter",
                                "elemRefs": [
                                    "8",
                                    "9",
                                    "10",
                                    "11",
                                    "12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "9",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "12",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "5",
                        "targetRef": "13"
                    }
                ],
                "tasks": [
                    {
                        "id": "2",
                        "name": "Guest calls room service",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Manager takes down the order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Manager submits order tickets",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Kitchen prepares food",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Sommelier fetches wine and other alcoholic beverages",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Waiter readies cart",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Waiter gathers silverware and puts tablecloth on cart",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Waiter gathers non-alcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Food, wine, and cart ready",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Waiter delivers order to room",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Waiter debits guest\u2019s account",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a guest calls room service. The room service staff takes down the order and then submits the order ticket to the kitchen. Simultaneously, the order is given to the sommelier and assigned to a waiter. The kitchen prepares the food, while the sommelier fetches the wine and prepares the beverages. The waiter readies the cart and prepares nonalcoholic drinks. Once the food is prepared by the kitchen, the beverages are ready from the sommelier, and the cart is prepared by the waiter, the order is delivered to the guest's room. After delivering the order, the waiter debits the guest's account. If there are any issues, the process may loop back to assigning the order to a waiter. Finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "guest calls room service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "take down the order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "submit order ticket to kitchen",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "give order to sommelier",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "assign order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "kitchen prepares food",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "sommelier fetches wine and prepares beverages",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "waiter readies cart",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "waiter prepares nonalcoholic drinks",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "deliver order to guest's room",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "waiter debits guest's account",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_8.txt": {
        "0": {
            "text": "The process begins when a customer submits a claim. The claim is then checked and registered by the notification department. After registration, the handling department picks up the claim and proceeds to check the insurance details. Following this, an assessment is performed. At this point, an exclusive decision is made: if the claim is authorized, repairs are authorized and subsequently, the payment is scheduled. If the claim is rejected, a letter is sent to the customer. Regardless of whether the claim is authorized or rejected, a letter is sent to the customer. Finally, the process is completed. Additionally, the customer sends the relevant documentation at the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "8",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "1",
                        "name": "Customer",
                        "Lanes": [
                            {
                                "id": "customer_lane",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "0",
                                    "13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "2",
                        "name": "Car Insurer",
                        "Lanes": [
                            {
                                "id": "notification_lane",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "1",
                                    "2"
                                ]
                            },
                            {
                                "id": "handling_lane",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "9",
                                    "10",
                                    "11",
                                    "12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "8",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer submits a claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "check and register the claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Handling department picks up the claim",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "check the insurance",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "perform assessment",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "schedule the payment",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "reject the claim",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "send letter to customer",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "process complete",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "send relevant documentation",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a customer submits a claim. The claim is then checked and registered by the notification department. Following this, the handling department picks up and checks the insurance details. An assessment is performed to evaluate the claim. Based on the assessment, a decision is made at an exclusive gateway. If the claim is approved, the handling department phones the garage to authorize repairs and schedules the payment. If the claim is rejected, the handling department rejects the claim and sends a letter to the customer. The process concludes after the letter is sent to the customer.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer submits claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "check and register the claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "pickup and check insurance",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "perform assessment",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "phone garage to authorize repairs",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "reject claim",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "1",
                        "name": "Car Insurer",
                        "Lanes": [
                            {
                                "id": "3",
                                "name": "Notification department",
                                "elemRefs": [
                                    "2"
                                ]
                            },
                            {
                                "id": "4",
                                "name": "Handling department",
                                "elemRefs": [
                                    "3",
                                    "4",
                                    "6",
                                    "7",
                                    "8",
                                    "9"
                                ]
                            }
                        ],
                        "elemRefs": [
                            "0",
                            "1",
                            "5",
                            "10"
                        ]
                    },
                    {
                        "id": "2",
                        "name": "Customer",
                        "elemRefs": [
                            "1",
                            "9"
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer submits a claim. The Notification Department then checks the documents for completeness. If the documents are complete, the claim is registered. The Handling Department then picks up the claim and checks the insurance details. Following this, an assessment is performed. Based on the assessment, there are two possible outcomes: either the garage is phoned to authorize repairs, or the claim is rejected. If the garage is phoned, the next step is to schedule the payment. Regardless of whether the claim is approved or rejected, a letter is sent to the customer to inform them of the decision. The process concludes after the letter is sent to the customer.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer submits claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Notification department checks documents for completeness",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "register the claim",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Handling department picks up the claim",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "check insurance",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "perform assessment",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "phone garage to authorise repairs",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "schedule payment",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "reject claim",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "send letter to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6_gateway",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "NotificationDepartment",
                        "name": "Notification Department",
                        "Lanes": [
                            {
                                "id": "lane1",
                                "name": "Notification Department",
                                "elemRefs": [
                                    "2",
                                    "3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "HandlingDepartment",
                        "name": "Handling Department",
                        "Lanes": [
                            {
                                "id": "lane2",
                                "name": "Handling Department",
                                "elemRefs": [
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9",
                                    "10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "6_gateway"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6_gateway",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6_gateway",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "5_2.txt": {
        "0": {
            "text": "The process begins when an employee submits a vacation request. This request is then registered in the system. After registration, the request is received by the appropriate authority. The next step involves the approval of the request. At this point, a decision is made: if the request is not approved, the application is returned to the employee, who may then resubmit the request. If the request is approved, a notification is generated. Following the notification, the necessary management procedures are completed. Finally, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Submit vacation request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Register requirement",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Receive request",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Approve request",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Return application",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Generate notification",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Complete management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "8",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "8",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an employee submits a vacation request. This request is then registered in the system. Following this, the request is received by the supervisor. The supervisor then reviews the request and makes a decision to either approve or reject it. If the request is rejected, the application is returned to the employee, and the process ends there. If the request is approved, a notification is generated. Subsequently, the Human Resources department completes the necessary management procedures, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Submit Vacation Request",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Register Requirement",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Receive Request by Supervisor",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Approve or Reject Request",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Return Application to Employee",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Generate Notification",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Complete Management Procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Approve or Reject Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task5",
                        "name": "Rejected"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "task6",
                        "name": "Approved"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task7",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an employee submits a vacation request. This request is then registered in the system. Following this, the supervisor receives the request and must decide whether to approve or reject it. If the supervisor rejects the request, the application is returned to the employee. If the supervisor approves the request, a notification is generated and sent to the Human Resources department. HR then completes the necessary management procedures to finalize the vacation request. The process concludes at this point.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Employee submits vacation request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Register the requirement",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Supervisor receives the request",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Supervisor approves or rejects the request",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Return application to employee",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Generate notification to HR",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "HR completes management procedures",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_2.txt": {
        "0": {
            "text": "The process begins when a job description is created. Once the job description is ready, it is submitted for consideration. The process then waits for approval. If the approval is received, the process continues to the next step. However, if a request for correction is received, the description must be corrected. After the correction, the description is resubmitted for consideration. Once the job description is approved, the job is posted. The process concludes with the posting of the job.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "3",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "8"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "create a job description",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "wait for approval",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "receive approval",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "receive request for correction",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "correct the description",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "post the job",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a vacancy is reported. Following this, a job description is created. The job description is then submitted for consideration. At this point, a decision is made. If the job description is approved, the job is posted. If clarification is needed, the Department is asked for further details. Once the Department provides clarification, the description is corrected and resubmitted for consideration. This cycle continues until the job description is approved and the job is posted, marking the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "9"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "vacancy reported",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "create job description",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "post the job",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "ask the Department for clarification",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "correct description and resubmit",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the creation of a job description. Once the job description is created, it is evaluated to determine if further clarification from the department is needed. If clarification is required, the department is asked for additional information. If no clarification is needed, the job description is submitted for consideration. After submission, the description is reviewed, and it is decided whether corrections are necessary. If corrections are needed, the description is corrected and resubmitted for consideration. If no corrections are needed, the job is posted. The process concludes once the job is posted.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "create a job description",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "ask Department for clarification",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "submit job description for consideration",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "correct the description",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "post the job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "7",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "7",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_13.txt": {
        "0": {
            "text": "The process begins when a request is initiated. The INQ department transmits the request. This request is then sent to the IP department, where it is checked. Following the check, an exclusive decision is made. If the request is approved, the IP department transmits the data. If the request is rejected, the IP department rejects the request. The process concludes once either the data is transmitted or the request is rejected.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "4",
                        "targetRef": "6"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "INQ",
                        "Lanes": [
                            {
                                "id": "l1",
                                "name": "INQ lane",
                                "elemRefs": [
                                    "1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "IP",
                        "Lanes": [
                            {
                                "id": "l2",
                                "name": "IP lane",
                                "elemRefs": [
                                    "2",
                                    "4",
                                    "5",
                                    "6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "INQ transmits request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "IP checks request",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "IP transmits data",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "IP rejects request",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when INQ transmits a transaction data request to IP. Upon receiving the request, IP checks the request from INQ. Depending on the outcome of this check, two possible paths can be taken. If the request is valid, IP transmits the requested data back to INQ. If the request is invalid, IP rejects the request. In either case, the process concludes after IP has either transmitted the data or rejected the request.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "INQ transmits transaction data request to IP",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "IP checks the request of INQ",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP transmits data to INQ",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "IP rejects the request",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "INQ",
                        "Lanes": []
                    },
                    {
                        "id": "pool2",
                        "name": "IP",
                        "Lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "6",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "6",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "3",
                        "targetRef": "1"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "4",
                        "targetRef": "1"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the initiation of a transaction data request. This request is transmitted by the INQ department. Following this, the IP department receives the request and checks it for validity and completeness. Based on the outcome of this check, a decision is made. If the request is valid and approved, the IP department proceeds to transmit the requested data. If the request is rejected, the IP department sends a rejection notice. Both the transmission of data and the rejection notice are communicated back to the INQ department. The process concludes once either the data has been transmitted or the rejection notice has been sent.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Transmit transaction data request",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Check request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Answer question: Transmit data",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Answer question: Rejection",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "INQ",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "INQ Lane",
                                "elemRefs": [
                                    "1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "IP",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "IP Lane",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "3",
                        "targetRef": "1"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "4",
                        "targetRef": "1"
                    }
                ]
            }
        }
    },
    "10_11.txt": {
        "0": {
            "text": "The process begins when the GO requests the measurements from the MSP. The MSP then checks the received request. At this point, there is a decision to be made. If the MSP denies the request of the GO, the MSP informs the GO about the failure of the reading. If the request is not denied, the process continues. Regardless of whether the MSP denies the request or informs the GO about the failure, the GO processes the measured values. After processing the values, the GO sends the changed values to the MSP. Finally, the GO transmits the readings to the SP, and the process concludes.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "3",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "GO requests the measurements from the MSP",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSP checks the received request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "GO processes the measured values",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MSP denies the request of the GO",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MSP informs the GO about the failure of the reading",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO sends the changed values to the MSP",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "GO transmits the readings to the SP",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the GO (Grid Operator) requests the measurements. The MSP (Measurement Service Provider) then checks the received request. At this point, the MSP can either deny the request or proceed with performing the measurement. If the MSP denies the request, the process ends. If the MSP performs the measurement, the process continues to an exclusive decision point where the MSP either informs the GO about the failure of the reading or transmits the measured values to the GO. If the MSP informs the GO about the failure, the process ends. If the MSP transmits the measured values to the GO, the GO processes the measured values and then sends the changed values back to the MSP. Finally, the GO transmits the readings to the SP (Service Provider), and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "GO requests the measurements",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSP checks the received request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSP denies the request",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MSP performs the measurement",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MSP informs the GO about the failure of the reading",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MSP transmits the measured values to the GO",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO processes the measured values",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO sends the changed values to the MSP",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "GO transmits the readings to the SP",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6.1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7.1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "5",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6.1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6.1",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6.1",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the GO (Government Organization) requests measurements from the MSP (Measurement Service Provider). The MSP then checks the received request to ensure it is valid and complete. Following this, the MSP either denies the request or proceeds to perform the measurement. If the MSP encounters a failure, they inform the GO about the failure. If the measurement is successfully performed, the MSP transmits the measured values back to the GO. The GO then processes these measured values. After processing, the GO sends any changed values back to the MSP. Finally, the GO transmits the readings to the SP (Service Provider), concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "GO requests measurements to MSP",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSP checks received request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSP denies or performs measurement",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MSP informs GO about failure",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MSP transmits measured values to GO",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO processes measured values",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO sends changed values to MSP",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "GO transmits readings to SP",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "10_6.txt": {
        "0": {
            "text": "The process begins when the MSPN sends a dismissal to the MSPO. The MSPO then reviews the dismissal. Based on the review, the MSPO can either reject or confirm the dismissal. If the MSPO rejects the dismissal, the process ends. Similarly, if the MSPO confirms the dismissal, the process also ends.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPN sends a dismissal to the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MSPO rejects the dismissal of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MSPO confirms the dismissal of the MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the MSPN sends a dismissal to the MSPO. The MSPO then reviews the dismissal. At this point, there is a decision to be made. If the MSPO rejects the dismissal, the process ends. If the MSPO confirms the dismissal, the process also ends.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "6"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPN sends a dismissal to the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSPO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSPO rejects the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MSPO confirms the dismissal",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when MSPN sends a dismissal to MSPO. MSPO then reviews the dismissal. At this point, there is a decision to be made. If MSPO rejects the dismissal, the process ends. If MSPO confirms the dismissal, the process also ends.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPN sends dismissal to MSPO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MSPO reviews dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MSPO rejects dismissal",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MSPO confirms dismissal",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "6_1.txt": {
        "0": {
            "text": "The process begins when invoices are received either in paper form or via fax. These invoices undergo a visual inspection to ensure they are complete and legible. Following this, the invoices are forwarded to an accounting employee who identifies the charging suppliers and creates a new instance for processing. The next step involves checking the invoice items for accuracy and noting the cost center and related managers on the docket. The docket and a copy of the invoice are then sent to the first cost center manager.\n\nThe cost center manager reviews the content for accuracy and marks the accurate position (AP) on the docket. The process then reaches an exclusive decision point. If the invoice is accurate, it proceeds to the cost center manager for a final review. If the invoice amount exceeds EUR 20, it is checked by the board following the 4-eyes principle. After the board's check, a commercial audit is conducted. If the audit is successful, approval for payment is issued, and the process concludes.\n\nHowever, if there is a complaint during the commercial audit, it is resolved with the supplier. Once resolved, payment instructions are given, and the instance is closed. The process ends after the final approval for payment is issued.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "20",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "15",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "14",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "17",
                        "targetRef": "11"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive invoices (paper or fax)",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Visual inspection",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Forward to Accounting Employee",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Identify charging suppliers and create new instance",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Check invoice items",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Note cost center and related managers on docket",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Send docket and copy of invoice to first cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Review content for accuracy",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Mark accurate position (AP) on docket",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Cost Center Manager reviews for accuracy",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "Commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Issue approval for payment",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Check by Board (if bill exceeds EUR 20 - 4-eyes principle)",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "Resolve commercial audit complaint with supplier",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "Give payment instructions and close instance",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when invoices are received. Following this, a short visual inspection is conducted. The invoices are then forwarded to an accounting employee. At this point, the process reaches a decision point. If the invoices are identified correctly and an invoice is created, the next step is to check the invoice items. If there are inconsistencies, the invoices are returned to accounting for further review. If the content is accurate, the process continues with noting the cost center. \n\nAfter noting the cost center, another decision point is reached. If the process continues smoothly, it moves to a commercial audit. Following the audit, approval for payment is issued, and the process concludes. If there are issues during the commercial audit, the process may loop back to the step of returning to accounting due to inconsistencies, ensuring all discrepancies are resolved before final approval.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "12",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "9",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "12",
                        "targetRef": "7"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "receive invoices",
                        "type": "Manual"
                    },
                    {
                        "id": "2",
                        "name": "short visual inspection",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "forward to accounting employee",
                        "type": "Manual"
                    },
                    {
                        "id": "5",
                        "name": "identify suppliers and create invoice",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "check invoice items",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "return to accounting due to inconsistencies",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "review content for accuracy",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "commercial audit",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "note cost center",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "issue approval for payment",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the Secretariat receives an invoice on paper or via fax. The invoice is then forwarded to an accounting employee. The accounting employee identifies the suppliers and creates an invoice instance. Next, the invoice items are checked. After this, the docket and invoice are sent to the cost center managers. The cost center manager reviews the invoice. If necessary, the invoice is forwarded to the next cost center manager or returned to accounting for further review. If there are any issues, clarification with the vendor is sought. Once all reviews are complete, the invoice is forwarded to the commercial manager. Finally, the process ends.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "12",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "14"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Receive invoice on paper or fax by Secretariat",
                        "type": "Manual"
                    },
                    {
                        "id": "2",
                        "name": "Forward invoice to accounting employee",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "Identify suppliers and create invoice instance",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Check invoice items",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Send docket and invoice to cost center managers",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Review invoice by cost center manager",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Forward to next cost center manager or return to accounting",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Clarification with vendor",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Forward invoice to commercial manager",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "8_3.txt": {
        "0": {
            "text": "The process begins with the detection of personnel requirements. Once a need for personnel is identified, a vacancy is reported to the Personnel Department. The job description is then reviewed to ensure it meets the necessary criteria. Following the review, a decision is made on whether to approve the job description. If the job description is approved, the process concludes. However, if corrections are needed, a request for corrections is made, and the job description is reviewed again. Alternatively, if further clarifications are required, the process branches out to provide clarifications to HR, after which the job description is reviewed once more. The process ends once the job description is approved.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "detect personnel requirements",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "review job description",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "approve job description",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "provide clarifications to HR",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the detection of personnel requirements. Once the need for new personnel is identified, the vacancy is reported to the Personnel Department. The job description is then reviewed. Following the review, a decision is made on whether to approve the job description. If the job description is approved, the process moves forward. If not, corrections are requested. If corrections are requested, the job description is reviewed again after the necessary changes are made. If further clarifications are needed, they are provided to HR, and the job description is reviewed once more. Once the job description is finally approved, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Detect personnel requirements",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Report the vacancy to the Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Review job description",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Approve job description",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Provide clarifications to HR",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "7",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a vacancy is reported to the Personnel Department. Following this, there is a waiting period for the job description to be provided. Once the job description is received, a decision point is reached. If a colleague asks for clarifications, these clarifications are provided, and the process returns to waiting for the job description. Alternatively, if no clarifications are needed, the job description is either approved or corrections are requested. If corrections are requested, the process returns to waiting for the job description. Once the job description is approved, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "report vacancy to Personnel Department",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "wait for job description",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "colleague asks for clarifications",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "provide clarifications",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "ask for corrections",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "approve job description",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_1.txt": {
        "0": {
            "text": "The process begins when MPON sends the dismissal. Following this, MPOO reviews the dismissal. At this point, there is a decision to be made. If MPOO confirms the dismissal, the process proceeds to the end. Alternatively, if MPOO opposes the dismissal, the process also proceeds to the end.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON sends the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO confirms the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO opposes the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when MPON sends the dismissal. This action triggers a review by MPOO. Upon reviewing the dismissal, MPOO has two possible actions: they can either oppose the dismissal of MPON or confirm the dismissal of MPON. If MPOO opposes the dismissal, the process ends with the opposing outcome. If MPOO confirms the dismissal, the process ends with the confirming outcome. Communication between MPON and MPOO occurs when MPON sends the dismissal, which is then reviewed by MPOO.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON sends the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MPOO opposes the dismissal of MPON",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO confirms the dismissal of MPON",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end opposing",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end confirming",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "Lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "Lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf0",
                        "sourceRef": "1",
                        "targetRef": "2"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when MPON sends the dismissal. Following this, MPOO reviews the dismissal. At this point, there is a decision to be made. If MPOO opposes the dismissal, the process continues with this opposition. If MPOO confirms the dismissal, the process proceeds with this confirmation. Regardless of whether MPOO opposes or confirms the dismissal, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON sends the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO reviews the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO opposes the dismissal",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO confirms the dismissal",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_5.txt": {
        "0": {
            "text": "The process begins when an expense report is received. Following this, an account is created for the report. The report is then reviewed for automatic approval. At this point, an exclusive decision is made: if the amount is under $200, it is approved directly; if the amount is $200 or more, it requires supervisor approval. \n\nIf the amount is under $200 and approved, the process moves to another exclusive decision point. If the amount is $200 or more and approved by the supervisor, the process also moves to this decision point. If the report is rejected at any point, a rejection email is sent.\n\nAt the decision point, if the report is approved, the reimbursement is processed to the direct deposit. This leads to a parallel gateway where two actions occur simultaneously: an approval in progress email is sent, and a cancellation email is sent if necessary. Finally, the process ends. If the report needs to be resubmitted, it is done so, leading to the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "type": "Parallel"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "15",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "15",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "14",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "receive expense report",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "create account",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "review report for automatic approval",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "approve amount under $200",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "supervisor approves amount equal to or over $200",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "send rejection email",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "reimbursement to direct deposit",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "send approval in progress email",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "send cancellation email",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "resubmit expense report",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when an expense report is received. If necessary, a new account is created. The report is then reviewed for automatic approval. At this point, an exclusive decision is made. If the amount is less than $200, the report is automatically approved, and the reimbursement is processed to the employee's bank account. If the amount is $200 or more, the supervisor must approve the report. If the supervisor rejects the report, a rejection notice email is sent to the employee. If the supervisor approves the report, another exclusive decision is made. If the approval is in progress, an email is sent to the employee, and the process continues to reimbursement. If the approval is canceled, a cancellation notice email is sent to the employee. Finally, the process ends after the reimbursement is completed or the cancellation notice is sent.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Expense Report is received",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Create new account if required",
                        "type": "Service"
                    },
                    {
                        "id": "3",
                        "name": "Review report for automatic approval",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "Automatically approve report",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "Supervisor approves report",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Send rejection notice email to employee",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Reimburse to employee's bank account",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Send approval in progress email to employee",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Send cancellation notice email to employee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "4",
                        "name": "Amount < $200",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "14",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "12",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "12",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "13",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "13",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "9",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "14",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "14",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an expense report is received. If necessary, a new account is created. The report is then reviewed for automatic approval. If the report passes the automatic review, it moves to the next step where a decision is made. If the supervisor approves the report, the reimbursement is deposited. If the supervisor rejects the report, a rejection notice is sent. After the reimbursement is deposited, if seven days elapse, an in-progress email is sent. If thirty days elapse, an email cancellation notice is sent, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Expense Report received",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Create new account if needed",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Review report for automatic approval",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "Supervisor approves",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Send rejection notice",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Deposit reimbursement",
                        "type": "Service"
                    },
                    {
                        "id": "11",
                        "name": "Send in-progress email",
                        "type": "Service"
                    },
                    {
                        "id": "13",
                        "name": "Send email cancellation notice",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "7 days elapsed",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "30 days elapsed",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "13",
                        "targetRef": "14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_2.txt": {
        "0": {
            "text": "The repair process begins when the customer initiates the process. The first step involves checking the defect in the computer. Following this, the repair cost is calculated. At this point, an exclusive decision is made. If the customer decides to take the computer home, the process ends there. Otherwise, the process continues with the CRS (Customer Repair Service) team checking and repairing the hardware. \n\nAfter the hardware repair, the system functionality is tested. If the system passes the test, the process moves on to checking and configuring the software. Once the software is configured, another system functionality test is conducted. If an error is detected during this test, an arbitrary repair activity is performed, and the system functionality is tested again. This loop continues until the system functionality test is successful. Finally, the process concludes.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Repair Process",
                        "Lanes": [
                            {
                                "id": "l1",
                                "name": "Customer",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "2",
                                    "5",
                                    "6"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "CRS",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "7",
                                    "8",
                                    "9",
                                    "10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "7",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "checking defect",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "calculating repair cost",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "check and repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "check and configure software",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "take computer home",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "test system functionality",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "error detected",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "perform arbitrary repair activity",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a customer brings in a defective computer. The Customer Repair Service (CRS) then checks the defect. If the repair cost is acceptable to the customer, the process continues; otherwise, the process ends. If the cost is accepted, parallel repair activities are initiated. These activities include checking and repairing the hardware and checking and configuring the software. After these parallel activities, the system functionality is tested. If an error is detected, the process loops back to the parallel repair activities for further checks and repairs. If no error is detected, a final test of the system functionality is conducted. Once the repair activities are completed successfully, the process ends.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "repair finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "name": "cost acceptable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "name": "error detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "name": "parallel repair activities",
                        "type": "Parallel"
                    },
                    {
                        "id": "10",
                        "name": "repair activities completed?",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "1",
                        "name": "Customer",
                        "Lanes": [
                            {
                                "id": "1.1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "2",
                        "name": "CRS",
                        "Lanes": [
                            {
                                "id": "2.1",
                                "name": "CRS Lane",
                                "elemRefs": [
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9",
                                    "10",
                                    "11",
                                    "12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "8",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "12"
                    }
                ],
                "tasks": [
                    {
                        "id": "2",
                        "name": "customer brings in defective computer",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "CRS checks defect",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "customer accepts repair cost",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "check and repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "check and configure software",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "test system functionality",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "parallel repair activities",
                        "type": "Manual"
                    },
                    {
                        "id": "10",
                        "name": "final test system functionality",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a customer initiates the request. The Customer Repair Service (CRS) first checks the defect in the computer. After identifying the defect, CRS hands out the repair cost calculation to the customer. The customer then decides if the cost is acceptable. If the cost is not acceptable, the customer takes the computer home unrepaired. If the cost is acceptable, the process continues with the repair.\n\nThe CRS then determines whether the repair involves hardware or software. If it involves hardware, the hardware is repaired. If it involves software, the software is repaired. After the respective repair, the functionality of the hardware or software is tested. Both hardware and software repairs are tested in parallel.\n\nOnce the testing is complete, the process moves to an exclusive decision point to check if additional repairs are needed. If additional repairs are required, the process loops back to the repair tasks. If no additional repairs are needed, the process concludes with the customer taking the repaired computer home. The process ends at this point.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Parallel"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "6",
                                    "10",
                                    "13"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "CRS",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "CRS Lane",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "9",
                                    "7",
                                    "8",
                                    "11",
                                    "12",
                                    "13",
                                    "14",
                                    "15",
                                    "16",
                                    "17"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "8",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "9",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "12",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "CRS checks defect",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "CRS hands out repair cost calculation",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Customer decides if cost is acceptable",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Customer takes computer home unrepaired",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Repair hardware",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Repair software",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Test hardware functionality",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Test software functionality",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Test repair functionality",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Additional repair",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "9_3.txt": {
        "0": {
            "text": "The process begins with drafting a schedule of meetings. Once the draft is prepared, the draft dates are added to all relevant calendars. Following this, the dates are checked for any potential issues. If any modifications are needed, suggestions are made. After suggesting modifications, the dates are rechecked for conflicts. Finally, the final schedule is sent via email, marking the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "8"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "draft schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "add draft dates to all calendars",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "check the dates",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "suggest modifications",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "recheck dates for conflicts",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "send final schedule via email",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Committee Members check diaries and advise conflicts",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the task of drafting a schedule of meetings is initiated. Once the schedule is drafted, the draft dates are added to all relevant calendars. Following this, the Support Officer checks the dates to ensure they are correct. If any modifications are needed, suggestions are made. The Coordination Unit then rechecks all the dates to confirm their accuracy. After this, potential conflicts are looked for to avoid any scheduling issues. Finally, the final schedule is sent to all Committee Members, marking the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "drafts a schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "adds draft dates to all calendars",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Support Officer checks the dates",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Coordination Unit rechecks all dates",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "look for potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "send final schedule to all Committee Members",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the Coordination Unit drafting a schedule of meetings. Once the draft schedule is prepared, the Coordination Unit adds the draft dates to all relevant calendars. Following this, the Support Officer checks the proposed dates and suggests any necessary modifications. The Coordination Unit then rechecks all the dates to ensure accuracy. After rechecking, the Coordination Unit looks for any potential conflicts in the schedule. Once the potential conflicts are addressed, the final schedule is sent to the Committee Members. The Committee Members then check their diaries and advise if there are any conflicts with the proposed schedule. The process concludes at this point.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Coordination Unit drafts schedule of meetings",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "adds draft dates to all calendars",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Support Officer checks dates and suggests modifications",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Coordination Unit rechecks all dates",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Coordination Unit looks for potential conflicts",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "send final schedule to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Committee Members check diaries and advise conflicts",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "10_14.txt": {
        "0": {
            "text": "The process begins when the MPOO sends a bill for the temporary continuation of metering point operations to the GO. The GO then examines the bill. Alternatively, the process can start with the MSPO sending a bill for the temporary continuation of the measurement to the GO, or the MSPO sending a bill for additional readings to the GO, both of which also lead to the GO examining the bill. Another possible starting point is the MPOO sending a bill for equipment acquisition to either the MPON or the GO, who then examines the bill. After the GO or MPON examines the bill, the process converges at a decision point where the GO or MPON confirms or rejects the invoice with payment advice to the MPOO or MSPO. The process concludes with this confirmation or rejection, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations to GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSPO sends bill for temporary continuation of the measurement to GO",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MSPO sends bill for additional readings to GO",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO sends bill for equipment acquisition to MPON or GO",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPON or GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO or MPON confirms or rejects the invoice with payment advice to MPOO or MSPO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "8",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "0",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "0",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "0",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "2",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, after which the Metering Point Operations Operator (MPOO) sends a bill for the temporary continuation of metering point operations to the Grid Operator (GO). Concurrently, the Metering Service Provider Operator (MSPO) sends a bill for the temporary continuation of measurement to the GO, and another bill for additional readings to the GO. Additionally, the MPOO sends a bill for equipment acquisition to either the Metering Point Operator Network (MPON) or the GO.\n\nThe GO then examines the bill. If the bill is related to equipment acquisition, the MPON examines it. Following the examination, the GO can either confirm the invoice with payment advice or reject the invoice. Similarly, the MPON can confirm the invoice with payment advice or reject the invoice.\n\nIf the GO confirms the invoice, the process ends. If the MPON confirms the invoice, the process also ends. In the case where the GO rejects the invoice, the process ends. Similarly, if the MPON rejects the invoice, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations to GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSPO sends bill for temporary continuation of measurement to GO",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MSPO sends bill for additional readings to GO",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO sends bill for equipment acquisition to MPON or GO",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPON examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO confirms the invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "MPON confirms the invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO rejects the invoice",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "MPON rejects the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "0",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "0",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "0",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "2",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "2",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "7",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "8",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The MPOO sends a bill for the temporary continuation of metering point operations. This bill is then examined by the GO. Following this, the MSPO sends a bill for the temporary continuation of measurement, and another bill for additional readings. Subsequently, the MPOO sends a bill for equipment acquisition. The MPON examines this bill. The GO then examines the bill again. At this point, there is a decision to be made: either the invoice is confirmed with payment advice, or the invoice is rejected. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPOO sends bill for temporary continuation of metering point operations",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MSPO sends bill for temporary continuation of measurement",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MSPO sends bill for additional readings",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO sends bill for equipment acquisition",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPON examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO examines the bill",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Confirm invoice with payment advice",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Reject invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "P1",
                        "name": "MPOO",
                        "Lanes": [
                            {
                                "id": "L1",
                                "name": "MPO",
                                "elementRefs": [
                                    "1",
                                    "5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "P2",
                        "name": "MSPO",
                        "Lanes": [
                            {
                                "id": "L2",
                                "name": "MSPO",
                                "elementRefs": [
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "P3",
                        "name": "GO",
                        "Lanes": [
                            {
                                "id": "L3",
                                "name": "GO",
                                "elementRefs": [
                                    "2",
                                    "7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "P4",
                        "name": "MPON",
                        "Lanes": [
                            {
                                "id": "L4",
                                "name": "MPON",
                                "elementRefs": [
                                    "6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_3.txt": {
        "0": {
            "text": "The process begins when a claim is registered. Following this, a claims officer examines the claim in detail. After the examination, the claims officer writes a settlement recommendation. This recommendation is then checked by a senior claims officer. At this point, a decision is made: if the recommendation is not satisfactory, the process loops back to the claims officer to repeat the recommendation. If the recommendation is satisfactory, the process proceeds to the end.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "claim is registered",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "claims officer examines the claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "claims officer writes a settlement recommendation",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "senior claims officer checks the recommendation",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "repeat recommendation",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the registration of a claim. Once the claim is registered, it is examined thoroughly. Following the examination, a settlement recommendation is written. This recommendation is then checked for accuracy and completeness. At this point, an exclusive decision is made. If the claim is deemed satisfactory, it is marked as OK. If the claim is not satisfactory, it is marked as Not OK, and the process loops back to the checking of the recommendation. Finally, the process concludes.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "9",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "register claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "examine claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "write settlement recommendation",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "check recommendation",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "mark claim as OK",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "mark claim as Not OK",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a claim is registered. After the claim is registered, it is examined thoroughly. Following the examination, a settlement recommendation is written. At this point, a decision is made. If the recommendation needs to be repeated, the process loops back to the examination of the claim. If the recommendation does not need to be repeated, the process proceeds to the end.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Register claim",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Examine claim",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Write settlement recommendation",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Repeat recommendation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_12.txt": {
        "0": {
            "text": "The process begins when the EC informs the INQ about a change in his master data. Following this, the INQ notifies the IP of the change. The IP then checks whether the master data can be changed at the desired time. At this point, a decision is made. If the IP confirms the changes, the process proceeds to the confirmation of the changes by the INQ. If the IP rejects the changes, the process moves to the rejection of the changes by the INQ. The process concludes after either the confirmation or rejection of the changes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "EC tells the INQ about the change of his master data",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "INQ notifies the IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP checks whether the master data can be changed at the desired time",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "IP confirms the changes of the INQ",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "IP rejects the changes of the INQ",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the EC informs the INQ about a change. Following this, the INQ notifies the IP about the change. The IP then checks the timing of the master data change. After checking the timing, the IP must make a decision. If the IP confirms the changes, the process proceeds to the end. If the IP rejects the changes, the process also proceeds to the end. Throughout the process, there are several communications: the EC tells the INQ about the change, the INQ notifies the IP, and the IP communicates back to the INQ whether the changes are confirmed or rejected.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "6",
                        "targetRef": "2"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "EC tells the INQ about the change",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "INQ notifies the IP",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP checks master data change timing",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "IP confirms the changes",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Decision Point",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "IP rejects the changes",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with EC informing INQ about a change in master data. INQ then notifies IP of the change. IP checks whether the master data can be changed. If the data can be changed, IP confirms the changes. If the data cannot be changed, IP rejects the changes.",
            "model": {
                "events": [],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf0",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "6",
                        "targetRef": "2"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "EC",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "EC Lane",
                                "elemRefs": [
                                    "1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "INQ",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "INQ Lane",
                                "elemRefs": [
                                    "2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p3",
                        "name": "IP",
                        "lanes": [
                            {
                                "id": "l3",
                                "name": "IP Lane",
                                "elemRefs": [
                                    "3",
                                    "4",
                                    "6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "EC tells INQ about change of master data",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "INQ notifies IP of the change",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "IP checks whether master data can be changed",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "IP confirms changes",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "IP rejects changes",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "10_7.txt": {
        "0": {
            "text": "The process begins when the MSPN registers the measurement at the GO. Following this, the GO examines the application of the MSPN. At this point, a decision is made: if the application is rejected, the GO rejects the application of the MSPN, and the process ends. If the application is confirmed, the GO confirms the application of the MSPN. Subsequently, the GO assigns the MSPN. After the assignment, the GO informs the MSPO about the assignment of MSPN, the MPO about the assignment of MSPN, and the SP about the assignment of MSPN. Each of these notifications leads to the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPN registers the measurement at the GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO examines the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "GO rejects the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "GO confirms the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "GO informs the MSPO about the assignment of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO informs the MPO about the assignment of MSPN",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO informs the SP about the assignment of MSPN",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "5",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "5",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "3",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the registration of the measurement. Following this, the application is examined. Based on the examination, a decision is made at an exclusive gateway. If the decision is to assign the MSPN, the assignment is made. Subsequently, the MSPO is informed about the assignment, the MPO is informed about the assignment, and the SP is informed about the assignment. The process concludes after informing the SP.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "registers the measurement",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "examines the application",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "informs MSPO about the assignment",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "informs MPO about the assignment",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "informs SP about the assignment",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the measurement is registered at the GO. Following this, the application of the MSPN is examined. The GO then either rejects or confirms the application. If the application is confirmed, the GO assigns the MSPN. After the assignment, the GO informs the MSPO about the assignment. Additionally, the GO also informs the MPO and the SP about the assignment. The process concludes at this point.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "registers the measurement at the GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "examines the application of the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "GO rejects or confirms the application",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "GO assigns the MSPN",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "GO informs the MSPO about the assignment",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO informs the MPO about the assignment",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO informs the SP about the assignment",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "10_5.txt": {
        "0": {
            "text": "The process begins when a request is made to take over a device. This request is initiated within the MPON Lane. Following this, a tender for the equipment takeover is sent from the MPOO Lane. Once the tender is sent, an order is placed back in the MPON Lane. The order is then confirmed, and the master data is sent from the MPOO Lane. Finally, the master data is received in the MPON Lane, completing the process. The process concludes with the end event.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "MPON",
                        "Lanes": [
                            {
                                "id": "l1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "1",
                                    "3",
                                    "5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "MPOO",
                        "Lanes": [
                            {
                                "id": "l2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "2",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "request device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "send tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "place order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "confirm order and send master data",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "receive master data",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when MPON initiates a request for a device takeover bid. Following this, MPON communicates with MPOO, requesting them to send a tender for the equipment takeover. Upon receiving the tender, MPON places an order with MPOO. MPOO then confirms the order and sends the necessary master data back to MPON. The process concludes with the confirmation and data transfer.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "5",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "MPON",
                        "Lanes": [
                            {
                                "id": "lane1",
                                "name": "MPON Role",
                                "elemRefs": [
                                    "1",
                                    "3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "MPOO",
                        "Lanes": [
                            {
                                "id": "lane2",
                                "name": "MPOO Role",
                                "elemRefs": [
                                    "2",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON requests device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO sends tender for equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MPON places an order at MPOO",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO confirms the order and sends master data",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when MPON requests a device takeover bid. This request is then communicated to MPOO, which sends a tender for the equipment takeover. Upon receiving the tender, MPON places an order. This order is then confirmed by MPOO. Following the confirmation, MPOO sends the master data back to MPON. Finally, the process concludes.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "MPON",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "MPON Lane",
                                "elemRefs": [
                                    "1",
                                    "3",
                                    "5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "MPOO",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "MPOO Lane",
                                "elemRefs": [
                                    "2",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "5",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MPON requests a device takeover bid",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPOO sends a tender for the equipment takeover",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MPON places an order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPOO confirms the order",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPOO sends the master data",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "3_2.txt": {
        "0": {
            "text": "The process begins with the task of checking files. After this initial check, a decision point is reached. If files are found to be missing, a search for the missing files is initiated. If the files are not missing, or once the missing files are found, the next step is to physically track the files to their intended location. Once the files are tracked, they are handed over to an Associate. Following this, the Judge's Lawlist is distributed. Finally, directions hearings are conducted, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "check files",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "initiate search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "physically track files to intended location",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the task of checking the files to be processed. After this initial check, a decision point is reached where it is determined whether any files are missing. If files are found to be missing, a search for these missing files is initiated. If no files are missing, the process proceeds to track the files to their intended location. Once the files are tracked, they are handed over to the Associate. Following this, the Judge's Lawlist is distributed. Finally, directions hearings are conducted, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "check files to be processed",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "initiate search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "track files to intended location",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "hand files to the Associate",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the task of checking files. After the files are checked, there is a decision point. If any files are found to be missing, a search for the missing files is conducted. If the files are not missing, they are tracked to their intended location. This decision point is revisited until all files are accounted for. Once all files are either found or tracked, the files are handed over to an associate. Following this, the Judge's Lawlist is distributed. Finally, directions hearings are conducted, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "check files",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "search for missing files",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "track files to intended location",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "hand files to Associate",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "distribute Judge's Lawlist",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "conduct directions hearings",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "4",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "4",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_8.txt": {
        "0": {
            "text": "The process begins when the MSPO deregisters at the GO. The GO then verifies the deregistration. Following this, the GO either rejects or confirms the deregistration. If the deregistration is confirmed, the GO assigns himself as the MSP. If the deregistration is rejected, the GO informs the MSPO about the assignment. After assigning himself as the MSP, the GO informs the MPO about the assignment, followed by informing the SP about the assignment. Finally, the GO completes the assignment notification, marking the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "GO rejects or confirms deregistration",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "GO informs MSPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO informs MPO about assignment",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO informs SP about assignment",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO completes assignment notification",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the deregistration at the GO. Following this, the deregistration is verified. At this point, a decision is made. If the deregistration is rejected, the process ends. If the deregistration is preliminarily confirmed, the next step is to assign the individual as MSP. Subsequently, the MSPO is informed about the end of the previous assignment and the beginning of the new assignment of the GO. Following this, the MPO is informed about the assignment of the GO. Finally, the SP is informed about the assignment of the GO, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "deregister at the GO",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "verify the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "reject the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "preliminarily confirm the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "assign himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "inform the MSPO about end of assignment and beginning of assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "inform the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "inform the SP about the assignment of the GO",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "10",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "10",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "10",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the MSPO deregisters at the GO. The GO then verifies the deregistration. If the deregistration is rejected, the process ends there. However, if the deregistration is preliminarily confirmed, the GO assigns himself as the MSP. Following this, the GO informs the MSPO about the end of the MSPO's assignment and the beginning of the GO's assignment. Subsequently, the GO informs the MPO about the assignment of the GO. Finally, the GO informs the SP about the assignment of the GO, marking the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "MSPO deregisters at the GO",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "GO verifies the deregistration",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "GO rejects the deregistration of the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "GO preliminarily confirms the deregistration of the MSPO",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "GO assigns himself as MSP",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "GO informs the MSPO about the end of the assignment and the beginning of the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "GO informs the MPO about the assignment of the GO",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "GO informs the SP about the assignment of the GO",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "2_1.txt": {
        "0": {
            "text": "The process begins when a customer perceives a service degradation. The customer sends the problem parameters to Customer Service, which then enters the problem report into system T. The problem report is compared to the Service Level Agreement (SLA), and necessary countermeasures and priorities are determined. The system then determines the customer's significance, leading to a decision point. If necessary, the process links to an extra problem fix process, or it reprioritizes the countermeasures and loops back to determine the necessary countermeasures and priorities again.\n\nOnce the detailed problem report is created, it is sent to Service Management, where the problem's analyzability is investigated. Depending on the investigation, the detailed problem report is either sent to Resource Provisioning or analyzed further to create a trouble report. Resource Provisioning checks for possible problems and either creates a normal service execution notification or analyzes the problem further to create a trouble report. The results are included in a status report and sent back to Service Management.\n\nService Management prepares a final status report and determines countermeasures. These countermeasures are either sent as actual service performance to Customer Service or minor corrective actions are undertaken. If minor corrective actions are taken, a problem resolution report is created and sent to Customer Service. Alternatively, a request for automatic resource restoration is created and sent to Resource Provisioning, which waits for the restoration request. Upon receiving the request, Resource Provisioning tracks errors and undertakes necessary corrective actions, creating a troubleshooting report that is sent back to Service Management.\n\nService Management then creates a final problem resolution report and sends it to the customer along with an SLA violation rebate to Billing & Collections. Finally, Billing & Collections adjusts the billing based on the SLA violation rebate, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer perceives service degradation",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "send problem parameters to Customer Service",
                        "type": "Service"
                    },
                    {
                        "id": "3",
                        "name": "enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "compare problem report to SLA",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "determine necessary countermeasures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "link to extra problem fix process",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "reprioritize countermeasures",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "send detailed problem report to Service Management",
                        "type": "Service"
                    },
                    {
                        "id": "11",
                        "name": "investigate problem analyzability at Service Management",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "send detailed problem report to Resource Provisioning",
                        "type": "Service"
                    },
                    {
                        "id": "13",
                        "name": "analyze problem and create trouble report",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "check for possible problems at Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "create normal service execution notification",
                        "type": "Service"
                    },
                    {
                        "id": "16",
                        "name": "analyze problem and create trouble report at Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "include in status report and send to Service Management",
                        "type": "Service"
                    },
                    {
                        "id": "18",
                        "name": "prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "determine countermeasures",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "send actual service performance to Customer Service",
                        "type": "Service"
                    },
                    {
                        "id": "21",
                        "name": "undertake minor corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "send problem resolution report to Customer Service",
                        "type": "Service"
                    },
                    {
                        "id": "24",
                        "name": "create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "send request to Resource Provisioning",
                        "type": "Service"
                    },
                    {
                        "id": "26",
                        "name": "wait for restoration request at Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "27",
                        "name": "track errors after receiving restoration request",
                        "type": "User"
                    },
                    {
                        "id": "28",
                        "name": "undertake necessary corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "29",
                        "name": "create troubleshooting report",
                        "type": "User"
                    },
                    {
                        "id": "30",
                        "name": "send troubleshooting report to Service Management",
                        "type": "Service"
                    },
                    {
                        "id": "31",
                        "name": "create final problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "32",
                        "name": "send report to customer and SLA violation rebate to Billing & Collections",
                        "type": "Service"
                    },
                    {
                        "id": "33",
                        "name": "adjust billing based on SLA violation rebate",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "34",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11gw2",
                        "type": "Inclusive"
                    },
                    {
                        "id": "18gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "20gw4",
                        "type": "Inclusive"
                    },
                    {
                        "id": "26gw5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "30gw6",
                        "type": "Inclusive"
                    },
                    {
                        "id": "32gw7",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer",
                        "Lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "34"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "TELECO",
                        "Lanes": [
                            {
                                "id": "lane2",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "10",
                                    "20",
                                    "23",
                                    "32"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Service Management",
                                "elemRefs": [
                                    "11",
                                    "18",
                                    "19",
                                    "21",
                                    "22",
                                    "24",
                                    "25",
                                    "28",
                                    "30",
                                    "31"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Resource Provisioning",
                                "elemRefs": [
                                    "12",
                                    "13",
                                    "14",
                                    "15",
                                    "16",
                                    "26",
                                    "27",
                                    "29",
                                    "33"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "6gw1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6gw1",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6gw1",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "11gw2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11gw2",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "11gw2",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "14",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "15",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "18",
                        "targetRef": "18gw3"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "18gw3",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "19",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "21",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "22",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "19",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "24",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "25",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "26",
                        "targetRef": "26gw5"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "26gw5",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "27",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "28",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "29",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "30",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "30gw6",
                        "targetRef": "32"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "32",
                        "targetRef": "33"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "32gw7",
                        "targetRef": "34"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer perceives a service degradation. The customer then sends the problem parameters to Customer Service. Customer Service enters the problem report into system T and compares the problem report to the customer's SLA. An employee determines the countermeasures and priorities, and the electronic service determines the customer's significance. Based on the significance, the process either links to an extra problem fix process or creates a detailed problem report. The detailed problem report is then sent to Service Management.\n\nService Management investigates the problem and decides whether to send the problem report to Resource Provisioning or analyze the problem further. If sent to Resource Provisioning, the problem is checked for issues, and based on the findings, either a normal service notification is created or the problem is analyzed further. The status report is then sent back to Service Management, where a final status report is prepared.\n\nBased on the final status report, countermeasures are determined. These countermeasures can lead to sending the actual service performance to Customer Service, undertaking corrective actions in Service Management, or creating a request for automatic resource restoration. If corrective actions are undertaken, a problem resolution report is created and sent to Customer Service. If a restoration request is created, it is sent to Resource Provisioning, where errors are tracked, corrective actions are undertaken, and a troubleshooting report is created. This report is then sent back to Service Management, where a problem resolution report is created based on the troubleshooting report.\n\nFinally, a report for the customer is created, and if there is an SLA violation, a rebate is reported to Billing & Collections. The customer report is then sent to the customer, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer perceives service degradation",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "send problem parameters to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "compare problem report to customer SLA",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "determine counter measures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "determine customer significance",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "link to extra problem fix process",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "re-prioritize counter measures",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "send detailed problem report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "investigate problem in Service Management",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "send problem report to Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "analyze problem",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "create trouble report in Service Management",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "check for problems in Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "create normal service notification",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "analyze and create trouble report in Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "send status report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "prepare final status report in Service Management",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "determine counter measures based on final status report",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "send actual service performance to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "undertake corrective actions in Service Management",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "24",
                        "name": "send problem resolution report to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "26",
                        "name": "send restoration request to Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "27",
                        "name": "track errors in Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "28",
                        "name": "undertake corrective actions in Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "29",
                        "name": "create trouble-shooting report in Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "30",
                        "name": "send trouble-shooting report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "31",
                        "name": "create problem resolution report based on trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "32",
                        "name": "create report for customer",
                        "type": "User"
                    },
                    {
                        "id": "33",
                        "name": "report SLA violation rebate to Billing & Collections",
                        "type": "User"
                    },
                    {
                        "id": "34",
                        "name": "send customer report",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "35",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6_gw",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11_gw",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15_gw",
                        "type": "Exclusive"
                    },
                    {
                        "id": "20_gw",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "customer_pool",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "customer_lane",
                                "name": "Customer",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "34",
                                    "35"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "teleco_pool",
                        "name": "TELECO",
                        "lanes": [
                            {
                                "id": "customer_service_lane",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "3",
                                    "24",
                                    "32",
                                    "33"
                                ]
                            },
                            {
                                "id": "service_management_lane",
                                "name": "Service Management",
                                "elemRefs": [
                                    "10",
                                    "11",
                                    "12",
                                    "14",
                                    "18",
                                    "19",
                                    "20",
                                    "21",
                                    "22",
                                    "23",
                                    "25",
                                    "26",
                                    "30",
                                    "31"
                                ]
                            },
                            {
                                "id": "resource_provisioning_lane",
                                "name": "Resource Provisioning",
                                "elemRefs": [
                                    "15",
                                    "16",
                                    "17",
                                    "27",
                                    "28",
                                    "29"
                                ]
                            },
                            {
                                "id": "electronic_service_lane",
                                "name": "Electronic Service",
                                "elemRefs": [
                                    "6"
                                ]
                            },
                            {
                                "id": "employee_lane",
                                "name": "Employee",
                                "elemRefs": [
                                    "4",
                                    "5",
                                    "7",
                                    "8",
                                    "9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "6_gw"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6_gw",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6_gw",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "11_gw"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11_gw",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11_gw",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "15",
                        "targetRef": "15_gw"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "15_gw",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "15_gw",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "16",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "20",
                        "targetRef": "20_gw"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "20_gw",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "20_gw",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "20_gw",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "22",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "23",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "25",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "26",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "27",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "28",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "29",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "30",
                        "targetRef": "31"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "21",
                        "targetRef": "32"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "24",
                        "targetRef": "32"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "32",
                        "targetRef": "34"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "32",
                        "targetRef": "33"
                    },
                    {
                        "id": "sf39",
                        "sourceRef": "34",
                        "targetRef": "35"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer perceives a service degradation. The customer then sends the problem parameters to the Customer Service department. The problem report is entered into system T, and the report is compared to the customer's SLA. Countermeasures and priorities are determined, and the significance of the customer is assessed. If the customer is a premium customer, a detailed problem report is created and sent to Service Management. Service Management investigates the analyzability of the problem. If the problem is analyzable by Service Management, the detailed problem report is sent to Resource Provisioning, and Service Management analyzes the problem and creates a trouble report. Resource Provisioning checks for possible problems and either creates a notification about normal service execution or analyzes and creates a trouble report. The status report is created and sent to Service Management, which prepares the final status report and determines countermeasures based on it. If no problem is detected, the actual service performance is sent to Customer Service, and a report for the customer is created, including any SLA violation rebate. The report is then sent to the customer, and billing is adjusted if necessary. If minor corrective actions are needed, a problem resolution report is created and sent to Customer Service. If a request for automatic resource restoration is created, it is sent to Resource Provisioning. Resource Provisioning tracks errors and undertakes necessary corrective actions, creating a troubleshooting report that is sent to Service Management. Service Management then creates a problem resolution report. Finally, the process ends for both the Customer Service and the customer.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer perceives service degradation",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "send problem parameters to Customer Service department",
                        "type": "Service"
                    },
                    {
                        "id": "3",
                        "name": "enter problem report into system T",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "compare problem report to customer SLA",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "determine counter measures and priorities",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "determine significance of the customer",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "create detailed problem report",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "send detailed problem report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Service Management investigates analyzability of the problem",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "send detailed problem report to Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Service Management analyzes problem and creates trouble report",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "check for possible problems at Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "create notification about normal service execution",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "analyze and create trouble report at Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "create status report and send to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "prepare final status report",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "determine counter measures based on final status report",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "send actual service performance to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "undertake minor corrective actions and create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "24",
                        "name": "send problem resolution report to Customer Service",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "create request for automatic resource restoration",
                        "type": "User"
                    },
                    {
                        "id": "26",
                        "name": "send automatic resource restoration request to Resource Provisioning",
                        "type": "User"
                    },
                    {
                        "id": "28",
                        "name": "track errors and undertake necessary corrective actions",
                        "type": "User"
                    },
                    {
                        "id": "29",
                        "name": "create trouble-shooting report",
                        "type": "User"
                    },
                    {
                        "id": "30",
                        "name": "send trouble-shooting report to Service Management",
                        "type": "User"
                    },
                    {
                        "id": "31",
                        "name": "create problem resolution report",
                        "type": "User"
                    },
                    {
                        "id": "33",
                        "name": "create report for customer and report SLA violation rebate",
                        "type": "Parallel"
                    },
                    {
                        "id": "34",
                        "name": "send report to customer",
                        "type": "User"
                    },
                    {
                        "id": "35",
                        "name": "adjust billing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "7",
                        "name": "premium customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "name": "analyzable by Service Management?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "20",
                        "name": "no problem detected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "27",
                        "name": "restoration request received?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "32",
                        "name": "Customer Service process ends",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "36",
                        "name": "Customer process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "0",
                        "name": "Premium customer?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "1",
                        "name": "May affect counter measures?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6",
                        "name": "Analyzable?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "name": "Normal service execution?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "14",
                        "name": "Successful restoration?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "14",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "15",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "20",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "20",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "22",
                        "targetRef": "33"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "23",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "24",
                        "targetRef": "33"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "19",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "25",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "14",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "27",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "28",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "29",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf32",
                        "sourceRef": "30",
                        "targetRef": "31"
                    },
                    {
                        "id": "sf33",
                        "sourceRef": "31",
                        "targetRef": "33"
                    },
                    {
                        "id": "sf34",
                        "sourceRef": "33",
                        "targetRef": "34"
                    },
                    {
                        "id": "sf35",
                        "sourceRef": "33",
                        "targetRef": "35"
                    },
                    {
                        "id": "sf36",
                        "sourceRef": "34",
                        "targetRef": "32"
                    },
                    {
                        "id": "sf37",
                        "sourceRef": "35",
                        "targetRef": "32"
                    },
                    {
                        "id": "sf38",
                        "sourceRef": "33",
                        "targetRef": "36"
                    }
                ],
                "messageFlows": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Customer",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "36"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Customer Service",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "34",
                                    "35"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Employee",
                                "elemRefs": [
                                    "2",
                                    "3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p3",
                        "name": "Service Management",
                        "lanes": [
                            {
                                "id": "l4",
                                "name": "Service Management",
                                "elemRefs": [
                                    "9",
                                    "10",
                                    "12",
                                    "13",
                                    "15",
                                    "17",
                                    "18",
                                    "19",
                                    "23",
                                    "24",
                                    "26",
                                    "27",
                                    "30",
                                    "31",
                                    "33",
                                    "32"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p4",
                        "name": "Resource Provisioning",
                        "lanes": [
                            {
                                "id": "l5",
                                "name": "Resource Provisioning",
                                "elemRefs": [
                                    "12",
                                    "14",
                                    "16",
                                    "25",
                                    "28",
                                    "29"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p5",
                        "name": "Billing & Collections",
                        "lanes": [
                            {
                                "id": "l6",
                                "name": "Billing & Collections",
                                "elemRefs": [
                                    "35"
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    },
    "9_4.txt": {
        "0": {
            "text": "The process begins when the Support Officer updates the group calendars. Following this, the Support Officer creates meeting folders. Next, the Support Officer uploads the necessary documents to the system. Once the documents are uploaded, the Committee Members are advised to read the documents in preparation for the meeting. The Committee Members then hold the meeting. After the meeting, the Support Officer produces the minutes of the meeting. These minutes are then subjected to a quality assurance check by the Coordination Unit. Once the QA check is completed, the Support Officer sends the minutes to the Committee Members. Finally, the Support Officer updates the departmental records, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Support Officer updates group calendars",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Support Officer creates meeting folders",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Support Officer uploads documents to system",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Committee Members advised to read documents",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Support Office produces minutes",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Coordination Unit conducts QA check on minutes",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Support Officer sends minutes to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Support Officer updates departmental records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the Coordination Unit finalizing the dates for the upcoming meeting. Once the dates are set, the group calendars are updated, and meeting folders are created with the necessary documents uploaded. Committee Members are then advised to read the documents a week before the meeting. The meeting is subsequently held by the Committee Members. After the meeting, minutes are produced, including any Action Points discussed. A quality assurance check is conducted on the minutes to ensure accuracy. The minutes are then sent to the Committee Members. Finally, the departmental records are updated to reflect the outcomes of the meeting, concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "finalize dates (by Coordination Unit)",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "update group calendars & create meeting folders and upload documents",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "advise Committee Members to read documents a week before the meeting",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "hold meeting by Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "produce minutes including Action Points",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "conduct QA check on the minutes",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "send minutes to Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "update departmental records",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the Support Officer updating the group calendars. Following this, the Support Officer creates meeting folders. Once the folders are created, the Support Officer uploads the necessary documents to the system. After the documents are uploaded, the Support Officer advises the Committee Members to read the documents in preparation for the meeting. The Committee Members then hold the meeting. After the meeting, the Support Officer produces the minutes, including any Action Points discussed. The Coordination Unit then conducts a quality assurance check on the minutes. Once the QA check is complete, the minutes are sent to all Committee Members. Finally, the Support Officer updates the departmental records, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Support Officer updates group calendars",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Support Officer creates meeting folders",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Support Officer uploads documents to system",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Support Officer advises Committee Members to read documents",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Committee Members hold meeting",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Support Office produces minutes with Action Points",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Coordination Unit conducts QA check on minutes",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Send minutes to all Committee Members",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Support Officer updates departmental records",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_10.txt": {
        "0": {
            "text": "The process begins when a fault detector reports a failure. Simultaneously, the MPO (Maintenance and Production Operator) may have a suspicion of their own fault. The MPO then examines the failure. Following the examination, a decision is made. If the MPO rejects the failure of the fault detector, the process ends. If the MPO confirms the failure of the fault detector, they proceed to inform the GO (Grid Operator) and the MSP (Metering Service Provider). Subsequently, the MPO fixes the fault at the measuring device. After the repairs, the MPO shares the results with the fault detector. The MPO then informs the GO and the MSP about the resolution. The process concludes after these notifications.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "fault detector reports a failure",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPO has a suspicion of their own fault",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPO rejects the failure of the fault detector",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MPO confirms the failure of the fault detector",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "informes the GO",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "informes the MSP",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "MPO fixes the fault at the measuring device",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "MPO shares the results of the repairs with the fault detector",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "MPO informs GO about resolution",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "MPO informs MSP about resolution",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "14",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "6",
                        "targetRef": "14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a fault detector reports a failure or the MPO (Measurement Process Operator) has a suspicion of a fault. The MPO then examines the failure to determine its validity. If the MPO rejects the failure, the process ends. However, if the MPO confirms the failure, the MPO informs both the GO (Grid Operator) and the MSP (Metering Service Provider) about the issue. Following this, the MPO proceeds to fix the fault at the measuring device. Once the fault is fixed, the MPO shares the results with the fault detector. Finally, the MPO informs the GO and MSP about the resolution of the fault, concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "fault detector reports a failure or MPO has a suspicion of fault",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "MPO rejects the failure",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPO confirms the failure",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPO informs GO and MSP",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MPO fixes the fault at measuring device",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "MPO shares results with fault detector",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "MPO informs GO and MSP about resolution",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a fault detector reports a failure. Simultaneously, the MPO (Maintenance and Operations) may have a suspicion of their own fault. The MPO then examines the failure to determine the cause. If the MPO confirms the failure, they proceed to inform both the GO (Grid Operator) and the MSP (Metering Service Provider) about the issue. Following this, the MPO fixes the fault at the measuring device. After the repairs are completed, the MPO shares the results of the repairs with the fault detector. Subsequently, the MPO informs the GO about the resolution of the interference and also informs the MSP about the resolution of the interference. The process concludes after these notifications are sent.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "fault detector reports a failure",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "MPO has a suspicion of their own fault",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "MPO examines the failure",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "MPO rejects the failure",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "MPO confirms the failure",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "MPO informs the GO and MSP",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "MPO fixes the fault at the measuring device",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "MPO shares the results of the repairs with fault detector",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "MPO informs GO about resolution of interference",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "MPO informs MSP about resolution of interference",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_7.txt": {
        "0": {
            "text": "The process begins when the task of searching for the police report and placing it in a file with the claim documentation is initiated. Following this, the claims handler calculates the initial claim estimate. Once the estimate is calculated, the claims handler proceeds to create an action plan. After the action plan is created, the claims manager negotiates the settlement. Finally, the claimant is informed of the outcome, concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "search Police Report and put in a file with Claim Documentation",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "claims handler calculates initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "claims handler creates Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "claims manager negotiates settlement",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "inform claimant of outcome",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the task of searching for the Police Report is initiated. Once the report is found, it is then placed in a file along with the Claim Documentation. Following this, an initial claim estimate is calculated. After the estimate is determined, an Action Plan is created. The next step involves attempting to negotiate a settlement. Finally, the claimant is informed of the outcome of the negotiation. The process concludes at this point.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "search Police Report",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "put report in a file with Claim Documentation",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "try to negotiate settlement",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "inform claimant of the outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a police report is searched in the database. Following this, the police report is filed along with the claim documentation. Next, an initial claim estimate is calculated. Based on this estimate, an action plan is created. The next step involves negotiating a settlement. Once the settlement is negotiated, the claimant is informed of the outcome. The process concludes at this point.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Search Police Report in database",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "File Police Report with Claim Documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "Calculate initial claim estimate",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Create Action Plan",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Negotiate settlement",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Inform claimant of outcome",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "7_1.txt": {
        "0": {
            "text": "The process begins when the manager checks the open leads. After reviewing the leads, the manager selects the top five leads to focus on. The manager then instructs the Sales Assistant to call the contacts associated with these top leads. The Sales Assistant proceeds to call each customer. After making the calls, the Sales Assistant sends a note to the manager. The manager then processes the lead based on the information received from the Sales Assistant. The process concludes at this point.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Manager checks the open leads",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Manager selects the top five leads",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Manager tells Sales Assistant to call contacts",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Sales Assistant calls each customer",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Sales Assistant sends a note to the Manager",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Manager processes the lead",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "8",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "8",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "8",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the manager checks the open leads. After reviewing the leads, the manager selects the top five leads to focus on. The manager then instructs the Sales Assistant to call these selected leads. The Sales Assistant proceeds to call each customer on the list. After calling a customer, the Sales Assistant reaches an exclusive decision point. If the call is completed, the Sales Assistant sends a note to the manager. The manager then processes the lead based on the information provided. If there are more customers to call, the Sales Assistant continues to call the next customer. This cycle repeats until all selected leads have been called and processed. The process concludes when the manager has processed the final lead.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Manager checks the open leads",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Manager selects the top five leads",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Manager tells Sales Assistant to call the leads",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Sales Assistant calls each customer",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Sales Assistant sends a note to Manager",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Manager processes the lead",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Sales Assistant calls next customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the manager checks the open leads. After reviewing the leads, the manager selects the top five leads. The manager then instructs the Sales Assistant to call the contact person of each of these leads. The Sales Assistant proceeds to call each customer. After making a call, the Sales Assistant sends a note to the manager. The manager then processes the lead based on the information received. If there are more customers to call, the Sales Assistant calls the next customer and repeats the process. The process concludes once all the leads have been processed by the manager.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Manager checks the open leads",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Manager selects the top five leads",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Manager tells Sales Assistant to call the contact person of the leads",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Sales Assistant calls each customer",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Sales Assistant sends a note to the Manager",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Manager processes the lead",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Sales Assistant calls the next customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "4"
                    }
                ],
                "messageFlows": [],
                "pools": []
            }
        }
    },
    "6_4.txt": {
        "0": {
            "text": "The process begins with determining the contact details of potential customers. Once the contact details are identified, the process moves to an exclusive decision point. If the decision is to proceed, the customer is called. During the call, the contact person and budget are determined. Following this, another decision is made to assess if the customer is interested. If the customer is not interested, the process ends. If the customer shows interest, the head of development tries to acquire the customer. Alternatively, a detailed online presentation may be conducted. After the presentation, another decision is made. If the process continues, a sales representative calls the customer. Finally, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "determine contact details of potential customers",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "start calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "determine contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Determine if customer is interested",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "head of development tries to acquire customer",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "create quotation",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "sales representative calls customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "12",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "8",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "11",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with determining the contact details. Once this is done, several activities are initiated in parallel: buying details for cold calls, participating in exhibitions, knowing somebody interested, and starting to call the customer. After starting to call the customer, the process continues in parallel with determining the contact person and budget, and asking for interest. If there is interest, the process branches into two possible paths: trying to acquire the customer by the head of development or giving a detailed online presentation. After the online presentation, the process waits for the customer to come back. Once the customer comes back, the sales representative contacts the customer, and a quotation is created. The process concludes with the creation of the quotation.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "determine contact details",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "buy details for cold calls",
                        "type": "Manual"
                    },
                    {
                        "id": "3",
                        "name": "participate in exhibitions",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "know somebody interested",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "start calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "determine contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "ask for interest",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "try to acquire customer by head of development",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "give detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "wait for customer to come back",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "sales representative contacts customer",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "create quotation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "18",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6",
                        "type": "Parallel"
                    },
                    {
                        "id": "7",
                        "type": "Parallel"
                    },
                    {
                        "id": "10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "14",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "6",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "6",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "6",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "6",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "15",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "17",
                        "targetRef": "18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with determining the contact details of potential customers. This leads to a decision point where the process can branch into three different activities: buying details for cold calls, participating in exhibitions, or knowing somebody interested in the product. Regardless of the chosen path, the next step is to start calling the customer. \n\nOnce the call is initiated, the contact person and budget are determined. Following this, the customer is asked about their interest in the product. If the customer is not interested, the process ends by leaving the customer alone. If the customer shows interest, the head of development acquires the customer. \n\nAfter acquiring the customer, a detailed online presentation is conducted. The process then waits for the customer to come back. If the customer returns, the sales representative calls the customer, leading to the creation of a quotation. The process concludes after the quotation is created.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "determine contact details of potential customers",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "buy details for cold calls",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "participates in exhibitions",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "know somebody interested in the product",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "start calling the customer",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "determine contact person and budget",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "ask customer about interest",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "leave customer alone",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "head of development acquires customer",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "detailed online presentation",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "wait for customer to come back",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "sales representative calls the customer",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "creation of a quotation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "16",
                        "type": "Exclusive"
                    },
                    {
                        "id": "17",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "14",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "14",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "14",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "2",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "3",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "7",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "16",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "17",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "8",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "13",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "11",
                        "targetRef": "13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_1.txt": {
        "0": {
            "text": "The process begins when a party sends a warrant possession request. This request is then received by the Small Claims Registry Operations team, who retrieve the SCT file. The team forwards the SCT Warrant Possession to the Queensland Police. After forwarding the document, the SCT physical file is stored while awaiting a report from the police. Once the report is received, the Small Claims Registry Operations team retrieves the SCT file again and attaches a new SCT document to it. The expanded SCT physical file is then stored. Finally, the internal staff receives the physical SCT file, marking the end of the process. Throughout this process, there are communications between the party and the Small Claims Registry Operations team, as well as between the Small Claims Registry Operations team and the Queensland Police.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "send warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "receive request and retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "forward SCT Warrant Possession to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "store SCT physical file awaiting Police report",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "receive report and retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "store expanded SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "internal staff receives physical SCT file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Party",
                        "Lanes": [
                            {
                                "id": "l1",
                                "name": "Party",
                                "elemRefs": [
                                    "0",
                                    "1"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Client Service Back Office",
                        "Lanes": [
                            {
                                "id": "l2",
                                "name": "Small Claims Registry Operations",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Internal Staff",
                                "elemRefs": [
                                    "8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p3",
                        "name": "Queensland Police",
                        "Lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "5",
                        "targetRef": "7"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a party sends a warrant possession request. This request is then received by the Client Service Back Office. The next step involves retrieving the SCT file. Once the file is retrieved, the SCT Warrant Possession is forwarded to the Queensland Police. After forwarding the document, the SCT physical file is stored. The process continues when a report is received from the Police. Following the receipt of the report, the respective SCT file is retrieved again. A new SCT document is then attached to the file. Finally, the expanded SCT physical file is stored, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Party sends warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Client Service Back Office receives the request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Forward SCT Warrant Possession to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Store SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Receive report from Police",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Store expanded SCT physical file",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a party sends a warrant possession request. This request is received by the Client Service Back Office. The next step involves retrieving the SCT file. Once the file is retrieved, the SCT Warrant Possession is forwarded to the Queensland Police. The SCT physical file is then stored while awaiting a report from the police. Upon receiving the report from the police, the respective SCT file is retrieved again. A new SCT document is attached to the file, and the expanded SCT physical file is stored. Finally, some other MC internal staff receives the physical SCT file, marking the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "party sends warrant possession request",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Client Service Back Office receives the request",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "retrieve SCT file",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "forward SCT Warrant Possession to Queensland Police",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "store SCT physical file awaiting report",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "receive report from police",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "retrieve respective SCT file",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "attach new SCT document",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "store expanded SCT physical file",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "some other MC internal staff receives physical SCT file",
                        "type": "User"
                    }
                ]
            }
        }
    },
    "6_3.txt": {
        "0": {
            "text": "The process begins with determining the necessary parts, quantities, and delivery date. This information is then entered into the PPS system. The PPS system optimizes the production processes and creates work packages. Following this, the data is manually transferred to the ERP system. At this point, an exclusive decision is made to check if there are any missing parts. If parts are missing, the necessary parts are procured. If no parts are missing, the process continues directly. Finally, the production is implemented, and the order quality is checked, concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "determine necessary parts, quantities, and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "PPS optimizes production processes and creates work packages",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "transfer data manually to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "7",
                        "name": "procure missing parts",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "no parts missing",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "implement production and check order quality",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with determining the necessary parts and quantities as well as the delivery date. This information is then entered into the PPS system. Following this, the data is manually transferred to the ERP system. An exclusive decision point is reached where the process can either proceed to receiving a notice from the system or directly to implementing production. If a notice is received from the system, the process continues to implementing production. After production is implemented, the order is checked for quality. The process concludes after the quality check is completed.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Determine necessary parts and quantities as well as delivery date",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Transfer data to ERP manually",
                        "type": "Manual"
                    },
                    {
                        "id": "5",
                        "name": "Receive notice from system",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Implement production",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Check order for quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "4",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with determining the necessary parts, quantities, and delivery date. This information is then entered into the PPS system. Following this, the production processes are optimized, and work packages along with a list of parts to be procured are created. The data is then manually transferred to the ERP system. \n\nNext, a decision is made to determine if any parts are missing and need to be procured. If parts are missing, the process continues with scheduling the production to start. The system then sends a notice, and an employee takes care of the implementation. Finally, the order is checked for quality, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Determine necessary parts, quantities and delivery date",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Enter information into PPS",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Optimize production processes",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Create work packages and list of parts to be procured",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "Transfer data manually to ERP",
                        "type": "Manual"
                    },
                    {
                        "id": "6",
                        "name": "Decide if any parts are missing and must be procured",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Schedule production to start",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Receive notice from system",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Employee takes care of implementation",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Check order for quality",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6-gw",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "6-gw"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6-gw",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_4.txt": {
        "0": {
            "text": "The process begins with the selection of underwriters. Once the underwriters are selected, they provide procedural and financial advice. Following this, the underwriters buy the issue and then resell it to the public. Next, the underwriters prepare a registration statement for SEC approval. After the registration statement is prepared, the issue is registered with the SEC, and compliance with blue-sky laws is checked. The underwriters then firm up the issue price and arrange a road show for potential investors. After the road show, the underwriters fix the issue price. An exclusive decision is made, leading to the underwriters entering into a firm commitment to buy the stock. Finally, the underwriters offer the stock to the public, concluding the process.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "select the underwriters",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "underwriters provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "underwriters buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "underwriters resell to the public",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "underwriters prepare registration statement for SEC approval",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "register issue with SEC and check blue-sky laws compliance",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "underwriters firm up issue price",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "underwriters arrange a road show for potential investors",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "underwriters fix the issue price",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "underwriters enter into a firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "underwriters offer stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "13",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "13",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the selection of the underwriters. Once the underwriters are selected, they provide procedural and financial advice. Following this, the underwriters proceed to buy the issue. After purchasing the issue, the underwriters resell it to the public. Subsequently, the underwriters prepare a registration statement for SEC approval. The next step involves checking compliance with blue-sky laws. Finally, the underwriters fix the issue price, concluding the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "select the underwriters",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "underwriters provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "underwriters buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "underwriters resell the issue to the public",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "underwriters prepare a registration statement for SEC approval",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "check compliance with blue-sky laws",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "underwriters fix the issue price",
                        "type": "User"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the selection of underwriters. Once the underwriters are selected, they provide procedural and financial advice. Following this, the underwriters proceed to buy the issue. After purchasing the issue, the underwriters resell it to the public. Concurrently, a registration statement is prepared for SEC approval. Compliance with blue-sky laws is then checked. The issue price is firmed up, and arrangements for a road show are made. After receiving SEC clearance, the issue price is fixed. The underwriters then enter a firm commitment to buy the stock. Subsequently, the stock is offered to the public. Finally, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Select underwriters",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Underwriters provide procedural and financial advice",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Underwriters buy the issue",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Underwriters resell the issue to the public",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Prepare registration statement for SEC approval",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Check compliance with blue-sky laws",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "Firm up issue price",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Arrange road show",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Fix issue price after SEC clearance",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "Enter firm commitment to buy the stock",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Offer stock to the public",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "3_6.txt": {
        "0": {
            "text": "The process begins when a claim is initiated. The first step is to check if the claimant is insured. If the claimant is not insured, they are informed that the claim must be rejected. If the claimant is insured, the severity of the claim is evaluated. Following this, relevant forms are sent to the claimant. Once the forms are returned, they are checked for completeness. If the forms are complete, the claim is registered in the Claims Management system, and the process ends. If the forms are incomplete, the claimant is informed to update the forms. The updated forms are then checked for completeness again. If the forms are still incomplete, the process loops back to checking the forms for completeness. If the forms are complete after the update, the claim is registered in the Claims Management system, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "2",
                        "name": "check if claimant is insured",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "inform claimant that the claim must be rejected",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "evaluate severity of the claim",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "send relevant forms to claimant",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "check returned forms for completeness",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "register claim in Claims Management system",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "inform claimant to update forms",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "check updated forms for completeness",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "18",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "11",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "11",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "18",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a claim is initiated. The first step is to check whether the claimant is insured. If the claimant is not insured, they are informed that the claim is rejected. If the claimant is insured, the severity of the claim is evaluated. Based on this evaluation, relevant forms are sent to the claimant. Once the forms are received back, they are checked for completeness. If the forms are complete, the claim is registered in the Claims Management system, and the process ends. If the forms are incomplete, the claimant is informed to update the forms. The updated forms are then checked again. If the updated forms are complete, the claim is registered in the Claims Management system, and the process ends. If the updated forms are still incomplete, the claimant is informed again to update the forms, and the process of checking the updated forms is repeated until the forms are complete and the claim can be registered.",
            "model": {
                "tasks": [
                    {
                        "id": "2",
                        "name": "check whether claimant is insured",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "inform claimant that claim is rejected",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "evaluate severity of claim",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "send relevant forms to claimant",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "check forms for completeness",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "register claim in Claims Management system",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "inform claimant to update forms",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "check updated forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "18",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "6",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "11",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "12",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "14",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "16",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "15",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "15",
                        "targetRef": "14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a claim is initiated. The first step is to check if the claimant is insured. If the claimant is not insured, they are informed of the rejection. If the claimant is insured, the severity of the claim is evaluated. Based on the evaluation, relevant forms are sent to the claimant. Once the claimant returns the forms, they are checked for completeness. If the forms are complete, the claim is registered in the Claims Management system, and the process ends. If the forms are incomplete, the claimant is informed to update the forms. The updated forms are then checked again for completeness, and this cycle continues until the forms are complete, at which point the claim is registered, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "2",
                        "name": "Check if claimant is insured",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Inform claimant of rejection",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Evaluate severity of the claim",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "Send relevant forms to claimant",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Check returned forms for completeness",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Register claim in Claims Management system",
                        "type": "Service"
                    },
                    {
                        "id": "14",
                        "name": "Inform claimant to update forms",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "Check updated forms",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "17",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "6",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "10",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "11",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "15",
                        "targetRef": "10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "9_1.txt": {
        "0": {
            "text": "The process begins with the initiation of a database backup. Following this, the system checks the Account Defaulter table for any new records. Depending on the outcome, the process either proceeds to check the CRM system for new returns or directly checks the CRM system for new returns post-processing. If the CRM system is checked for new returns, the process then decides whether to register defaulting accounts and customers or to produce a table of defaulting accounts. If defaulting accounts and customers are registered, the process continues to produce the table of defaulting accounts. Once the table is produced, it is sent to account management. \n\nAt this point, the process decides whether to check the CRM system for new returns post-processing or to send an alert to the supervisor. If the CRM system is checked for new returns post-processing, the process then decides whether to reconcile with the account defaulters table or to send a message to the supervisor. If the reconciliation with the account defaulters table is chosen, the process concludes. If a message is sent to the supervisor, the process also concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Backup database",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "3",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Register defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "Send to account management",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "Check CRM system for new returns (post processing)",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "Reconcile with account defaulters table",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Send alert to supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "10",
                        "name": "Send message to supervisor",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "12",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "12",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "13",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "13",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "6",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "14",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "14",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "7",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "15",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "15",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "8",
                        "targetRef": "11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the initiation of a database backup. Following this, the system checks the Account Defaulter table for any new records. If no new records are found, the process proceeds to check the CRM system for new returns. If new records are found, the system checks the CRM system for new returns post-report completion. \n\nIf there are new returns, the system registers the defaulting accounts and customers, then produces a table of defaulting accounts. This table is then reconciled with the existing account defaulters table. If the codes are not advised, the table is sent to account management. If the codes are advised, the process ends.\n\nIf no new returns are found in the initial check, an alert is sent to the supervisor, and the process ends. If new returns are found post-report completion, the system checks if new returns are filed. If new returns are filed, the system reconciles with the existing account defaulters table. If no new returns are filed, a message is sent to the supervisor, and the process ends. \n\nFinally, if the codes are advised during the reconciliation, the process ends. If the codes are not advised, the table is sent to account management, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Backup database",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "Check Account Defaulter table for new records",
                        "type": "Service"
                    },
                    {
                        "id": "3",
                        "name": "Check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "Register defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "Produce table of defaulting accounts",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "Send table to account management",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "Send alert to supervisor",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "Check CRM system for new returns (post report completion)",
                        "type": "Service"
                    },
                    {
                        "id": "10",
                        "name": "Reconcile with existing account defaulters table",
                        "type": "Service"
                    },
                    {
                        "id": "11",
                        "name": "Send message to supervisor",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3g",
                        "type": "Exclusive"
                    },
                    {
                        "id": "6g",
                        "type": "Exclusive"
                    },
                    {
                        "id": "8g",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9g",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10g",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3g"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3g",
                        "targetRef": "3",
                        "name": "No new records"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3g",
                        "targetRef": "9",
                        "name": "New records found"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "6g"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6g",
                        "targetRef": "4",
                        "name": "New returns exist"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6g",
                        "targetRef": "8",
                        "name": "No new returns"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "5",
                        "targetRef": "10g"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10g",
                        "targetRef": "6",
                        "name": "Codes not advised"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10g",
                        "targetRef": "7",
                        "name": "Codes advised"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "7",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "6",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "9",
                        "targetRef": "8g"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "8g",
                        "targetRef": "10",
                        "name": "New returns filed"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "8g",
                        "targetRef": "11",
                        "name": "No"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "8",
                        "targetRef": "12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a database backup. Following this, the system checks the Account Defaulter table. Depending on the results, the process either proceeds to check the CRM system for new returns or directly registers all defaulting accounts and customers. If the CRM system is checked, the process then produces a table of defaulting accounts and sends it to account management.\n\nNext, the process checks the CRM system for new returns again and reconciles the findings with the account defaulters table. If there are new returns, a system alert is sent to the supervisor by 2:30 pm, and a new defaulting account report is completed. Alternatively, the process may directly proceed to complete the new defaulting account report.\n\nAfter completing the report, a system alert is sent to the supervisor by 4:00 pm. The process then checks the CRM system for new returns once more and reconciles the findings with the account defaulters table. Finally, the process concludes.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "20",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "10",
                        "type": "Exclusive"
                    },
                    {
                        "id": "15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "18",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "10",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "16",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "19",
                        "targetRef": "20"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "database backup",
                        "type": "Service"
                    },
                    {
                        "id": "2",
                        "name": "check Account Defaulter table",
                        "type": "Service"
                    },
                    {
                        "id": "4",
                        "name": "check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "5",
                        "name": "register all defaulting accounts and customers",
                        "type": "Service"
                    },
                    {
                        "id": "6",
                        "name": "produce table of defaulting accounts and send to account management",
                        "type": "Service"
                    },
                    {
                        "id": "8",
                        "name": "check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "9",
                        "name": "reconcile with account defaulters table",
                        "type": "Service"
                    },
                    {
                        "id": "11",
                        "name": "System Alert to Supervisor by 2:30 pm",
                        "type": "Service"
                    },
                    {
                        "id": "12",
                        "name": "new defaulting account report completed",
                        "type": "Service"
                    },
                    {
                        "id": "14",
                        "name": "complete new defaulting account report",
                        "type": "Service"
                    },
                    {
                        "id": "16",
                        "name": "System Alert to Supervisor by 4:00 pm",
                        "type": "Service"
                    },
                    {
                        "id": "17",
                        "name": "check CRM system for new returns",
                        "type": "Service"
                    },
                    {
                        "id": "19",
                        "name": "reconcile with account defaulters table",
                        "type": "Service"
                    }
                ]
            }
        }
    },
    "5_4.txt": {
        "0": {
            "text": "The process begins when an employee purchases a product or service and subsequently submits an expense report. The supervisor then reviews the submitted expense report. Following the review, the supervisor either approves or rejects the report. If the report is rejected, the employee is required to edit the report. After making the necessary corrections, the employee resubmits the report, which the supervisor rechecks. If the report is approved, it is forwarded to the treasurer. \n\nUpon receiving the report, the treasurer checks for any issues. If issues are identified, the report is sent back to the supervisor for further review. If no issues are found, the treasurer proceeds to check the receipts. Once the receipts are accepted for processing, the process links to the payment system, and the report is finalized. The process concludes at this point.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "9",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "10",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "7",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "13",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "16",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "employee purchases product/service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "employee submits expense report",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "supervisor reviews expense report",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "supervisor approves/rejects report",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "employee edits report",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "employee corrects errors",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "supervisor rechecks report",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "report goes to treasurer",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "treasurer identifies issues",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "treasurer checks receipts",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "receipts accepted for processing",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "link to payment system",
                        "type": "Service"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when an employee purchases a product or service. Following this, the employee submits an expense report along with the necessary receipts. The supervisor then reviews the submitted expense report. The supervisor has the option to either approve or reject the report. If the report is approved, the expense rules are applied. \n\nAt this point, an exclusive decision is made. If the report needs editing, it is sent back to the employee for editing. If the report is rejected, it is marked as rejected. Once the report is edited or rejected, it is sent to the treasurer. The treasurer checks the receipts and can either send the report back for correction or proceed with the process.\n\nIf the report is sent back for correction, it goes through the same review and approval process again. If the treasurer finds everything in order, the process moves to another exclusive decision point. If the report needs to be reviewed again, it is sent back to the beginning of the process. If everything is correct, the process proceeds to the automatic payment activity, which marks the end of the process.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "11",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "employee purchases product or service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "employee submits expense report with receipts",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "supervisor reviews expense report",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "supervisor approves or rejects report",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "apply expense rules",
                        "type": "Service"
                    },
                    {
                        "id": "7",
                        "name": "edit expense report",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "reject report",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "send to treasurer",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "treasurer checks receipts",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "send back for correction",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "automatic payment activity",
                        "type": "Service"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when an employee purchases a product or service and subsequently submits an expense report. The supervisor then reviews the submitted expense report and decides whether to approve or reject it. If the report is rejected, the employee is required to edit the report and resubmit it for review. This cycle continues until the supervisor approves the report. Once approved, the treasurer checks the receipts associated with the expense report. The treasurer then decides whether to accept the expenses for processing. If the expenses are accepted, an automatic payment activity is triggered, leading to the completion of the process. The process concludes with the end event.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "15",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "13",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "6",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "9",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "11",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "13",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "14",
                        "targetRef": "15"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "employee purchases product/service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "employee submits expense report",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "supervisor reviews expense report",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "supervisor approves or rejects the report",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "employee edits report",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "treasurer checks receipts",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "treasurer accepts expenses for processing",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "automatic payment activity",
                        "type": "Service"
                    }
                ]
            }
        }
    },
    "2_2.txt": {
        "0": {
            "text": "The process begins when the customer initiates the transmission of their data to customer service. Customer service then enters this data into the CRM system. The next step involves checking the customer data for completeness and plausibility. If any errors are found, they are corrected based on an error list. Once the data is verified, a new customer object is created. \n\nFollowing this, contract documents for the power supplier switch are prepared. These documents are then sent to the grid operator. The grid operator checks the switch-over request. If the request is valid, the grid operator sends the power meter data to both customer service and the old supplier. Customer service then imports this meter data into their systems.\n\nMeanwhile, the customer reviews the contract details and decides whether to withdraw or confirm the switch. If the customer confirms, customer service creates a CIS contract. The grid operator sends the power meter data to customer service and the old supplier. The old supplier then sends the final billing to the customer. Finally, the process ends for both the customer and the grid operator.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "19",
                        "type": "Exclusive"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "13",
                        "targetRef": "8"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "8",
                        "targetRef": "12"
                    },
                    {
                        "id": "mf3",
                        "sourceRef": "12",
                        "targetRef": "16"
                    },
                    {
                        "id": "mf4",
                        "sourceRef": "16",
                        "targetRef": "27"
                    },
                    {
                        "id": "mf5",
                        "sourceRef": "27",
                        "targetRef": "15"
                    },
                    {
                        "id": "mf6",
                        "sourceRef": "31",
                        "targetRef": "29"
                    },
                    {
                        "id": "mf7",
                        "sourceRef": "29",
                        "targetRef": "32"
                    }
                ],
                "pools": [
                    {
                        "id": "1",
                        "name": "Customer",
                        "Lanes": [
                            {
                                "id": "2",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "0",
                                    "3",
                                    "15",
                                    "31"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "3",
                        "name": "Customer Service",
                        "Lanes": [
                            {
                                "id": "4",
                                "name": "Customer Service Lane",
                                "elemRefs": [
                                    "1",
                                    "6",
                                    "9",
                                    "11",
                                    "13",
                                    "20",
                                    "21",
                                    "24",
                                    "25",
                                    "29"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "4",
                        "name": "CIS",
                        "Lanes": [
                            {
                                "id": "5",
                                "name": "CIS Lane",
                                "elemRefs": [
                                    "14",
                                    "18",
                                    "26"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "5",
                        "name": "Grid Operator",
                        "Lanes": [
                            {
                                "id": "6",
                                "name": "Grid Operator Lane",
                                "elemRefs": [
                                    "8",
                                    "12",
                                    "16",
                                    "27"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "6",
                        "name": "Old Supplier",
                        "Lanes": [
                            {
                                "id": "7",
                                "name": "Old Supplier Lane",
                                "elemRefs": [
                                    "32"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "3",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "6",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "9",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "11",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "7",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "10",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "13",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "12",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "14",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "18",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "20",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "21",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "22",
                        "targetRef": "23"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "23",
                        "targetRef": "24"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "24",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "25",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "26",
                        "targetRef": "27"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "27",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "28",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "29",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "30",
                        "targetRef": "31"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "31",
                        "targetRef": "32"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "32",
                        "targetRef": "10"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Customer transmits data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Customer data entered into CRM system",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "Check customer data for completeness and plausibility",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "Correct errors based on error list",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "Create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "Prepare contract documents for power supplier switch",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "Automated check of contract documents in CIS",
                        "type": "Service"
                    },
                    {
                        "id": "16",
                        "name": "Analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "Send confirmation document to customer",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "Send request to grid operator",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "Switch-over request checked by grid operator",
                        "type": "User"
                    },
                    {
                        "id": "24",
                        "name": "Customer reviews contract details",
                        "type": "User"
                    },
                    {
                        "id": "25",
                        "name": "Customer decides to withdraw or confirm",
                        "type": "User"
                    },
                    {
                        "id": "26",
                        "name": "Customer service creates CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "27",
                        "name": "Grid operator sends power meter data to customer service and old supplier",
                        "type": "Service"
                    },
                    {
                        "id": "29",
                        "name": "Import meter data into systems",
                        "type": "User"
                    },
                    {
                        "id": "31",
                        "name": "Old supplier sends final billing to customer",
                        "type": "User"
                    },
                    {
                        "id": "32",
                        "name": "Process ends for customer and grid operator",
                        "type": "User"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when the customer transmits data to customer service. Customer service receives the data and enters it into the CRM system. The data is then compared with the internal customer database, followed by a check for completeness and plausibility. If errors are found, they are corrected based on an error list. The process then checks if the customer already exists in the database. If the customer does not exist, a new customer object is created. \n\nNext, contract documents are prepared and undergo an automated check. If issues are found during the check, they are analyzed and resolved, and the contract documents are generated again. Once the documents pass the check, a confirmation is sent to the customer, and a request is sent to the grid operator. The grid operator checks for supplier concurrence and transmits a response. If there are issues, the grid operator informs the involved suppliers and demands resolution, or terminates the sales agreement with the old supplier.\n\nCustomer service then creates a CIS contract, which the customer checks for details. The customer can either withdraw from the switch contract or confirm it. If confirmed, the grid operator transmits power meter data, which customer service imports into their systems. The grid operator computes the final billing, and the old supplier creates and sends the final billing. The process concludes at this point.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer transmits data to customer service",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "receive customer data",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "compare data with internal customer database",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "check for completeness and plausibility",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "correct errors based on error list",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "check if customer exists in database",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "10",
                        "name": "automated check of contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "11",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "12",
                        "name": "generate contract documents again",
                        "type": "User"
                    },
                    {
                        "id": "13",
                        "name": "send confirmation to customer",
                        "type": "Service"
                    },
                    {
                        "id": "14",
                        "name": "send request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "15",
                        "name": "grid operator checks for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "grid operator transmits response",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "grid operator informs involved suppliers and demands resolution",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "grid operator terminates sales agreement with old supplier",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "customer service creates CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "20",
                        "name": "customer checks contract details",
                        "type": "User"
                    },
                    {
                        "id": "21",
                        "name": "customer withdraws from switch contract",
                        "type": "User"
                    },
                    {
                        "id": "22",
                        "name": "customer confirms switch contract",
                        "type": "User"
                    },
                    {
                        "id": "23",
                        "name": "grid operator transmits power meter data",
                        "type": "Service"
                    },
                    {
                        "id": "24",
                        "name": "grid operator computes final billing",
                        "type": "Service"
                    },
                    {
                        "id": "25",
                        "name": "old supplier creates and sends final billing",
                        "type": "User"
                    },
                    {
                        "id": "26",
                        "name": "customer service imports meter data to systems",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "27",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "28",
                        "type": "Exclusive"
                    },
                    {
                        "id": "29",
                        "type": "Exclusive"
                    },
                    {
                        "id": "30",
                        "type": "Exclusive"
                    },
                    {
                        "id": "31",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "32",
                        "name": "Customer",
                        "Lanes": [
                            {
                                "id": "c_lane",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "1",
                                    "21",
                                    "22"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "33",
                        "name": "Customer Service",
                        "Lanes": [
                            {
                                "id": "cs_lane",
                                "name": "Customer Service Lane",
                                "elemRefs": [
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9",
                                    "10",
                                    "11",
                                    "12",
                                    "13",
                                    "14",
                                    "19",
                                    "20",
                                    "26"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "34",
                        "name": "Grid Operator",
                        "Lanes": [
                            {
                                "id": "go_lane",
                                "name": "Grid Operator Lane",
                                "elemRefs": [
                                    "15",
                                    "16",
                                    "17",
                                    "18",
                                    "23",
                                    "24"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "35",
                        "name": "Old Supplier",
                        "Lanes": [
                            {
                                "id": "os_lane",
                                "name": "Old Supplier Lane",
                                "elemRefs": [
                                    "25"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "28"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "28",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "28",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "9",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "29"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "29",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "29",
                        "targetRef": "30"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "11",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "12",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "30",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "13",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "15",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "17",
                        "targetRef": "18"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "16",
                        "targetRef": "31"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "31",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "19",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "20",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "20",
                        "targetRef": "22"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "23",
                        "targetRef": "26"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "24",
                        "targetRef": "25"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "25",
                        "targetRef": "27"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the customer transmits their data. This data is then received by customer service, who enters the customer data into the CRM system. The data is compared with the internal customer database, followed by a check for completeness and plausibility. If errors are found, they are corrected. If no errors are found, a new customer object is created.\n\nNext, contract documents are prepared, and an automated check of these documents is performed in the CIS system. If issues are detected, they are analyzed and resolved, and the contract documents are regenerated. If no issues are detected, a confirmation document is sent to the customer, and a request is sent to the grid operator.\n\nThe grid operator checks for supplier concurrence. If there are conflicts, the grid operator informs the suppliers and resolves the conflicts. If there are no conflicts, the grid operator carries out the termination of the sales agreement with the old supplier.\n\nMeanwhile, customer service creates a CIS contract, and the customer checks the contract details. The customer then decides whether to withdraw or confirm the contract. If the customer decides to withdraw, the process ends. If the customer confirms, customer service imports the meter data, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "customer transmits data",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "customer data received by customer service",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "enter customer data into CRM",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "compare with internal customer database",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "check for completeness and plausibility",
                        "type": "User"
                    },
                    {
                        "id": "6",
                        "name": "correct errors",
                        "type": "User"
                    },
                    {
                        "id": "7",
                        "name": "create new customer object",
                        "type": "User"
                    },
                    {
                        "id": "8",
                        "name": "prepare contract documents",
                        "type": "User"
                    },
                    {
                        "id": "9",
                        "name": "automated check of contract documents in CIS",
                        "type": "Service"
                    },
                    {
                        "id": "10",
                        "name": "analyze and resolve issues",
                        "type": "User"
                    },
                    {
                        "id": "11",
                        "name": "regenerate contract documents",
                        "type": "Service"
                    },
                    {
                        "id": "12",
                        "name": "send confirmation document to customer and request to grid operator",
                        "type": "Service"
                    },
                    {
                        "id": "13",
                        "name": "grid operator checks for supplier concurrence",
                        "type": "User"
                    },
                    {
                        "id": "14",
                        "name": "grid operator informs suppliers and resolves conflicts",
                        "type": "User"
                    },
                    {
                        "id": "15",
                        "name": "carries out termination of sales agreement with old supplier",
                        "type": "User"
                    },
                    {
                        "id": "16",
                        "name": "customer service creates CIS contract",
                        "type": "User"
                    },
                    {
                        "id": "17",
                        "name": "customer checks contract details",
                        "type": "User"
                    },
                    {
                        "id": "18",
                        "name": "customer decides to withdraw or confirm",
                        "type": "User"
                    },
                    {
                        "id": "19",
                        "name": "customer service imports meter data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "20",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "21",
                        "name": "check end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Customer Service",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Sales",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "10",
                                    "11",
                                    "12",
                                    "16",
                                    "17",
                                    "18",
                                    "19"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Distribution",
                                "elemRefs": []
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Customer",
                                "elemRefs": [
                                    "18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Grid Operator",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Grid Operator",
                                "elemRefs": [
                                    "13",
                                    "14",
                                    "15"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g1",
                        "targetRef": "7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "7",
                        "targetRef": "8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "8",
                        "targetRef": "9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "9",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g2",
                        "targetRef": "10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "10",
                        "targetRef": "11"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "g2",
                        "targetRef": "12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "12",
                        "targetRef": "13"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "13",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g3",
                        "targetRef": "14"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "14",
                        "targetRef": "15"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "g3",
                        "targetRef": "16"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "16",
                        "targetRef": "17"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "17",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "g4",
                        "targetRef": "21"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "g4",
                        "targetRef": "19"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "19",
                        "targetRef": "20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "6_2.txt": {
        "0": {
            "text": "The process begins when Assembler AG places an order. Following this, Assembler AG sends the order to the supplier. Upon receiving the order, the supplier processes it. After processing the order, the supplier sends an invoice back to Assembler AG. Assembler AG then receives the invoice. The process concludes at this point.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Assembler AG places order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Assembler AG sends the order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Assembler AG",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "0",
                                    "1",
                                    "2",
                                    "5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Supplier",
                        "lanes": [
                            {
                                "id": "l2",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf0",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf1",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when Assembler AG places an order. This order is then processed by the Supplier. Once the Supplier has processed the order, they send an invoice back to Assembler AG. Assembler AG receives the invoice and subsequently processes it. The process concludes at this point. Communication between Assembler AG and the Supplier occurs twice: first, when the order is placed by Assembler AG and received by the Supplier, and second, when the Supplier sends the invoice to Assembler AG.",
            "model": {
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "3",
                        "targetRef": "4"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Assembler AG",
                        "Lanes": [
                            {
                                "id": "l1",
                                "name": "Assembler AG Lane",
                                "elemRefs": [
                                    "1",
                                    "4",
                                    "5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "p2",
                        "name": "Supplier",
                        "Lanes": [
                            {
                                "id": "l2",
                                "name": "Supplier Lane",
                                "elemRefs": [
                                    "2",
                                    "3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "20"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "21",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "22",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "tasks": [
                    {
                        "id": "1",
                        "name": "Assembler AG places an order",
                        "type": "Manual"
                    },
                    {
                        "id": "2",
                        "name": "Supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assembler AG processes invoice",
                        "type": "Manual"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when Assembler AG places an order. Following this, Assembler AG sends the order to the Supplier. Upon receiving the order, the Supplier processes it. After processing the order, the Supplier sends an invoice back to Assembler AG. Assembler AG then receives the invoice. The process concludes at this point. Throughout this process, there are communications between Assembler AG and the Supplier: the order is sent from Assembler AG to the Supplier, and the invoice is sent from the Supplier to Assembler AG.",
            "model": {
                "tasks": [
                    {
                        "id": "1",
                        "name": "Assembler AG places an order",
                        "type": "User"
                    },
                    {
                        "id": "2",
                        "name": "Assembler AG sends the order",
                        "type": "User"
                    },
                    {
                        "id": "3",
                        "name": "Supplier processes the order",
                        "type": "User"
                    },
                    {
                        "id": "4",
                        "name": "Supplier sends an invoice",
                        "type": "User"
                    },
                    {
                        "id": "5",
                        "name": "Assembler AG receives the invoice",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "0",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "P1",
                        "name": "Assembler AG",
                        "Lanes": [
                            {
                                "id": "L1",
                                "name": "Ordering",
                                "elemRefs": [
                                    "1",
                                    "2",
                                    "5"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "P2",
                        "name": "Supplier",
                        "Lanes": [
                            {
                                "id": "L2",
                                "name": "Order Processing",
                                "elemRefs": [
                                    "3",
                                    "4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf0",
                        "sourceRef": "0",
                        "targetRef": "1"
                    },
                    {
                        "id": "sf1",
                        "sourceRef": "1",
                        "targetRef": "2"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "3",
                        "targetRef": "4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "4",
                        "targetRef": "5"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "5",
                        "targetRef": "6"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf0",
                        "sourceRef": "2",
                        "targetRef": "3"
                    },
                    {
                        "id": "mf1",
                        "sourceRef": "4",
                        "targetRef": "5"
                    }
                ]
            }
        }
    }
}