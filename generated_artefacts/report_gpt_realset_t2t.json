{
    "G_g03.txt": {
        "0": {
            "text": "The process begins with the start event, after which the user comes up with character names. Next, the user checks for a battle.net account. If the user does not have a battle.net account, they enter account information and then click on a confirmation link, which leads to the account being created. After the account is created, the user checks for an active World of Warcraft (WoW) subscription.\n\nIf the user already has a battle.net account, they directly check for an active WoW subscription. If there is no active WoW subscription, the user selects a payment method. Depending on the chosen payment method, the user either enters credit card information or enters IBAN and BIC numbers. Once the payment information is entered, the subscription setup is completed, and the user logs into the game.\n\nIf the user already has an active WoW subscription, they log into the game directly. After logging into the game, the user selects a realm, race, and class. Then, the user enters character names until an available name is found. Finally, the user receives confirmation and selfies, and the process ends. Additionally, there is an intermediate event for the expansion release that occurs after the user receives confirmation and selfies.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Come up with character names",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for battle.net account",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter account information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Click on confirmation link",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check for active WoW subscription",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Log into game",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Select realm, race and class",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter character names until available",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Receive confirmation and selfies",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Account created",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Subscription active",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Subscription setup completed",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Expansion released",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "Battle.net account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Active WoW subscription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Choose payment method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id19",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id20",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id6",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id21",
                        "targetRef": "id7",
                        "condition": "credit card"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id21",
                        "targetRef": "id8",
                        "condition": "bank account"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the user starting the account setup. The first step is to set up an account. Next, the user checks for an existing battle.net account. If the user does not have a battle.net account, they enter their account information and then click the confirmation link. This triggers the account creation confirmation. Once the account is created, the user checks for an active World of Warcraft (WoW) subscription. If the user already has a battle.net account, they directly check for an active WoW subscription.\n\nIf the user does not have an active WoW subscription, they select a payment method. Depending on the chosen payment method, the user either enters credit card information or enters IBAN and BIC numbers. After entering the payment information, the subscription is activated. If the user already has an active WoW subscription, they proceed to log into the game.\n\nOnce logged into the game, the user selects a realm, race, and class. They then enter character names and confirm the name availability. After the name is confirmed, the user receives selfies of their character, and the process ends with the characters being created. Additionally, the user may receive selfies of their character when an expansion is released.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Set up account",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for battle.net account",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter account information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Click confirmation link",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check for active WoW subscription",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Log into game",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Select realm, race, and class",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Enter character names",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Confirm name availability",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Receive selfies of character",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Account created",
                        "type": "IntermediateMessageCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Subscription active",
                        "type": "IntermediateMessageCatchEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Name confirmed",
                        "type": "IntermediateMessageCatchEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Characters created",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Expansion released",
                        "type": "IntermediateMessageCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id20",
                        "name": "Has battle.net account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "name": "Has active WoW subscription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Payment method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "User",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Account Setup",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id25",
                                "name": "Character Creation",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id26",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id2",
                        "targetRef": "id20"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id20",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id20",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id5",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id21",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id6",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id22",
                        "targetRef": "id7",
                        "condition": "Credit Card"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id22",
                        "targetRef": "id8",
                        "condition": "Bank Account"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id21",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id17",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id13",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id13",
                        "targetRef": "id19"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the user coming up with good character names. After this, the user checks if they have a battle.net account. If the user does not have a battle.net account, they enter their account information and then click the confirmation link in the email they receive. Following this, the user checks if they have an active World of Warcraft (WoW) subscription. If the user already has a battle.net account, they directly check if they have an active WoW subscription.\n\nIf the user does not have an active WoW subscription, they select a payment method. Depending on the selected payment method, the user either enters their credit card information or their IBAN and BIC numbers. Once the payment information is entered, the user logs into the game.\n\nIf the user already has an active WoW subscription, they directly log into the game. After logging in, the user selects the realm, race, and class of their character. They then enter character names until a name is available. Once a name is available, the character is confirmed, and the user receives a message about the expansion release.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Come up with good character names",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Check if you have a battle.net account",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Enter account information",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Click the confirmation link in email",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Check if you have an active WoW subscription",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Log into the game",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Select realm, race, and class of your character",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Enter character names until a name is available",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endConfirmation",
                        "name": "Character confirmed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "endMessage",
                        "name": "Receive message about expansion release",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Do you have battle.net account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Do you have an active WoW subscription?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Select payment method",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "User",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Account Setup",
                                "elemRefs": [
                                    "task2",
                                    "gateway1",
                                    "task3",
                                    "task4",
                                    "task5",
                                    "gateway2",
                                    "task6",
                                    "gateway3",
                                    "task7",
                                    "task8",
                                    "gateway3",
                                    "task9",
                                    "task10",
                                    "task11",
                                    "endConfirmation"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Character Creation",
                                "elemRefs": [
                                    "task1",
                                    "task10",
                                    "task11",
                                    "endMessage"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "No"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "task5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6",
                        "condition": "No"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task6",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "task7",
                        "condition": "Credit card"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "task8",
                        "condition": "Bank account"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task7",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway2",
                        "targetRef": "task9",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task10",
                        "targetRef": "task11"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task11",
                        "targetRef": "endConfirmation"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "task1",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "endConfirmation",
                        "targetRef": "endMessage"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j05.txt": {
        "0": {
            "text": "The process begins with the applicant organizing accommodation and a bank account. Once this is completed, the applicant submits the visa application form. Following this, the applicant submits the travel document, then the passport photo, and provides travel health insurance. Next, the applicant must show proof of sufficient means of subsistence and provide other evidence such as hotel reservations.\n\nAfter gathering all the necessary documents, the applicant submits the visa application at the Austrian representation office. The Austrian authorities then review the visa application and the accompanying documents. \n\nAt this point, a decision is made on whether the visa is approved. If the visa is approved, it is issued, and the process ends. If the visa is not approved, the authorities check the visa validity and determine if an update is required. If an update is required, the applicant must resubmit the visa application at the Austrian representation office. If no update is needed, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize accommodation and bank account",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Submit visa application form",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Submit travel document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Submit passport photo",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide travel health insurance",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Proof of sufficient means of subsistence",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Provide other evidence (hotel reservations, etc.)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Submit visa application at Austrian representation office",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Review visa application and documents",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Issue visa",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check visa validity and update if required",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Visa Approved?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Requires Update?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Applicant",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Preparation",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Submission",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id19",
                        "name": "Austrian Authorities",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Visa Processing",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id9",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "conditionExpression": "approved"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id14",
                        "targetRef": "id11",
                        "conditionExpression": "not approved"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id11",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "conditionExpression": "update required"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id15",
                        "targetRef": "id13",
                        "conditionExpression": "no update needed"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to organize accommodation and a bank account. Once this is completed, the visa application form is filled out. Following this, a valid travel document is provided. Next, a passport photo is provided. After that, travel health insurance is provided. Then, proof of sufficient means of subsistence is provided. Any other evidence requested by the authorities is then provided. Once all these documents are gathered, the visa application is submitted.\n\nThe visa application is then reviewed by the authorities. If additional documents are needed, they are collected and the visa application is resubmitted. If the application is complete, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Organize accommodation and bank account",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Fill visa application form",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide valid travel document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Provide passport photo",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Provide travel health insurance",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Provide proof of sufficient means of subsistence",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Provide other evidence requested by authorities",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Submit visa application",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Visa application review by authorities",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Collect additional documents (if requested)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "Additional documents needed"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id13",
                        "targetRef": "id12",
                        "condition": "Application complete"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id10",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to check the requirements for living and working in Austria. \n\nAfter checking the requirements, a decision is made at an exclusive gateway. If accommodation and a bank account are required, the next step is to organize accommodation and a bank account through negotiation. Once this is done, the process continues to filling out the visa application form.\n\nIf the visa application is required directly, the process moves straight to filling out the visa application form.\n\nAfter the visa application form is filled out, the next step is to prepare the travel document. Following this, a passport photo is obtained. \n\nNext, travel health insurance is acquired. After obtaining the insurance, the means of subsistence are proven. \n\nIf additional evidence is requested by the authorities, it is gathered. \n\nFinally, the visa application is submitted to the representation office, and the process concludes with the visa being approved.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check requirements for living and working in Austria",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Organize accommodation and bank account (negotiation)",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Fill visa application form",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Prepare travel document",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Obtain passport photo",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Acquire travel health insurance",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Prove means of subsistence",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Gather additional evidence requested by authorities",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Submit visa application to representation office",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Visa approved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Accommodation and bank account required"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task3",
                        "condition": "Visa application required"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task9",
                        "targetRef": "event2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_g01.txt": {
        "0": {
            "text": "The process begins with the user entering the model and describing what is broken. Next, the user gets lists of materials, tools, and ordering choices. Following this, the user contacts friends to borrow or buy tools. After that, the user buys the necessary materials and tools. Once the materials and tools are acquired, the user receives instructions to fix the phone. \n\nAt this point, there is a decision to be made. If the instructions worked, the process ends successfully. If the fixing failed, another decision is made. The user can either send a review and video of the attempt or send the phone to an expert for further assistance.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter model and what is broken",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Get lists of materials, tools, and ordering choices",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact friends to borrow or buy tools",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Buy materials and tools",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive instructions to fix phone",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send review and video",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send phone to expert",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Instructions worked",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Fixing failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the user entering the model and the broken part information. Next, a service retrieves a list of materials and ordering choices. The user then checks for existing tools and materials. \n\nIf the materials are not available, the user contacts friends for borrowing or buying the necessary items. After that, the user buys the remaining materials. \n\nOnce the materials are available, the user receives instructions on how to fix the phone. Following the instructions, the user attempts to fix the phone. \n\nAfter attempting the repair, it is determined whether the repair was successful. If the repair is successful, the user sends a review and/or video, and the process ends with the phone being repaired successfully. \n\nIf the repair is not successful, the user sends the phone to an expert, and the process ends with the phone repair failing.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter model and broken part",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Get list of materials and ordering choices",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check for existing tools and materials",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Contact friends for borrowing/buying",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Buy remaining materials",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Receive instructions",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Fix phone following instructions",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send review and/or video",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send phone to expert",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Phone repaired successfully",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Phone repair failed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Repair successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Materials available?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, where the user enters the model and the broken part information. Next, the user checks the list of materials and tools required for the repair. Following this, the user contacts friends to borrow or buy the necessary tools. After securing the tools, the user proceeds to buy the remaining materials needed for the repair.\n\nOnce all materials are gathered, the user receives repair instructions through a service task. The process then reaches a decision point where it is determined whether the repair was successful or not.\n\nIf the repair is successful, the user sends a review and/or video of the repair, and the process ends with the repair being marked as successful.\n\nIf the repair is unsuccessful, the user sends the item to an expert through a service task, and the process ends with the repair being marked as unsuccessful.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter model and broken part",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check list of materials and tools",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact friends for borrowing/buying tools",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Buy remaining materials",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Receive repair instructions",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Send review and/or video",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send to expert",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Repair successful",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Repair unsuccessful",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Repair worked?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "yes"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j02.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to fetch information about potential models. Once this information is gathered, the parent is allowed to make a selection. After the parent has made their selection, relevant information is collected. Following this, notifications are sent to Social Security and the company in a timely manner. Subsequently, information is gathered from various companies. Finally, a decision is made about the extension, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fetch information about potential models",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Let parent select",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect relevant information",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Social Security, Company in time",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Gather information from companies",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Decide about extension",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to fetch information about potential models. Once this information is gathered, the parent is allowed to make a selection. After the parent has made their selection, relevant information is collected. This information is then used to notify Social Security. Following the notification to Social Security, the company is also notified. Subsequently, information is gathered from various companies. Finally, a decision is made about the extension, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fetch information about potential models",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Let parent select",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect relevant information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Social Security",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Notify Company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Gather information from companies",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Decide about extension",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to fetch information about potential models. Once this information is gathered, the parent is allowed to make a selection. After the parent has made their selection, relevant information is collected. This information is then used to notify Social Security. Following the notification to Social Security, the company is notified in time. Subsequently, information is gathered from various companies. Finally, a decision is made about whether to extend the process, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fetch information about potential models",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Let parent select",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Collect relevant information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify Social Security",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Notify Company in time",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Gather information from companies",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Decide about extension",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "V_g01.txt": {
        "0": {
            "text": "The process begins when an order is received. The first step is to receive the order. After receiving the order, it is determined whether the order is a menu or just a burger. If the order is a menu, the next step is to prepare the drink. Following the preparation of the drink, it is decided whether to prepare fries or wedges. If fries are chosen, they are prepared, and if wedges are chosen, they are prepared instead. Once either the fries or wedges are prepared, the next step is to prepare the burger. If the order is just a burger, the process skips directly to preparing the burger. After the burger is prepared, the order is delivered. The process concludes with the order being delivered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive order",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare drink",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare fries",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare wedges",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare burger",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Delivery order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Order delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Menu or just burger?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Fries or wedges?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "Menu"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id5",
                        "condition": "Just burger"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Fries"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "Wedges"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is placed. The first step is to receive the order. After receiving the order, the customer is asked if they want a menu or just a burger. If the customer chooses a menu, a drink is prepared. Following the preparation of the drink, the customer is asked if they want fries or wedges. If the customer chooses fries, the fries are prepared. If the customer chooses wedges, the wedges are prepared. Regardless of the choice between fries or wedges, the next step is to prepare the burger. If the customer initially chose just a burger, the process skips the drink and fries/wedges preparation and goes directly to preparing the burger. After the burger is prepared, enthusiastic status updates are given. Finally, the order is delivered via a conveyor belt, and the process ends with the order being delivered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask if customer wants menu or just burger",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare drink",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Ask if customer wants fries or wedges",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare fries",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare wedges",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare burger",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Give enthusiastic status updates",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver order via conveyor belt",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Order placed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Menu or just burger?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Fries or wedges?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "menu"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id13",
                        "targetRef": "id5",
                        "condition": "fries"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "wedges"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "just burger"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an order is received by the robotic burger seller.\n\nFirst, the robot receives the order and then asks the customer if they want a menu or just a burger.\n\nIf the customer wants a menu, the robot prepares a drink and then asks the customer if they want fries or wedges.\n\nIf the customer chooses fries, the robot prepares the fries. If the customer chooses wedges, the robot prepares the wedges.\n\nAfter preparing either the fries or wedges, the robot then prepares the burger.\n\nIf the customer initially chose just a burger, the robot skips the drink and fries/wedges preparation and directly prepares the burger.\n\nOnce the burger is prepared, the robot gives an enthusiastic status update.\n\nFinally, the robot delivers the order via a conveyor belt, completing the process with the order being delivered.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive order",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Ask if customer wants a menu or just burger",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare drink",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Ask if customer wants fries or wedges",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare fries",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare wedges",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare burger",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Give enthusiastic status update",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Deliver order via conveyor belt",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Order delivered",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Menu or just burger?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Fries or wedges?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Robotic Burger Seller",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Robot Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Menu"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Just burger"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5",
                        "condition": "Fries"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id6",
                        "condition": "Wedges"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "X_g03.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to select a starting block. After selecting the starting block, the next step is to run for 5 kilometers and measure the time. \n\nOnce the time is measured, it is checked whether the run time is less than 25 minutes. If the run time is less than 25 minutes, the next step is to get the starting number. If the run time is not less than 25 minutes, the process involves training and rechecking the time by running for 5 kilometers again and measuring the time. This loop continues until the run time is less than 25 minutes.\n\nAfter obtaining the starting number, the next step is to find out whether to go from home or work. This decision is based on whether there is more than one hour left between ending the workday and the starting time. Regardless of the decision, the next step is to run and drink at the same time.\n\nFinally, the process ends with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select starting block",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Run for 5km and measure time",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Train and recheck time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Get starting number",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find out whether to go from home or work",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Run and drink at the same time",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Run time less than 25 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "More than one hour left between ending workday and starting time?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to select a starting block. After selecting the starting block, the next step is to run 5km and measure the time taken. \n\nOnce the run is completed, it is checked if the run was completed in less than 25 minutes. If the run was not completed in less than 25 minutes, the process loops back to training and checking the time again, followed by another 5km run and time measurement. This loop continues until the run is completed in less than 25 minutes.\n\nIf the run is completed in less than 25 minutes, the next step is to get the starting number. After obtaining the starting number, the process waits until the end of the workday.\n\nAt the end of the workday, it is determined if there is more than one hour left between the start and the end of the workday. If there is more than one hour left, the next step is to go from home. If there is not more than one hour left, the next step is to leave directly from work.\n\nIn both cases, the final step is to run and drink at the same time. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select starting block",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Run 5km and measure time",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Train and check time",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Get starting number",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find out if you can go from home",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Go from home",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Leave directly from work",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Run and drink at the same time",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End of work day",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Run completed in less than 25 minutes?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "More than one hour left between start and end of workday?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id12",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to select a starting block. After selecting the starting block, the participant runs for 5 kilometers and measures the time taken. \n\nNext, the time is checked to see if it is under 25 minutes. If the time is less than 25 minutes, the process ends with the participant achieving a time less than 25 minutes. If the time is 25 minutes or more, the participant trains for less than 25 minutes and then checks the time again. This cycle continues until the participant achieves a time less than 25 minutes.\n\nOnce the participant achieves a time less than 25 minutes, they get their starting number. After obtaining the starting number, it is determined if there is more than an hour between the end of the workday and the start time. If there is more than an hour, the participant finds out if they can go home after work. If there is less than an hour, the participant leaves directly from work.\n\nIn both cases, the participant then runs and drinks at the same time. The process concludes with the participant receiving their final running time.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select starting block",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Run for 5km and measure time",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Train for less than 25 minutes",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if time is under 25 minutes",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Get starting number",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Find out if you can go home after work",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Leave directly from work",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Run and drink at the same time",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive final running time",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End with a time less than 25 minutes",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End with a time more than 25 minutes",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End with final running time",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id14",
                        "targetRef": "id11",
                        "condition": "time < 25 minutes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "time >= 25 minutes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "More than an hour between workday and start time"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "Less than an hour between workday and start time"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_g01.txt": {
        "0": {
            "text": "The process begins with the initiation of the project. The first step is to instruct the artist to create the project. Once the artist has been instructed, sketches are sent to the artist. The artist then communicates any changes until the project is satisfactory. \n\nNext, the plastic color for 3D printing is chosen. The process then checks if the chosen plastic color is in stock. If the color is in stock, the plastic quantity is checked. If the quantity is under 100 grams, the color is put on the shopping list. If the quantity is 100 grams or more, the 3D printer is turned on. \n\nIf the plastic color is not in stock, the color is ordered. After ordering the plastic color, the 3D printer is turned on. \n\nOnce the 3D printer is turned on, the bed and extruder are heated up. Following this, a gcode file is generated. Finally, the model is printed, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Instruct artist to create project",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send sketches to artist",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Communicate changes to artist until satisfied",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Choose plastic color for 3D printing",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check plastic color in stock",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check plastic quantity",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Put color on shopping list",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Order plastic color",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Turn on 3D printer",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Heat up bed and extruder",
                        "type": "Manual"
                    },
                    {
                        "id": "id11",
                        "name": "Generate gcode file",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Print model",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Color in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Plastic quantity?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "gid1",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "gid1",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id5",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "gid2",
                        "targetRef": "id7",
                        "condition": "Under 100 grams"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "gid2",
                        "targetRef": "id9",
                        "condition": "100 grams or more"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "id12",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to instruct the artist to create the project. Once the artist has been instructed, sketches are sent to the artist. The artist is then told to make changes until the project is satisfactory. After the project is satisfactory, the plastic color is chosen.\n\nNext, it is checked whether the chosen color is in stock. If the color is in stock, the stock level is checked to see if it is less than 100 grams. If the stock is less than 100 grams, the color is put on the shopping list. If the stock is not less than 100 grams, the process continues to turn on the 3D printer and heat it up.\n\nIf the color is not in stock, plastic is ordered. After ordering the plastic, the process continues to turn on the 3D printer and heat it up. Once the 3D printer is heated up, a gcode file is generated. The model is then printed, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Instruct artist to create project",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send sketches to artist",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Tell artist to change until satisfied",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Choose plastic color",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check color stock",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Put on shopping list",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Order plastic",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Turn on 3D printer and heat up",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Generate gcode file",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Print the model",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Color in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Stock less than 100 grams?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gid1",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gid1",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "gid2",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid2",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to send sketches to the artist. Once the sketches are sent, they are reviewed, and any necessary changes are requested. \n\nIf the result is satisfactory, the process continues with choosing the plastic color. After the color is chosen, the plastic stock is checked. If the plastic is in stock, the process checks the amount of plastic available. If the amount is less than 100 grams, the plastic is added to the shopping list and then ordered. If the amount is more than 100 grams, the process proceeds directly to the next step.\n\nIf the plastic is not in stock, it is ordered immediately. Once the plastic is procured, the printer is turned on, and the heat bed and extruder are heated. A gcode file is then generated, and the model is printed. The process concludes when the model is printed and the result is satisfactory.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send sketches to artist",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Review and request changes",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Choose plastic color",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check plastic stock",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Add to shopping list",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Order plastic",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Turn on printer and heat bed and extruder",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Generate gcode file",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Print model",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Satisfied with result",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Plastic in stock",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Color chosen",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Plastic stock checked",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Plastic procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id16",
                        "targetRef": "id13",
                        "condition": "Result satisfactory"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Result unsatisfactory"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Plastic in stock"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "Amount < 100 grams"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id17",
                        "targetRef": "id15",
                        "condition": "Amount > 100 grams"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "Plastic not in stock"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id15",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "V_k09.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to read the order from the automatic order management system. Next, the system checks if the product is in stock. If the product is in stock, it is withdrawn from the warehouse. If the product is not in stock, it is reordered from the wholesaler. \n\nIf the product is reordered from the wholesaler, there is a possibility of a delivery delay of more than 10 days. If the delivery delay exceeds 10 days, the product is registered in the stock management system after the delay. Otherwise, the product is registered in the stock management system immediately after reordering.\n\nOnce the product is either withdrawn from the warehouse or registered in the stock management system, the system checks if the whole order is ready for shipment. If the order is ready for shipment, a courier is requested, and the products are packed. If the order is not ready for shipment, the process loops back to check if the product is in stock again.\n\nFinally, the process ends when the courier is requested, and the products are packed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Read order from automatic order management system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check if the product is in stock",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Withdraw product from warehouse",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Reorder product from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Register product in stock management system",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check if whole order is ready for shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Request courier and pack products",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "Delivery delay of more than 10 days",
                        "type": "IntermediateEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Product in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Order ready for shipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid1",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "eid3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "eid3",
                        "targetRef": "id5",
                        "condition": "After 10+ days"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gid2",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "gid2",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is read from the order management system. The system then checks if the product is in stock. If the product is in stock, it is withdrawn from the warehouse. If the product is not in stock, a reorder is placed with the wholesaler. \n\nIf the reordered product takes more than 10 days to arrive, a delivery delay penalty is demanded from the wholesaler. Once the product arrives, it is registered in the stock management system. \n\nThe process then checks if the order is ready for shipment. If the order is ready, a courier is requested. If the order is not ready, the process returns to reading the order from the order management system. \n\nOnce the courier is requested, the products are packed, and the process ends with the product being shipped.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Read order from order management system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Withdraw product from warehouse",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Reorder from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Demand delivery delay penalty",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Register product in stock management system",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Request courier",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Pack products",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Order read",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Product shipped",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Arrival delay",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Product in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Order ready for shipment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Order Management System",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Wholesaler",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Courier",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "in stock"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "not in stock"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "more than 10 days"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id5",
                        "condition": "product arrived"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "ready for shipment"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "not ready"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the reading of an order from the automatic order management system. Following this, the system checks if the product is in stock. \n\nIf the product is in stock, it is withdrawn from the warehouse. If the product is not in stock, a reorder is placed with the wholesaler. \n\nOnce the reorder is placed, the process checks if more than 10 days have passed. If more than 10 days have passed, a delivery delay penalty is demanded. If the product has arrived, it is registered in the stock management system. \n\nAfter the product is registered, the process checks if the whole order is ready for shipment. If the order is ready for shipment, a courier is requested. If the order is not ready for shipment, the process loops back to check if the product is in stock again.\n\nOnce the courier is requested, the process splits into two parallel tasks: packing the products and shipping the order. \n\nThe process ends when either the products are packed or the order is shipped.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Read order from automatic order management system",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Check if product is in stock",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Withdraw from warehouse",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Reorder from wholesaler",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Register product in stock management system",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Check if whole order is ready for shipment",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request courier",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Pack products",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Ship order",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Demand delivery delay penalty",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Order shipped",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Inclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Product in stock"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Product not in stock"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id14",
                        "targetRef": "id10",
                        "condition": "Waited more than 10 days"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "Product arrived"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "Order ready for shipment"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Order not ready for shipment"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j02.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to enter the type of machine. Once the type of machine is entered, the next step is to enter the serial number. After entering the serial number, questions are asked, and values are inputted. Following this, buttons are pressed, and values are collected automatically. \n\nAt this point, a decision is made. If additional questions are needed, the process continues with asking additional questions. Once the additional questions are asked, the process ends. If no additional questions are needed, the process ends immediately after collecting values automatically.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter type of machine",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Enter serial number",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Ask questions and input values",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Press buttons and collect values automatically",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Ask additional questions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id8",
                        "targetRef": "id5",
                        "condition": "Additional questions needed"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id8",
                        "targetRef": "id7",
                        "condition": "No additional questions"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to enter the machine type and serial number. Following this, questions are asked and values are inputted. Next, buttons are pressed and values are collected. \n\nAn exclusive decision is then made. If additional questions are required based on the results, further questions are asked. After these additional questions are asked, the process ends. \n\nIf no additional questions are required, the process directly ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter machine type and serial number",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Ask questions and input values",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Press buttons and collect values",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Ask additional questions based on results",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id8",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id9",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id10",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Additional questions required"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id6",
                        "condition": "No additional questions required"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step involves entering the machine type and serial number. Following this, questions are answered. Next, buttons are pressed, and values are collected automatically. \n\nAfter collecting the values, it is checked if additional questions are required. If additional questions are required, they are asked based on the results. Once the additional questions are answered, the process concludes with the inspection being completed. \n\nIf no additional questions are required, the process directly concludes with the inspection being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter machine type and serial number",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Answer questions",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Press buttons and collect values automatically",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Ask additional questions based on results",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "inspection completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id7",
                        "name": "Check if additional questions are required",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id7",
                        "targetRef": "id4",
                        "condition": "Additional questions required"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id7",
                        "targetRef": "id6",
                        "condition": "No additional questions required"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_j03.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the querying of webshops for parts. Once the parts are queried, an order list is created for each shop. Following this, the orders are prepared.\n\nThe process then proceeds in parallel, where parts arrive, and the building starts with the arrived parts. During the building process, the stock levels are monitored. If the stock falls below a threshold, an exclusive decision is made.\n\nIf the stock falls below 5, the process reorders parts from the cheapest supplier. If the stock falls below 3, the process reorders parts from the fastest supplier. If the stock reaches zero, a complaint email is written to friends.\n\nFinally, the process ends after the complaint email is sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Query Webshops for Parts",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create Order List per Shop",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare Orders",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Start Building with Arrived Parts",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder Parts (Cheapest)",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Reorder Parts (Fastest)",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Write Complaint Email to Friends",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Parts Arrived",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Stock Below 5",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Stock Below 3",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Stock Zero",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id13",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "name": "Stock Falls Below Threshold",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id10",
                        "condition": "Stock < 5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id15",
                        "targetRef": "id11",
                        "condition": "Stock < 3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id15",
                        "targetRef": "id12",
                        "condition": "Stock = 0"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the querying of web shops. Following this, a list of parts to order is created. The next step involves ordering parts from the cheapest shops. \n\nA decision is then made to check if there are enough parts available. If there are not enough parts, additional parts are ordered from other shops. Once the parts are ordered, they are received.\n\nUpon receiving the parts, the process waits for the first parts to arrive. When the first parts arrive, the building process starts. During the building process, the stock level is monitored.\n\nIf the stock falls below 5, parts are reordered. The process then checks the stock level again. If the stock falls below 3, fast parts are reordered. The stock level is checked once more.\n\nIf the stock reaches zero, a complaint email is written. Finally, the process ends. If the stock is at a critical level but not zero, the process loops back to monitor the stock level again. If the stock is sufficient (greater than or equal to 5), the process continues to monitor the stock level.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Query web shops",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Create list of parts to order",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Order parts from cheapest shops",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Order additional parts from other shops",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Receive parts",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Start building",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reorder parts if stock falls below 5",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Reorder fast parts if stock falls below 3",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Write a complaint email",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "First parts arrive",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Stock falls below 5",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Stock falls below 3",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Stock reaches zero",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Parts available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Stock critical level?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid-2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid-3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid-4",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sid-5",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Not enough parts"
                    },
                    {
                        "id": "sid-6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid-7",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Enough parts"
                    },
                    {
                        "id": "sid-8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid-9",
                        "sourceRef": "id11",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid-10",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sid-11",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "Stock < 5"
                    },
                    {
                        "id": "sid-12",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sid-13",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "Stock < 3"
                    },
                    {
                        "id": "sid-14",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sid-15",
                        "sourceRef": "id17",
                        "targetRef": "id14",
                        "condition": "Stock = 0"
                    },
                    {
                        "id": "sid-16",
                        "sourceRef": "id14",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sid-17",
                        "sourceRef": "id9",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sid-18",
                        "sourceRef": "id17",
                        "targetRef": "id11",
                        "condition": "Stock >= 5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to query web shops for parts. Once the parts have been queried, a list of parts to order is created. Following this, the cheapest parts are ordered.\n\nNext, the availability of the parts is checked. If the parts are available, they are received and checked. After receiving and checking the parts, the availability of the parts is checked again.\n\nIf the parts are in stock, the building process starts. During the building process, the stock levels are monitored. If the stock falls below 5, the cheapest parts are reordered, and the building process continues. If the stock falls below 3, the fastest parts are reordered, and the building process continues. If the stock is zero, a mail is written to friends, and the process ends.\n\nIf the parts are not in stock after the initial check, the building process starts directly. The stock levels are monitored during the building process, and the same conditions apply: reorder cheapest parts if stock falls below 5, reorder fastest parts if stock falls below 3, and write mail to friends if stock is zero, leading to the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Query web shops for parts",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Create a list of parts to order",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Order cheapest parts",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Receive and check parts",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Start building",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Reorder cheapest parts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Reorder fastest parts",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Write mail to friends",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "low_stock_5",
                        "name": "Stock falls below 5",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "low_stock_3",
                        "name": "Stock falls below 3",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "out_of_stock",
                        "name": "Stock is zero",
                        "type": "IntermediateThrowEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Check parts availability",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "In stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Stock levels",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway3",
                        "targetRef": "id6",
                        "condition": "Stock falls below 5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway3",
                        "targetRef": "id7",
                        "condition": "Stock falls below 3"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway3",
                        "targetRef": "id8",
                        "condition": "Stock is zero"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "id5",
                        "condition": "no"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j04.txt": {
        "0": {
            "text": "The process begins when an internship request is initiated. The first step is to enter a topic that interests you. Following this, you enter your experience and hobbies. After providing this information, you receive an offer. \n\nAt this point, you need to make a decision regarding the offer. If you accept the offer, you proceed to write status updates about your internship. The company also writes status updates about you as an intern. Once these updates are completed, the internship is finished. \n\nAfter the internship is finished, you have the opportunity to recommend the company to your friends.",
            "model": {
                "tasks": [
                    {
                        "id": "task_enter_topic",
                        "name": "Enter a topic that interests you",
                        "type": "User"
                    },
                    {
                        "id": "task_enter_experience",
                        "name": "Enter experience and hobbies",
                        "type": "User"
                    },
                    {
                        "id": "task_accept_deny_offer",
                        "name": "Accept or deny offers",
                        "type": "User"
                    },
                    {
                        "id": "task_write_status_updates_intern",
                        "name": "Write status updates about internship",
                        "type": "User"
                    },
                    {
                        "id": "task_write_status_updates_company",
                        "name": "Company writes status updates about intern",
                        "type": "User"
                    },
                    {
                        "id": "task_recommend_company",
                        "name": "Recommend the company to friends",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event_start",
                        "name": "Internship request initiated",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event_receive_offer",
                        "name": "Receive offer",
                        "type": "IntermediateMessageCatchEvent"
                    },
                    {
                        "id": "event_internship_finished",
                        "name": "Internship finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway_offer_decision",
                        "name": "Offer Decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow_1",
                        "sourceRef": "event_start",
                        "targetRef": "task_enter_topic"
                    },
                    {
                        "id": "flow_2",
                        "sourceRef": "task_enter_topic",
                        "targetRef": "task_enter_experience"
                    },
                    {
                        "id": "flow_3",
                        "sourceRef": "task_enter_experience",
                        "targetRef": "event_receive_offer"
                    },
                    {
                        "id": "flow_4",
                        "sourceRef": "event_receive_offer",
                        "targetRef": "gateway_offer_decision"
                    },
                    {
                        "id": "flow_5",
                        "sourceRef": "gateway_offer_decision",
                        "targetRef": "task_accept_deny_offer"
                    },
                    {
                        "id": "flow_6",
                        "sourceRef": "task_accept_deny_offer",
                        "targetRef": "task_write_status_updates_intern",
                        "condition": "Accepted"
                    },
                    {
                        "id": "flow_7",
                        "sourceRef": "task_write_status_updates_intern",
                        "targetRef": "task_write_status_updates_company"
                    },
                    {
                        "id": "flow_8",
                        "sourceRef": "task_write_status_updates_company",
                        "targetRef": "event_internship_finished"
                    },
                    {
                        "id": "flow_9",
                        "sourceRef": "event_internship_finished",
                        "targetRef": "task_recommend_company"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to enter the topic of interest. Following this, the desired amount of money is entered. Next, the user enters their experience and hobbies. After this information is provided, an offer is received.\n\nAt this point, a decision is made. If the offer is accepted, the process continues with accepting the offer, which leads to the offer being accepted. If the offer is denied, the process continues with denying the offer, which leads to the offer being denied. If the offer is denied, the process loops back to the point where an offer is received.\n\nOnce the offer is accepted, a status update event occurs. This triggers two parallel actions: the user writes a status update about the internship, and the company writes a status update about the intern. Both of these actions lead to the internship being finished.\n\nAfter the internship is finished, the user recommends the company to friends. This leads to a parallel gateway where two actions occur simultaneously: sending a tweet and ending the process. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Enter topic of interest",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Enter desired amount of money",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Enter experience and hobbies",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Receive offer",
                        "type": "User"
                    },
                    {
                        "id": "t5",
                        "name": "Accept offer",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Deny offer",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Write status update about internship",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Company writes status update about intern",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Recommend company to friends",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Send tweet",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Offer received",
                        "type": "IntermediateCatchingEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Offer accepted",
                        "type": "IntermediateCatchingEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Offer denied",
                        "type": "IntermediateCatchingEvent"
                    },
                    {
                        "id": "e5",
                        "name": "status update",
                        "type": "IntermediateCatchingEvent"
                    },
                    {
                        "id": "e6",
                        "name": "Internship finished",
                        "type": "IntermediateCatchingEvent"
                    },
                    {
                        "id": "e7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "e2",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g1",
                        "targetRef": "t5",
                        "condition": "Offer accepted"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g1",
                        "targetRef": "t6",
                        "condition": "Offer denied"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t5",
                        "targetRef": "e3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t6",
                        "targetRef": "e4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "e3",
                        "targetRef": "e5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "e4",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "e5",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "e5",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "t7",
                        "targetRef": "e6"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "t8",
                        "targetRef": "e6"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "e6",
                        "targetRef": "t9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t9",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "g2",
                        "targetRef": "t10"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "t10",
                        "targetRef": "e7"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "G_g01.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the sending of invitations. Once the invitations are sent, the next step is to find out which games to play. After determining the games, a date is appointed for the LAN party. \n\nAt this point, it is checked if eight or more people have agreed to attend. If fewer than eight people agree, the process loops back to appointing a new date. If eight or more people agree, the process continues to check if all the required games are available.\n\nIf any games are missing, they are downloaded. Once all games are available, the next step is to find out how much beer is required. \n\nAfter determining the beer requirements, it is checked if there is enough beer. If there is not enough beer, the missing beer is bought. Once there is enough beer, the LAN party is enjoyed.\n\nFinally, the process ends with the conclusion of the LAN party.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Find out games to play",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Appoint a date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Find out if you have all the games",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Download missing games",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Find out how much beer is required",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Buy missing beer",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Enjoy the LAN party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "8 or more people agree?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Games missing?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Enough beer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, after which invitations are sent out. Once the invitations are sent, the process continues to find out which games the invitees want to play. After receiving the list of games, a date for the LAN party is appointed. \n\nThe appointed date is then confirmed. If fewer than eight people agree on the date, the process loops back to appointing a new date. If eight or more people agree on the date, the process proceeds to check the availability of the games. \n\nIf any games are missing, they are downloaded. Once all games are available, the process continues to find out the beer requirements. \n\nAfter determining the beer requirements, it is checked whether there is enough beer. If there is not enough beer, the missing beer is bought. Once there is enough beer, all preparations are considered done. \n\nFinally, the LAN party is enjoyed, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Find out which games they want to play",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Appoint a date for the LAN party",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check games availability",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Download missing games",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Find out beer requirements",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Buy missing beer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enjoy the LAN party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Invitations sent",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Games list received",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Date appointed",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "8 or more people agree on date",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Games checked",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Beer requirement known",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "All preparations done",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id17",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id18",
                        "name": "Date confirmation",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "name": "Games available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "Enough beer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id18",
                        "targetRef": "id3",
                        "condition": "Less than 8 people agree"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id18",
                        "targetRef": "id13",
                        "condition": "8 or more people agree"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id4",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "Games missing"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id19",
                        "targetRef": "id14",
                        "condition": "All games available"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id15",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id20",
                        "targetRef": "id7",
                        "condition": "Not enough beer"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id20",
                        "targetRef": "id16",
                        "condition": "Enough beer"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id7",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id16",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, after which invitations are sent out. Following this, the games to be played are determined, and a list of games is received. Next, a date for the LAN party is appointed. \n\nIf fewer than eight people agree on the date, the process loops back to appointing a date for the LAN party. If eight or more people agree, the date is accepted, and the LAN party is scheduled. \n\nAfter scheduling the LAN party, it is checked whether all the games are available. If any games are missing, they are downloaded. Once all games are checked, the beer requirements are determined. \n\nNext, it is checked whether there is enough beer. If there is not enough beer, the missing beer is bought. Once the beer is checked, the LAN party is enjoyed, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send invitations",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Find out which games to play",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Appoint a date for LAN party",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Find if all games are available",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Find out beer requirements",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Download missing games",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Buy missing beer",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Enjoy LAN party",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "List of games received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Date agreed",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "LAN party scheduled",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Games checked",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Beer checked",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Date accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Games available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Enough beer?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "id3",
                        "condition": "less than 8 people agree"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gw1",
                        "targetRef": "id11",
                        "condition": "8 or more people agree"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id4",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw2",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw2",
                        "targetRef": "id13",
                        "condition": "yes"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id13",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id5",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "gw3",
                        "targetRef": "id7",
                        "condition": "no"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "gw3",
                        "targetRef": "id14",
                        "condition": "yes"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id7",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_j02.txt": {
        "0": {
            "text": "The process begins with the start event, after which the specification team receives the specifications. Once the specifications are received, the requirements are sent to different teams. \n\nThe Russian team then manufactures the Vodka Bar, the Irish team manufactures the Whiskey Bar, the seat team manufactures the seats, and the toilet team manufactures the toilet parts. \n\nAll these manufactured parts are then assembled by the assembly team to complete the interior of the plane. \n\nAfter the interior assembly, the plane undergoes a test flight. \n\nFollowing the test flight, the specification team creates a test protocol and sends it to the customer. \n\nOnce the test protocol is sent, the plane is delivered to the customer. \n\nFinally, the customer confirms the delivery, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive specifications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send requirements to different teams",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Manufacture Vodka Bar",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Manufacture Whiskey Bar",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Manufacture seats",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Manufacture toilet parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble interior of the plane",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Test flight",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Create test protocol",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send test protocol to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Deliver plane to customer",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Customer confirms delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Manufacturing",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Specification Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Russian Team",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Irish Team",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Seat Team",
                                "elemRefs": [
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Toilet Team",
                                "elemRefs": [
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane6",
                                "name": "Assembly Team",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start of the manufacturing process. Customer relations receive the customer specifications. Once the specifications are received, the requirements are sent to the respective teams by the manufacturing unit. \n\nThe manufacturing unit then proceeds to manufacture the vodka bar and the whiskey bar simultaneously. After both bars are manufactured, they are assembled into the interior of the plane. \n\nFollowing the assembly, the plane is sent on a test flight by the testing unit. During the test flight, a test protocol is created. \n\nOnce the test protocol is completed, the logistics unit delivers the plane to the customer. \n\nFinally, customer relations confirm the delivery with the customer, and the process concludes with the end of the manufacturing process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive customer specifications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send requirements to teams",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Manufacture vodka bar",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Manufacture whiskey bar",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Assemble the interior of the plane",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send plane on test flight",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Create test protocol",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Deliver plane to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Customer confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start manufacturing process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End manufacturing process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Manufacturer",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Customer Relations",
                                "elemRefs": [
                                    "id1",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Manufacturing Unit",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Testing Unit",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Logistics Unit",
                                "elemRefs": [
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to receive the specifications. Once the specifications are received, the requirements are sent to the respective teams. Following this, the interior of the plane is assembled. After the interior assembly, a test flight is conducted. Subsequently, a test protocol is created. This test protocol is then sent to the customer. After sending the test protocol, the plane is delivered to the customer. The customer then confirms the delivery. Finally, the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive Specifications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Requirements to Teams",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Assemble Interior",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Conduct Test Flight",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Create Test Protocol",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Send Test Protocol to Customer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Deliver Plane to Customer",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm Delivery",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_k05.txt": {
        "0": {
            "text": "The process begins with the start of building a tree house. Initially, requirements are collected. These requirements are then sent to the architect. The architect refines the draft with additional requirements. This refinement process may loop back to the architect for further refinement if necessary.\n\nOnce the requirements are finalized, a list of needed materials is created. These materials are then ordered from online stores. After ordering the materials, messages are sent to friends to help build the house.\n\nThe actual building of the tree house then takes place. Once the tree house is built, invitations for a tree house party are sent out. A list of attendees for the party is created, and snacks for the party are bought. The process concludes with the end of building the tree house.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send requirements to architect",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Refine draft with additional requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create list of needed materials",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Order materials from online stores",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send messages to friends to build house",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Build tree house",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Send invitations for tree house party",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create list of attendees",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Buy snacks for the party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start building tree house",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End building tree house",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Draft refinement loop",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "mf2",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to collect requirements. Once the requirements are collected, they are sent to the architect. The architect then refines the draft with additional requirements. After refining the draft, a list of needed materials is created. The materials are then ordered from online stores. Once the materials are ordered, friends are notified to help build the house. The house is then built, marking the completion of this phase with the house built event.\n\nFollowing the completion of the house, invitations for a tree house party are sent out. A list of attendees is created based on the responses to the invitations. Finally, snacks for the party are bought, and the process concludes with the party preparations completed event.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Collect requirements",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Send requirements to architect",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Refine draft with additional requirements",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Create list of needed materials",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Order materials from online stores",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Notify friends to build house",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Build the house",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Send invitations for tree house party",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Create list of attendees",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Buy snacks for party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "House built",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Party preparations completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task7",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "event2",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task10",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to collect requirements. Once the requirements are collected, they are sent to the architect. The architect then refines the draft with additional requirements. After refining the draft, a list of needed materials is created from the plan. These materials are then ordered from several online stores. Once the materials are ordered, the process reaches an intermediate event indicating that the materials have been ordered.\n\nFollowing this, friends are notified to help build the house. After the house is built, the process reaches another intermediate event indicating that the house has been built. Next, invitations for a tree house party are sent out. A list of people attending the party is then created. Finally, the process ends with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect requirements",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send requirements to architect",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Refine draft with additional requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create list of needed materials from the plan",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Order materials from several online stores",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Notify friends to build the house",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send invitations for tree house party",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create list of people attending party",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Materials ordered",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "House built",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "eid4",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "eid2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "eid2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "eid3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "eid3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "eid4"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "G_j01.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the determination of resources to gather. Once the resources are determined, a resource dependency check is performed. Following this, a parallel gateway is used to select the type of resource collection. \n\nThe process then proceeds to collect resources. Simultaneously, a check for the occurrence of a natural disaster is made. Regardless of whether a disaster occurs or not, the process continues with the collection of resources. \n\nAfter collecting the resources, the process checks if a milestone has been reached. If a milestone is reached, a notification is sent to indicate that the milestone has been reached, and then the resource list is updated. If the milestone is not reached, the resource list is updated directly, and the process continues with the collection of resources.\n\nOnce the resource list is updated, the process either continues with the collection of resources or ends with the finished farming event. If the process continues, it loops back to collect resources again.\n\nAfter collecting resources, the process reaches a decision point where it either notifies friends or sends materials. Depending on the decision, the process proceeds to send a brag or materials. Finally, the process ends with the finished farming event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Determine resources to gather",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Collect resources",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Update resource list",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Notify milestone reached",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send brag or materials",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Finished farming",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id8",
                        "name": "Resource dependency check",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id9",
                        "name": "Select resource collection type",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Natural disaster occurrence",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Reached milestone",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Notify friends or send materials",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "No disaster"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Disaster occurred"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Milestone reached"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Continue farming"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id4",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id3",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id3",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the identification of the necessary resources. Once the resources are identified, the process splits into two parallel activities: collecting the resources and creating the tools. These two activities are performed simultaneously. After the resources are collected, the process continues with the creation of tools if it hasn't already started.\n\nOnce the tools are created, the process waits until all preferences are collected. After this waiting period, the resources to be farmed are updated. During this process, if a natural disaster occurs, the process will revert to the creation of tools to address any issues caused by the disaster.\n\nAfter updating the resources, milestones are notified, and the process continues with sending materials to friends. Following this, the user brags to friends about the achievements. Finally, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Find out which resources are needed",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Collect resource",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Create tools",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Update resources to be farmed",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Notify milestones",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Brag to friends",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send materials to friends",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "All preferences collected",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Natural disaster",
                        "type": "IntermediateErrorEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Resource dependencies",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id13",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id13",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id11",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the player starting the process. The first step is to find out the required resources. Once the required resources are identified, the process splits into parallel tasks to collect various resources. These tasks include collecting water, wood, stone, ore, clay, herbs, berries, fish, cotton, and wheat.\n\nIf wood, stone, or ore is collected, these resources are used to create tools. Once all resources are collected, the preferences are collected, and the process continues.\n\nThe collected preferences lead to another parallel split. The bot starts farming, and this can lead to three possible outcomes: reaching a milestone, encountering a random natural disaster, or the bot finishing its task. If a milestone is reached, the bot continues farming. If a random natural disaster occurs, the bot also continues farming. If the bot finishes its task, the process moves to an exclusive decision point.\n\nAt this decision point, the player can either brag to friends or send materials to friends. Regardless of the choice, the process ends after either bragging to friends or sending materials to friends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Find out required resources",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Collect water",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Collect wood",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Collect stone",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Collect ore",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Collect clay",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Collect herbs",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Collect berries",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Collect fish",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Collect cotton",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Collect wheat",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Create tools",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Bot starts farming",
                        "type": "Service"
                    },
                    {
                        "id": "id14",
                        "name": "Update to-be-farmed materials list",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Brag to friends",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Send materials to friends",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Preferences collected",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Random natural disaster",
                        "type": "IntermediateThrowingEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Milestone reached",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Bot finished",
                        "type": "IntermediateNoneEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Process start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id22",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id23",
                        "type": "Parallel"
                    },
                    {
                        "id": "id24",
                        "type": "Parallel"
                    },
                    {
                        "id": "id25",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Player",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Resource Collection",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id14"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Bot Management",
                                "elemRefs": [
                                    "id13",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id21",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id23"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id23",
                        "targetRef": "id2",
                        "condition": "Collect water"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id23",
                        "targetRef": "id3",
                        "condition": "Collect wood"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id23",
                        "targetRef": "id4",
                        "condition": "Collect stone"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id23",
                        "targetRef": "id5",
                        "condition": "Collect ore"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id23",
                        "targetRef": "id6",
                        "condition": "Collect clay"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id23",
                        "targetRef": "id7",
                        "condition": "Collect herbs"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id23",
                        "targetRef": "id8",
                        "condition": "Collect berries"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id23",
                        "targetRef": "id9",
                        "condition": "Collect fish"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id23",
                        "targetRef": "id10",
                        "condition": "Collect cotton"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id23",
                        "targetRef": "id11",
                        "condition": "Collect wheat"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id3",
                        "targetRef": "id12",
                        "condition": "Create tools"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id4",
                        "targetRef": "id12",
                        "condition": "Create tools"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id5",
                        "targetRef": "id12",
                        "condition": "Create tools"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id12",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id8",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id10",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id11",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id17",
                        "targetRef": "id24"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "id24",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "id13",
                        "targetRef": "id19",
                        "condition": "Milestone reached"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "id13",
                        "targetRef": "id18",
                        "condition": "Random natural disaster"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "id13",
                        "targetRef": "id20",
                        "condition": "Bot finished"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Update materials list"
                    },
                    {
                        "id": "flow30",
                        "sourceRef": "id19",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow31",
                        "sourceRef": "id18",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow32",
                        "sourceRef": "id20",
                        "targetRef": "id25"
                    },
                    {
                        "id": "flow33",
                        "sourceRef": "id25",
                        "targetRef": "id15",
                        "condition": "Brag to friends"
                    },
                    {
                        "id": "flow34",
                        "sourceRef": "id25",
                        "targetRef": "id16",
                        "condition": "Send materials"
                    },
                    {
                        "id": "flow35",
                        "sourceRef": "id15",
                        "targetRef": "id22"
                    },
                    {
                        "id": "flow36",
                        "sourceRef": "id16",
                        "targetRef": "id22"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_g02.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to develop a basic design. Once the design is developed, Lego brick sets are ordered. After the Lego brick sets are ordered, the parts are sorted into containers manually. Following the sorting, subcomponents are built.\n\nAt this point, a decision is made on whether parts need to be reordered. If parts need to be reordered, individual parts are reordered, and the process returns to building subcomponents. If parts do not need to be reordered, the subcomponents are tested.\n\nAfter testing the subcomponents, another decision is made on whether the subcomponents have been tested successfully. If the subcomponents are tested successfully, they are assembled, and the process ends. If the subcomponents are not tested successfully, they are redesigned and rebuilt, and the process returns to building subcomponents.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Develop basic design",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Order Lego brick sets",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Sort parts into containers",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Build subcomponents",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder individual parts",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Test subcomponents",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Assemble subcomponents",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Redesign and rebuild subcomponents",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Parts are reordered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Subcomponents tested successfully?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw1",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gw1",
                        "targetRef": "id6",
                        "condition": "no"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gw2",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "end1"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the development of the basic design. Once the basic design is developed, Lego brick sets are ordered. After the Lego brick sets are ordered, the parts are sorted into containers. \n\nNext, the process checks if the necessary parts are available. If the parts are available, the subcomponent is built. If the parts are not available, individual parts are reordered, and the process returns to sorting parts into containers once the parts arrive.\n\nAfter building the subcomponent, the subcomponent is tested. If the test is successful, the subcomponents are assembled. If the test is not successful, the subcomponent is redesigned and rebuilt, and the process returns to building the subcomponent.\n\nFinally, after the subcomponents are assembled, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Develop the basic design",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order Lego brick sets",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Sort parts into containers",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Build subcomponent",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Reorder individual parts",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Test subcomponent",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Redesign and rebuild subcomponent",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Assemble subcomponents",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Parts available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Test successful?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id12",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the development of a basic design. Once the basic design is developed, Lego brick sets are ordered. After the Lego brick sets are ordered, the parts are sorted into containers manually. \n\nFollowing the sorting of parts, subcomponents are built manually. After building the subcomponents, an exclusive decision is made based on the availability of parts. If parts are available, the subcomponents are tested. If no parts are available, individual parts are reordered.\n\nAfter testing the subcomponents, another exclusive decision is made based on the success of the test. If the test is not successful, the subcomponents are redesigned and rebuilt. If the test is successful, another exclusive decision is made to determine if there are more subcomponents to build. If there are more subcomponents to build, the process loops back to building subcomponents. If all subcomponents are built, the machine is assembled manually.\n\nFinally, the process ends with the completion of the machine assembly.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Develop basic design",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order Lego brick sets",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Sort parts into containers",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Build subcomponents",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Test subcomponents",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Reorder individual parts",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Redesign and rebuild subcomponents",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Assemble machine",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "Parts available"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "No parts available"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id7",
                        "condition": "Test not successful"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "Test successful"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "More subcomponents to build"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "All subcomponents built"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j01.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to collect relevant information from the machine. Once the information is collected, the OEE (Overall Equipment Effectiveness) is calculated. \n\nBased on the calculated OEE, a decision is made. If the OEE falls below a certain threshold, the machine is stopped, and an email is sent to the engineer. If the machine is disconnected, the process ends with the machine being disconnected.\n\nIf the OEE is above the threshold, the machine is restarted manually, and the process loops back to collecting relevant information from the machine again. The process continues in this loop until the machine is either stopped due to low OEE or disconnected.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect relevant information from machine",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Calculate OEE",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Stop machine",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send email to engineer",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Restart machine",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Machine disconnected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "OEE falls below threshold"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id5",
                        "condition": "OEE is above threshold"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "Machine disconnected"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start of the process. The first step is to collect relevant information from the machine. Once the information is collected, the OEE (Overall Equipment Effectiveness) is calculated. \n\nAfter calculating the OEE, a decision is made based on whether the OEE is above or below the threshold. If the OEE is above the threshold, the process continues measuring. \n\nIf the OEE falls below the threshold, the machine is stopped. Following the stopping of the machine, an email is sent to the engineer. The process then ends with the machine being disconnected.\n\nAdditionally, if the OEE falls below the threshold, there is an alternative path where the machine is restarted, and the process continues measuring.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect relevant information from machine",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Calculate OEE",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Stop machine",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send email to engineer",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Continue measuring",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Restart machine",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "OEE falls below threshold",
                        "type": "IntermediateConditionalEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Machine disconnected",
                        "type": "TerminateEndEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id10",
                        "targetRef": "id8",
                        "condition": "OEE below threshold"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id10",
                        "targetRef": "id5",
                        "condition": "OEE above threshold"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to collect information from the machine. Once the information is collected, the next step is to calculate the Overall Equipment Effectiveness (OEE). \n\nIf the OEE is found to be below the threshold, two parallel actions are triggered. The machine is stopped, and an email is sent to the engineer. \n\nAfter the machine is stopped, the process waits for the machine to be restarted. Once the machine is restarted, it is restarted again, and the process loops back to collecting information from the machine.\n\nIf at any point the machine gets disconnected, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Collect information from machine",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Calculate OEE",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Stop machine",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send email to engineer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Restart machine",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "OEE below threshold",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Machine restarted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Machine disconnected",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id10",
                        "name": "process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id7",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j03.txt": {
        "0": {
            "text": "The process begins when the customer starts by describing the symptoms of their fridge and sends this information to the service center.\n\nNext, the service center selects a local service facility to handle the repair.\n\nThe customer then makes an appointment with the local service facility.\n\nAt this point, it is determined whether additional parts are needed for the repair.\n\nIf additional parts are needed, the process ends.\n\nIf no additional parts are needed, the local service facility proceeds to repair the fridge.\n\nAfter the repair, the customer confirms that the fridge is working properly.\n\nFinally, the customer rates the service facility, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe symptoms and send to service center",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select local service facility",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Make an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Repair fridge",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm fridge is OK",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Rate service facility",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Additional parts needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Service Center",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Central Service",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Local Service Facility",
                                "elemRefs": [
                                    "id3",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id9",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when the customer starts by describing the symptoms of their fridge and sending this information to the service center. Once the symptoms are sent, the service center selects a local service facility. The service center then makes an appointment for the fridge repair.\n\nAt this point, a decision is made. If the job can be completed without needing additional parts, the local service facility proceeds to repair the fridge. Once the fridge is repaired, the customer confirms that the fridge is working properly. Following this confirmation, the customer rates the service facility, and the process ends.\n\nIf the job requires additional parts, the local service facility leaves without repairing the fridge, and the process ends with the indication that parts are needed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe symptoms and send to service center",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select local service facility",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Repair fridge",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm fridge is OK",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Rate service facility",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Leave without repairing fridge",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Symptoms sent",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id10",
                        "name": "EndService",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Fridge repaired",
                        "type": "IntermediateThrowEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts needed",
                        "type": "IntermediateThrowEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id16",
                        "name": "Service Center",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Service Center",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "Local Service Facility",
                                "elemRefs": [
                                    "id4",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Job completed"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "Parts needed"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id11",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id12",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the fridge produces strange noises. The customer describes the symptoms and sends this information to the service center. The service center then selects a local service facility. Following this, the customer makes an appointment with the selected local service facility. The local service facility then repairs the fridge. \n\nAfter the repair, it is determined whether additional parts are needed. If additional parts are needed, the repair process continues until no more parts are required. Once the fridge is repaired and no additional parts are needed, the customer confirms that the fridge is repaired. Finally, the customer rates the service facility, and the process concludes with the fridge being repaired.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Describe symptoms and send to service center",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select local service facility",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Make an appointment",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Repair fridge",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Confirm fridge is repaired",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Rate service facility",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Fridge produces strange noises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Fridge is repaired",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Additional parts needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Customer Lane",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id12",
                        "name": "Central Fridge Service Center",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Service Center Lane",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id14",
                        "name": "Local Service Facility",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Facility Lane",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id9",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "X_g01.txt": {
        "0": {
            "text": "The process begins with the start event, where a user selects a course. \n\nNext, it is checked if there are free slots available for the selected course. \n\nIf free slots are available, the user's account is checked. \n\nIf the user does not have an account, it is verified whether the user is registered at an eligible university. \n\nIf the user is registered at an eligible university, the user proceeds to register an account. \n\nIf the user is not registered at an eligible university, the user requests activation. \n\nOnce the account is registered, the user logs into the account. \n\nIf the user already has an account, they directly log into the account. \n\nAfter logging in, the user tweets to friends about the course. \n\nFollowing this, the user completes the course registration. \n\nFinally, the user provides payment information, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select Course",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check Account",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check University Registration",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register Account",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Activation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Log into Account",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Tweet to Friends",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Complete Course Registration",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Provide Payment Information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Free Slots Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Has Account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Registered at Eligible University?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id14",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to select a course. After selecting a course, the availability of slots is checked. If slots are free, the user proceeds to select the course and date. If slots are not free, the user is prompted to select a course again.\n\nOnce the course and date are selected, the user checks if they have an account. If the user has an account, they log into their account. If the user does not have an account, they check if they are registered at the university. If they are registered at the university, they proceed to register their account. If they are not registered at the university, they request activation and wait for a response. Once the response is received, they log into their account.\n\nAfter logging into the account, the user tweets to friends about their registration. Following this, the user completes the registration process and provides payment information. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select a course",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if slots are free",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select course and date",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if you have an account",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check university registration",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register your account",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Request activation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Wait for response",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Log into account",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Tweet to friends",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Complete registration",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Provide payment information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Do you have an account?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Registered at university?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "Slots are free"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id15",
                        "targetRef": "id1",
                        "condition": "Slots are not free"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id17",
                        "targetRef": "id9",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "No"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to select a course. After selecting a course, the availability of slots is checked. If no slots are available, the process loops back to selecting a course. If slots are available, the next step is to check if you have an account. If an account exists, you log into your account. If no account exists, it is checked whether you are registered at an eligible university. If you are registered at an eligible university, you proceed to register your account. If you are not registered at an eligible university, you request an activation and wait for a response. After registering your account, you log into your account. Once logged in, you tweet to friends. Following this, you complete the registration for the course. The next step is to provide payment information, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Select a course",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check if slots are free",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Check if you have an account",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check if registered at an eligible university",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Register your account",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request an activation and wait for a response",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Log into your account",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Tweet to friends",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Complete the registration for the course",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Provide payment information",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Slots free?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Account exists?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Registered at eligible university?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "no slots available"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "slots available"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "account exists"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "id14",
                        "targetRef": "id4",
                        "condition": "no account"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "registered at eligible university"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "id15",
                        "targetRef": "id6",
                        "condition": "not registered"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "V_k08.txt": {
        "0": {
            "text": "The process begins with the user logging into the E-Shop. If the login is successful, the user proceeds to select products. If the login is not successful, the process ends.\n\nAfter selecting products, the user adds the products to the shopping cart and then saves the products. The process checks if all products have been selected. If not, the user returns to select more products. If all products have been selected, the process moves on to prepare payment and shipment.\n\nThe user then enters the payment data, followed by entering the shipping address. The process checks if the shipping address is the same as the billing address. If they are the same, the process ends. If they are different, the user enters the billing address, and then the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log into E-Shop",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Add products to shopping cart",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Save products",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare payment and shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Enter payment data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter shipping address",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter billing address (if required)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "Login successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "All products selected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Shipping = billing address?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "id1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "g1",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "g1",
                        "targetRef": "e2",
                        "condition": "no"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "id4",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "g2",
                        "targetRef": "id2",
                        "condition": "no"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "g2",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "id7",
                        "targetRef": "g3"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "g3",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "g3",
                        "targetRef": "e2",
                        "condition": "yes"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "id8",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a customer starts the online shopping process. The customer first logs in. The system then checks the credentials provided by the customer. If the login is successful, the customer proceeds to select products. If the login fails, the process ends.\n\nAfter selecting products, the customer adds a product to the shopping cart and saves the product. The customer then decides whether to select more products or proceed with the current selection. If more products are to be selected, the customer returns to the product selection step. If all products have been selected, the system prepares for payment and shipment.\n\nThe customer then enters payment data and shipping address. If the billing address is different from the shipping address, the customer also enters the billing address. Once all necessary information is provided, the system finishes the order, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Login",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check credentials",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Select products",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Add product to shopping cart",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Save product",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare payment and shipment",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Enter payment data",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter shipping address",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Enter billing address",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Finish order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id16",
                        "name": "Online Shop",
                        "lanes": [
                            {
                                "id": "id17",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id18",
                                "name": "System",
                                "elemRefs": [
                                    "id2",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "Login successful"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id12",
                        "condition": "Login failed"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "More products to select"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "All products selected"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id8",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Different billing address"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The user logs into the E-Shop. If the login is successful, the user proceeds to select products. If the login is not successful, the process ends.\n\nAfter selecting products, the user adds a product to the shopping cart and then saves the product. The process checks if all products have been selected. If not, the user continues to select products. If all products have been selected, the process moves forward to prepare payment and shipment in parallel.\n\nThe user then enters payment data and the shipping address. The process checks if the shipping address is the same as the billing address. If the addresses are different, the user enters the billing address. If the addresses are the same, the user proceeds to finish the order.\n\nFinally, the order is finished, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log into E-Shop",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select products",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Add product to shopping cart",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Save product",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter payment data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enter shipping address",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter billing address (if different)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Finish order",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Login Successful?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "All products selected?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Shipping address equals billing address?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Payment and shipment prepared",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "No"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "No"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id12",
                        "targetRef": "id14",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id5",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id6",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id13",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "R_j04.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to check the car registration. \n\nIf the car is registered, the owner is notified. If the car is not registered, the process ends with the determination that service is necessary.\n\nAfter notifying the owner, it is checked whether the owner went to the service. \n\nIf the owner went to the service, car problems are entered. If the owner did not go to the service, the owner is fined.\n\nOnce the car problems are entered, status updates are sent via email. \n\nFollowing this, the owner pays through the app. \n\nAfter the payment, the successful repair is entered, and the 'Pickerl' is provided. \n\nFinally, the next service time is entered, and the process ends with the service being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check car registration",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Notify owner",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Fine owner",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Enter car problems",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send status updates via email",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Pay through app",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter successful repair and provide 'Pickerl'",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Enter next service time",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Service necessary",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Service completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Is car registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Did owner go to service?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "no"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins after a successful service. The first step is to check the car registration. If the car is registered, the car owner is notified. If the car is not registered, the process ends with the car owner being fined.\n\nAfter notifying the car owner, the process checks if the car service is completed. If the service is completed, the mechanic enters the car problems. If the service is not completed, the process ends with the car owner being fined.\n\nOnce the car problems are entered, status updates are sent via email. Following this, the mechanic enters the repair success and the issuance of the 'Pickerl'. The car owner then pays through the app. Finally, the mechanic enters the next service time, and the process ends with the service being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check car registration",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Notify car owner",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Enter car problems",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send status updates via email",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Enter repair success and 'Pickerl' issuance",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Enter next service time",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Fine car owner",
                        "type": "Manual"
                    },
                    {
                        "id": "id8",
                        "name": "Pay through app",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start after successful service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "Service completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "fined_end",
                        "name": "Service not completed and fined",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Car registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Car Service done?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Police",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "App System",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Car Service Facility",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Mechanic",
                                "elemRefs": [
                                    "id3",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "id2",
                        "condition": "registered"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "fined_end",
                        "condition": "not registered"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "id3",
                        "condition": "completed"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "id7",
                        "condition": "not completed"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id6",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a service is necessary. The first step is to check the car registration. \n\nIf the car is still registered, the car owner is notified. \n\nIf the car is not registered, a timer is set for 30 days, after which the car owner is notified again.\n\nAfter notifying the car owner, a decision is made whether to go to service. \n\nIf the decision is to go to service, car problems are entered into the system. \n\nFollowing this, status updates are sent via email. \n\nNext, the payment is processed. \n\nAfter the payment is processed, the successful repair is entered into the system. \n\nThen, the next service time is entered, and the process ends with a successful service.\n\nIf the decision is not to go to service, a fine is issued. \n\nAdditionally, if the car owner is notified after 30 days and the car is still not registered, a fine is issued.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check car registration",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Notify car owner",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Enter car problems",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send status updates via email",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Process payment",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Enter successful repair",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Enter next service time",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Issue fine",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "Service necessary",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Successful service",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Notified after 30 days",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id12",
                        "name": "Car still registered?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Go to service?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id12",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id12",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id13",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j03.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the gathering of information about work accidents. Once the information is gathered, it is determined whether the accident involved a fatal or serious injury. If the injury is fatal or serious, the accident is reported to the Labour Inspectorate, and the process ends.\n\nIf the injury is not fatal or serious, it is then assessed whether reporting to emergency services is required. If it is required, the accident is reported to emergency services, and the process ends.\n\nIf reporting to emergency services is not required, it is then determined whether an accident insurance claim is necessary. If an insurance claim is necessary, the accident is reported to the accident insurance provider, and the process ends.\n\nIf an accident insurance claim is not necessary, it is checked whether the accident occurred at an educational institution. If it did, the accident is reported to the competent directorate, and the process ends.\n\nIf the accident did not occur at an educational institution, it is then determined whether a private insurance claim is needed. If a private insurance claim is needed, the accident is reported to the private insurance provider, and the process ends.\n\nIf a private insurance claim is not needed, the process ends directly.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Gather information about work accidents",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report accident to Labour Inspectorate",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Report accident to emergency services",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Report accident to accident insurance provider",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Report accident to competent directorate",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Report accident to private insurance provider",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Fatal or serious injury?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id10",
                        "name": "Report to emergency services required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Accident insurance claim?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Educational institution?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Private insurance claim?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id14",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id11",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id4",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "no"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id13",
                        "condition": "no"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is for the employee to gather information about the work accident. Once the information is gathered, the employee informs the employer of the work accident or near-miss. \n\nThe employer then reports serious accidents to the Labour Inspectorate. Following this, the employer reports the work accident to the accident insurance provider, the competent directorate, and the private insurance provider. \n\nThe process concludes with the end event after the reports have been made to the respective insurance providers and the competent directorate.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Gather information about work accident",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Inform employer of work accident or near-miss",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Employer reports serious accidents to Labour Inspectorate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Report work accident to accident insurance provider",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Report work accident to competent directorate",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Report accident to private insurance provider",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accident Reporting Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Employee",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employer",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Insurance Providers",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an accident occurs. The first step is to gather accident information. After gathering the information, it is determined whether the accident is a work accident. If it is not a work accident, the process ends with the accident being reported and handled.\n\nIf it is a work accident, the employee reports the accident to the employer. The next step is to determine if the accident resulted in a serious injury or fatality. If it did, the employer reports the accident to the Labour Inspectorate. If it did not, the employer reports the accident to the accident insurance provider.\n\nAdditionally, the educational institution reports the accident to the competent directorate, and the employee reports the accident to their private insurance provider. The process ends with all institutions reporting the accident to the accident insurance provider and the accident being reported and handled.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Gather accident information",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Report accident to employer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Report accident to Labour Inspectorate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Report accident to accident insurance provider",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Report accident to competent directorate",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Report accident to private insurance provider",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Employer reports accident to Labour Inspectorate",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "All institutions report accident to accident insurance provider",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Accident occurs",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "Accident reported and handled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Is it a work accident?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Serious injury or fatality?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accident Reporting Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Employee",
                                "elemRefs": [
                                    "id2",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Employer",
                                "elemRefs": [
                                    "id7",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Educational Institution",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "id2",
                        "name": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "endEvent",
                        "name": "No"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "id3",
                        "name": "Yes"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "id4",
                        "name": "No"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "endEvent"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id4",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id3",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "E_j01.txt": {
        "0": {
            "text": "The process begins with the reporting of job applications. Once the job applications are reported, job offers are sent out. After sending the job offers, the receipt of job applications is confirmed, and they are rated. Following this, a job interview is negotiated.\n\nAt this point, a decision is made on whether the company wants to hire the candidate. If the company decides to hire, the candidate enters the probation phase. If the company decides not to hire, the process loops back to the reporting of job applications.\n\nDuring the probation phase, both the company and the employee rate each other. The company's rating of the employee is then evaluated to determine if the job becomes permanent and if the rating is C or less. If the job is not permanent or the rating is more than C, the process ends with the job becoming permanent. If the job is permanent and the rating is C or less, the process ends with the receipt of job offers post C rating.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report job applications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send job offers",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm receipt of job applications and rate",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Negotiate job interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter probation phase",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Rate the company",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Rate the employee",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "end - job becomes permanent",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end - receive job offers post C rating",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Company wants to hire?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Is job permanent and rating C or less?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id11",
                        "targetRef": "id5",
                        "condition": "yes"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "no"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id6",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id12",
                        "targetRef": "id10",
                        "condition": "yes"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the reporting of job applications to companies. Following this, new potential job offers are sent out. Concurrently, the receipt of job applications is confirmed, and the applications are rated. \n\nNext, job interviews are negotiated. Once the interviews are successfully negotiated, the candidate enters the probation phase. During this phase, both the candidate and the company rate each other. \n\nAfter the probation phase, the candidate rates the company, and the company rates the candidate. If the job becomes permanent and the rating is greater than C, the process ends. If the job becomes permanent and the rating is less than or equal to C, new potential job offers are sent out again.\n\nAdditionally, after the company rates the candidate, a timer event is set for one year of reviews. After this period, new potential job offers are sent out again. The process continues in this manner until it reaches a conclusion.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report job applications to companies",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send new potential job offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm receipt of job applications and rate application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Negotiate job interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter probation phase",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Rate company after probation phase",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Company rates you after probation phase",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "1 year of reviews",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Job becomes permanent and rating <=C?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "Job becomes permanent and rating >C"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Job becomes permanent and rating <=C"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to report job applications. Following this, new job offers are received. Once the new job offers are received, the application is confirmed and rated. After confirming and rating the application, the next step is to negotiate a job interview. \n\nUpon successful negotiation, the candidate enters the probation phase. During the probation phase, the company is rated by the candidate. Subsequently, the employee is rated by the company. \n\nAfter the ratings are completed, a decision is made on whether the job becomes permanent. If the job is rated higher than C, the job becomes permanent, and the process ends. If the job is rated C or less, the process continues by receiving new job offers again. The process will continue in this loop until the job is rated higher than C and becomes permanent, at which point the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Report job applications",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive new job offers",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm and rate application",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Negotiate job interview",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter probation phase",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Rate the company",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Rate the employee",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Job becomes permanent",
                        "type": "End"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Job rated C or less",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Job rated higher than C",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Job becomes permanent?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Continue receiving job offers?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id7",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id11",
                        "condition": "yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id13",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "M_j01.txt": {
        "0": {
            "text": "The process begins with the start event. Immediately, two parallel actions are initiated: ordering parts from online sources and sending updates to the customer.\n\nOnce the parts are ordered, the process waits for the parts to arrive. Upon arrival, a manual inspection of all parts is conducted.\n\nAfter the inspection, the parts are assembled manually. Following the assembly, the first chainsaw is sent to the customer.\n\nThe process then checks if the customer likes the first chainsaw. If the customer approves, the remaining order is produced manually, and the process ends.\n\nIf the customer does not approve, the process ends immediately. Throughout the process, updates are continuously sent to the customer, and once the first chainsaw is sent, the process proceeds to the customer approval step.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Order parts from online sources",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Manual inspection of all parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Assemble the parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Send updates to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send first chainsaw to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Produce remaining order",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Parts arrived",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id9",
                        "name": "First chainsaw approved",
                        "type": "IntermediateMessageEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Customer likes first saw?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id7",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id12",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id8",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id11",
                        "targetRef": "id10",
                        "condition": "no"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the receipt of chainsaw specifications from the customer. Once the specifications are received, parts are ordered from online sources. After the parts arrive, a manual inspection of all parts is conducted to ensure quality. Following the inspection, the parts are assembled to produce the first chainsaw. Updates are then sent to the customer regarding the progress. The first chainsaw is sent to the customer for approval. \n\nAt this point, the process checks if the customer is satisfied. If the customer is satisfied, the rest of the order is produced. Once the remaining chainsaws are produced, the process concludes with the completion of the order. If the customer is not satisfied, the process ends immediately with the order completion.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive chainsaw specifications from customer",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Order parts from online sources",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Manual inspection of all parts",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Assemble parts to produce chainsaw",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Send updates to the customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send first chainsaw to customer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Produce the rest of the order",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Order completion",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Customer satisfied?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id11",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "yes"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the customer provides the properties of the chainsaw they require. This information is received and then the process splits into two parallel paths. \n\nIn the first path, the parts needed for the chainsaw are ordered from online sources. Once the parts arrive, they undergo a manual inspection to ensure they meet the required standards. After the inspection, the parts are assembled into a chainsaw.\n\nIn the second parallel path, updates are sent to the customer regarding the progress of their order. Once the chainsaw is assembled, another update is sent to the customer.\n\nAfter the updates, the first saw is sent to the customer. The process then reaches a decision point where it is determined whether the customer is satisfied with the saw. If the customer likes the saw, the process ends with the production being complete. \n\nIf the customer wants changes, the process loops back to the assembly task where the necessary modifications are made. After the modifications, the remaining saws are produced, and the process ends with the order being complete. \n\nThroughout the process, there are communications between the customer and the production team, particularly when receiving the initial chainsaw properties and sending updates.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Receive chainsaw properties from customer",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Order parts from online sources",
                        "type": "Service"
                    },
                    {
                        "id": "task3",
                        "name": "Manual inspection of all parts",
                        "type": "Manual"
                    },
                    {
                        "id": "task4",
                        "name": "Assemble the parts",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Send updates to customer",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Send first saw to customer",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Produce remaining saws",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Production complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "Order complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Manufacturing Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Production",
                                "elemRefs": [
                                    "task1",
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task6",
                                    "task7"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Procurement",
                                "elemRefs": [
                                    "task2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Customer",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Customer Interaction",
                                "elemRefs": [
                                    "task1",
                                    "task5",
                                    "task6"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [
                    {
                        "id": "msgflow1",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "msgflow2",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "end1",
                        "condition": "Customer likes the saw"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "gateway3",
                        "condition": "Customer wants changes"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task4",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task7",
                        "targetRef": "end2"
                    }
                ]
            }
        }
    }
}