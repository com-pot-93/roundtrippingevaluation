{
    "17_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start of the process. The user logs on to the email provider's website. After logging in, the user chooses a package. \n\nAt this point, there is a decision to be made. If a personal account is not available, the process ends with the private account being unavailable. \n\nIf a personal account is available, the user enters their full names. Following this, the user uploads a photo ID. \n\nOnce the photo ID is uploaded, the system confirms the personal data and generates an email ID and password. The process concludes with the creation of a private email.",
            "model": {
                "tasks": [
                    {
                        "id": "sid-1",
                        "name": "Log on to email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "sid-2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "sid-3",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "sid-4",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "sid-5",
                        "name": "Confirm personal data and generate email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "sid-6",
                        "name": "Start process",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "sid-7",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "sid-8",
                        "name": "Creation of private email",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "sid-9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sid-10",
                        "sourceRef": "sid-6",
                        "targetRef": "sid-1"
                    },
                    {
                        "id": "sid-11",
                        "sourceRef": "sid-1",
                        "targetRef": "sid-2"
                    },
                    {
                        "id": "sid-12",
                        "sourceRef": "sid-2",
                        "targetRef": "sid-9"
                    },
                    {
                        "id": "sid-13",
                        "sourceRef": "sid-9",
                        "targetRef": "sid-7",
                        "condition": "Personal account not available"
                    },
                    {
                        "id": "sid-14",
                        "sourceRef": "sid-9",
                        "targetRef": "sid-3",
                        "condition": "Personal account available"
                    },
                    {
                        "id": "sid-15",
                        "sourceRef": "sid-3",
                        "targetRef": "sid-4"
                    },
                    {
                        "id": "sid-16",
                        "sourceRef": "sid-4",
                        "targetRef": "sid-5"
                    },
                    {
                        "id": "sid-17",
                        "sourceRef": "sid-5",
                        "targetRef": "sid-8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the user logging on to the email provider's website. Once logged in, the user chooses a package. At this point, a decision is made to check if the desired account is available. If the account is not available, the process ends with the notification that the private account is unavailable. If the account is available, the user proceeds to provide personal information. The user then enters their full names and uploads a photo ID. After uploading the photo ID, the user confirms their personal data. Finally, a new email ID and password are generated, and the process concludes with the creation of the email account.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log on to email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Provide personal information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Email account created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "Account not available"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Account available"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an email account is needed. The user logs in to the email provider's website and then chooses a package. At this point, a decision is made: if a personal account is not available, the process ends with the private account being unavailable. If a personal account is available, the user enters their personal data, followed by entering their full names. Next, the user uploads a photo ID and then confirms their personal data. Finally, a new email ID and password are generated, and the process ends with the private email being created.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Log in to email provider's website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Choose a package",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter full names",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Upload photo ID",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Enter personal data",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Confirm personal data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Generate new email ID and password",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Email account needed",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Private account unavailable",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "Private email created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "gid1",
                        "targetRef": "eid2",
                        "condition": "Personal account not available"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid1",
                        "targetRef": "id5",
                        "condition": "Personal account available"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "eid3"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "61_ground_truth.txt": {
        "0": {
            "text": "The process begins with an undergraduate student initiating an application for the IMIS program. The student first goes to the FH-SWF website and defines their search criteria. They then select the Master Study Course and choose Informatics and Digitalisation as the subject area. Next, they select Campus Soest and click on 'Find a Study Course'. The student then clicks on 'Learn more' on the IMIS banner and selects the Master Study Course, followed by clicking on 'See how to apply here'.\n\nAt this point, the process diverges based on whether the applicant is an EU applicant or not. If the applicant is a non-EU applicant, they apply via Uni-Assist, check the application procedure, and send the necessary documents to Uni-Assist. They then wait for a decision, which takes approximately 10-12 weeks, before receiving an admission or rejection letter.\n\nIf the applicant is an EU applicant, they apply via the FH-SWF Online Portal. The process then checks if the applicant is an FH-SWF student or graduate. Regardless of this check, the applicant sends the required documents and contacts the IMIS office. They then wait for a decision, which takes approximately 4-6 weeks, before receiving an admission or rejection letter.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Go to FH-SWF website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click on 'Learn more' on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select the Master Study Course and click on 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure and send documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send documents and contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Application for IMIS by Undergraduate Student",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent",
                        "name": "Receipt of admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Determine EU applicant",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Determine FH-SWF student/graduate",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Undergraduate Student",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Application Process",
                                "elemRefs": [
                                    "startEvent",
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "gateway1",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "gateway2",
                                    "id13",
                                    "id14",
                                    "endEvent"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id8",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway1",
                        "targetRef": "id9",
                        "conditionExpression": "Non-EU applicant"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id11",
                        "targetRef": "endEvent"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway1",
                        "targetRef": "id12",
                        "conditionExpression": "EU applicant"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id12",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway2",
                        "targetRef": "id13",
                        "conditionExpression": "FH-SWF student/graduate"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gateway2",
                        "targetRef": "id13",
                        "conditionExpression": "EU applicant"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id14",
                        "targetRef": "endEvent"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the application for IMIS. The student first goes to the FH-SWF website and defines their search criteria. They then select the Master Study Course and choose Informatics and Digitalisation as the subject area. Next, they select Campus Soest and click on 'Find a Study Course'. After this, they click on 'Learn more' on the IMIS banner and select the Master Study Course again. The student then clicks on 'See how to apply here'.\n\nAt this point, the process diverges based on whether the applicant is an EU applicant or not. If the applicant is a non-EU/International applicant, they apply via Uni-Assist, check the application procedure, and send the required documents. They then wait for the Uni-Assist decision, after which the process ends with the student receiving an admission or rejection letter.\n\nIf the applicant is an EU applicant, the process checks if they are an FH-SWF student or graduate. If they are not, they apply via the FH-SWF Online Portal, send the required documents, and contact the IMIS office. The process then ends with the student receiving an admission or rejection letter.\n\nIf the applicant is an FH-SWF student or graduate, they apply via the FH-SWF Online Portal specifically for FH-SWF students or graduates and contact the IMIS office. The process then ends with the student receiving an admission or rejection letter.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Go to fh-swf website",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Click on 'Learn more' on IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Select Master Study Course again",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Click on 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check application procedure and send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for Uni-Assist decision",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents and contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Apply via FH-SWF Online Portal (for FH-SWF Students/Graduates)",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Contact IMIS office (for FH-SWF Students/Graduates)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id_start",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id_end",
                        "name": "Receive admission/rejection letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id_gateway1",
                        "name": "EU Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id_gateway2",
                        "name": "FH-SWF Student/Graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id_pool1",
                        "name": "Undergraduate Student",
                        "lanes": [
                            {
                                "id": "id_lane1",
                                "name": "Student Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id_start",
                                    "id_end",
                                    "id_gateway1",
                                    "id_gateway2"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id_sf1",
                        "sourceRef": "id_start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id_sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id_sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id_sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id_sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id_sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id_sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id_sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id_sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id_sf10",
                        "sourceRef": "id9",
                        "targetRef": "id_gateway1"
                    },
                    {
                        "id": "id_sf11",
                        "sourceRef": "id_gateway1",
                        "targetRef": "id10",
                        "condition": "non-EU/International applicant"
                    },
                    {
                        "id": "id_sf12",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id_sf13",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id_sf14",
                        "sourceRef": "id_gateway1",
                        "targetRef": "id_gateway2",
                        "condition": "EU applicant"
                    },
                    {
                        "id": "id_sf15",
                        "sourceRef": "id_gateway2",
                        "targetRef": "id13",
                        "condition": "EU applicant"
                    },
                    {
                        "id": "id_sf16",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id_sf17",
                        "sourceRef": "id14",
                        "targetRef": "id_end"
                    },
                    {
                        "id": "id_sf18",
                        "sourceRef": "id_gateway2",
                        "targetRef": "id15",
                        "condition": "FH-SWF student/graduate"
                    },
                    {
                        "id": "id_sf19",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id_sf20",
                        "sourceRef": "id16",
                        "targetRef": "id_end"
                    },
                    {
                        "id": "id_sf21",
                        "sourceRef": "id12",
                        "targetRef": "id_end"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins with an undergraduate student initiating an application for the IMIS program. The student first defines the search criteria, then selects the Master Study Course. Next, the student selects Informatics and Digitalisation as the subject area and chooses Campus Soest. The student then clicks on 'Find a Study Course' and subsequently clicks on 'Learn more' on the IMIS banner. After this, the student selects the Master Study Course and clicks on 'See how to apply here'.\n\nAt this point, the process diverges based on whether the applicant is an EU applicant or not. If the applicant is a non-EU or international applicant, they apply via Uni-Assist, check the application procedure, send the required documents to Uni-Assist, and wait for a decision, which takes 10-12 weeks. The process then concludes with the student receiving an admission or rejection letter.\n\nIf the applicant is an EU applicant, the process checks if they are an FH-SWF student or graduate. If they are, they apply via the FH-SWF Online Portal, send the required documents, contact the IMIS office, and wait for a decision, which takes 4-6 weeks. The process then concludes with the student receiving an admission or rejection letter.\n\nIf the EU applicant is not an FH-SWF student or graduate, they follow the same steps: apply via the FH-SWF Online Portal, send the required documents, contact the IMIS office, and wait for a decision, which takes 4-6 weeks. The process then concludes with the student receiving an admission or rejection letter.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Define search criteria",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Select Informatics and Digitalisation as subject area",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Select Campus Soest",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Click on 'Find a Study Course'",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Click on 'Learn more' on the IMIS banner",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Select the Master Study Course",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Click on 'See how to apply here'",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Apply via Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Check application procedure",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send required documents to Uni-Assist",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for decision (10-12 weeks)",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Apply via FH-SWF Online Portal",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Send required documents",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Contact IMIS office",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Wait for decision (4-6 weeks)",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Application for IMIS",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Admission/Rejection Letter",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "name": "EU Applicant?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "name": "FH-SWF Student/Graduate?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id21",
                        "name": "Undergraduate Student",
                        "lanes": [
                            {
                                "id": "id22",
                                "name": "Student Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id8",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id19",
                        "targetRef": "id9",
                        "condition": "non-EU / international applicant"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id19",
                        "targetRef": "id20",
                        "condition": "EU applicant"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "EU applicant"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id20",
                        "targetRef": "id13",
                        "condition": "FH-SWF Student/Graduate"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id15",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id12",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "19_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event. The first step involves performing a BKR check and a Jane Doe check simultaneously. Once both checks are completed, a credibility check is conducted. \n\nFollowing the credibility check, the process moves to an exclusive decision point. If the credibility assessment is confirmed, the assessment is reviewed. If the assessment is not confirmed, a rejection letter is sent to the client, and the process ends.\n\nIf the assessment is reviewed and accepted, the process continues with a call to the client to complement information. If the assessment is reviewed and rejected, a rejection letter is sent to the client, and the process ends.\n\nAfter calling the client, another decision point is reached. If the client picks up the call, a loan offer is created. If the client does not pick up, the process waits for one hour before attempting to call the client again.\n\nOnce the loan offer is created, it is checked, and then the loan offer is sent to the client. The process then reaches another decision point. If the offer is accepted, a welcome letter is sent to the client. If the offer is not accepted within one hour, a reminder is sent to the client.\n\nAfter sending the reminder, another decision point is reached. If the offer is accepted after the reminder, a welcome letter is sent to the client. \n\nFollowing the welcome letter, the loan application is activated, and the loan activation is validated. The process then proceeds with the execution of the initial payment. Finally, the documents are returned to the client, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR check",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe check",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility check",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Review credibility assessment",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send rejection letter",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Call client to complement information",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Wait one hour",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Create loan offer",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check loan offer",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Send loan offer to client",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Send welcome letter",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Activate loan application",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Validate loan activation",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Execute initial payment",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Return documents to client",
                        "type": "Task"
                    },
                    {
                        "id": "id16",
                        "name": "Remind client",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "evt1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "evt2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw7",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "id1",
                                    "id2"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Administrator",
                                "elemRefs": [
                                    "id5",
                                    "id11",
                                    "id15"
                                ]
                            },
                            {
                                "id": "l4",
                                "name": "Customer Relation Team",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id16"
                                ]
                            },
                            {
                                "id": "l5",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "evt1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "gw1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "gw1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id3",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "gw2",
                        "targetRef": "id4",
                        "condition": "Assessment confirmed"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "gw2",
                        "targetRef": "id5",
                        "condition": "Assessment not confirmed"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id4",
                        "targetRef": "gw3",
                        "condition": "Accepted"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "id4",
                        "targetRef": "id5",
                        "condition": "Rejected"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "gw3",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "id6",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "gw4",
                        "targetRef": "id8",
                        "condition": "Client picks up"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "gw4",
                        "targetRef": "id7",
                        "condition": "Client does not pick up"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id7",
                        "targetRef": "id6"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "seq17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "seq18",
                        "sourceRef": "id10",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "seq19",
                        "sourceRef": "gw5",
                        "targetRef": "id11",
                        "condition": "Offer accepted"
                    },
                    {
                        "id": "seq20",
                        "sourceRef": "gw5",
                        "targetRef": "id16",
                        "condition": "Offer not accepted within one hour"
                    },
                    {
                        "id": "seq21",
                        "sourceRef": "id16",
                        "targetRef": "gw6"
                    },
                    {
                        "id": "seq22",
                        "sourceRef": "gw6",
                        "targetRef": "id11",
                        "condition": "Accepted after reminder"
                    },
                    {
                        "id": "seq23",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "seq24",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "seq25",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "seq26",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "seq27",
                        "sourceRef": "id15",
                        "targetRef": "evt2"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event, after which the Risk Manager performs a BKR check and a Jane Doe check simultaneously. Once both checks are completed, a credibility check is conducted. \n\nThe results of the credibility check are then reviewed by the Senior Risk Manager. If the credibility check is not confirmed, a rejection letter is sent to the client, and the process ends. If the credibility check is confirmed, the Senior Risk Manager reviews the credibility assessment.\n\nFollowing the review, if the assessment is accepted, the Customer Relation Team calls the client to complement the information. If the client picks up the call, a loan offer is created. If the client does not pick up the call, the team waits one hour and calls again. This process repeats until the client picks up the call.\n\nOnce the loan offer is created, it is checked and then sent to the client. The process then waits for the client to accept the offer. If the offer is accepted, a welcome letter is sent to the client. If the offer is not accepted within one hour, the team waits and calls the client again.\n\nAfter the welcome letter is sent, the Finance Department activates the loan application, validates the loan activation, and executes the initial payment. Finally, the documents are returned to the client, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR check",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe check",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Credibility check",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Review credibility assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call client to complement information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait one hour and call again",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Create loan offer",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Check loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send loan offer to client",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Activate loan application",
                        "type": "Manual"
                    },
                    {
                        "id": "id13",
                        "name": "Validate loan activation",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Execute initial payment",
                        "type": "Manual"
                    },
                    {
                        "id": "id15",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "wait_offer_acceptance",
                        "name": "Waiting for offer acceptance",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Both assessments accepted?",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "name": "Credibility check confirmed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "name": "Assessment accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "name": "Client picks up call?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "name": "Offer accepted?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "start",
                                    "id1",
                                    "id2",
                                    "gw1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "id4",
                                    "gw2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Administrator",
                                "elemRefs": [
                                    "id5",
                                    "id11",
                                    "id15",
                                    "end"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Customer Relation Team",
                                "elemRefs": [
                                    "id6",
                                    "gw4",
                                    "id8",
                                    "wait_offer_acceptance",
                                    "id7",
                                    "gw5"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "seq1",
                        "sourceRef": "start",
                        "targetRef": "id1"
                    },
                    {
                        "id": "seq2",
                        "sourceRef": "start",
                        "targetRef": "id2"
                    },
                    {
                        "id": "seq3",
                        "sourceRef": "id1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "seq4",
                        "sourceRef": "id2",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "seq5",
                        "sourceRef": "gw1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "seq6",
                        "sourceRef": "id3",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "seq7",
                        "sourceRef": "gw2",
                        "targetRef": "id4"
                    },
                    {
                        "id": "seq8",
                        "sourceRef": "gw2",
                        "targetRef": "id5",
                        "condition": "Credibility check not confirmed"
                    },
                    {
                        "id": "seq9",
                        "sourceRef": "id4",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "seq10",
                        "sourceRef": "gw3",
                        "targetRef": "id6",
                        "condition": "Assessment accepted"
                    },
                    {
                        "id": "seq11",
                        "sourceRef": "gw3",
                        "targetRef": "id5",
                        "condition": "Assessment not accepted"
                    },
                    {
                        "id": "seq12",
                        "sourceRef": "id6",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "seq13",
                        "sourceRef": "gw4",
                        "targetRef": "id8",
                        "condition": "Client picks up call"
                    },
                    {
                        "id": "seq14",
                        "sourceRef": "gw4",
                        "targetRef": "id7",
                        "condition": "Client does not pick up call"
                    },
                    {
                        "id": "seq15",
                        "sourceRef": "id7",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "seq16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "seq17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "seq18",
                        "sourceRef": "id10",
                        "targetRef": "wait_offer_acceptance"
                    },
                    {
                        "id": "seq19",
                        "sourceRef": "wait_offer_acceptance",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "seq20",
                        "sourceRef": "gw5",
                        "targetRef": "id11",
                        "condition": "Offer accepted"
                    },
                    {
                        "id": "seq21",
                        "sourceRef": "gw5",
                        "targetRef": "id7",
                        "condition": "Offer not accepted in one hour"
                    },
                    {
                        "id": "seq22",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "seq23",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "seq24",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "seq25",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "seq26",
                        "sourceRef": "id15",
                        "targetRef": "end"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step involves performing a BKR check and a Jane Doe check in parallel. Once both checks are completed, a credibility check is performed. The results of the credibility check are then reviewed by a senior risk manager.\n\nBased on the review, if the application is rejected, a rejection letter is sent to the client, and the process ends. If the application is accepted, the client is called to complement the information. \n\nIf the client picks up the call, a loan offer is created and subsequently checked. After the loan offer is checked, it is sent to the client. The process then waits for the client to accept the offer.\n\nIf the client accepts the offer, a welcome letter is sent, and the loan application is activated. The activation is then validated, followed by the execution of the initial payment. Finally, the documents are returned to the client, and the process ends.\n\nIf the client does not pick up the call, the process waits for one hour before attempting to call the client again. If the client does not accept the offer within the waiting period, a reminder is sent to the client to accept the offer, and the process waits again for the client's response.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Review credibility assessment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call client to complement information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send loan offer to client",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Validate loan activation",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Return documents to client",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Remind client to accept offer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "evt1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "evt2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "evt3",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "evt4",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "evt5",
                        "name": "Wait one hour",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "evt6",
                        "name": "Wait for client to accept offer",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "evt7",
                        "name": "Wait one hour",
                        "type": "IntermediateTimerEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Parallel"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw6",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "DLL",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Manager",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "evt1",
                                    "gw1",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Senior Risk Manager",
                                "elemRefs": [
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Administrator",
                                "elemRefs": [
                                    "id5",
                                    "id10",
                                    "id14"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Customer Relation Team",
                                "elemRefs": [
                                    "id6",
                                    "id15",
                                    "id7",
                                    "evt7",
                                    "gw6"
                                ]
                            },
                            {
                                "id": "lane5",
                                "name": "Finance Department",
                                "elemRefs": [
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "evt1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "gw1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gw1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "gw2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "gw3"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gw3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id4",
                        "targetRef": "gw4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw4",
                        "targetRef": "id5",
                        "condition": "Rejected"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "evt2"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "gw4",
                        "targetRef": "id6",
                        "condition": "Accepted"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id6",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "gw5",
                        "targetRef": "id7",
                        "condition": "Client picks up"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gw5",
                        "targetRef": "evt5",
                        "condition": "Client does not pick up"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "evt5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id9",
                        "targetRef": "evt6"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "evt6",
                        "targetRef": "gw6"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "gw6",
                        "targetRef": "id10",
                        "condition": "Accepted"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id14",
                        "targetRef": "evt3"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "gw6",
                        "targetRef": "evt7",
                        "condition": "Not Accepted"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "evt7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "id15",
                        "targetRef": "evt6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "8_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers a parallel check for BKR and Jane Doe. Both checks are performed simultaneously. Once both checks are completed, the credibility check is confirmed.\n\nThe outcome of the credibility check is then assessed. If the assessment results in rejection, a rejection letter is sent to the client, and the process ends. If the assessment is accepted, a call is made to the client.\n\nIf the client picks up the call, a loan offer is created and sent. If the client does not pick up, a reminder is set to call the client again after two hours. If two hours pass without the client picking up, the reminder is executed.\n\nOnce the loan offer is sent, a welcome letter is also sent to the client. Following this, the loan application is activated. The activation is then validated, and an initial payment is executed.\n\nFinally, the documents are returned to the client, and the process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR Check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe Check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Credibility Check",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send Rejection Letter",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Call Client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and Send Loan Offer",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Remind Client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send Welcome Letter",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Activate Loan Application",
                        "type": "Service"
                    },
                    {
                        "id": "id10",
                        "name": "Validate Activation",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Execute Initial Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Return Documents to Client",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Confirm Credibility",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "name": "Assessment Outcome",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Call Picked Up?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Two Hours Passed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id5",
                                    "id7"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Finance",
                                "elemRefs": [
                                    "id6",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id15",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Picked Up"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "Two Hours Passed"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id18",
                        "targetRef": "id7",
                        "condition": "Reminder"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins with the start event. Immediately, a parallel check is initiated where both a BKR check and a Jane Doe check are performed simultaneously by the Risk Management team. Once both checks are completed, the results are consolidated, and a credibility check is confirmed by the Senior Risk Management team.\n\nFollowing the confirmation of the credibility check, a decision is made. If the application is rejected, a rejection letter is sent to the client by the Administration team, and the process ends. If the application is accepted, the Customer Contact team calls the client.\n\nAfter the call, another decision point is reached. If the client picks up the call, a loan offer is created and sent to the client. If the client does not pick up, the Customer Contact team will call the client again.\n\nOnce the loan offer is sent, the process waits for two hours. If no response is received within this time, a reminder is sent to the client. This loop continues until an accepted offer is received.\n\nUpon receiving the accepted offer, a welcome letter is sent to the client by the Administration team. Following this, the Finance team activates the loan application and validates the activation. Once validated, the initial payment is executed, and the documents are returned to the client by the Administration team. Finally, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "BKR check",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Jane Doe check",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm credibility check",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection letter",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Call client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create and send loan offer",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Remind client",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send welcome letter",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Activate loan application",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Validate activation",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Execute initial payment",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Return documents to client",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "type": "Parallel"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Risk Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Senior Risk Management",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Senior Risk Management",
                                "elemRefs": [
                                    "id3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Administration",
                                "elemRefs": [
                                    "id4",
                                    "id8",
                                    "id12"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool4",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "lane4",
                                "name": "Customer Contact",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool5",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "lane5",
                                "name": "Finance",
                                "elemRefs": [
                                    "id7",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id15",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id3",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id16",
                        "targetRef": "id5",
                        "condition": "Accepted"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id18"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id18",
                        "targetRef": "id6",
                        "condition": "Picked up"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id18",
                        "targetRef": "id5",
                        "condition": "Not picked up"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "Two hours passed"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id17"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id17",
                        "targetRef": "id8",
                        "condition": "Accepted offer received"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id12",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the initiation of the process. \n\nFirst, a parallel check is performed, which includes a BKR check and a Jane Doe check. \n\nOnce both checks are completed, the credibility check is confirmed. \n\nFollowing the confirmation, an assessment decision is made. \n\nIf the assessment is rejected, a rejection letter is sent to the client, and the process concludes. \n\nIf the assessment is accepted, the client is called to complement the information. \n\nIf the client does not pick up the call, another call is made after one hour. \n\nIf the client picks up the call, a loan offer is created and sent. \n\nAfter sending the loan offer, a timer is set for two hours. \n\nOnce two hours have passed, a reminder is sent to the client. \n\nWhen the client receives the offer, a welcome letter is sent. \n\nFollowing this, the loan application is activated. \n\nThe activation is then validated, and an initial payment is executed. \n\nFinally, the documents are returned to the client, and the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Perform BKR Check",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Perform Jane Doe Check",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Confirm Credibility Check",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Send Rejection Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Call Client to Complement Information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call Client Again after One Hour",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create and Send Loan Offer",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Remind Client",
                        "type": "Manual"
                    },
                    {
                        "id": "id9",
                        "name": "Send Welcome Letter",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Activate Loan Application",
                        "type": "Service"
                    },
                    {
                        "id": "id11",
                        "name": "Validate Activation",
                        "type": "Service"
                    },
                    {
                        "id": "id12",
                        "name": "Execute Initial Payment",
                        "type": "Service"
                    },
                    {
                        "id": "id13",
                        "name": "Return Documents to Client",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Process Begins",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Assessment Rejected",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id16",
                        "name": "Assessment Accepted",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id17",
                        "name": "Client Picked Up",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Client Not Picked Up",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Two Hours Passed",
                        "type": "IntermediateTimerEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Offer Received",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id21",
                        "name": "Process Concludes",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id22",
                        "name": "Checks Completed",
                        "type": "Parallel"
                    },
                    {
                        "id": "id23",
                        "name": "Assessment Decision",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id24",
                        "name": "Call Response",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id25",
                        "name": "Risk Management",
                        "lanes": [
                            {
                                "id": "id26",
                                "name": "Risk Task Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id22"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id27",
                        "name": "Senior Risk Management",
                        "lanes": [
                            {
                                "id": "id28",
                                "name": "Senior Risk Task Lane",
                                "elemRefs": [
                                    "id3",
                                    "id23"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id29",
                        "name": "Administration",
                        "lanes": [
                            {
                                "id": "id30",
                                "name": "Admin Task Lane",
                                "elemRefs": [
                                    "id4",
                                    "id9",
                                    "id13",
                                    "id15",
                                    "id16",
                                    "id21"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id31",
                        "name": "Customer Contact",
                        "lanes": [
                            {
                                "id": "id32",
                                "name": "Customer Contact Task Lane",
                                "elemRefs": [
                                    "id5",
                                    "id6",
                                    "id24"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id33",
                        "name": "Finance",
                        "lanes": [
                            {
                                "id": "id34",
                                "name": "Finance Task Lane",
                                "elemRefs": [
                                    "id7",
                                    "id8",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id19",
                                    "id20"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id14",
                        "targetRef": "id22"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id22",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id22",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id1",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id23"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id23",
                        "targetRef": "id15",
                        "condition": "rejected"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id15",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "id21"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id23",
                        "targetRef": "id16",
                        "condition": "accepted"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id16",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id5",
                        "targetRef": "id24"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id24",
                        "targetRef": "id6",
                        "condition": "not picked up"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id24",
                        "targetRef": "id7",
                        "condition": "picked up"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id7",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id19",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id8",
                        "targetRef": "id20"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id20",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id13",
                        "targetRef": "id21"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "53_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the task of fixing travel details. Once the travel details are fixed, a checklist for preparations is prepared. After the checklist is ready, necessary papers are checked and completed.\n\nNext, it is determined whether a visa is required. If a visa is required, an application for the visa is made and communicated to the embassy. If a visa is not required, the process moves directly to clearing any unfinished business. After the visa application is communicated to the embassy, any unfinished business is cleared.\n\nFollowing this, it is determined whether there are pets to take care of. If there are pets, arrangements for pet care are made. If there are no pets, the process moves directly to unsubscribing from post or arranging for a neighbor to fetch it. After making arrangements for pet care, the process continues with unsubscribing from post or arranging for a neighbor to fetch it.\n\nNext, necessary vaccinations are obtained, followed by checking insurance coverage and applying for additional coverage if necessary. The application for additional coverage is then communicated to the insurance company.\n\nAt this point, several tasks are carried out in parallel. These tasks include gathering travel documents and addresses, making copies of ID cards and travel documents, buying or lending guidebooks and city maps, and preparing a first-aid kit. Once all these parallel tasks are completed, the final travel preparations are completed, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fix travel details",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare checklist for preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Check and complete necessary papers",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Apply for visa",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Communicate visa application to embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Clear unfinished business",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Make arrangements for pet care",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Unsubscribe from post or arrange for neighbor to fetch it",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Obtain necessary vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Check insurance coverage and apply for additional coverage if necessary",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Communicate additional coverage application to insurance company",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Gather travel documents and addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "Task"
                    },
                    {
                        "id": "id15",
                        "name": "Prepare a first-aid kit",
                        "type": "Task"
                    },
                    {
                        "id": "id16",
                        "name": "Complete travel preparations",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "name": "Visa Required?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Pets to Take Care of?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid3",
                        "name": "Parallel Tasks",
                        "type": "Parallel"
                    },
                    {
                        "id": "gid4",
                        "name": "Parallel Tasks Completed",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "gid1",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "gid1",
                        "targetRef": "id6",
                        "condition": "No"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gid2",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "gid2",
                        "targetRef": "id8",
                        "condition": "No"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id11",
                        "targetRef": "gid3"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id12",
                        "targetRef": "gid4"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id13",
                        "targetRef": "gid4"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id14",
                        "targetRef": "gid4"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id15",
                        "targetRef": "gid4"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "gid3",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "gid3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "gid3",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "gid3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "gid4",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "id16",
                        "targetRef": "eid2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, after which the participant fixes the travel details. Following this, a checklist for preparations is prepared. The participant then checks and completes the necessary papers. \n\nAn exclusive decision is made to determine if a visa is required. If a visa is required, the participant applies for the visa and communicates the visa application to the embassy. If a visa is not required, the participant proceeds to clear any unfinished business. After the visa application is communicated to the embassy, the participant also clears any unfinished business.\n\nNext, another exclusive decision is made to determine if there are pets to take care of. If there are pets, the participant makes arrangements for pet care. If there are no pets, the participant unsubscribes from post or arranges for a neighbor to fetch it. If there are pets, after making arrangements for pet care, the participant unsubscribes from post or arranges for a neighbor to fetch it.\n\nFollowing this, several tasks are performed in parallel: obtaining necessary vaccinations, checking insurance coverage, applying for additional insurance coverage and communicating it to the company, gathering travel documents and addresses, making copies of ID cards and travel documents, buying or lending guidebooks and city maps, and preparing a first-aid kit.\n\nOnce all these tasks are completed, they are synchronized, and the travel preparations are marked as complete. The process ends with the travel preparations being complete.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Fix travel details",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Prepare checklist for preparations",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Check and complete necessary papers",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Apply for visa",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Clear any unfinished business",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Make arrangements for pet care",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from post or arrange for neighbor to fetch it",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain necessary vaccinations",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Check insurance coverage",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Apply for additional insurance coverage and communicate to company",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Gather travel documents and addresses",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare a first-aid kit",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Communicate visa application to embassy",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Travel preparations complete",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Travel preparations complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id19",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    },
                    {
                        "id": "id22",
                        "type": "ParallelJoin"
                    }
                ],
                "pools": [
                    {
                        "id": "id23",
                        "name": "Roadtrip Participant",
                        "lanes": [
                            {
                                "id": "id24",
                                "name": "Participant Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id21",
                                    "id22"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id19"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id19",
                        "targetRef": "id4",
                        "condition": "Visa required"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id19",
                        "targetRef": "id5",
                        "condition": "Visa not required"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id15",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id5",
                        "targetRef": "id20"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id20",
                        "targetRef": "id6",
                        "condition": "Pets to take care of"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id20",
                        "targetRef": "id7",
                        "condition": "No pets to take care of"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id7",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id8",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id9",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id10",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id11",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id12",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "id13",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "id14",
                        "targetRef": "id21"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "id21",
                        "targetRef": "id22"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "id22",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "id16",
                        "targetRef": "id18"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, indicating the initiation of travel preparations. The first task is to prepare a checklist for preparations. Once the checklist is ready, the next step is to check and complete the necessary papers.\n\nAn exclusive decision is then made to determine if a visa is required. If a visa is required, the process continues with applying for the visa and communicating the visa application to the embassy. After this, any unfinished business is cleared.\n\nIf no visa is required, the process skips directly to clearing any unfinished business.\n\nFollowing this, another exclusive decision is made to check if there are pets to take care of. If there are pets, arrangements for pet care are made. If there are no pets, the process moves directly to unsubscribing from the post or arranging for a neighbor to fetch it.\n\nNext, the process continues with obtaining necessary vaccinations, checking insurance coverage, and applying and communicating for additional insurance coverage if needed. \n\nIn parallel, travel documents and addresses are gathered, copies of ID cards and travel documents are made, guidebooks and city maps are bought or borrowed, and a first-aid kit is prepared.\n\nFinally, all these parallel tasks converge, and the process ends with the completion of all travel preparations.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare checklist for preparations",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Check and complete necessary papers",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Apply for visa",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Communicate visa application to embassy",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Clear any unfinished business",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Make arrangements for pet care",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Unsubscribe from the post/arrange for neighbor to fetch it",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Obtain necessary vaccinations",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check insurance coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Apply and communicate for additional insurance coverage",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Gather travel documents and addresses",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Make copies of ID cards and travel documents",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Buy or lend guidebooks and city maps",
                        "type": "Task"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare first-aid kit",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id15",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "All travel preparations complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Parallel"
                    },
                    {
                        "id": "id19",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id20",
                        "type": "Parallel"
                    },
                    {
                        "id": "id21",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id22",
                        "name": "Roadtrip Participant",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Travel Preparations",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id17",
                                    "id18",
                                    "id19",
                                    "id20",
                                    "id21"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id15",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id17",
                        "targetRef": "id3",
                        "condition": "Visa required"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "No visa required"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id19"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id19",
                        "targetRef": "id6",
                        "condition": "Pets to take care of"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id19",
                        "targetRef": "id7",
                        "condition": "No pets to take care of"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id20"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id20",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id20",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id20",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id20",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "id14",
                        "targetRef": "id21"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id21",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "69_ground_truth.txt": {
        "0": {
            "text": "The process begins when a patient receives a prescription. The first step is to check if the prescription is for the patient. If it is, the patient shows their Medicare card and prescriptions. If it is not, the process ends with the prescription remaining unfilled.\n\nNext, the pharmacist receives and checks the script details. If the prescription is valid, the pharmacist opens and reviews the patient profile in the pharmacy information system. If the prescription is not valid, the process ends with the prescription remaining unfilled.\n\nOnce the prescription information is ready to view, the pharmacist checks if the patient is suspicious. If the patient is suspicious, the pharmacist contacts the GP for advice and receives advice from the doctor, after which the process ends with the prescription remaining unfilled.\n\nIf the patient is not suspicious, the pharmacist checks the patient's status, including allergies, pregnancy, and past history. If the patient does not pass the status check, the pharmacist offers alternatives with a lower dosage. If the patient does not agree to the alternatives, the process ends with the prescription remaining unfilled. If the patient agrees, the pharmacist adds a short memo and proceeds to the next step.\n\nIf the patient passes the status check, the pharmacist selects the correct prescribed dosage and checks the prescription inventory. If the inventory is not sufficient, the pharmacist informs the patient about alternatives. If the inventory is sufficient, the pharmacist double-checks and collects the correct drugs.\n\nNext, the pharmacist calculates Medicare cost waivers and total fees, prints and attaches labels with Consumer Medicine Information (CMI), and sends the labels to the patient. Finally, the process concludes with a consultation, and the patient proceeds to pay, ending with the patient receiving the prescription.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Check if prescription is for patient",
                        "type": "Task"
                    },
                    {
                        "id": "t2",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Receive and check script details",
                        "type": "Task"
                    },
                    {
                        "id": "t4",
                        "name": "Open and review patient profile in pharmacy information system",
                        "type": "Service"
                    },
                    {
                        "id": "t5",
                        "name": "Prescription info ready to view",
                        "type": "Task"
                    },
                    {
                        "id": "t6",
                        "name": "Check if patient is suspicious",
                        "type": "Task"
                    },
                    {
                        "id": "t7",
                        "name": "Contact GP for advice",
                        "type": "Service"
                    },
                    {
                        "id": "t8",
                        "name": "Receive advice from doctor",
                        "type": "Task"
                    },
                    {
                        "id": "t9",
                        "name": "Check patient's status (allergies, pregnancy, past history)",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Check if patient passed status check",
                        "type": "Task"
                    },
                    {
                        "id": "t11",
                        "name": "Offer alternatives with lower dosage",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Add a short memo",
                        "type": "Task"
                    },
                    {
                        "id": "t13",
                        "name": "Select correct prescribed dosage and check prescription inventory",
                        "type": "Service"
                    },
                    {
                        "id": "t14",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "t15",
                        "name": "Double-check and collect correct drugs",
                        "type": "Service"
                    },
                    {
                        "id": "t16",
                        "name": "Calculate Medicare costs waivers and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "t17",
                        "name": "Print and attach labels with Consumer Medicine Information (CMI)",
                        "type": "Service"
                    },
                    {
                        "id": "t18",
                        "name": "Send labels to patient",
                        "type": "Service"
                    },
                    {
                        "id": "t19",
                        "name": "Consultation and patient proceeds to pay",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Patient receives prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Prescription remains unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Prescription remains unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Prescription remains unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e5",
                        "name": "Patient receives prescription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "Is patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g7",
                        "name": "Patient passes status check?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g8",
                        "name": "Patient agrees?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "NewTown Health Chemist Dispensing Process",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Patient",
                                "elemRefs": [
                                    "e1",
                                    "t1",
                                    "t2",
                                    "t9",
                                    "t11",
                                    "t14",
                                    "t19"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "t3",
                                    "t6",
                                    "t5",
                                    "g1",
                                    "g2",
                                    "g3",
                                    "g4",
                                    "t7",
                                    "t8",
                                    "g5",
                                    "g6",
                                    "g7",
                                    "g8",
                                    "g9",
                                    "t10",
                                    "t12",
                                    "t13",
                                    "t15",
                                    "t16",
                                    "t17",
                                    "t18"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "t2",
                        "condition": "yes"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "g1",
                        "targetRef": "e2",
                        "condition": "no"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g2",
                        "targetRef": "e3",
                        "condition": "no"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "g2",
                        "targetRef": "t4",
                        "condition": "yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t5",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g3",
                        "targetRef": "e3",
                        "condition": "no"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g3",
                        "targetRef": "t9",
                        "condition": "yes"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t9",
                        "targetRef": "g4"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g4",
                        "targetRef": "t7",
                        "condition": "yes"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "t7",
                        "targetRef": "t8"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "t8",
                        "targetRef": "e4"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "g4",
                        "targetRef": "g7",
                        "condition": "no"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "g7",
                        "targetRef": "t11",
                        "condition": "no"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "t11",
                        "targetRef": "g8"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "g8",
                        "targetRef": "e4",
                        "condition": "no"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "g8",
                        "targetRef": "t12",
                        "condition": "yes"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "t12",
                        "targetRef": "g9"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "g7",
                        "targetRef": "t13",
                        "condition": "yes"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "t13",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "g5",
                        "targetRef": "t14",
                        "condition": "no"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "g5",
                        "targetRef": "t15",
                        "condition": "yes"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "t15",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "t16",
                        "targetRef": "t17"
                    },
                    {
                        "id": "sf29",
                        "sourceRef": "t17",
                        "targetRef": "t18"
                    },
                    {
                        "id": "sf30",
                        "sourceRef": "t18",
                        "targetRef": "t19"
                    },
                    {
                        "id": "sf31",
                        "sourceRef": "t19",
                        "targetRef": "e5"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient receives a prescription. The first step is to determine if the prescription is for the patient. If the prescription is not for the patient, the process ends with the prescription remaining unfilled. If the prescription is for the patient, the patient shows their Medicare card and prescriptions to the pharmacist.\n\nThe pharmacist then receives and checks the script details. Next, the pharmacist checks if the prescription is valid. If the prescription is not valid, the process ends with the prescription remaining unfilled. If the prescription is valid, the pharmacist opens and reviews the patient profile using the pharmacy information system.\n\nThe pharmacist then views the prescription information and checks the patient for any suspicious activity. If the patient is deemed suspicious, the pharmacist contacts the GP for advice. The GP provides advice, and the process ends with the prescription remaining unfilled.\n\nIf the patient is not suspicious, the pharmacist checks the patient's status. If the status check fails, the pharmacist offers lower dosage alternatives. If the patient disagrees with the alternatives, the process ends with the prescription remaining unfilled. If the patient agrees, the pharmacist adds a short memo and selects the correct dosage, then checks the inventory.\n\nIf the status check passes, the pharmacist directly selects the correct dosage and checks the inventory. If the required drugs are out of stock, the pharmacist informs the patient about the alternatives. If the drugs are in stock, the pharmacist collects the correct drugs.\n\nThe pharmacy information system then calculates the Medicare cost waivers and total fees. The system prints and attaches labels with Consumer Medicine Information (CMI). Finally, the patient receives a consultation and pays the fees, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Receive and check script details",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Open and review patient profile",
                        "type": "Service"
                    },
                    {
                        "id": "t4",
                        "name": "View prescription info",
                        "type": "Service"
                    },
                    {
                        "id": "t5",
                        "name": "Check patient for suspicious activity",
                        "type": "User"
                    },
                    {
                        "id": "t6",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "t7",
                        "name": "Receive advice from GP",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Check patient's status",
                        "type": "User"
                    },
                    {
                        "id": "t9",
                        "name": "Offer lower dosage alternatives",
                        "type": "User"
                    },
                    {
                        "id": "t10",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "t11",
                        "name": "Select correct dosage and check inventory",
                        "type": "User"
                    },
                    {
                        "id": "t12",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "t13",
                        "name": "Collect correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "t14",
                        "name": "Calculate Medicare costs waivers and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "t15",
                        "name": "Print and attach labels with CMI",
                        "type": "Service"
                    },
                    {
                        "id": "t16",
                        "name": "Patient receives consultation and pays fees",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Patient receives prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Prescription remains unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Is prescription valid?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g4",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g5",
                        "name": "Is patient suspicious?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g6",
                        "name": "Did patient pass status check?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g7",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g8",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Pharmacy Process",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Patient",
                                "elemRefs": [
                                    "e1",
                                    "t16",
                                    "e3"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "t2",
                                    "t5",
                                    "t6",
                                    "t7",
                                    "t8",
                                    "t9",
                                    "t10",
                                    "t11",
                                    "t12",
                                    "t13",
                                    "t15"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Pharmacy Information System",
                                "elemRefs": [
                                    "t3",
                                    "t4",
                                    "t14"
                                ]
                            },
                            {
                                "id": "l4",
                                "name": "GP (Doctor)",
                                "elemRefs": [
                                    "t7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "g1",
                        "targetRef": "e2",
                        "condition": "Prescription not for patient"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "g1",
                        "targetRef": "t1",
                        "condition": "Prescription for patient"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t2",
                        "targetRef": "g3"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "g3",
                        "targetRef": "e2",
                        "condition": "Prescription not valid"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g3",
                        "targetRef": "t3",
                        "condition": "Prescription valid"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "t5",
                        "targetRef": "g5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "g5",
                        "targetRef": "t6",
                        "condition": "Patient suspicious"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t7",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "g5",
                        "targetRef": "t8",
                        "condition": "Patient not suspicious"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "t8",
                        "targetRef": "g6"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "g6",
                        "targetRef": "t9",
                        "condition": "Status check failed"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "t9",
                        "targetRef": "g7"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "g7",
                        "targetRef": "e2",
                        "condition": "Patient disagrees"
                    },
                    {
                        "id": "sf19",
                        "sourceRef": "g7",
                        "targetRef": "t10",
                        "condition": "Patient agrees"
                    },
                    {
                        "id": "sf20",
                        "sourceRef": "t10",
                        "targetRef": "t11"
                    },
                    {
                        "id": "sf21",
                        "sourceRef": "g6",
                        "targetRef": "t11",
                        "condition": "Status check passed"
                    },
                    {
                        "id": "sf22",
                        "sourceRef": "t11",
                        "targetRef": "g8"
                    },
                    {
                        "id": "sf23",
                        "sourceRef": "g8",
                        "targetRef": "t12",
                        "condition": "Out of stock"
                    },
                    {
                        "id": "sf24",
                        "sourceRef": "g8",
                        "targetRef": "t13",
                        "condition": "In stock"
                    },
                    {
                        "id": "sf25",
                        "sourceRef": "t13",
                        "targetRef": "t14"
                    },
                    {
                        "id": "sf26",
                        "sourceRef": "t14",
                        "targetRef": "t15"
                    },
                    {
                        "id": "sf27",
                        "sourceRef": "t15",
                        "targetRef": "t16"
                    },
                    {
                        "id": "sf28",
                        "sourceRef": "t16",
                        "targetRef": "e3"
                    }
                ],
                "messageFlows": [
                    {
                        "id": "mf1",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a patient receives a prescription. The patient then shows their Medicare card and prescriptions. The dispensing process starts with the pharmacist receiving and checking the script details. If the prescription is not valid, the process ends with the prescription remaining unfilled. If the prescription is valid, the pharmacist opens and reviews the patient profile in the pharmacy information system and then reviews the prescription information.\n\nNext, the pharmacist checks if the patient is suspicious. If the patient is deemed suspicious, the pharmacist contacts the GP for advice, receives the advice or recommendation from the GP, and confirms the decision. If the decision is to not proceed, the process ends with the prescription remaining unfilled. If the patient is not suspicious, the pharmacist checks the patient's status in person.\n\nIf the status check is not passed, the pharmacist offers alternatives with a lower dosage. If the patient agrees to the alternatives, the pharmacist adds a short memo and proceeds to select the prescribed dosage and check the prescription inventory. If the patient does not agree, the process ends with the prescription remaining unfilled. If the status check is passed, the pharmacist directly selects the prescribed dosage and checks the prescription inventory.\n\nIf the medication is out of stock, the pharmacist informs the patient about alternatives. If the medication is in stock, the pharmacist collects and double-checks the correct drugs, calculates Medicare costs waivers and total fees, and prints and attaches labels with Consumer Medicine Information (CMI). The patient then receives a consultation and recommendation, proceeds to pay the prescription fees, and finally receives the prescriptions, ending the dispensing process.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Show Medicare card and prescriptions",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Dispensing Process: Receive and check script details",
                        "type": "Service"
                    },
                    {
                        "id": "task3",
                        "name": "Open and review patient profile in pharmacy information system",
                        "type": "Service"
                    },
                    {
                        "id": "task4",
                        "name": "Review prescription information",
                        "type": "Service"
                    },
                    {
                        "id": "task5",
                        "name": "Check if patient is suspicious",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Contact GP for advice",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Receive advice/recommendation from GP",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Confirm decision",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Check patient's status in person",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Offer alternatives with lower dosage",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Add short memo",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Select prescribed dosage and check prescription inventory",
                        "type": "Service"
                    },
                    {
                        "id": "task13",
                        "name": "Inform patient about alternatives",
                        "type": "User"
                    },
                    {
                        "id": "task14",
                        "name": "Collect and double-check correct drugs",
                        "type": "User"
                    },
                    {
                        "id": "task15",
                        "name": "Calculate Medicare costs waivers and total fees",
                        "type": "Service"
                    },
                    {
                        "id": "task16",
                        "name": "Print and attach labels with CMI",
                        "type": "Service"
                    },
                    {
                        "id": "task17",
                        "name": "Patient receives consultation and recommendation",
                        "type": "User"
                    },
                    {
                        "id": "task18",
                        "name": "Proceed to pay prescription fees",
                        "type": "User"
                    },
                    {
                        "id": "task19",
                        "name": "Receive prescriptions",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start",
                        "name": "Patient receives a prescription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Prescription remains unfilled",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "Dispensing process ends",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw4",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw5",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw6",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw7",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw8",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Patient",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Patient",
                                "elemRefs": [
                                    "start",
                                    "task1",
                                    "task18",
                                    "task19",
                                    "gw1",
                                    "gw2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "NewTown Health Chemist",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Pharmacist",
                                "elemRefs": [
                                    "task2",
                                    "task5",
                                    "task6",
                                    "task7",
                                    "task8",
                                    "task9",
                                    "task10",
                                    "task11",
                                    "task12",
                                    "task13",
                                    "task14",
                                    "task15",
                                    "task16",
                                    "task17",
                                    "gw3",
                                    "gw4",
                                    "gw5",
                                    "gw6",
                                    "gw7",
                                    "gw8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "gw1",
                        "targetRef": "task1",
                        "condition": "For patient themselves"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gw1",
                        "targetRef": "end1",
                        "condition": "Not for patient themselves"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gw2",
                        "targetRef": "end1",
                        "condition": "Prescription not valid"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gw2",
                        "targetRef": "task3",
                        "condition": "Prescription valid"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task5",
                        "targetRef": "gw3",
                        "condition": "Suspicious"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task5",
                        "targetRef": "gw4",
                        "condition": "Not suspicious"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gw3",
                        "targetRef": "task6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task6",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task7",
                        "targetRef": "task8"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task8",
                        "targetRef": "end1"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gw4",
                        "targetRef": "task9",
                        "condition": "No"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task9",
                        "targetRef": "gw5"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "gw5",
                        "targetRef": "task10",
                        "condition": "Status check not passed"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "gw5",
                        "targetRef": "task12",
                        "condition": "Status check passed"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task10",
                        "targetRef": "gw6"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "gw6",
                        "targetRef": "task11",
                        "condition": "Patient agrees"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "gw6",
                        "targetRef": "end1",
                        "condition": "Patient does not agree"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "task11",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "task12",
                        "targetRef": "gw7"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "gw7",
                        "targetRef": "task13",
                        "condition": "Medication out of stock"
                    },
                    {
                        "id": "flow26",
                        "sourceRef": "gw7",
                        "targetRef": "task14",
                        "condition": "Medication in stock"
                    },
                    {
                        "id": "flow27",
                        "sourceRef": "task14",
                        "targetRef": "task15"
                    },
                    {
                        "id": "flow28",
                        "sourceRef": "task15",
                        "targetRef": "task16"
                    },
                    {
                        "id": "flow29",
                        "sourceRef": "task16",
                        "targetRef": "task17"
                    },
                    {
                        "id": "flow30",
                        "sourceRef": "task17",
                        "targetRef": "task18"
                    },
                    {
                        "id": "flow31",
                        "sourceRef": "task18",
                        "targetRef": "task19"
                    },
                    {
                        "id": "flow32",
                        "sourceRef": "task19",
                        "targetRef": "end2"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "72_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the patient to start booking an appointment. The patient then requires an appointment and proceeds to request the appointment by describing the problem. The receptionist verifies if the requested dates are within 90 days. If there are available dates, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient then checks the appointment data.\n\nAt this point, the process reaches a decision point where it is determined if the appointment is confirmed. If the appointment is confirmed, the patient confirms the appointment and receives an email with personal data. The receptionist then registers the appointment and sends an email with the patient data, concluding the process with the appointment being done.\n\nIf there are no available dates within 90 days, the process ends with the appointment being rejected. If the appointment is not confirmed, the process loops back to the patient requiring an appointment again.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Start Booking Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Require Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Request Appointment (Describe Problem)",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Verify Dates (Within 90 Days)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Make Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send Appointment Time and Date",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check Appointment Data",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Confirm Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive Email with Personal Data",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Register Appointment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send Email with Patient Data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Appointment Done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Appointment Rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Available Dates?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Appointment Confirmed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Oculist Check",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Patient",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Receptionist",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "id5",
                        "name": "Available Dates"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id7",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "id8",
                        "name": "Confirmed"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id11",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "gateway1",
                        "targetRef": "event3",
                        "name": "No Available Dates within 90 Days"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway2",
                        "targetRef": "id2",
                        "name": "Not Confirmed"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an appointment is required by a patient. The patient then requests an appointment. The receptionist verifies the available dates. If the dates are available, the receptionist makes the appointment and sends the appointment time and date to the patient. The patient then checks the appointment data. If the patient confirms the appointment, the receptionist receives an email with the patient data, registers the appointment, and sends an email with the patient data. The process concludes with the appointment being done.\n\nIf the dates are not available, the process ends with the appointment being rejected.\n\nIf the patient does not confirm the appointment, the process loops back to the patient requiring an appointment again.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Require appointment",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Request appointment",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Verify dates",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Make appointment",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send appointment time and date",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check appointment data",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Receive email with patient data",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Register the appointment",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send email with patient data",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Appointment rejected",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Dates available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Confirm appointment?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Oculist Check",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Patient",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Receptionist",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id13",
                        "targetRef": "id12",
                        "condition": "No"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id14",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a patient requires an appointment and describes their problem. The receptionist then verifies the availability of appointments within the next 90 days. If there are available dates, the receptionist makes the appointment and sends the details to the patient. The patient then checks the appointment data and confirms it. If the confirmation is received, the receptionist registers the appointment. Following this, the receptionist sends the patient's personal data to the receptionist, and the process ends with the appointment being done.\n\nIf there are no available dates within 90 days, a rejection message is sent to the patient, and the process ends with the rejection message being received.\n\nIf the patient does not confirm the appointment data, the process loops back to the patient requiring an appointment and describing their problem again.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Require appointment and describe problem",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Verify availability within 90 days",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Make appointment and send to patient",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check appointment data and confirm",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Register appointment",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Send personal data to receptionist",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send rejection message",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Appointment done",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Rejection message received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Available dates?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Confirmation received?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Oculist Check Appointment",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Patient",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id7"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Receptionist",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id3",
                        "condition": "Yes"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id12",
                        "targetRef": "id5",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id12",
                        "targetRef": "id1",
                        "condition": "No"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "1_ground_truth.txt": {
        "0": {
            "text": "The process begins when a need arises in the Procurement Department's Work Equipment Management lane.\n\nFirst, the stock is checked to determine if the required work equipment is available.\n\nIf the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being removed from the storeroom.\n\nIf the work equipment is not in stock, the requirements are specified and quantified.\n\nFollowing this, an order is placed.\n\nAfter placing the order, there is a waiting period of 5 days.\n\nAfter the 5-day wait, it is checked whether the receipt of the work equipment has occurred within this period.\n\nIf the work equipment is received within 5 days, the process ends with the work equipment being procured.\n\nIf the work equipment is not received within 5 days, an order is placed by e-mail, and the process returns to the 5-day waiting period.\n\nThis cycle continues until the work equipment is procured, ending the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Place order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Wait 5 days",
                        "type": "Timer"
                    },
                    {
                        "id": "id6",
                        "name": "Place order by e-mail",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Work equipment in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Receipt within 5 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Procurement Department",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Work Equipment Management",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "In stock"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id2",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id10",
                        "targetRef": "id3",
                        "condition": "Out of stock"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id11",
                        "targetRef": "id9",
                        "condition": "Receipt within 5 days"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id11",
                        "targetRef": "id6",
                        "condition": "No receipt within 5 days"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a need arises in the Procurement Department at ACME AG.\n\nThe first step is to check if the required work equipment is available in stock.\n\nIf the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being removed from the storeroom.\n\nIf the work equipment is not in stock, the requirements are specified and quantified.\n\nFollowing this, an order is placed.\n\nAfter placing the order, the process waits for the receipt of the work equipment.\n\nIf the receipt is received within 5 days, the process ends with the work equipment being procured.\n\nIf the receipt is not received within 5 days, an order is placed by email to the supplier, and the process waits again for the receipt of the work equipment.\n\nOnce the receipt is received, the process ends with the work equipment being procured.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check stock",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Place order",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Wait for receipt of work equipment",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Place order by email to supplier",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "idE1",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "idE2",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "idE3",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "idG1",
                        "name": "Work equipment available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "idG2",
                        "name": "Receipt received before 5 days?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Procurement Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "idE1",
                                    "idE2",
                                    "idE3",
                                    "idG1",
                                    "idG2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "idE1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "idG1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "idG1",
                        "targetRef": "id4",
                        "condition": "In stock"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "idG1",
                        "targetRef": "id2",
                        "condition": "Not in stock"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "idE2"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "idG2"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "idG2",
                        "targetRef": "idE3",
                        "condition": "Receipt received"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "idG2",
                        "targetRef": "id6",
                        "condition": "No receipt"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id5",
                        "targetRef": "idE3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a need arises in the ACME AG Procurement Department. The first step is to check the stock for the required work equipment. If the work equipment is in stock, it is retrieved from the storeroom, and the process ends with the work equipment being removed from the storeroom.\n\nIf the work equipment is not in stock, the requirements are specified and quantified. Following this, an order is placed. The process then waits for 5 days. If the receipt of the work equipment is received before 5 days, the process ends with the work equipment being procured.\n\nIf the receipt is not received after 5 days, an order is placed by email to the supplier. The process then waits for the receipt of the work equipment again, and once received, the process ends with the work equipment being procured.",
            "model": {
                "tasks": [
                    {
                        "id": "sid-1",
                        "name": "Check stock for required work equipment",
                        "type": "Task"
                    },
                    {
                        "id": "sid-2",
                        "name": "Retrieve work equipment from storeroom",
                        "type": "Task"
                    },
                    {
                        "id": "sid-3",
                        "name": "Specify and quantify requirements",
                        "type": "Task"
                    },
                    {
                        "id": "sid-4",
                        "name": "Place order",
                        "type": "Task"
                    },
                    {
                        "id": "sid-5",
                        "name": "Wait for 5 days",
                        "type": "Task"
                    },
                    {
                        "id": "sid-6",
                        "name": "Place order by e-mail to supplier",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "sid-7",
                        "name": "Need arises",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "sid-8",
                        "name": "Work equipment removed from storeroom",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "sid-9",
                        "name": "Work equipment procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "sid-10",
                        "name": "Receipt of work equipment",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "sid-11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-12",
                        "type": "Exclusive"
                    },
                    {
                        "id": "sid-13",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "sid-14",
                        "name": "ACME AG Procurement Department",
                        "lanes": [
                            {
                                "id": "sid-15",
                                "name": "Procurement",
                                "elemRefs": [
                                    "sid-1",
                                    "sid-2",
                                    "sid-3",
                                    "sid-4",
                                    "sid-5",
                                    "sid-6",
                                    "sid-7",
                                    "sid-8",
                                    "sid-9",
                                    "sid-10",
                                    "sid-11",
                                    "sid-12",
                                    "sid-13"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sid-16",
                        "sourceRef": "sid-7",
                        "targetRef": "sid-1"
                    },
                    {
                        "id": "sid-17",
                        "sourceRef": "sid-1",
                        "targetRef": "sid-11"
                    },
                    {
                        "id": "sid-18",
                        "sourceRef": "sid-11",
                        "targetRef": "sid-2",
                        "condition": "Work equipment in stock"
                    },
                    {
                        "id": "sid-19",
                        "sourceRef": "sid-2",
                        "targetRef": "sid-8"
                    },
                    {
                        "id": "sid-20",
                        "sourceRef": "sid-11",
                        "targetRef": "sid-3",
                        "condition": "Work equipment not in stock"
                    },
                    {
                        "id": "sid-21",
                        "sourceRef": "sid-3",
                        "targetRef": "sid-4"
                    },
                    {
                        "id": "sid-22",
                        "sourceRef": "sid-4",
                        "targetRef": "sid-5"
                    },
                    {
                        "id": "sid-23",
                        "sourceRef": "sid-5",
                        "targetRef": "sid-12"
                    },
                    {
                        "id": "sid-24",
                        "sourceRef": "sid-12",
                        "targetRef": "sid-10",
                        "condition": "Receipt received before 5 days"
                    },
                    {
                        "id": "sid-25",
                        "sourceRef": "sid-10",
                        "targetRef": "sid-9"
                    },
                    {
                        "id": "sid-26",
                        "sourceRef": "sid-12",
                        "targetRef": "sid-6",
                        "condition": "Receipt not received after 5 days"
                    },
                    {
                        "id": "sid-27",
                        "sourceRef": "sid-6",
                        "targetRef": "sid-13"
                    },
                    {
                        "id": "sid-28",
                        "sourceRef": "sid-13",
                        "targetRef": "sid-10"
                    }
                ]
            }
        }
    },
    "49_ground_truth.txt": {
        "0": {
            "text": "The process begins when the customer initiates the order.\n\nThe waiter then communicates the order to the kitchen.\n\nThe order is sent to the sous chef in the kitchen.\n\nThe sous chef manages the order of cooking.\n\nThe cooking process starts.\n\nOnce the food is cooked, it is checked for quality.\n\nThe waiter is then called to grab the food.\n\nThe waiter sends and communicates the food to the customer.\n\nThe customer receives and enjoys the food, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Communicate order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send order to sous chef in kitchen",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Manage order of cooking",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Start cooking food",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Call waiter to grab food",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Send and communicate food to customer",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Receive and enjoy food",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id9",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Food Service Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id9",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    }
                ]
            }
        },
        "1": {
            "text": "The process begins when a customer places an order at the restaurant. The order is then communicated to the waiter. The waiter sends the order to the sous chef in the kitchen. The sous chef manages the order of cooking and starts cooking the food. Once the cooking is underway, the food is checked to ensure it meets the required standards. After the food is checked, the waiter grabs the food and communicates it to the customer. The process concludes with the customer receiving and enjoying the food.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Communicate order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send order to sous chef",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Manage order of cooking",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Start cooking",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check the food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Grab the food",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Communicate food to customer",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Place order",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Receive and enjoy food",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id8",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Kitchen",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a customer places an order for food. The order is then communicated to the waiter. The waiter sends the order to the sous chef, who manages the order of cooking. The chef then cooks the food. Once the food is cooked, the sous chef checks the food. After checking, the sous chef calls the waiter to grab the food. The waiter then sends and communicates the food to the customer. Finally, the customer receives the food and enjoys it, marking the end of the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Place order for food",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Communicate order to waiter",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send order to sous chef",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Manage order of cooking",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Cook food",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check food",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Call waiter to grab food",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Send and communicate food to customer",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receive food and enjoy",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Restaurant",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer",
                                "elemRefs": [
                                    "id1",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Waiter",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id8"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Sous chef",
                                "elemRefs": [
                                    "id4",
                                    "id6",
                                    "id7"
                                ]
                            },
                            {
                                "id": "lane4",
                                "name": "Chef",
                                "elemRefs": [
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id9",
                        "targetRef": "id11"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "15_ground_truth.txt": {
        "0": {
            "text": "The process begins at Hochschule Mainz when a support team receives a ticket. The team then determines if customer participation is necessary. If customer participation is required, the support team contacts the customer and conducts a detailed interview to understand the problem. Following the interview, the support team connects to the client's system and works together with the customer to solve the problem. \n\nAfter attempting to solve the problem, the team assesses whether further information is needed. If further information is required, the support team asks the customer for additional details and then tries to solve the problem again. If no further information is needed, the support team proceeds to solve the problem directly.\n\nOnce the problem is solved, the support team creates notes for documentation and sends a ticket completion confirmation. The process concludes with the problem being solved. If customer participation is not necessary from the beginning, the support team directly solves the problem, creates notes for documentation, and sends the ticket completion confirmation, ending the process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview on problem",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client of the customer",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together with customer",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Try to solve problem again",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Solve problem",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create notes for documentation",
                        "type": "Manual"
                    },
                    {
                        "id": "id10",
                        "name": "Send ticket completion confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Is customer participation necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "name": "Is further information needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id15",
                        "name": "Hochschule Mainz",
                        "lanes": [
                            {
                                "id": "id16",
                                "name": "Support",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            },
                            {
                                "id": "id17",
                                "name": "Customer",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id13",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id14",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id14",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id10",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id13",
                        "targetRef": "id8",
                        "condition": "no"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a support request is received by the Hochschule Mainz Support team. The support team first receives the ticket. They then determine if customer participation is necessary. If customer participation is required, the support team contacts the customer and conducts a detailed interview. Following the interview, they connect to the client and work together to solve the problem. After attempting to solve the problem, they assess if further information is needed. If further information is required, they ask the customer for more details and then attempt to solve the problem again. Once the problem is solved, they create documentation notes and send a confirmation to the customer, marking the problem as solved.\n\nIf customer participation is not necessary, the support team directly solves the problem, creates documentation notes, and sends a confirmation to the customer, marking the problem as solved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Conduct detailed interview",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Connect to client",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Solve problem together",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Ask for further information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Solve problem again",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Solve problem",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Create documentation notes",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Send confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Request support",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gw1",
                        "name": "Customer participation necessary?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gw2",
                        "name": "Further information needed?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Hochschule Mainz Support",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Support Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "e1",
                                    "e2",
                                    "gw1",
                                    "gw2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Customer",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Customer",
                        "lanes": []
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "gw1"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "gw1",
                        "targetRef": "id2",
                        "condition": "yes"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "gw2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "gw2",
                        "targetRef": "id6",
                        "condition": "yes"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "gw2",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id10",
                        "targetRef": "e2"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "gw1",
                        "targetRef": "id8",
                        "condition": "no"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf17",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf18",
                        "sourceRef": "id10",
                        "targetRef": "e2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a request is received by the Hochschule Mainz Support team.\n\nFirst, the support team receives the ticket.\n\nNext, they determine if customer participation is necessary.\n\nIf customer participation is needed, they contact the customer and proceed to interview them.\n\nAfter the interview, they connect to the client and try to solve the problem together.\n\nIf further information is needed, they ask the customer for more details and then try to solve the problem again.\n\nIf no further information is needed, they create documentation notes.\n\nIf customer participation is not needed, they solve the problem without the customer and then proceed to create documentation notes.\n\nAfter the documentation notes are created, they send a confirmation to the customer.\n\nThe process ends when the problem is solved.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive ticket",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Determine if customer participation is necessary",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Contact customer",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Interview customer",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Connect to client",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Try to solve problem together",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Ask for further information",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Try to solve problem again",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Solve problem without customer",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Create documentation notes",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Send confirmation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id12",
                        "name": "Request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Problem solved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Customer participation needed?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "Hochschule Mainz Support",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Support Team",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "id12",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "id2",
                        "targetRef": "id14"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "id14",
                        "targetRef": "id3",
                        "condition": "yes"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id6",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id15",
                        "targetRef": "id7",
                        "condition": "needed"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id15",
                        "targetRef": "id10",
                        "condition": "not needed"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id8",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "id14",
                        "targetRef": "id9",
                        "condition": "no"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "id9",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "id16",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sid16",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid17",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "21_ground_truth.txt": {
        "0": {
            "text": "The process begins when an order is received. Immediately, three tasks are initiated in parallel: preparing the dough, setting up the delivery, and preparing the cooking paper. Once these three tasks are completed, the process moves forward to the next phase. \n\nIn this phase, the muffins are prepared, followed by cooking the muffins. After the muffins are cooked, two tasks are initiated in parallel: initiating the payment process and dispatching the muffins. \n\nFinally, once both the payment process is initiated and the muffins are dispatched, the process concludes.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set up delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cooking paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate payment process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Phase 1 tasks completed",
                        "type": "None"
                    },
                    {
                        "id": "id10",
                        "name": "Process end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "type": "Parallel"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id11",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id11",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an order is received at MyMuffin. \n\nThe first phase starts with the preparation of the dough, setting up the delivery, and preparing the cooking paper. These three tasks are carried out simultaneously.\n\nOnce the dough is prepared, the delivery is set up, and the cooking paper is ready, the process moves to the second phase.\n\nIn the second phase, the muffins are prepared and then cooked sequentially.\n\nAfter the muffins are cooked, the process transitions to the third phase.\n\nIn the third phase, the payment process is initiated and the muffins are dispatched simultaneously.\n\nThe process concludes when both the payment process is initiated and the muffins are dispatched, marking the end of phase 3.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare dough",
                        "type": "Manual"
                    },
                    {
                        "id": "id2",
                        "name": "Set up delivery",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cooking paper",
                        "type": "Manual"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id5",
                        "name": "Cook muffins",
                        "type": "Manual"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate payment process",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch muffins",
                        "type": "Manual"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Phase 3 ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "MyMuffin",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Phase 1",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Phase 2",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Phase 3",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when a new order is received at MyMuffin. \n\nThe first phase involves three parallel tasks: preparing the dough, setting up the delivery, and preparing the cooking paper. \n\nOnce these tasks are completed, the process moves to the second phase, where the muffins are prepared and then cooked. \n\nAfter the muffins are cooked, the process transitions to the third phase, which also involves parallel tasks: initiating the payment process and dispatching the muffins. \n\nThe process concludes when both the payment process is initiated and the muffins are dispatched, marking the end of phase 3.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Prepare dough",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Set up delivery",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Prepare cooking paper",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Prepare muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Cook muffins",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Initiate payment process",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Dispatch muffins",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "New order received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Phase 3 ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id11",
                        "name": "",
                        "type": "Parallel"
                    },
                    {
                        "id": "id12",
                        "name": "",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "MyMuffin",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Phase 1",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Phase 2",
                                "elemRefs": [
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id16",
                                "name": "Phase 3",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id17",
                        "sourceRef": "id8",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id10",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id10",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id11",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id5",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id12",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id12",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "10_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to verify the request. Once the request is verified, the order is sent for request handling. The order is then received by the first level support, who logs and categorizes the request.\n\nAt this point, a decision is made. If the request is not authorized, it loops back to the verification step. If the request is authorized, two parallel tasks are initiated: monitoring and escalating the request, and requesting model execution.\n\nBoth tasks converge at a merge point, after which the process proceeds to closure and evaluation of the request. Another decision is made here. If there is no problem, the request fulfillment support is contacted, and the process ends successfully. If there is a problem, the incident manager is contacted about the problem, and the process ends with a problem.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Verify request",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Send order for request handling",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Receive order by 1st level support",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Log and categorize request",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Monitor and escalate request",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Request model execution",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Closure and evaluation requested",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Request fulfillment support",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Contact incident manager about problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Successful End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "End with Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "type": "Parallel"
                    },
                    {
                        "id": "gateway3",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway4",
                        "type": "Merge"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task1",
                        "condition": "Request not authorized"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "condition": "Request authorized"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway2",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task5",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "task6",
                        "targetRef": "gateway4"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway4",
                        "targetRef": "task7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task7",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway3",
                        "targetRef": "task8",
                        "condition": "No problem"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task8",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "task9",
                        "condition": "Problem"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "task9",
                        "targetRef": "event3"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, after which the request is verified by the incident manager. If the request is authorized, it is sent for request handling. The order is then received by the 1st level support, who logs and categorizes the request. \n\nNext, the process checks if the request is authorized. If it is not authorized, the process loops back to the verification step. If the request is authorized, it proceeds in parallel to request monitoring and escalation by the incident manager and request model execution by the 1st level support and the service request fulfillment group.\n\nBoth the request monitoring and escalation and the request model execution lead to the closure and evaluation of the request. After the closure and evaluation, the process checks for any problems. If there are no problems, the request fulfillment support is provided, and the process ends successfully. If there is a problem, the incident manager is contacted about the problem, and the process ends due to the problem.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify Request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send Order for Request Handling",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive Order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Log and Categorize Request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request Monitoring and Escalation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request Model Execution",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Closure and Evaluation Request",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request Fulfillment Support",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Contact Incident Manager About Problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Successful End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End Due to Problem",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id13",
                        "name": "Request Authorized?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id14",
                        "type": "Parallel"
                    },
                    {
                        "id": "id15",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Request Fulfillment Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "1st Level Support",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id4",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id13",
                        "targetRef": "id1",
                        "condition": "Not Authorized"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id13",
                        "targetRef": "id14",
                        "condition": "Authorized"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id14",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id14",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id7",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id15",
                        "targetRef": "id8",
                        "condition": "No Problem"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id15",
                        "targetRef": "id9",
                        "condition": "Problem"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first step is to verify the request. Once the request is verified, it is sent for request handling. The order is then received by the 1st Level Support, who logs and categorizes the request.\n\nNext, an exclusive decision is made to determine if the request is authorized or not. If the request is not authorized, the process loops back to the verification step. If the request is authorized, it proceeds to a parallel gateway where two tasks are executed concurrently: request monitoring and escalation by the Incident Manager, and request model execution by the Service Request Fulfillment Group.\n\nBoth tasks feed back into the parallel gateway, which then leads to the request closure and evaluation. Following this, another exclusive decision is made to check if there is a problem detected. If no problem is detected, the process continues to request fulfillment support, and then the process ends.\n\nIf a problem is detected, the Incident Manager is contacted about the problem, and then the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Verify request",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send order for request handling",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Log and categorize request",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Request monitoring and escalation",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Request model execution",
                        "type": "Service"
                    },
                    {
                        "id": "id7",
                        "name": "Request closure and evaluation",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Request fulfillment support",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Contact incident manager about problem",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Authorized",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Not authorized",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "e5",
                        "name": "No problem",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "e6",
                        "name": "Problem detected",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Parallel"
                    },
                    {
                        "id": "g3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Incident Management",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Incident Manager",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id9"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "1st Level Support",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Service Request Fulfillment Group",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "e1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "id4",
                        "targetRef": "g1"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "g1",
                        "targetRef": "e4",
                        "condition": "Not authorized"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "g1",
                        "targetRef": "e3",
                        "condition": "Authorized"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "e3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "g2",
                        "targetRef": "id5"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "g2",
                        "targetRef": "id6"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "id5",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "id6",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "g2",
                        "targetRef": "id7"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "id7",
                        "targetRef": "g3"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "g3",
                        "targetRef": "e5",
                        "condition": "No problem"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "g3",
                        "targetRef": "e6",
                        "condition": "Problem detected"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "e5",
                        "targetRef": "id8"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "id8",
                        "targetRef": "e2"
                    },
                    {
                        "id": "f19",
                        "sourceRef": "e6",
                        "targetRef": "id9"
                    },
                    {
                        "id": "f20",
                        "sourceRef": "id9",
                        "targetRef": "e2"
                    },
                    {
                        "id": "f21",
                        "sourceRef": "e4",
                        "targetRef": "id1"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "0_ground_truth.txt": {
        "0": {
            "text": "The process begins when an application is received by ACME AG. Upon receiving the application, a receipt confirmation is sent to the applicant. The Human Resources Department then verifies the applicant's details. Following verification, the Head of Human Resources determines the application status.\n\nIf the application is rejected, a rejection notice is sent to the applicant, and the process ends.\n\nIf the application is accepted, an interview invitation is sent to the applicant. The Human Resources Department then prepares the employment agreement. The applicant is invited to conduct a job interview. After the interview, the Human Resources Department determines the applicant's suitability.\n\nIf the applicant is deemed not suitable, a rejection notice is sent, and the process ends.\n\nIf the applicant is deemed suitable, an employment contract is sent to the applicant. The process then waits for the signed employment contract to be returned. Once the signed employment contract is received, the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Receive application",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Verify applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send interview invitation",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Prepare employment agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Conduct job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Determine suitability",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Send rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Send employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Wait for signed employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id13",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id16",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id17",
                        "name": "Application accepted?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "Suitable applicant?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id5",
                                    "id6",
                                    "id8",
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id21",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id3",
                                    "id4",
                                    "id7",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id17",
                        "targetRef": "id5",
                        "condition": "rejected"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id5",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "accepted"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id18"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "not suitable"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id10",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id18",
                        "targetRef": "id11",
                        "condition": "suitable"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id11",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id12",
                        "targetRef": "id16"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when an application is received by the Human Resources department at ACME AG. Upon receiving the application, a receipt confirmation is sent to the applicant. Next, the applicant is verified by the Human Resources department. Following verification, the application status is determined by the Head of Human Resources.\n\nIf the application is rejected, a rejection notice is sent to the applicant, and the process ends with the applicant being rejected.\n\nIf the application is accepted, an invitation to a job interview is sent to the applicant. The Human Resources department then prepares for the job interview, which is subsequently carried out. After the interview, the suitability of the applicant is assessed.\n\nIf the applicant is deemed not suitable, a rejection notice is sent, and the process ends with the applicant being rejected.\n\nIf the applicant is deemed suitable, an employment contract is prepared and sent to the applicant. The process then waits for the signed employment contract to be returned. Once the signed employment contract is received, the process concludes with the signed employment contract being received.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Prepare employment agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Send employment contract",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Wait for signed employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id_1",
                        "name": "Receive application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id_2",
                        "name": "Applicant Rejected",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id_3",
                        "name": "Signed employment contract received",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id_g1",
                        "name": "Application status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id_g2",
                        "name": "Suitability",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Human Resources",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id6",
                                    "id5",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id_1",
                                    "id_2",
                                    "id_3",
                                    "id4",
                                    "id3",
                                    "id_g1",
                                    "id_g2"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Head of Human Resources",
                                "elemRefs": [
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id_1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id_g1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id_g1",
                        "targetRef": "id4",
                        "condition": "Rejected"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id4",
                        "targetRef": "id_2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id_g1",
                        "targetRef": "id6",
                        "condition": "Accepted"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "id_g2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id_g2",
                        "targetRef": "id4",
                        "condition": "Not Suitable"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id_g2",
                        "targetRef": "id8",
                        "condition": "Suitable"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id_3"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when an application is received by the Human Resources Department at ACME AG. Upon receiving the application, a receipt confirmation is sent to the applicant. Next, the applicant is verified, and the application status is determined.\n\nIf the application is rejected, a rejection message is sent, and the process ends with the application being rejected. If the application is accepted, an invitation to a job interview is sent to the applicant. Following this, an employment agreement is prepared.\n\nThe job interview is then carried out, and the suitability of the applicant is determined. If the applicant is deemed not suitable, a rejection message is sent, and the process ends with the application being rejected. If the applicant is deemed suitable, an employment contract is sent to the applicant.\n\nThe process then waits for the signed employment contract to be returned. Once the signed contract is received, the process ends with the presence of the signed contract.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send receipt confirmation",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Verify applicant",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Determine application status",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send rejection message",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Send invitation to job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Prepare employment agreement",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Carry out job interview",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Determine if applicant is suitable",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Send rejection message",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Send employment contract",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Receive application",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "End with rejection",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Wait for signed employment contract",
                        "type": "IntermediateEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Presence of signed contract",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Application status",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Suitability decision",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "ACME AG",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Human Resources Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id15"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id15",
                        "targetRef": "id4",
                        "condition": "Application rejected"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "Application accepted"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id8",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id16",
                        "targetRef": "id9",
                        "condition": "Applicant not suitable"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id9",
                        "targetRef": "id12"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id16",
                        "targetRef": "id10",
                        "condition": "Applicant suitable"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id10",
                        "targetRef": "id13"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "30_ground_truth.txt": {
        "0": {
            "text": "The process begins when a client initiates a new service. The client then checks if they can find the service they need. If the client does not find the service, the process ends there. If the client finds the service, they take a ticket. The client then checks if the ticket was taken in the app. If the ticket was taken physically, the client waits for their turn. If the ticket was taken in the app, the client waits for their turn after an intermediate event indicating their turn.\n\nOnce it is the client's turn, they ask for a specific request. The request assistant then registers the request and checks if there are enough requests to respond to the demand. If there are not enough requests, the request assistant continues to register requests until there are enough. Once there are enough requests, the request assistant sends an order request document to the shop assistants' team.\n\nThe shop assistants' team then prepares the order and delivers it. Finally, the client collects their order, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Client takes a ticket",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Client waits for their turn",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Client asks for a specific request",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Request assistant registers the request",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Request assistant checks if there are enough requests",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Request assistant continues to register requests",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Request assistant sends order request document",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Shop assistants' team prepares the order",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Shop assistants' team delivers the order",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "Client initiates new service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "Client finds service",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "Client does not find service",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Client collects their order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Client turns",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Register time expired",
                        "type": "IntermediateCatchEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Ticket was taken in app?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Enough requests to respond to demand?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Client role",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id16"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool2",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "lane2",
                                "name": "Request Assistant role",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id15",
                                    "id17"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pool3",
                        "name": "Shop Assistants Team",
                        "lanes": [
                            {
                                "id": "lane3",
                                "name": "Shop Assistants Team role",
                                "elemRefs": [
                                    "id8",
                                    "id9"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "Client finds service"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id11",
                        "targetRef": "id12",
                        "condition": "Client does not find service"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Ticket taken physically"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id16",
                        "targetRef": "id14",
                        "condition": "Ticket taken in app"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id14",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "id5",
                        "targetRef": "id6",
                        "condition": "Not enough requests"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "id5",
                        "targetRef": "id7",
                        "condition": "Enough requests"
                    },
                    {
                        "id": "sf14",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sf15",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "sf16",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a client enters the store and looks for a service. If the service is not found, the process ends there. If the service is found, the client takes a ticket. The client then either waits for their turn physically or checks the waiting time, looks for the product and specific criteria, and checks the number of tickets ahead if the ticket was taken in the app. \n\nOnce the client\u2019s turn arrives, they ask for a specific request and communicate it to the request assistant. The request assistant registers the request and checks if there are enough requests to respond to customer demand. If there are not enough requests, the assistant continues to register requests and checks again. This loop continues until there are enough requests.\n\nWhen there are enough requests, the request assistant sends an order request document to the shop assistants' team. The shop assistants then prepare the order and deliver it to the client. The process ends when the client collects the order and the process is marked as ended.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Client enters store and looks for service",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Client takes ticket",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Wait for waiting time, look for the product and specific criteria, check number of tickets ahead",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for turn",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Client asks for specific request and communicates to request assistant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Check if enough requests to respond to customer demand",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Continue to register requests and check again",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Send order request document to shop assistants' team",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Deliver order to client",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Mark process as ended",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "eid1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "eid2",
                        "name": "Service not found",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "eid3",
                        "name": "Client collects order",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gid1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid2",
                        "name": "Ticket taken in der app?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gid3",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pid1",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "lid1",
                                "name": "Client Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "eid1",
                                    "eid2",
                                    "eid3",
                                    "gid1",
                                    "gid2"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pid2",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "lid2",
                                "name": "Request Handling",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "gid3"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "pid3",
                        "name": "Shop Assistants' Team",
                        "lanes": [
                            {
                                "id": "lid3",
                                "name": "Order Preparation and Delivery",
                                "elemRefs": [
                                    "id10",
                                    "id11",
                                    "id12"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "sid1",
                        "sourceRef": "eid1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sid2",
                        "sourceRef": "id1",
                        "targetRef": "gid1"
                    },
                    {
                        "id": "sid3",
                        "sourceRef": "gid1",
                        "targetRef": "eid2",
                        "condition": "Service not found"
                    },
                    {
                        "id": "sid4",
                        "sourceRef": "gid1",
                        "targetRef": "id2",
                        "condition": "Service found"
                    },
                    {
                        "id": "sid5",
                        "sourceRef": "id2",
                        "targetRef": "gid2"
                    },
                    {
                        "id": "sid6",
                        "sourceRef": "gid2",
                        "targetRef": "id3",
                        "condition": "Taken in der app"
                    },
                    {
                        "id": "sid7",
                        "sourceRef": "gid2",
                        "targetRef": "id4",
                        "condition": "Taken physically"
                    },
                    {
                        "id": "sid8",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid9",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sid10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sid11",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sid12",
                        "sourceRef": "id7",
                        "targetRef": "gid3",
                        "condition": "Not enough requests"
                    },
                    {
                        "id": "sid13",
                        "sourceRef": "gid3",
                        "targetRef": "id8"
                    },
                    {
                        "id": "sid14",
                        "sourceRef": "id8",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sid15",
                        "sourceRef": "id7",
                        "targetRef": "id9",
                        "condition": "Enough requests"
                    },
                    {
                        "id": "sid16",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sid17",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "sid18",
                        "sourceRef": "id11",
                        "targetRef": "eid3"
                    },
                    {
                        "id": "sid19",
                        "sourceRef": "eid3",
                        "targetRef": "id12"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the client initiates the service by entering the store. The client then looks for a specific service. If the service is not found, the process ends with the client finding the service. If the service is found, the client takes a ticket. The client then decides whether the ticket was taken in the app or physically. If the ticket was taken in the app, the client waits for their turn using the app, looks for product criteria, and checks the tickets ahead in the app. If the ticket was taken physically, the client waits for their turn physically. \n\nOnce the client\u2019s turn arrives, they ask for a specific request and communicate this request to the assistant. The assistant registers the request and checks if there are enough requests to respond to customer demand. If there are not enough requests, the assistant continues to register requests and rechecks the demand. If there are enough requests, the assistant sends the order request to the assistant team. The assistant team prepares the order and delivers it to the client. The process ends with the client collecting the order and the process being marked as ended.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Enter store",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Look for specific service",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Take ticket",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Wait for turn (app)",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Look for product criteria",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Check tickets ahead (app)",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Wait for turn (physical)",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Ask for specific request",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Communicate request to assistant",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Register request",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Check requests for customer demand",
                        "type": "User"
                    },
                    {
                        "id": "id12",
                        "name": "Continue to register requests",
                        "type": "User"
                    },
                    {
                        "id": "id13",
                        "name": "Send order request to assistant team",
                        "type": "User"
                    },
                    {
                        "id": "id14",
                        "name": "Prepare order",
                        "type": "User"
                    },
                    {
                        "id": "id15",
                        "name": "Deliver order to client",
                        "type": "User"
                    },
                    {
                        "id": "id16",
                        "name": "Finish order preparation",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id17",
                        "name": "Client initiates service",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id18",
                        "name": "Client finds service",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id19",
                        "name": "Client collects order",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id20",
                        "name": "Process marked as ended",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id21",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id22",
                        "name": "Ticket taken in app?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id23",
                        "name": "Enough requests to respond to demand?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id24",
                        "name": "Client",
                        "lanes": [
                            {
                                "id": "id25",
                                "name": "Customer Actions",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id19",
                                    "id18"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id26",
                        "name": "Request Assistant",
                        "lanes": [
                            {
                                "id": "id27",
                                "name": "Assistant Actions",
                                "elemRefs": [
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14",
                                    "id15",
                                    "id16",
                                    "id23"
                                ]
                            }
                        ]
                    },
                    {
                        "id": "id28",
                        "name": "Shop Assistants Team",
                        "lanes": [
                            {
                                "id": "id29",
                                "name": "Shop Prep Actions",
                                "elemRefs": [
                                    "id16",
                                    "id15",
                                    "id14",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id30",
                        "sourceRef": "id17",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id2",
                        "targetRef": "id21"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id21",
                        "targetRef": "id18",
                        "condition": "Service not found"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id21",
                        "targetRef": "id3",
                        "condition": "Service found"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id3",
                        "targetRef": "id22"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id22",
                        "targetRef": "id4",
                        "condition": "Ticket taken in app"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id38",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id39",
                        "sourceRef": "id22",
                        "targetRef": "id7",
                        "condition": "Ticket taken physically"
                    },
                    {
                        "id": "id40",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id41",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id42",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id43",
                        "sourceRef": "id9",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id44",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id45",
                        "sourceRef": "id11",
                        "targetRef": "id23"
                    },
                    {
                        "id": "id46",
                        "sourceRef": "id23",
                        "targetRef": "id12",
                        "condition": "Not enough requests"
                    },
                    {
                        "id": "id47",
                        "sourceRef": "id12",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id48",
                        "sourceRef": "id23",
                        "targetRef": "id13",
                        "condition": "Enough requests"
                    },
                    {
                        "id": "id49",
                        "sourceRef": "id13",
                        "targetRef": "id14"
                    },
                    {
                        "id": "id50",
                        "sourceRef": "id14",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id51",
                        "sourceRef": "id15",
                        "targetRef": "id19"
                    },
                    {
                        "id": "id52",
                        "sourceRef": "id19",
                        "targetRef": "id20"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "81_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event, which triggers the receipt of a sales enquiry by the sales department at Accentis. \n\nNext, there is a decision point to determine if the customer is inbound or outbound. If the customer is inbound, a contact is created. If the customer is outbound, the enquiry is updated. \n\nBoth paths converge at another decision point, after which an enquiry is created. \n\nFollowing the creation of the enquiry, the price and interest are qualified. \n\nThe process then involves sending the customer approval and subsequently receiving the customer approval. \n\nIf the price is approved, a quote is created, followed by conducting a requirements analysis. \n\nThe enquiry status is then updated, and a job is created, leading to the end of the process. \n\nIf the price is not approved, the enquiry status is updated, and the process ends with the enquiry not being approved.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Receive sales enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "t2",
                        "name": "Create contact",
                        "type": "Task"
                    },
                    {
                        "id": "t3",
                        "name": "Update enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "t4",
                        "name": "Create enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "t5",
                        "name": "Qualify price and interest",
                        "type": "Task"
                    },
                    {
                        "id": "t6",
                        "name": "Send customer approval",
                        "type": "Task"
                    },
                    {
                        "id": "t7",
                        "name": "Receive customer approval",
                        "type": "Task"
                    },
                    {
                        "id": "t8",
                        "name": "Create quote",
                        "type": "Task"
                    },
                    {
                        "id": "t9",
                        "name": "Conduct requirements analysis",
                        "type": "Task"
                    },
                    {
                        "id": "t10",
                        "name": "Update enquiry status",
                        "type": "Task"
                    },
                    {
                        "id": "t11",
                        "name": "Create job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "End",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "End - Not Approved",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g3",
                        "name": "Price approved?",
                        "type": "Exclusive"
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "f1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "f2",
                        "sourceRef": "t1",
                        "targetRef": "g1"
                    },
                    {
                        "id": "f3",
                        "sourceRef": "g1",
                        "targetRef": "t2",
                        "condition": "Inbound customer"
                    },
                    {
                        "id": "f4",
                        "sourceRef": "g1",
                        "targetRef": "t3",
                        "condition": "Outbound customer"
                    },
                    {
                        "id": "f5",
                        "sourceRef": "t2",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f6",
                        "sourceRef": "t3",
                        "targetRef": "g2"
                    },
                    {
                        "id": "f7",
                        "sourceRef": "g2",
                        "targetRef": "t4"
                    },
                    {
                        "id": "f8",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "f9",
                        "sourceRef": "t5",
                        "targetRef": "t6"
                    },
                    {
                        "id": "f10",
                        "sourceRef": "t6",
                        "targetRef": "t7"
                    },
                    {
                        "id": "f11",
                        "sourceRef": "t5",
                        "targetRef": "g3",
                        "condition": "Price approved"
                    },
                    {
                        "id": "f12",
                        "sourceRef": "g3",
                        "targetRef": "t8",
                        "condition": "Approved"
                    },
                    {
                        "id": "f13",
                        "sourceRef": "g3",
                        "targetRef": "t10",
                        "condition": "Not approved"
                    },
                    {
                        "id": "f14",
                        "sourceRef": "t8",
                        "targetRef": "t9"
                    },
                    {
                        "id": "f15",
                        "sourceRef": "t9",
                        "targetRef": "t10"
                    },
                    {
                        "id": "f16",
                        "sourceRef": "t10",
                        "targetRef": "t11"
                    },
                    {
                        "id": "f17",
                        "sourceRef": "t11",
                        "targetRef": "e2"
                    },
                    {
                        "id": "f18",
                        "sourceRef": "t10",
                        "targetRef": "e3"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "t1",
                                    "t2",
                                    "t3",
                                    "t4",
                                    "t5",
                                    "t6",
                                    "t7",
                                    "t8",
                                    "t9",
                                    "t10",
                                    "t11",
                                    "g1",
                                    "g2",
                                    "g3",
                                    "e1",
                                    "e2",
                                    "e3"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a sales enquiry is received by the Sales Department at Accentis.\n\nThe first step is to create an enquiry.\n\nA decision point is then reached to determine whether the customer is inbound or outbound.\n\nIf the customer is inbound, a contact is created.\n\nIf the customer is outbound, the enquiry is updated.\n\nNext, the process checks if the price is approved.\n\nIf the price is not approved, the enquiry status is updated, and the process ends with the client not approving.\n\nIf the price is approved, a quote is created.\n\nFollowing the creation of the quote, a requirements analysis is conducted.\n\nAfter the requirements analysis, the enquiry status is updated again.\n\nFinally, a job is created, and the process ends with the job creation.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Create contact",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Update enquiry",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Update enquiry status",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Create quote",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Conduct requirements analysis",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Create job",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "Sales enquiry received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Process ends - Client does not approve",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "Process ends - Job creation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Decision point",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Price approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Sales Department",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "start1",
                                    "end1",
                                    "end2",
                                    "gateway1",
                                    "gateway2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "id2",
                        "condition": "Inbound customer"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "id3",
                        "condition": "Outbound customer"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "id4",
                        "condition": "Price not approved"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id4",
                        "targetRef": "end1"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "gateway2",
                        "targetRef": "id5",
                        "condition": "Price approved"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id4",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id7",
                        "targetRef": "end2"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when a sales enquiry is received by the sales department at Accentis. The first decision point is to determine whether the enquiry is inbound or outbound. If the enquiry is inbound, a contact is created. If the enquiry is outbound, the enquiry is updated.\n\nAfter either creating a contact or updating the enquiry, the process moves to the next decision point. Here, it is determined whether the price is approved. If the price is not approved, the process ends with the status \"End - Price Not Approved.\"\n\nIf the price is approved, a quote is created. Following the creation of the quote, a requirements analysis is conducted. After the requirements analysis, the enquiry status is updated. Finally, a job is created, and the process ends with the status \"End - Job Created.\"",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create Contact",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Update Enquiry",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Create Enquiry",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Create Quote",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Conduct Requirements Analysis",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Update Enquiry Status",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create Job",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Sales Enquiry Received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End - Price Not Approved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "End - Job Created",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "name": "Inbound or Outbound?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id13",
                        "name": "Price Approved?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id14",
                        "name": "Accentis",
                        "lanes": [
                            {
                                "id": "id15",
                                "name": "Sales Dept",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id11",
                        "targetRef": "id1",
                        "condition": "Inbound"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Outbound"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id13",
                        "targetRef": "id9",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id13",
                        "targetRef": "id4",
                        "condition": "Yes"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id7",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "68_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event, after which the warehouse supervisor requests sample products. The supplier then provides the sample products. The warehouse supervisor evaluates the sample products, leading to a decision point where it is determined if the sample meets the requirements.\n\nIf the sample meets the requirements, the warehouse supervisor selects the product and sends a purchase order. The supplier then checks stock availability. If the stock is available, the supplier sends the product to the warehouse. If the stock is not available, the supplier restocks the inventory and checks stock availability again.\n\nOnce the product is sent to the warehouse, the warehouse supervisor receives the product and checks the received products. Another decision point follows to determine if the products match the order.\n\nIf the products match the order, the warehouse supervisor authorizes payment, and the supplier processes the payment, concluding the process with the end event.\n\nIf the products do not match the order, the warehouse supervisor requests missing products, and the supplier checks stock availability again, continuing the process until the products match the order and the payment is processed.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Request Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Provide Sample Products",
                        "type": "Service"
                    },
                    {
                        "id": "task3",
                        "name": "Evaluate Sample Products",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Select Product & Send Purchase Order",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Adjust Product Specifications",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Check Stock Availability",
                        "type": "Service"
                    },
                    {
                        "id": "task7",
                        "name": "Send Product to Warehouse",
                        "type": "Service"
                    },
                    {
                        "id": "task8",
                        "name": "Restock Inventory",
                        "type": "Service"
                    },
                    {
                        "id": "task9",
                        "name": "Receive Product",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Check Received Products",
                        "type": "User"
                    },
                    {
                        "id": "task11",
                        "name": "Authorize Payment",
                        "type": "User"
                    },
                    {
                        "id": "task12",
                        "name": "Process Payment",
                        "type": "Service"
                    },
                    {
                        "id": "task13",
                        "name": "Request Missing Products",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startevent1",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endevent1",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Sample Meets Requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Stock Available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Products Match Order?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "task1",
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task9",
                                    "task10",
                                    "task11",
                                    "task13"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Supplier",
                                "elemRefs": [
                                    "task2",
                                    "task6",
                                    "task7",
                                    "task8",
                                    "task12"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startevent1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "task4",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "task5",
                        "condition": "No"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task5",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task4",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task6",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway2",
                        "targetRef": "task7",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "No"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task8",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task7",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "task9",
                        "targetRef": "task10"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task10",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "gateway3",
                        "targetRef": "task11",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "gateway3",
                        "targetRef": "task13",
                        "condition": "No"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "task11",
                        "targetRef": "task12"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "task12",
                        "targetRef": "endevent1"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "task13",
                        "targetRef": "task6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a request for sample products is made. Once the sample is provided, the warehouse supervisor evaluates the sample products. If the sample meets the requirements, the purchase order is sent. If the sample does not meet the requirements, the product specifications are adjusted, and the sample is requested again.\n\nAfter the purchase order is sent, the supplier checks stock availability. If the stock is available, the product is sent to the warehouse supervisor, who then receives the product. If the stock is not available, the supplier restocks the inventory and checks stock availability again.\n\nOnce the product is received, the warehouse supervisor checks if the products match the order. If the order matches the physical product, the payment is authorized and processed, and the supplier is notified. If the order does not match the physical product, the warehouse supervisor requests the missing products, and the supplier checks stock availability again.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate sample products",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Adjust product specifications",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Send purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Check stock availability",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Send product",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Restock inventory",
                        "type": "Manual"
                    },
                    {
                        "id": "id7",
                        "name": "Receive product",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Check products match order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Request missing products",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Authorize payment",
                        "type": "User"
                    },
                    {
                        "id": "id11",
                        "name": "Process payment",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Request for sample products made",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Sample provided",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Sample meets requirements",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Sample does not meet requirements",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event5",
                        "name": "Stock available",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event6",
                        "name": "Stock not available",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event7",
                        "name": "Order matches physical product",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event8",
                        "name": "Order does not match physical product",
                        "type": "IntermediateCatchEvent"
                    },
                    {
                        "id": "event9",
                        "name": "Supplier is notified",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Sample meets requirements?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Stock available?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway3",
                        "name": "Order matches physical product?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id11"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Process Flow",
                                "elemRefs": [
                                    "event1",
                                    "event2",
                                    "event3",
                                    "event4",
                                    "event5",
                                    "event6",
                                    "event7",
                                    "event8",
                                    "event9",
                                    "gateway1",
                                    "gateway2",
                                    "gateway3"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "event2",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "event3",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "event4",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "event3",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "event4",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id2",
                        "targetRef": "event2"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id4",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "event5",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "gateway2",
                        "targetRef": "event6",
                        "condition": "No"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "event5",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id5",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "event6",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id6",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id8",
                        "targetRef": "gateway3"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "gateway3",
                        "targetRef": "event7",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "gateway3",
                        "targetRef": "event8",
                        "condition": "No"
                    },
                    {
                        "id": "flow21",
                        "sourceRef": "event7",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow22",
                        "sourceRef": "event8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow23",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow24",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow25",
                        "sourceRef": "id11",
                        "targetRef": "event9"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with a request for sample products. The supplier provides the sample products, which are then evaluated by the warehouse supervisor. If the sample meets the requirements, a purchase order is sent. If the sample does not meet the requirements, the product specifications are adjusted, and the process of providing sample products is repeated.\n\nOnce the purchase order is sent, the stock availability is checked. If the stock is available, the product is sent to the warehouse. If the stock is not available, the inventory is restocked, and the stock availability is checked again.\n\nWhen the product arrives at the warehouse, it is received and the order and physical product are checked. If the order and physical product match, the payment is authorized. If they do not match, the missing products are requested, and the stock availability is checked again.\n\nAfter the payment is authorized, the payment is processed by the supplier, who then notifies the supplier, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Provide sample products",
                        "type": "Task"
                    },
                    {
                        "id": "id2",
                        "name": "Evaluate sample products",
                        "type": "Task"
                    },
                    {
                        "id": "id3",
                        "name": "Adjust product specifications",
                        "type": "Task"
                    },
                    {
                        "id": "id4",
                        "name": "Send purchase order",
                        "type": "Task"
                    },
                    {
                        "id": "id5",
                        "name": "Check stock availability",
                        "type": "Task"
                    },
                    {
                        "id": "id6",
                        "name": "Restock inventory",
                        "type": "Task"
                    },
                    {
                        "id": "id7",
                        "name": "Send product to warehouse",
                        "type": "Task"
                    },
                    {
                        "id": "id8",
                        "name": "Receive product",
                        "type": "Task"
                    },
                    {
                        "id": "id9",
                        "name": "Check order and physical product",
                        "type": "Task"
                    },
                    {
                        "id": "id10",
                        "name": "Authorize payment",
                        "type": "Task"
                    },
                    {
                        "id": "id11",
                        "name": "Process payment",
                        "type": "Task"
                    },
                    {
                        "id": "id12",
                        "name": "Request missing products",
                        "type": "Task"
                    },
                    {
                        "id": "id13",
                        "name": "Notify supplier",
                        "type": "Task"
                    }
                ],
                "events": [
                    {
                        "id": "id14",
                        "name": "Request for sample products",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "End process",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id19",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id20",
                        "name": "FMCG Company",
                        "lanes": [
                            {
                                "id": "id21",
                                "name": "Warehouse Supervisor",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id12"
                                ]
                            },
                            {
                                "id": "id22",
                                "name": "Supplier",
                                "elemRefs": [
                                    "id1",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id11",
                                    "id13"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id14",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id16",
                        "targetRef": "id4",
                        "condition": "Sample meets requirements"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "Sample does not meet requirements"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "Stock available"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Stock not available"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id18"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id18",
                        "targetRef": "id10",
                        "condition": "Order and physical product match"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id18",
                        "targetRef": "id12",
                        "condition": "Order and physical product do not match"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id12",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow18",
                        "sourceRef": "id10",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow19",
                        "sourceRef": "id11",
                        "targetRef": "id13"
                    },
                    {
                        "id": "flow20",
                        "sourceRef": "id13",
                        "targetRef": "id15"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "22_ground_truth.txt": {
        "0": {
            "text": "The process begins when a patient registers. The clerk starts by recording the patient data. Once the data is recorded, the process splits into three parallel tasks: registering the patient's SSN, registering the patient's name, and registering the patient's surname. These tasks are performed simultaneously. After all three registration tasks are completed, the process converges, and the clerk prints the referral document. Following the printing of the referral document, the record is archived in the file system. The process concludes with the registration process being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient's SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient's name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient's surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration process completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Clerk",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Clerk Lane",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a patient registers. The clerk starts by recording the patient data. Once the data recording is initiated, the process splits into three parallel tasks: registering the patient's Social Security Number (SSN), registering the patient's name, and registering the patient's surname. These tasks are performed simultaneously.\n\nAfter the SSN, name, and surname are registered, the process converges, and the clerk proceeds to print the referral document. Following the printing of the referral document, the record is archived in the file system. The process concludes with the registration being completed.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Patient registers",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Registration completed",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Data registration parallel gateway",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "name": "Data registration converge",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Clerk",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Registration Process",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the task to record patient data is initiated by the clerk at the hospital.\n\nOnce the patient data is recorded, the process splits into three parallel tasks: registering the patient's SSN, registering the patient's name, and registering the patient's surname.\n\nAfter all three tasks are completed, they converge, and the next step is to print the referral document.\n\nFollowing the printing of the referral document, the record is archived in the file system.\n\nThe process concludes with the end event, marking the completion of the patient data recording and archiving process.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Record patient data",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Register patient's SSN",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Register patient's name",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Register patient's surname",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Print referral document",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Archive record in file system",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Parallel"
                    },
                    {
                        "id": "id10",
                        "type": "Parallel"
                    }
                ],
                "pools": [
                    {
                        "id": "id11",
                        "name": "Hospital",
                        "lanes": [
                            {
                                "id": "id12",
                                "name": "Clerk",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id13",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id1",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id9",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id2",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id4",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id10",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "54_ground_truth.txt": {
        "0": {
            "text": "The process begins when a user starts the World of Warcraft (WoW) subscription. The first step involves sending a subscription form using an online tool for creating characters. Once the form is sent, the applicant selects a payment method. \n\nAt this point, there is a decision to be made: if the applicant chooses to pay by credit card, they proceed to enter their credit card information. Alternatively, if the applicant opts to pay via bank account, they enter their IBAN and BIC numbers. \n\nAfter entering the respective payment information, the applicant submits the payment information. Following the submission, the online tool activates the WoW subscription. The process concludes with the successful activation of the WoW subscription.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start WoW subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "WoW Community",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Online Tool for Creating Characters",
                                "elemRefs": [
                                    "id1",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit card"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank account"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the sending of a subscription form. Once the subscription form is sent, the applicant selects a payment method. Depending on the chosen payment method, the process diverges at an exclusive gateway.\n\nIf the applicant chooses to pay by credit card, they proceed to enter their credit card information. Alternatively, if the applicant opts to pay via bank account, they enter their IBAN and BIC numbers. Regardless of the payment method, the next step is to submit the payment information.\n\nAfter the payment information is submitted, the WoW subscription is activated. The process concludes with the end event, marking the end of the WoW subscription activation.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "Service"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment method chosen",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id10",
                        "name": "WoW Community",
                        "lanes": [
                            {
                                "id": "id11",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id12",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit card"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank account"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the initiation of a World of Warcraft (WoW) subscription. The first step involves sending a subscription form using an online tool. Once the form is sent, the applicant selects a payment method. \n\nAt this point, the process diverges based on the chosen payment method. If the applicant selects a credit card, they proceed to enter their credit card information. Alternatively, if the applicant chooses to pay via bank account, they enter their IBAN and BIC numbers.\n\nAfter entering the respective payment information, the applicant submits the payment information. Following the submission, the online tool activates the WoW subscription. The process concludes with the end of the WoW subscription.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Send subscription form",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Select payment method",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Enter credit card information",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Enter IBAN and BIC numbers",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Submit payment information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Activate WoW subscription",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Initiation of WoW subscription",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "End of WoW subscription",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "name": "Payment method?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "WoW Community",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Applicant",
                                "elemRefs": [
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Online Tool",
                                "elemRefs": [
                                    "id1",
                                    "id6",
                                    "id7",
                                    "id8"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id9",
                        "targetRef": "id3",
                        "condition": "Credit card"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "Bank account"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "23_ground_truth.txt": {
        "0": {
            "text": "The healthcare process begins with the start event. The first step involves a doctor evaluating the condition of the patient. After the evaluation, the patient is sent to the laboratory. In the laboratory, laboratory tests are performed on the patient. Once the tests are completed, the results are sent back to the doctor, who then treats the patient based on the test results. Following the treatment, the doctor prescribes the necessary medicines. The prescription is then delivered to the patient. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate condition of patient",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Send patient to laboratory",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Perform laboratory tests",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Treat patient based on test results",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Prescribe necessary medicines",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Deliver prescription to patient",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "evt1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "evt2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Healthcare Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id4",
                                    "id5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Laboratory",
                                "elemRefs": [
                                    "id2",
                                    "id3"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Patient",
                                "elemRefs": [
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "evt1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "evt2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the patient entering the healthcare process.\n\nFirst, the doctor evaluates the condition of the patient.\n\nFollowing the evaluation, laboratory tests are performed by the technician.\n\nBased on the results of these tests, the doctor treats the patient accordingly.\n\nAfter the treatment, the doctor prescribes the necessary medicines.\n\nThe process concludes with the patient receiving the prescribed medicines.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate condition of the patient",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Perform laboratory tests",
                        "type": "Service"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient based on test results",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe necessary medicines",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Healthcare Process",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Technician",
                                "elemRefs": [
                                    "id2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Patient",
                                "elemRefs": [
                                    "id5",
                                    "id6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, where the condition of the patient is evaluated by the doctor. Following this evaluation, the patient undergoes testing in the laboratory conducted by the laboratory technicians. Once the test results are available, the doctor treats the patient based on these results. After the treatment, the doctor prescribes the necessary medicines. The process concludes with the end event.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Evaluate condition of the patient",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Patient testing in laboratory",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Treat patient based on test results",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Prescribe necessary medicines",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id5",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id6",
                        "name": "end",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [],
                "pools": [
                    {
                        "id": "id7",
                        "name": "Healthcare Process",
                        "lanes": [
                            {
                                "id": "id8",
                                "name": "Doctor",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4"
                                ]
                            },
                            {
                                "id": "id9",
                                "name": "Laboratory Technicians",
                                "elemRefs": [
                                    "id2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id5",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id4",
                        "targetRef": "id6"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "63_ground_truth.txt": {
        "0": {
            "text": "The process begins when a booking request is received by the Taxi Booking System.\n\nFirst, the customer service operator checks the data provided by the user.\n\nIf the data is incomplete, the process ends with a cancellation due to incomplete data.\n\nIf the data is complete, the customer service operator checks for available cars.\n\nIf no cars are available, the process ends with a cancellation due to no cars being available.\n\nIf cars are available, the Taxi System displays a list of options.\n\nThe customer service operator then picks the nearest car with the client.\n\nNext, the Taxi System calculates the time of arrival.\n\nFinally, the customer service operator books the taxi, and the process ends with a booking confirmation being sent.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check data provided by user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Display list of options",
                        "type": "Service"
                    },
                    {
                        "id": "id4",
                        "name": "Pick nearest car with the client",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Book taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id7",
                        "name": "Booking request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Cancellation: Data incomplete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "Cancellation: No cars available",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id10",
                        "name": "Booking confirmation sent",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id11",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id12",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id13",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id14",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id4",
                                    "id6"
                                ]
                            },
                            {
                                "id": "id15",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id3",
                                    "id5"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id16",
                        "sourceRef": "id7",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id1",
                        "targetRef": "id11"
                    },
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Data incomplete"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id11",
                        "targetRef": "id2",
                        "condition": "Data complete"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id12",
                        "targetRef": "id9",
                        "condition": "No cars available"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id12",
                        "targetRef": "id3",
                        "condition": "Cars available"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id6",
                        "targetRef": "id10"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins when a booking request is received by the taxi booking system.\n\nFirst, the customer service operator checks the data provided by the user.\n\nIf the data is complete, the process continues to check for available cars.\n\nIf the data is incomplete, a cancellation message is sent to the customer due to incomplete data, and the process ends.\n\nIf there are available cars, the customer service operator picks the nearest car with the client.\n\nIf there are no available cars, a cancellation message is sent to the customer due to no available cars, and the process ends.\n\nOnce the nearest car is picked, the taxi system calculates the time of arrival.\n\nAfter calculating the time of arrival, the customer service operator books the taxi.\n\nFinally, a booking confirmation is sent to the customer, and the process ends.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Check data provided by user",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Pick the nearest car with the client",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "task5",
                        "name": "Book the taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "event1",
                        "name": "Booking request received",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "event2",
                        "name": "Booking confirmation sent to customer",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event3",
                        "name": "Cancellation message sent due to incomplete data",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "event4",
                        "name": "Cancellation message sent due to no available cars",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Customer Service Operator",
                                "elemRefs": [
                                    "task1",
                                    "task2",
                                    "task3",
                                    "task5"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "task4",
                                    "event3",
                                    "event4",
                                    "event2"
                                ]
                            }
                        ]
                    }
                ],
                "messageFlows": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "event1",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "gateway1",
                        "targetRef": "task2",
                        "condition": "Data complete"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "gateway1",
                        "targetRef": "event3",
                        "condition": "Data incomplete"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task2",
                        "targetRef": "gateway2"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway2",
                        "targetRef": "task3",
                        "condition": "Cars available"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "gateway2",
                        "targetRef": "event4",
                        "condition": "No cars available"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "task5",
                        "targetRef": "event2"
                    }
                ]
            }
        },
        "2": {
            "text": "The process begins when the user initiates the taxi booking system. The first step is to check the data provided by the user. If the data is incomplete, the process ends with sending a cancellation message. If the data is complete, the system proceeds to check for available cars.\n\nNext, the system checks if there are cars available within 30 minutes. If no cars are available within this timeframe, the process ends with sending a cancellation message. If cars are available, the system displays a list of options.\n\nThe customer service then picks the nearest car from the list of available options. The system calculates the time of arrival for the selected car. Finally, the customer service books the taxi, and the process concludes with sending a booking confirmation to the user.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check data provided by user",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Check for available cars",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Pick nearest car",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Calculate time of arrival",
                        "type": "Service"
                    },
                    {
                        "id": "id5",
                        "name": "Book taxi",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Send cancellation message",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Display list of options",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Send booking confirmation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Data complete?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id11",
                        "name": "Cars available within 30 minutes?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id12",
                        "name": "Taxi Booking System",
                        "lanes": [
                            {
                                "id": "id13",
                                "name": "Customer Service",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id5"
                                ]
                            },
                            {
                                "id": "id14",
                                "name": "Taxi System",
                                "elemRefs": [
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id4"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id10"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id10",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id2",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id11",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id11",
                        "targetRef": "id8",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id8",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id5",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "2_ground_truth.txt": {
        "0": {
            "text": "The process begins with the start event. The first step is to check if the parts are in stock. If the parts are in stock, they are retrieved from storage, and the process ends with the parts being retrieved. If the parts are not in stock, the requirements are specified and quantified. Following this, a purchase order is completed. The purchase order is then checked. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created. After the order template is created or a new vendor is created, the purchase order is approved. Following approval, the receipt of goods takes place. After the receipt of goods, it is checked if there are any delivery problems. If there are no delivery problems, the process ends with the parts being procured. If there are delivery problems, the order status is adjusted, and the process ends with the order being cancelled.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check if parts are in stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve parts from storage",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete a purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create order template from purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create new vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts retrieved",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order cancelled",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Delivery problems?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id17",
                        "targetRef": "id13",
                        "condition": "No"
                    },
                    {
                        "id": "flow16",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "condition": "Yes"
                    },
                    {
                        "id": "flow17",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event. The first step is to check if the parts are in stock. If the parts are in stock, they are retrieved from storage, and the process ends with the parts being retrieved from storage.\n\nIf the parts are not in stock, the requirements are specified and quantified. Following this, a purchase order is completed. The purchase order is then checked.\n\nIf the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created.\n\nAfter the order template is created, the purchase order is approved. Following approval, the receipt of goods takes place, and the process ends with the parts being procured.\n\nIn the event of an escalation with delivery problems during the receipt of goods, the order status is adjusted, and the process will end with the order being cancelled due to delivery issues.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check if parts are in stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve parts from storage",
                        "type": "Manual"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete a purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create order template from purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order cancelled due to delivery issues",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id15",
                        "name": "Escalation with delivery problems",
                        "type": "IntermediateEscalationEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id16",
                        "name": "Parts in stock?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "Vendor known?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id18",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id19",
                        "sourceRef": "id1",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id20",
                        "sourceRef": "id16",
                        "targetRef": "id2",
                        "condition": "Yes"
                    },
                    {
                        "id": "id21",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id16",
                        "targetRef": "id3",
                        "condition": "No"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id5",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id17",
                        "targetRef": "id6",
                        "condition": "Yes"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id17",
                        "targetRef": "id7",
                        "condition": "No"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id9",
                        "targetRef": "id15",
                        "condition": "Escalation"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id15",
                        "targetRef": "id10"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event. The first task is to check if the parts are in stock. This decision is made at an exclusive gateway. If the parts are in stock, they are retrieved from storage, and the process ends with the parts being retrieved from storage. If the parts are not in stock, the requirements are specified and quantified. Following this, a purchase order is completed. The purchase order is then checked. \n\nAt this point, another decision is made at an exclusive gateway to determine if the vendor is known. If the vendor is known, an order template is created from the purchase order. If the vendor is not known, a new vendor is created. Both paths converge at the task to approve the purchase order. \n\nOnce the purchase order is approved, the receipt of goods takes place. Another decision is made at an exclusive gateway to check for delivery problems. If there are no delivery problems, the process ends with the parts being procured. If there are delivery problems, the order status is adjusted, and the process ends with the order being cancelled due to delivery issues.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Check if parts are in stock",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Retrieve parts from storage",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Specify and quantify requirements",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Complete purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Check purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Create order template from purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Create new vendor",
                        "type": "User"
                    },
                    {
                        "id": "id8",
                        "name": "Approve purchase order",
                        "type": "User"
                    },
                    {
                        "id": "id9",
                        "name": "Receipt of goods",
                        "type": "User"
                    },
                    {
                        "id": "id10",
                        "name": "Adjust order status",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id11",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "Parts retrieved from storage",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Parts procured",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id14",
                        "name": "Order cancelled due to delivery issues",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id15",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "name": "Is vendor known?",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id17",
                        "name": "",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id18",
                        "name": "",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id19",
                        "name": "Department",
                        "lanes": [
                            {
                                "id": "id20",
                                "name": "Purchasing",
                                "elemRefs": [
                                    "id1",
                                    "id2",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id6",
                                    "id7",
                                    "id8",
                                    "id9",
                                    "id10",
                                    "id11",
                                    "id12",
                                    "id13",
                                    "id14"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "id21",
                        "sourceRef": "id11",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id22",
                        "sourceRef": "id1",
                        "targetRef": "id15"
                    },
                    {
                        "id": "id23",
                        "sourceRef": "id15",
                        "targetRef": "id2",
                        "conditionExpression": "Parts in stock"
                    },
                    {
                        "id": "id24",
                        "sourceRef": "id2",
                        "targetRef": "id12"
                    },
                    {
                        "id": "id25",
                        "sourceRef": "id15",
                        "targetRef": "id3",
                        "conditionExpression": "Parts not in stock"
                    },
                    {
                        "id": "id26",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "id27",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id28",
                        "sourceRef": "id5",
                        "targetRef": "id16"
                    },
                    {
                        "id": "id29",
                        "sourceRef": "id16",
                        "targetRef": "id6",
                        "conditionExpression": "Vendor known"
                    },
                    {
                        "id": "id30",
                        "sourceRef": "id16",
                        "targetRef": "id7",
                        "conditionExpression": "Vendor not known"
                    },
                    {
                        "id": "id31",
                        "sourceRef": "id6",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id32",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "id33",
                        "sourceRef": "id8",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id34",
                        "sourceRef": "id9",
                        "targetRef": "id17"
                    },
                    {
                        "id": "id35",
                        "sourceRef": "id17",
                        "targetRef": "id10",
                        "conditionExpression": "Delivery problems"
                    },
                    {
                        "id": "id36",
                        "sourceRef": "id17",
                        "targetRef": "id13",
                        "conditionExpression": "No delivery problems"
                    },
                    {
                        "id": "id37",
                        "sourceRef": "id10",
                        "targetRef": "id14"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "64_ground_truth.txt": {
        "0": {
            "text": "The process begins with the creation of an application. Once the application is created, it is received by the appropriate party. The received application is then controlled for document completeness. \n\nAt this point, a decision is made to determine if the document is complete. If the document is complete, it is accepted, and the process ends with the completion of providing the document. \n\nIf the document is incomplete, it is returned to the applicant. The applicant then completes the missing information and resubmits the document. The resubmitted document is admitted, and the process ends with the finished provision of the document.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Accept document",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Return document to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Applicant completes missing information",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Admit completed document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "start1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "end1",
                        "name": "Providing completed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "end2",
                        "name": "Providing finished",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Document complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "start1",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "gateway1",
                        "targetRef": "id4",
                        "condition": "document complete"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "gateway1",
                        "targetRef": "id5",
                        "condition": "document incomplete"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id4",
                        "targetRef": "end1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "end2"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the creation of an application. Once the application is created, it is received by the appropriate party. The next step involves controlling the document to ensure it meets the necessary requirements. \n\nAt this point, a decision is made based on the completeness of the document. If the document is incomplete, it is returned to the applicant for further action. The applicant then admits the document, and the process concludes with the provision of a complete document.\n\nIf the document is complete, the process directly concludes with the provision of a complete document.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control document",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Return document to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Admit document",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id6",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id7",
                        "name": "Provide complete",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id8",
                        "name": "Provide complete",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id9",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "id10",
                        "sourceRef": "id6",
                        "targetRef": "id1"
                    },
                    {
                        "id": "id11",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "id12",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "id13",
                        "sourceRef": "id3",
                        "targetRef": "id9"
                    },
                    {
                        "id": "id14",
                        "sourceRef": "id9",
                        "targetRef": "id4",
                        "condition": "incomplete"
                    },
                    {
                        "id": "id15",
                        "sourceRef": "id9",
                        "targetRef": "id7",
                        "condition": "complete"
                    },
                    {
                        "id": "id16",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "id17",
                        "sourceRef": "id5",
                        "targetRef": "id8"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins with the start event, which triggers the creation of an application. Once the application is created, it is received by the relevant party. The next step involves controlling the document for completeness. \n\nAt this point, a decision is made to check if the document is complete. If the document is not complete, it is returned to the applicant. The applicant then completes the missing information and resubmits the document. Once the document is admitted, the process continues to the step of completing the providing.\n\nIf the document is complete from the initial check, the process skips the steps of returning the document and completing the missing information, and directly proceeds to completing the providing. \n\nFinally, the process ends with the completion of providing.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Create application",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Receive application",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Control document for completeness",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Return document to applicant",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Complete missing information",
                        "type": "User"
                    },
                    {
                        "id": "id6",
                        "name": "Admit document",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Complete providing",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id8",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id9",
                        "name": "End",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id10",
                        "name": "Is document complete?",
                        "type": "Exclusive"
                    }
                ],
                "pools": [],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "id8",
                        "targetRef": "id1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "id3",
                        "targetRef": "id10"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "id10",
                        "targetRef": "id4",
                        "condition": "No"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "id6",
                        "targetRef": "id7"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "id10",
                        "targetRef": "id7",
                        "condition": "Yes"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "id7",
                        "targetRef": "id9"
                    }
                ],
                "messageFlows": []
            }
        }
    },
    "14_ground_truth.txt": {
        "0": {
            "text": "The process begins with the seller displaying items on the webpage. The buyer then purchases an item, and the seller receives the buyer's order. Following this, the seller sends an order purchase confirmation to the buyer and sends the order to the shipping company. The shipping company then gets the item and makes a decision on delivery.\n\nIf the item is delivered, the shipping company tracks the order, and the process ends with the order being closed.\n\nIf the item is not delivered, the shipping company makes a decision on non-delivery. If the buyer asks for money reimbursement, the seller receives the buyer's decision and reimburses the money, ending the process with an escalation.\n\nAlternatively, if the buyer requests reshipment, the seller sends the order to the shipping company again, and the shipping company gets the item, repeating the delivery decision process.",
            "model": {
                "tasks": [
                    {
                        "id": "task1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "task2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "task3",
                        "name": "Receive buyer's order",
                        "type": "User"
                    },
                    {
                        "id": "task4",
                        "name": "Send order purchase confirmation",
                        "type": "User"
                    },
                    {
                        "id": "task5",
                        "name": "Send order to shipping company",
                        "type": "User"
                    },
                    {
                        "id": "task6",
                        "name": "Get item",
                        "type": "User"
                    },
                    {
                        "id": "task7",
                        "name": "Track order",
                        "type": "User"
                    },
                    {
                        "id": "task8",
                        "name": "Receive buyer's decision",
                        "type": "User"
                    },
                    {
                        "id": "task9",
                        "name": "Reimburse money",
                        "type": "User"
                    },
                    {
                        "id": "task10",
                        "name": "Send order to shipping company again",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "startEvent",
                        "name": "Start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "endEvent1",
                        "name": "Order closed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "endEvent2",
                        "name": "Process ends with escalation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "gateway1",
                        "name": "Decision on delivery",
                        "type": "Exclusive"
                    },
                    {
                        "id": "gateway2",
                        "name": "Decision on non-delivery",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "pool1",
                        "name": "eBay Data Stores",
                        "lanes": [
                            {
                                "id": "lane1",
                                "name": "Seller",
                                "elemRefs": [
                                    "task1",
                                    "task3",
                                    "task4",
                                    "task5",
                                    "task10",
                                    "task9",
                                    "startEvent"
                                ]
                            },
                            {
                                "id": "lane2",
                                "name": "Buyer",
                                "elemRefs": [
                                    "task2",
                                    "task8",
                                    "endEvent1",
                                    "endEvent2"
                                ]
                            },
                            {
                                "id": "lane3",
                                "name": "Shipping Company",
                                "elemRefs": [
                                    "task6",
                                    "gateway1",
                                    "task7",
                                    "gateway2"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "startEvent",
                        "targetRef": "task1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "task1",
                        "targetRef": "task2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "task2",
                        "targetRef": "task3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "task3",
                        "targetRef": "task4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "task4",
                        "targetRef": "task5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "task5",
                        "targetRef": "task6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "task6",
                        "targetRef": "gateway1"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "gateway1",
                        "targetRef": "task7",
                        "condition": "Delivered"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "task7",
                        "targetRef": "endEvent1"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "gateway1",
                        "targetRef": "gateway2",
                        "condition": "Not delivered"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "gateway2",
                        "targetRef": "task8",
                        "condition": "Ask for money reimbursement"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "task8",
                        "targetRef": "task9"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "task9",
                        "targetRef": "endEvent2"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "gateway2",
                        "targetRef": "task10",
                        "condition": "Request reshipment"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "task10",
                        "targetRef": "task6"
                    }
                ],
                "messageFlows": []
            }
        },
        "1": {
            "text": "The process begins with the start event, which triggers the display of items on a webpage by the seller. The buyer then purchases an item, which leads to the seller sending an order purchase confirmation. Following this, the seller sends the order to the shipping company.\n\nThe shipping company receives the order and gets the item, deciding on the next action. At this point, an exclusive decision is made based on whether the item is delivered or not.\n\nIf the item is delivered, the shipping company tracks the order, and the process ends with the order being closed.\n\nIf the item is not delivered, another exclusive decision is made by the buyer. The buyer can either ask for a money reimbursement or request a reshipment.\n\nIf the buyer asks for a money reimbursement, the seller reimburses the money, and the process ends with an escalation.\n\nIf the buyer requests a reshipment, the seller resends the order to the shipping company, and the process loops back to the shipping company getting the item and deciding on the next action.",
            "model": {
                "tasks": [
                    {
                        "id": "t1",
                        "name": "Display items on webpage",
                        "type": "User"
                    },
                    {
                        "id": "t2",
                        "name": "Purchase item",
                        "type": "User"
                    },
                    {
                        "id": "t3",
                        "name": "Send order purchase confirmation",
                        "type": "User"
                    },
                    {
                        "id": "t4",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    },
                    {
                        "id": "t5",
                        "name": "Get item and decide action",
                        "type": "Manual"
                    },
                    {
                        "id": "t6",
                        "name": "Track order",
                        "type": "Service"
                    },
                    {
                        "id": "t7",
                        "name": "Buyer's decision on undelivered purchase",
                        "type": "User"
                    },
                    {
                        "id": "t8",
                        "name": "Reimburse money",
                        "type": "Service"
                    },
                    {
                        "id": "t9",
                        "name": "Resend order to shipping company",
                        "type": "Service"
                    }
                ],
                "events": [
                    {
                        "id": "e1",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "e2",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e3",
                        "name": "Order closed",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "e4",
                        "name": "Escalation",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "g1",
                        "type": "Exclusive"
                    },
                    {
                        "id": "g2",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "p1",
                        "name": "eBay Process",
                        "lanes": [
                            {
                                "id": "l1",
                                "name": "Seller",
                                "elemRefs": [
                                    "t1",
                                    "t3",
                                    "t4",
                                    "t9",
                                    "t8"
                                ]
                            },
                            {
                                "id": "l2",
                                "name": "Buyer",
                                "elemRefs": [
                                    "t2",
                                    "t7"
                                ]
                            },
                            {
                                "id": "l3",
                                "name": "Shipping Company",
                                "elemRefs": [
                                    "t5",
                                    "t6"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "sf1",
                        "sourceRef": "e1",
                        "targetRef": "t1"
                    },
                    {
                        "id": "sf2",
                        "sourceRef": "t1",
                        "targetRef": "t2"
                    },
                    {
                        "id": "sf3",
                        "sourceRef": "t2",
                        "targetRef": "t3"
                    },
                    {
                        "id": "sf4",
                        "sourceRef": "t3",
                        "targetRef": "t4"
                    },
                    {
                        "id": "sf5",
                        "sourceRef": "t4",
                        "targetRef": "t5"
                    },
                    {
                        "id": "sf6",
                        "sourceRef": "t5",
                        "targetRef": "g1"
                    },
                    {
                        "id": "sf7",
                        "sourceRef": "g1",
                        "targetRef": "t6",
                        "condition": "Item delivered"
                    },
                    {
                        "id": "sf8",
                        "sourceRef": "t6",
                        "targetRef": "e3"
                    },
                    {
                        "id": "sf9",
                        "sourceRef": "g1",
                        "targetRef": "g2",
                        "condition": "Item not delivered"
                    },
                    {
                        "id": "sf10",
                        "sourceRef": "g2",
                        "targetRef": "t8",
                        "condition": "Ask for money reimbursement"
                    },
                    {
                        "id": "sf11",
                        "sourceRef": "t8",
                        "targetRef": "e4"
                    },
                    {
                        "id": "sf12",
                        "sourceRef": "g2",
                        "targetRef": "t9",
                        "condition": "Request reshipment"
                    },
                    {
                        "id": "sf13",
                        "sourceRef": "t9",
                        "targetRef": "t5"
                    }
                ],
                "messageFlows": []
            }
        },
        "2": {
            "text": "The process begins when the items are displayed on the webpage. The buyer then purchases the item, and the seller receives the buyer's order. Following this, the seller sends an order purchase confirmation. The order is then sent to the shipping company. The shipping company gets the item and decides whether to deliver the item to the customer or not.\n\nIf the shipping company decides to deliver the item, the order is tracked, and once the order is tracked, the process ends with the order being closed.\n\nIf the shipping company does not deliver the purchase, the decision is passed to the buyer. The buyer can either ask for a money reimbursement or request a reshipment.\n\nIf the buyer asks for a money reimbursement, the seller reimburses the money, and the process ends with an escalation event.\n\nIf the buyer requests a reshipment, the order is sent again to the shipping company, and the process continues from there.",
            "model": {
                "tasks": [
                    {
                        "id": "id1",
                        "name": "Display items on the webpage",
                        "type": "User"
                    },
                    {
                        "id": "id2",
                        "name": "Purchase the item",
                        "type": "User"
                    },
                    {
                        "id": "id3",
                        "name": "Receive buyer's order",
                        "type": "User"
                    },
                    {
                        "id": "id4",
                        "name": "Send order purchase confirmation",
                        "type": "User"
                    },
                    {
                        "id": "id5",
                        "name": "Send order to shipping company",
                        "type": "Service"
                    },
                    {
                        "id": "id6",
                        "name": "Get the item",
                        "type": "User"
                    },
                    {
                        "id": "id7",
                        "name": "Track the order",
                        "type": "Service"
                    },
                    {
                        "id": "id8",
                        "name": "Close the order",
                        "type": "Service"
                    },
                    {
                        "id": "id9",
                        "name": "Reimburse the money",
                        "type": "User"
                    }
                ],
                "events": [
                    {
                        "id": "id10",
                        "name": "start",
                        "type": "StartNoneEvent"
                    },
                    {
                        "id": "id11",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id12",
                        "name": "end",
                        "type": "EndNoneEvent"
                    },
                    {
                        "id": "id13",
                        "name": "Escalation Event",
                        "type": "EndNoneEvent"
                    }
                ],
                "gateways": [
                    {
                        "id": "id14",
                        "name": "Shipping company decides",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id15",
                        "name": "Buyer decides",
                        "type": "Exclusive"
                    },
                    {
                        "id": "id16",
                        "type": "Exclusive"
                    }
                ],
                "pools": [
                    {
                        "id": "id17",
                        "name": "eBay",
                        "lanes": [
                            {
                                "id": "id18",
                                "name": "Seller",
                                "elemRefs": [
                                    "id1",
                                    "id3",
                                    "id4",
                                    "id5",
                                    "id9"
                                ]
                            },
                            {
                                "id": "id19",
                                "name": "Buyer",
                                "elemRefs": [
                                    "id2",
                                    "id8"
                                ]
                            },
                            {
                                "id": "id20",
                                "name": "Shipping Company",
                                "elemRefs": [
                                    "id6",
                                    "id7"
                                ]
                            }
                        ]
                    }
                ],
                "sequenceFlows": [
                    {
                        "id": "flow1",
                        "sourceRef": "id10",
                        "targetRef": "id1"
                    },
                    {
                        "id": "flow2",
                        "sourceRef": "id1",
                        "targetRef": "id2"
                    },
                    {
                        "id": "flow3",
                        "sourceRef": "id2",
                        "targetRef": "id3"
                    },
                    {
                        "id": "flow4",
                        "sourceRef": "id3",
                        "targetRef": "id4"
                    },
                    {
                        "id": "flow5",
                        "sourceRef": "id4",
                        "targetRef": "id5"
                    },
                    {
                        "id": "flow6",
                        "sourceRef": "id5",
                        "targetRef": "id6"
                    },
                    {
                        "id": "flow7",
                        "sourceRef": "id6",
                        "targetRef": "id14"
                    },
                    {
                        "id": "flow8",
                        "sourceRef": "id14",
                        "targetRef": "id7",
                        "condition": "deliver the item to the customer"
                    },
                    {
                        "id": "flow9",
                        "sourceRef": "id14",
                        "targetRef": "id15",
                        "condition": "does not deliver the purchase"
                    },
                    {
                        "id": "flow10",
                        "sourceRef": "id7",
                        "targetRef": "id8"
                    },
                    {
                        "id": "flow11",
                        "sourceRef": "id8",
                        "targetRef": "id11"
                    },
                    {
                        "id": "flow12",
                        "sourceRef": "id15",
                        "targetRef": "id16",
                        "condition": "ask for a money reimbursement"
                    },
                    {
                        "id": "flow13",
                        "sourceRef": "id15",
                        "targetRef": "id5",
                        "condition": "request a reshipment"
                    },
                    {
                        "id": "flow14",
                        "sourceRef": "id16",
                        "targetRef": "id9"
                    },
                    {
                        "id": "flow15",
                        "sourceRef": "id9",
                        "targetRef": "id13"
                    }
                ],
                "messageFlows": []
            }
        }
    }
}